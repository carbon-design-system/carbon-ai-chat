# Publish the staging / latest / versioned CDN artifacts to Cloud Object Storage
name: Publish CDN artifacts

# This workflow is triggered from the `create-release-tag-and-pr` workflow when a new tag is created
# Or can be manually triggered with tag provided
on:
  workflow_dispatch:
    inputs:
      tag:
        # Recently published version
        required: true
        description: "release tag (ie. v1.1.0-rc.0 or v1.1.0)"
        type: string
        default: "v1.1.0-rc.0"
  repository_dispatch:
    types: [publish-cdn-artifacts]

jobs:
  publish-cdn:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: "0"
          ref: ${{ github.event.client_payload.branch }}
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "npm"
      - name: Install dependencies
        run: |
          npm install
          npm run build
      - name: Check release type
        if: contains(github.event.client_payload.tag, '-rc.') || contains(github.event.inputs.tag, '-rc.')
        run: echo "PRE_RELEASE=true" >> $GITHUB_ENV
      - name: Get version of web components from package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: packages/ai-chat-components

      # If tag is a release candidate, upload the CDN artifacts to the `next` tag folder
      # ie. https://1.www.s81c.com/common/carbon/web-components/tag/v2/next/breadcrumb.min.js
      - name: Upload to COS under the `next` folder
        if: ${{ env.PRE_RELEASE }}
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.COMMON_COS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.COMMON_COS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.COMMON_COS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.COMMON_COS_REGION }}
          AWS_S3_ENDPOINT: https://${{ secrets.COMMON_COS_ENDPOINT }}
          SOURCE_DIR: "packages/ai-chat-components/dist"
          DEST_DIR: "common/carbon/ai-chat-components/tag/next"

      # If tag is a full release, upload the CDN artifacts to the `latest` tag folder
      # ie. https://1.www.s81c.com/common/carbon/web-components/tag/v2/latest/breadcrumb.min.js
      - name: Upload to COS under the `latest` folder
        if: ${{ !env.PRE_RELEASE }}
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.COMMON_COS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.COMMON_COS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.COMMON_COS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.COMMON_COS_REGION }}
          AWS_S3_ENDPOINT: https://${{ secrets.COMMON_COS_ENDPOINT }}
          SOURCE_DIR: "packages/ai-chat-components/dist"
          DEST_DIR: "common/carbon/ai-chat-components/tag/v2/latest"

      # Upload the CDN artifacts to versioned folder
      # ie. https://1.www.s81c.com/common/carbon/web-components/version/v2.12.0/breadcrumb.min.js
      - name: Upload to COS under the versioned folder
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.COMMON_COS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.COMMON_COS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.COMMON_COS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.COMMON_COS_REGION }}
          AWS_S3_ENDPOINT: https://${{ secrets.COMMON_COS_ENDPOINT }}
          SOURCE_DIR: "packages/ai-chat-components/dist"
          DEST_DIR: "common/carbon/ai-chat-components/version/v${{steps.package-version.outputs.current-version}}"
