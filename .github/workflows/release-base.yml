# This is the base release workflow dispatched by the `release-minor` or `release-patch` workflows
name: Release base
run-name: ${{ inputs.type }} - dry-run:${{ inputs.dry-run }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      type:
        required: true
        type: string
        default: first minor rc
      dry-run:
        required: true
        description: "Run dry run?"
        type: boolean
        default: true
      force-publish:
        description: "Force publish?"
        type: boolean
        default: false

jobs:
  release:
    runs-on: ubuntu-latest
    # Recommended by npm for publishing with provenance https://docs.npmjs.com/generating-provenance-statements
    permissions:
      id-token: write
      contents: write
    timeout-minutes: 60
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: "0"

      # https://github.com/actions/checkout#push-a-commit-using-the-built-in-token
      - run: |
          git config --global user.email ${{ secrets.CARBON_BOT_EMAIL }}
          git config --global user.name ${{ secrets.CARBON_BOT_NAME }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          registry-url: https://registry.npmjs.org
          cache: "npm"
      - name: Install dependencies and build
        run: |
          npm install
          npx playwright install --with-deps
          npm run build
      - name: Continuous integration check
        run: npm run ci-check

      - name: Set NPM token
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.CARBON_BOT_NPM_TOKEN }}" >> .npmrc

      # Set the PUBLISH environment variable to be used later in the Lerna publish command.
      # Lerna has dry run on by default, need to pass in '--yes' flag before it will go ahead and publish.
      - name: Set dry run env variable
        run: |
          if [ "${{ github.event.inputs.dry-run }}" == "false"  ]; then
            echo "PUBLISH=--yes" >> $GITHUB_ENV
          fi

      # Set the FORCE environment variable to be used later in the Lerna publish command.
      # Lerna has force-publish off by default, but is to be used in circumstances when Lerna doesn't detect changes
      # and we want to bump the version up regardless.
      # Use with dry-run set to true first to confirm the version bump before running again with dry-run set to false
      - name: Set force publish env variable
        run: |
          if [ "${{ github.event.inputs.force-publish }}" == "true"  ]; then
            echo "FORCE=--force-publish" >> $GITHUB_ENV
          fi

      - name: Publish full minor release (ie. v1.x.0)
        if: github.event.inputs.type == 'full minor release'
        run: |
          npx lerna publish minor --conventional-graduate ${{ env.PUBLISH }} ${{ env.FORCE }}

      - name: Publish first minor RC (ie. v1.x.0-rc.0)
        if: github.event.inputs.type == 'first minor rc'
        run: |
          npx lerna publish preminor --conventional-prerelease --preid rc --pre-dist-tag next ${{ env.PUBLISH }} ${{ env.FORCE }}

      - name: Publish full patch release (ie. v1.0.x)
        if: github.event.inputs.type == 'full patch release'
        run: |
          npx lerna publish patch --conventional-graduate ${{ env.PUBLISH }} ${{ env.FORCE }}

      - name: Publish first patch RC (ie. v1.0.x-rc.0)
        if: github.event.inputs.type == 'first patch rc'
        run: |
          npx lerna publish prepatch --conventional-prerelease --preid rc --pre-dist-tag next ${{ env.PUBLISH }} ${{ env.FORCE }}

      - name: Publish subsequent RC (ie. v1.0.0-rc.x)
        if: github.event.inputs.type == 'subsequent rc'
        run: |
          npx lerna publish --conventional-prerelease --preid rc --pre-dist-tag next ${{ env.PUBLISH }} ${{ env.FORCE }}
