{"version":3,"file":"8710.bundle.js","mappings":";gOA4BA,SAASA,EAAuBC,GAC5B,MAAO,CACHC,OAAQ,WACJ,MAAO,CACHC,IAAK,SAAUC,GACX,OAAOH,EAAMG,EACjB,EACAC,IAAK,SAAUD,EAAKE,GAChBL,EAAMG,GAAOE,CACjB,EAER,EAER,CA2CA,IAAIC,EAAmC,WACnC,SAASA,EAAkBC,EAASC,EAASC,EAAiBC,QAC1C,IAAZF,IAAsBA,EAAUF,EAAkBK,eACtD,IA7CyBC,EAvBXC,EAAeC,EAoEzBC,EAAQC,KA0CZ,GAzCAA,KAAKC,eAAiB,CAClBC,OAAQ,CAAC,EACTC,SAAU,CAAC,EACXC,YAAa,CAAC,GAElBJ,KAAKK,OAAS,SAAUC,GACpB,IAAIC,EAAQR,EAAMS,cAAcF,GAEhC,GAAqB,IAAjBC,EAAME,OACN,OAAOF,EAAM,GAAGlB,MAEpB,IAAIqB,EAASH,EAAMI,OAAO,SAAUC,EAAKC,GASrC,OARKD,EAAIH,QACLI,EAAKC,OAAS,KAAUC,SACO,iBAAxBH,EAAIA,EAAIH,OAAS,GAIxBG,EAAIA,EAAIH,OAAS,IAAMI,EAAKxB,MAH5BuB,EAAII,KAAKH,EAAKxB,OAKXuB,CACX,EAAG,IACH,OAAIF,EAAOD,QAAU,EACVC,EAAO,IAAM,GAEjBA,CACX,EACAV,KAAKQ,cAAgB,SAAUF,GAC3B,OAAO,QAAcP,EAAMkB,IAAKlB,EAAMP,QAASO,EAAMmB,WAAYnB,EAAMoB,QAASb,OAAQc,EAAWrB,EAAMR,QAC7G,EACAS,KAAKqB,gBAAkB,WACnB,IAAIC,EACJ,MAAO,CACHC,QAAyC,QAA/BD,EAAKvB,EAAMyB,sBAAmC,IAAPF,OAAgB,EAASA,EAAGG,aACzEC,KAAKC,aAAaC,mBAAmB7B,EAAMP,SAAS,GAEhE,EACAQ,KAAK6B,OAAS,WAAc,OAAO9B,EAAMkB,GAAK,EAE9CjB,KAAKR,QAAUA,EACfQ,KAAKwB,eAAiBlC,EAAkBwC,cAActC,GAC/B,iBAAZD,EAAsB,CAE7B,GADAS,KAAKT,QAAUA,GACVD,EAAkByC,QACnB,MAAM,IAAIC,UAAU,+EAExB,IAAIV,EAAK5B,GAAQ,CAAC,EAA+BuC,GAAfX,EAAGJ,YAAwB,QAAOI,EAAI,CAAC,gBAEzEtB,KAAKiB,IAAM3B,EAAkByC,QAAQxC,GAAS,SAAS,QAAS,CAAC,EAAG0C,GAAY,CAAEV,OAAQvB,KAAKwB,iBACnG,MAEIxB,KAAKiB,IAAM1B,EAEf,IAAK2C,MAAMC,QAAQnC,KAAKiB,KACpB,MAAM,IAAIe,UAAU,kDAIxBhC,KAAKmB,SA/HStB,EA+HcP,EAAkB6B,SA/HjBrB,EA+H0BL,GA3HpD2C,OAAOC,KAAKxC,GAAec,OAAO,SAAUC,EAAK0B,GAb5D,IAAqBC,EAAIC,EAejB,OADA5B,EAAI0B,IAdSC,EAcQ1C,EAAcyC,IAdlBE,EAcsB1C,EAAQwC,KAV5C,SAAS,SAAS,QAAS,CAAC,EAAIC,GAAM,CAAC,GAAMC,GAAM,CAAC,GAAKJ,OAAOC,KAAKE,GAAI5B,OAAO,SAAUC,EAAK0B,GAElG,OADA1B,EAAI0B,IAAK,SAAS,QAAS,CAAC,EAAGC,EAAGD,IAAME,EAAGF,IAAM,CAAC,GAC3C1B,CACX,EAAG,CAAC,IALO2B,GAaA3B,CACX,GAAG,QAAS,CAAC,EAAGf,IALLA,GA8HPG,KAAKkB,WACAxB,GAAQA,EAAKwB,kBAzGR,KADetB,EA0GgCI,KAAKC,kBAzG1CL,EAAQ,CAC5BM,OAAQ,CAAC,EACTC,SAAU,CAAC,EACXC,YAAa,CAAC,IAEX,CACHqC,iBAAiB,OAAQ,WAGrB,IAFA,IAAInB,EACAoB,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUnC,OAAQkC,IACpCD,EAAKC,GAAMC,UAAUD,GAEzB,OAAO,KAAMrB,EAAKI,KAAKC,cAAckB,KAAKC,MAAMxB,GAAI,QAAc,MAAC,GAASoB,GAAM,IACtF,EAAG,CACC9C,MAAOb,EAAuBa,EAAMM,QACpC6C,SAAU,IAAWC,WAEzBC,mBAAmB,OAAQ,WAGvB,IAFA,IAAI3B,EACAoB,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUnC,OAAQkC,IACpCD,EAAKC,GAAMC,UAAUD,GAEzB,OAAO,KAAMrB,EAAKI,KAAKwB,gBAAgBL,KAAKC,MAAMxB,GAAI,QAAc,MAAC,GAASoB,GAAM,IACxF,EAAG,CACC9C,MAAOb,EAAuBa,EAAMO,UACpC4C,SAAU,IAAWC,WAEzBG,gBAAgB,OAAQ,WAGpB,IAFA,IAAI7B,EACAoB,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUnC,OAAQkC,IACpCD,EAAKC,GAAMC,UAAUD,GAEzB,OAAO,KAAMrB,EAAKI,KAAK0B,aAAaP,KAAKC,MAAMxB,GAAI,QAAc,MAAC,GAASoB,GAAM,IACrF,EAAG,CACC9C,MAAOb,EAAuBa,EAAMQ,aACpC2C,SAAU,IAAWC,YAqE7B,CAsFA,OArFAZ,OAAOiB,eAAe/D,EAAmB,gBAAiB,CACtDJ,IAAK,WAKD,OAJKI,EAAkBgE,wBACnBhE,EAAkBgE,uBACd,IAAI5B,KAAKC,cAAeN,kBAAkBE,QAE3CjC,EAAkBgE,qBAC7B,EACAC,YAAY,EACZC,cAAc,IAElBlE,EAAkBgE,sBAAwB,KAC1ChE,EAAkBwC,cAAgB,SAAUtC,GACxC,QAA2B,IAAhBkC,KAAK+B,OAAhB,CAGA,IAAIC,EAAmBhC,KAAKC,aAAaC,mBAAmBpC,GAC5D,OAAIkE,EAAiBjD,OAAS,EACnB,IAAIiB,KAAK+B,OAAOC,EAAiB,IAErC,IAAIhC,KAAK+B,OAA0B,iBAAZjE,EAAuBA,EAAUA,EAAQ,GALvE,CAMJ,EACAF,EAAkByC,QAAU,KAI5BzC,EAAkB6B,QAAU,CACxBjB,OAAQ,CACJyD,QAAS,CACLC,sBAAuB,GAE3BC,SAAU,CACNC,MAAO,YAEXC,QAAS,CACLD,MAAO,YAGfE,KAAM,CACFC,MAAO,CACHC,MAAO,UACPC,IAAK,UACLC,KAAM,WAEVC,OAAQ,CACJH,MAAO,QACPC,IAAK,UACLC,KAAM,WAEVE,KAAM,CACFJ,MAAO,OACPC,IAAK,UACLC,KAAM,WAEVG,KAAM,CACFC,QAAS,OACTN,MAAO,OACPC,IAAK,UACLC,KAAM,YAGdK,KAAM,CACFR,MAAO,CACHS,KAAM,UACNC,OAAQ,WAEZN,OAAQ,CACJK,KAAM,UACNC,OAAQ,UACRC,OAAQ,WAEZN,KAAM,CACFI,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,aAAc,SAElBN,KAAM,CACFG,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,aAAc,WAInBvF,CACX,CAxJsC,E,oMChF/B,SAASwF,EAAUC,EAAWxF,EAASyF,GAE1C,QADY,IAARA,IAAkBA,EAAMC,QACvBF,EACD,MAAM,IAAIC,EAAIzF,EAEtB,CACO,SAAS2F,EAAYC,EAAOC,EAAWC,GAE1C,YADiB,IAAbA,IAAuBA,EAAW,CAAC,GAChCD,EAAUzE,OAAO,SAAU2E,EAAUC,GAOxC,OANIA,KAAQJ,EACRG,EAASC,GAAQJ,EAAMI,GAElBA,KAAQF,IACbC,EAASC,GAAQF,EAASE,IAEvBD,CACX,EAAG,CAAC,EACR,CACA,IAYWE,EAAsB,CAC7BrE,QAAS,CAAC,EACVsE,SAAU,CAAC,EACXC,cAAUtE,EACVzB,cAAe,KACfgG,eAAgB,CAAC,EACjBC,uBAAuB,EACvBC,QAnBsB,SAAUC,GAKpC,EAeIC,OAdqB,SAAUC,GAKnC,GAsBA,SAASjH,EAAuBC,GAC5B,MAAO,CACHC,OAAQ,WACJ,MAAO,CACHC,IAAK,SAAUC,GACX,OAAOH,EAAMG,EACjB,EACAC,IAAK,SAAUD,EAAKE,GAChBL,EAAMG,GAAOE,CACjB,EAER,EAER,CAKO,SAAS4G,EAAiBrG,QACf,IAAVA,IAAoBA,EA7BjB,CACHO,SAAU,CAAC,EACXD,OAAQ,CAAC,EACTX,QAAS,CAAC,EACV2G,aAAc,CAAC,EACf9F,YAAa,CAAC,EACd+F,KAAM,CAAC,EACPC,aAAc,CAAC,IAuBnB,IAAIC,EAAqB3E,KAAK2E,mBAC1BC,EAAa5E,KAAK4E,WAClBC,EAAe7E,KAAK6E,aACpBtD,GAAoB,OAAQ,WAG5B,IAFA,IAAI3B,EACAoB,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUnC,OAAQkC,IACpCD,EAAKC,GAAMC,UAAUD,GAEzB,OAAO,KAAMrB,EAAKI,KAAKwB,gBAAgBL,KAAKC,MAAMxB,GAAI,QAAc,MAAC,GAASoB,GAAM,IACxF,EAAG,CACC9C,MAAOb,EAAuBa,EAAMO,UACpC4C,SAAU,IAAWC,WAErBP,GAAkB,OAAQ,WAG1B,IAFA,IAAInB,EACAoB,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUnC,OAAQkC,IACpCD,EAAKC,GAAMC,UAAUD,GAEzB,OAAO,KAAMrB,EAAKI,KAAKC,cAAckB,KAAKC,MAAMxB,GAAI,QAAc,MAAC,GAASoB,GAAM,IACtF,EAAG,CACC9C,MAAOb,EAAuBa,EAAMM,QACpC6C,SAAU,IAAWC,WAErBG,GAAiB,OAAQ,WAGzB,IAFA,IAAI7B,EACAoB,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUnC,OAAQkC,IACpCD,EAAKC,GAAMC,UAAUD,GAEzB,OAAO,KAAMrB,EAAKI,KAAK0B,aAAaP,KAAKC,MAAMxB,GAAI,QAAc,MAAC,GAASoB,GAAM,IACrF,EAAG,CACC9C,MAAOb,EAAuBa,EAAMQ,aACpC2C,SAAU,IAAWC,WAEzB,MAAO,CACHC,kBAAmBA,EACnBR,gBAAiBA,EACjB+D,kBAAkB,OAAQ,SAAUjH,EAASC,EAASC,EAAiBC,GACnE,OAAO,IAAI,IAAkBH,EAASC,EAASC,GAAiB,QAAS,CAAEyB,WAAY,CAC/EuB,gBAAiBA,EACjBQ,kBAAmBA,EACnBE,eAAgBA,IACdzD,GAAQ,CAAC,GACvB,EAAG,CACCE,MAAOb,EAAuBa,EAAML,SACpCwD,SAAU,IAAWC,WAEzByD,uBAAuB,OAAQ,WAE3B,IADA,IAAI/D,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUnC,OAAQkC,IACpCD,EAAKC,GAAMC,UAAUD,GAEzB,OAAO,IAAK0D,EAAmBxD,KAAKC,MAAMuD,GAAoB,QAAc,MAAC,GAAS3D,GAAM,IAChG,EAAG,CACC9C,MAAOb,EAAuBa,EAAMsG,cACpCnD,SAAU,IAAWC,WAEzBG,eAAgBA,EAChBuD,eAAe,OAAQ,WAEnB,IADA,IAAIhE,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUnC,OAAQkC,IACpCD,EAAKC,GAAMC,UAAUD,GAEzB,OAAO,IAAK2D,EAAWzD,KAAKC,MAAMwD,GAAY,QAAc,MAAC,GAAS5D,GAAM,IAChF,EAAG,CACC9C,MAAOb,EAAuBa,EAAMuG,MACpCpD,SAAU,IAAWC,WAEzB2D,iBAAiB,OAAQ,WAErB,IADA,IAAIjE,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUnC,OAAQkC,IACpCD,EAAKC,GAAMC,UAAUD,GAEzB,OAAO,IAAK4D,EAAa1D,KAAKC,MAAMyD,GAAc,QAAc,MAAC,GAAS7D,GAAM,IACpF,EAAG,CACC9C,MAAOb,EAAuBa,EAAMwG,cACpCrD,SAAU,IAAWC,WAGjC,CACO,SAAS4D,EAAezF,EAASL,EAAMyE,EAAMM,GAChD,IACIxF,EADAwG,EAAa1F,GAAWA,EAAQL,GAKpC,GAHI+F,IACAxG,EAASwG,EAAWtB,IAEpBlF,EACA,OAAOA,EAEXwF,EAAQ,IAAI,KAA0B,MAAMiB,OAAOhG,EAAM,mBAAmBgG,OAAOvB,IACvF,C,uBCpKO,SAASwB,EAAQC,EAAIC,GACxB,IAAIrH,EAAQqH,GAAWA,EAAQrH,MAAQqH,EAAQrH,MAAQsH,EACnDC,EAAaF,GAAWA,EAAQE,WAAaF,EAAQE,WAAaC,EAEtE,OADeH,GAAWA,EAAQlE,SAAWkE,EAAQlE,SAAWsE,GAChDL,EAAI,CAChBpH,MAAOA,EACPuH,WAAYA,GAEpB,CAOA,SAASG,EAAQN,EAAIpH,EAAOuH,EAAYI,GACpC,IAJiBlI,EAIbmI,EAHa,OADAnI,EAIUkI,IAHe,iBAAVlI,GAAuC,kBAAVA,EAG3BkI,EAAMJ,EAAWI,GAC/CE,EAAgB7H,EAAMV,IAAIsI,GAK9B,YAJ6B,IAAlBC,IACPA,EAAgBT,EAAGU,KAAK1H,KAAMuH,GAC9B3H,EAAMR,IAAIoI,EAAUC,IAEjBA,CACX,CACA,SAASzE,EAASgE,EAAIpH,EAAOuH,GACzB,IAAIzE,EAAOR,MAAMyF,UAAUC,MAAMF,KAAK9E,UAAW,GAC7C4E,EAAWL,EAAWzE,GACtB+E,EAAgB7H,EAAMV,IAAIsI,GAK9B,YAJ6B,IAAlBC,IACPA,EAAgBT,EAAGlE,MAAM9C,KAAM0C,GAC/B9C,EAAMR,IAAIoI,EAAUC,IAEjBA,CACX,CACA,SAASI,EAASb,EAAIc,EAAS/E,EAAUnD,EAAOmI,GAC5C,OAAOhF,EAASF,KAAKiF,EAASd,EAAIpH,EAAOmI,EAC7C,CACA,SAASV,EAAgBL,EAAIC,GAEzB,OAAOY,EAASb,EAAIhH,KADS,IAAdgH,EAAGvG,OAAe6G,EAAUtE,EACPiE,EAAQrH,MAAMX,SAAUgI,EAAQE,WACxE,C,uDAUA,IAAIC,EAAoB,WACpB,OAAOY,KAAKC,UAAUrF,UAC1B,EAIIsF,EAA6C,WAC7C,SAASA,IACLlI,KAAKJ,MAAQwC,OAAOnD,OAAO,KAC/B,CAOA,OANAiJ,EAA4BP,UAAUzI,IAAM,SAAUC,GAClD,OAAOa,KAAKJ,MAAMT,EACtB,EACA+I,EAA4BP,UAAUvI,IAAM,SAAUD,EAAKE,GACvDW,KAAKJ,MAAMT,GAAOE,CACtB,EACO6I,CACX,CAXgD,GAY5ChB,EAAe,CACfjI,OAAQ,WACJ,OAAO,IAAIiJ,CACf,GAEOC,EAAa,CACpBnF,SAjCJ,SAA0BgE,EAAIC,GAC1B,OAAOY,EAASb,EAAIhH,KAAMgD,EAAUiE,EAAQrH,MAAMX,SAAUgI,EAAQE,WACxE,EAgCIG,QA/BJ,SAAyBN,EAAIC,GACzB,OAAOY,EAASb,EAAIhH,KAAMsH,EAASL,EAAQrH,MAAMX,SAAUgI,EAAQE,WACvE,E,qBCxCa,IAAIiB,EAAE,mBAAoBC,QAAQA,OAAOC,IAAIC,EAAEH,EAAEC,OAAOC,IAAI,iBAAiB,MAAME,EAAEJ,EAAEC,OAAOC,IAAI,gBAAgB,MAAMG,EAAEL,EAAEC,OAAOC,IAAI,kBAAkB,MAAMI,EAAEN,EAAEC,OAAOC,IAAI,qBAAqB,MAAMK,EAAEP,EAAEC,OAAOC,IAAI,kBAAkB,MAAMM,EAAER,EAAEC,OAAOC,IAAI,kBAAkB,MAAMhG,EAAE8F,EAAEC,OAAOC,IAAI,iBAAiB,MAAMO,EAAET,EAAEC,OAAOC,IAAI,oBAAoB,MAAMQ,EAAEV,EAAEC,OAAOC,IAAI,yBAAyB,MAAMS,EAAEX,EAAEC,OAAOC,IAAI,qBAAqB,MAAMU,EAAEZ,EAAEC,OAAOC,IAAI,kBAAkB,MAAMW,EAAEb,EACpfC,OAAOC,IAAI,uBAAuB,MAAMY,EAAEd,EAAEC,OAAOC,IAAI,cAAc,MAAMa,EAAEf,EAAEC,OAAOC,IAAI,cAAc,MAAMc,EAAEhB,EAAEC,OAAOC,IAAI,eAAe,MAAMe,EAAEjB,EAAEC,OAAOC,IAAI,qBAAqB,MAAMgB,EAAElB,EAAEC,OAAOC,IAAI,mBAAmB,MAAMiB,EAAEnB,EAAEC,OAAOC,IAAI,eAAe,MAClQ,SAASkB,EAAEC,GAAG,GAAG,iBAAkBA,GAAG,OAAOA,EAAE,CAAC,IAAIC,EAAED,EAAEE,SAAS,OAAOD,GAAG,KAAKnB,EAAE,OAAOkB,EAAEA,EAAE3I,MAAQ,KAAK+H,EAAE,KAAKC,EAAE,KAAKL,EAAE,KAAKE,EAAE,KAAKD,EAAE,KAAKM,EAAE,OAAOS,EAAE,QAAQ,OAAOA,EAAEA,GAAGA,EAAEE,UAAY,KAAKrH,EAAE,KAAKyG,EAAE,KAAKI,EAAE,KAAKD,EAAE,KAAKN,EAAE,OAAOa,EAAE,QAAQ,OAAOC,GAAG,KAAKlB,EAAE,OAAOkB,EAAE,CAAC,CAAC,SAASE,EAAEH,GAAG,OAAOD,EAAEC,KAAKX,CAAC,CAACe,EAAQC,UAAUjB,EAAEgB,EAAQE,eAAejB,EAAEe,EAAQG,gBAAgB1H,EAAEuH,EAAQI,gBAAgBrB,EAAEiB,EAAQK,QAAQ3B,EAAEsB,EAAQM,WAAWpB,EAAEc,EAAQO,SAAS3B,EAAEoB,EAAQQ,KAAKlB,EAAEU,EAAQS,KAAKpB,EAAEW,EAAQU,OAAO/B,EAChfqB,EAAQW,SAAS7B,EAAEkB,EAAQY,WAAW/B,EAAEmB,EAAQa,SAAS1B,EAAEa,EAAQc,YAAY,SAASlB,GAAG,OAAOG,EAAEH,IAAID,EAAEC,KAAKZ,CAAC,EAAEgB,EAAQe,iBAAiBhB,EAAEC,EAAQgB,kBAAkB,SAASpB,GAAG,OAAOD,EAAEC,KAAKnH,CAAC,EAAEuH,EAAQiB,kBAAkB,SAASrB,GAAG,OAAOD,EAAEC,KAAKb,CAAC,EAAEiB,EAAQkB,UAAU,SAAStB,GAAG,MAAM,iBAAkBA,GAAG,OAAOA,GAAGA,EAAEE,WAAWpB,CAAC,EAAEsB,EAAQmB,aAAa,SAASvB,GAAG,OAAOD,EAAEC,KAAKV,CAAC,EAAEc,EAAQoB,WAAW,SAASxB,GAAG,OAAOD,EAAEC,KAAKhB,CAAC,EAAEoB,EAAQqB,OAAO,SAASzB,GAAG,OAAOD,EAAEC,KAAKN,CAAC,EAC1dU,EAAQsB,OAAO,SAAS1B,GAAG,OAAOD,EAAEC,KAAKP,CAAC,EAAEW,EAAQuB,SAAS,SAAS3B,GAAG,OAAOD,EAAEC,KAAKjB,CAAC,EAAEqB,EAAQwB,WAAW,SAAS5B,GAAG,OAAOD,EAAEC,KAAKd,CAAC,EAAEkB,EAAQyB,aAAa,SAAS7B,GAAG,OAAOD,EAAEC,KAAKf,CAAC,EAAEmB,EAAQ0B,WAAW,SAAS9B,GAAG,OAAOD,EAAEC,KAAKT,CAAC,EAC1Oa,EAAQ2B,mBAAmB,SAAS/B,GAAG,MAAM,iBAAkBA,GAAG,mBAAoBA,GAAGA,IAAIhB,GAAGgB,IAAIX,GAAGW,IAAId,GAAGc,IAAIf,GAAGe,IAAIT,GAAGS,IAAIR,GAAG,iBAAkBQ,GAAG,OAAOA,IAAIA,EAAEE,WAAWR,GAAGM,EAAEE,WAAWT,GAAGO,EAAEE,WAAWf,GAAGa,EAAEE,WAAWrH,GAAGmH,EAAEE,WAAWZ,GAAGU,EAAEE,WAAWN,GAAGI,EAAEE,WAAWL,GAAGG,EAAEE,WAAWJ,GAAGE,EAAEE,WAAWP,EAAE,EAAES,EAAQ4B,OAAOjC,C,6JCL/TkC,EAAgC,oBAAXC,QAA2BA,OAAOC,qCAGrD,gBAAoB,MAFpBD,OAAOE,yBACJF,OAAOE,uBAAyB,gBAAoB,OAEzDC,EAAeJ,EAAYK,SACpBC,EAD6CN,EAAYM,SAEzDC,EAAUP,EACN,SAASQ,EAAWC,EAAkBlF,GACjD,IAboBmF,EAahB9K,EAAK2F,GAAW,CAAC,EAAGoF,EAAK/K,EAAGgL,aAAcA,OAAsB,IAAPD,EAAgB,OAASA,EAAIE,EAAKjL,EAAGkL,WAAYA,OAAoB,IAAPD,GAAwBA,EAAIE,EAAKnL,EAAGoL,eAAgBA,OAAwB,IAAPD,GAAuBA,EACnNE,EAAW,SAAUxH,GAAS,OAAQ,gBAAoB2G,EAAc,KAAM,SAAUc,GACxF,IAAItL,EACAoL,IACA,QAAqBE,GAEzB,IAAIC,IAAYvL,EAAK,CAAC,GAAMgL,GAAgBM,EAAMtL,GAClD,OAAQ,gBAAoB6K,GAAkB,QAAS,CAAC,EAAGhH,EAAO0H,EAAU,CAAEC,IAAKN,EAAarH,EAAM4H,aAAe,OACzH,EAAK,EAGL,OAFAJ,EAASK,YAAc,cAAclG,QAtBjBsF,EAsBuCD,GArB1Ca,aAAeZ,EAAU7G,MAAQ,YAqB4B,KAC9EoH,EAASR,iBAAmBA,EACxBK,EACO,IAEP,aAAiB,SAAUrH,EAAO2H,GAAO,OAAQ,gBAAoBH,GAAU,QAAS,CAAC,EAAGxH,EAAO,CAAE4H,aAAcD,IAAU,GAAIX,GAE9H,IAAqBQ,EAAUR,EAC1C,C,6VClCWc,ECAA,EAwCAC,EAvCAC,E,UA+CJ,SAASC,EAAiBC,GAC7B,OAAOA,EAAGvM,OAAS,EAAKC,OAC5B,CACO,SAAS,EAAkBsM,GAC9B,OAAOA,EAAGvM,OAAS,EAAKwM,QAC5B,CACO,SAAS,EAAgBD,GAC5B,OAAOA,EAAGvM,OAAS,EAAKZ,MAC5B,CACO,SAAS,EAAcmN,GAC1B,OAAOA,EAAGvM,OAAS,EAAKkD,IAC5B,CACO,SAAS,EAAcqJ,GAC1B,OAAOA,EAAGvM,OAAS,EAAK2D,IAC5B,CACO,SAAS,EAAgB4I,GAC5B,OAAOA,EAAGvM,OAAS,EAAKyM,MAC5B,CACO,SAAS,EAAgBF,GAC5B,OAAOA,EAAGvM,OAAS,EAAK0M,MAC5B,CACO,SAASC,EAAeJ,GAC3B,OAAOA,EAAGvM,OAAS,EAAK4M,KAC5B,CACO,SAAS,EAAaL,GACzB,OAAOA,EAAGvM,OAAS,EAAK6M,GAC5B,CACO,SAASC,EAAiBP,GAC7B,SAAUA,GAAoB,iBAAPA,GAAmBA,EAAGvM,OAASoM,EAAchN,OACxE,CACO,SAAS2N,EAAmBR,GAC/B,SAAUA,GAAoB,iBAAPA,GAAmBA,EAAGvM,OAASoM,EAAc/M,SACxE,ED/EA,SAAW8M,GAEPA,EAAUA,EAAyC,8BAAI,GAAK,gCAE5DA,EAAUA,EAA0B,eAAI,GAAK,iBAE7CA,EAAUA,EAA8B,mBAAI,GAAK,qBAEjDA,EAAUA,EAAgC,qBAAI,GAAK,uBAEnDA,EAAUA,EAAiC,sBAAI,GAAK,wBAEpDA,EAAUA,EAAiC,sBAAI,GAAK,wBAEpDA,EAAUA,EAAmC,wBAAI,GAAK,0BAEtDA,EAAUA,EAAsC,2BAAI,GAAK,6BAEzDA,EAAUA,EAAkC,uBAAI,GAAK,yBAErDA,EAAUA,EAAqC,0BAAI,IAAM,4BAEzDA,EAAUA,EAA4C,iCAAI,IAAM,mCAEhEA,EAAUA,EAA0C,+BAAI,IAAM,iCAE9DA,EAAUA,EAA+C,oCAAI,IAAM,sCAEnEA,EAAUA,EAAgD,qCAAI,IAAM,uCAEpEA,EAAUA,EAA2C,gCAAI,IAAM,kCAE/DA,EAAUA,EAA2C,gCAAI,IAAM,kCAE/DA,EAAUA,EAAoD,yCAAI,IAAM,2CAKxEA,EAAUA,EAAoD,yCAAI,IAAM,2CAExEA,EAAUA,EAA4C,iCAAI,IAAM,mCAKhEA,EAAUA,EAA8C,mCAAI,IAAM,qCAIlEA,EAAUA,EAA8C,mCAAI,IAAM,qCAElEA,EAAUA,EAAgC,qBAAI,IAAM,uBAEpDA,EAAUA,EAAuB,YAAI,IAAM,cAE3CA,EAAUA,EAA4B,iBAAI,IAAM,mBAEhDA,EAAUA,EAAiC,sBAAI,IAAM,wBAErDA,EAAUA,EAAwB,aAAI,IAAM,cAC/C,CA7DD,CA6DGA,IAAcA,EAAY,CAAC,KC7DnBE,EAsCR,IAAS,EAAO,CAAC,IAlCXA,EAAc,QAAI,GAAK,UAI5BA,EAAKA,EAAe,SAAI,GAAK,WAI7BA,EAAKA,EAAa,OAAI,GAAK,SAI3BA,EAAKA,EAAW,KAAI,GAAK,OAIzBA,EAAKA,EAAW,KAAI,GAAK,OAIzBA,EAAKA,EAAa,OAAI,GAAK,SAI3BA,EAAKA,EAAa,OAAI,GAAK,SAK3BA,EAAKA,EAAY,MAAI,GAAK,QAI1BA,EAAKA,EAAU,IAAI,GAAK,MAG5B,SAAWD,GACPA,EAAcA,EAAsB,OAAI,GAAK,SAC7CA,EAAcA,EAAwB,SAAI,GAAK,UAClD,CAHD,CAGGA,IAAkBA,EAAgB,CAAC,IC3C/B,IAAIY,EAAwB,+CCI/BC,EAAkB,4KAOf,SAASC,EAAsBC,GAClC,IAAIvN,EAAS,CAAC,EA0Gd,OAzGAuN,EAASC,QAAQH,EAAiB,SAAUI,GACxC,IAAIC,EAAMD,EAAM1N,OAChB,OAAQ0N,EAAM,IAEV,IAAK,IACDzN,EAAO2N,IAAc,IAARD,EAAY,OAAiB,IAARA,EAAY,SAAW,QACzD,MAEJ,IAAK,IACD1N,EAAO0D,KAAe,IAARgK,EAAY,UAAY,UACtC,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,MAAM,IAAIE,WAAW,gEAEzB,IAAK,IACL,IAAK,IACD,MAAM,IAAIA,WAAW,8CAEzB,IAAK,IACL,IAAK,IACD5N,EAAOwD,MAAQ,CAAC,UAAW,UAAW,QAAS,OAAQ,UAAUkK,EAAM,GACvE,MAEJ,IAAK,IACL,IAAK,IACD,MAAM,IAAIE,WAAW,2CACzB,IAAK,IACD5N,EAAOyD,IAAM,CAAC,UAAW,WAAWiK,EAAM,GAC1C,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACD,MAAM,IAAIE,WAAW,6DAEzB,IAAK,IACD5N,EAAO8D,QAAkB,IAAR4J,EAAY,OAAiB,IAARA,EAAY,SAAW,QAC7D,MACJ,IAAK,IACD,GAAIA,EAAM,EACN,MAAM,IAAIE,WAAW,iDAEzB5N,EAAO8D,QAAU,CAAC,QAAS,OAAQ,SAAU,SAAS4J,EAAM,GAC5D,MACJ,IAAK,IACD,GAAIA,EAAM,EACN,MAAM,IAAIE,WAAW,iDAEzB5N,EAAO8D,QAAU,CAAC,QAAS,OAAQ,SAAU,SAAS4J,EAAM,GAC5D,MAEJ,IAAK,IACD1N,EAAO6N,QAAS,EAChB,MACJ,IAAK,IACL,IAAK,IACD,MAAM,IAAID,WAAW,8DAEzB,IAAK,IACD5N,EAAO8N,UAAY,MACnB9N,EAAOgE,KAAO,CAAC,UAAW,WAAW0J,EAAM,GAC3C,MACJ,IAAK,IACD1N,EAAO8N,UAAY,MACnB9N,EAAOgE,KAAO,CAAC,UAAW,WAAW0J,EAAM,GAC3C,MACJ,IAAK,IACD1N,EAAO8N,UAAY,MACnB9N,EAAOgE,KAAO,CAAC,UAAW,WAAW0J,EAAM,GAC3C,MACJ,IAAK,IACD1N,EAAO8N,UAAY,MACnB9N,EAAOgE,KAAO,CAAC,UAAW,WAAW0J,EAAM,GAC3C,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACD,MAAM,IAAIE,WAAW,oEAEzB,IAAK,IACD5N,EAAOiE,OAAS,CAAC,UAAW,WAAWyJ,EAAM,GAC7C,MAEJ,IAAK,IACD1N,EAAOkE,OAAS,CAAC,UAAW,WAAWwJ,EAAM,GAC7C,MACJ,IAAK,IACL,IAAK,IACD,MAAM,IAAIE,WAAW,8DAEzB,IAAK,IACD5N,EAAOmE,aAAeuJ,EAAM,EAAI,QAAU,OAC1C,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,MAAM,IAAIE,WAAW,wEAE7B,MAAO,EACX,GACO5N,CACX,CCvHO,IAAI,EAAoB,wCC2B/B,SAAS+N,EAAcC,GACnB,OAAOA,EAAKR,QAAQ,UAAW,GACnC,CACA,IAAIS,EAA2B,mCAC3BC,EAA8B,wBAC9BC,EAAsB,0BACtBC,EAA8B,SAClC,SAASC,EAA0BC,GAC/B,IAAItO,EAAS,CAAC,EA6Bd,MA5B4B,MAAxBsO,EAAIA,EAAIvO,OAAS,GACjBC,EAAOuO,iBAAmB,gBAEG,MAAxBD,EAAIA,EAAIvO,OAAS,KACtBC,EAAOuO,iBAAmB,iBAE9BD,EAAId,QAAQU,EAA6B,SAAUM,EAAGC,EAAIC,GAoBtD,MAlBkB,iBAAPA,GACP1O,EAAO2O,yBAA2BF,EAAG1O,OACrCC,EAAO4O,yBAA2BH,EAAG1O,QAGzB,MAAP2O,EACL1O,EAAO2O,yBAA2BF,EAAG1O,OAGtB,MAAV0O,EAAG,GACRzO,EAAO4O,yBAA2BH,EAAG1O,QAIrCC,EAAO2O,yBAA2BF,EAAG1O,OACrCC,EAAO4O,yBACHH,EAAG1O,QAAwB,iBAAP2O,EAAkBA,EAAG3O,OAAS,IAEnD,EACX,GACOC,CACX,CACA,SAAS6O,EAAUP,GACf,OAAQA,GACJ,IAAK,YACD,MAAO,CACHQ,YAAa,QAErB,IAAK,kBACL,IAAK,KACD,MAAO,CACHC,aAAc,cAEtB,IAAK,cACL,IAAK,KACD,MAAO,CACHD,YAAa,UAErB,IAAK,yBACL,IAAK,MACD,MAAO,CACHA,YAAa,SACbC,aAAc,cAEtB,IAAK,mBACL,IAAK,KACD,MAAO,CACHD,YAAa,cAErB,IAAK,8BACL,IAAK,MACD,MAAO,CACHA,YAAa,aACbC,aAAc,cAEtB,IAAK,aACL,IAAK,KACD,MAAO,CACHD,YAAa,SAG7B,CACA,SAASE,EAAyCC,GAE9C,IAAIjP,EAaJ,GAZgB,MAAZiP,EAAK,IAA0B,MAAZA,EAAK,IACxBjP,EAAS,CACLkP,SAAU,eAEdD,EAAOA,EAAK/H,MAAM,IAED,MAAZ+H,EAAK,KACVjP,EAAS,CACLkP,SAAU,cAEdD,EAAOA,EAAK/H,MAAM,IAElBlH,EAAQ,CACR,IAAI8O,EAAcG,EAAK/H,MAAM,EAAG,GAShC,GARoB,OAAhB4H,GACA9O,EAAO8O,YAAc,SACrBG,EAAOA,EAAK/H,MAAM,IAEG,OAAhB4H,IACL9O,EAAO8O,YAAc,aACrBG,EAAOA,EAAK/H,MAAM,KAEjBkH,EAA4Be,KAAKF,GAClC,MAAM,IAAI1K,MAAM,6CAEpBvE,EAAOoP,qBAAuBH,EAAKlP,MACvC,CACA,OAAOC,CACX,CACA,SAASqP,EAAqBC,GAG1B,OADeT,EAAUS,IADZ,CAAC,CAMlB,CAIO,SAASC,EAAoBC,GAEhC,IADA,IAAIxP,EAAS,CAAC,EACLiC,EAAK,EAAGwN,EAAWD,EAAQvN,EAAKwN,EAAS1P,OAAQkC,IAAM,CAC5D,IAAIyN,EAAQD,EAASxN,GACrB,OAAQyN,EAAMT,MACV,IAAK,UACL,IAAK,IACDjP,EAAOoD,MAAQ,UACf,SACJ,IAAK,QACDpD,EAAOoD,MAAQ,UACfpD,EAAO2P,MAAQ,IACf,SACJ,IAAK,WACD3P,EAAOoD,MAAQ,WACfpD,EAAOmD,SAAWuM,EAAMnJ,QAAQ,GAChC,SACJ,IAAK,YACL,IAAK,KACDvG,EAAO4P,aAAc,EACrB,SACJ,IAAK,oBACL,IAAK,IACD5P,EAAOkD,sBAAwB,EAC/B,SACJ,IAAK,eACL,IAAK,OACDlD,EAAOoD,MAAQ,OACfpD,EAAOgO,KAAOD,EAAc2B,EAAMnJ,QAAQ,IAC1C,SACJ,IAAK,gBACL,IAAK,IACDvG,EAAOkP,SAAW,UAClBlP,EAAO6P,eAAiB,QACxB,SACJ,IAAK,eACL,IAAK,KACD7P,EAAOkP,SAAW,UAClBlP,EAAO6P,eAAiB,OACxB,SACJ,IAAK,aACD7P,GAAS,SAAS,SAAS,QAAS,CAAC,EAAGA,GAAS,CAAEkP,SAAU,eAAiBQ,EAAMnJ,QAAQtG,OAAO,SAAUC,EAAKoP,GAAO,OAAQ,SAAS,QAAS,CAAC,EAAGpP,GAAMmP,EAAqBC,GAAQ,EAAG,CAAC,IAC9L,SACJ,IAAK,cACDtP,GAAS,SAAS,SAAS,QAAS,CAAC,EAAGA,GAAS,CAAEkP,SAAU,gBAAkBQ,EAAMnJ,QAAQtG,OAAO,SAAUC,EAAKoP,GAAO,OAAQ,SAAS,QAAS,CAAC,EAAGpP,GAAMmP,EAAqBC,GAAQ,EAAG,CAAC,IAC/L,SACJ,IAAK,kBACDtP,EAAOkP,SAAW,WAClB,SAEJ,IAAK,oBACDlP,EAAO8P,gBAAkB,eACzB9P,EAAO+P,YAAc,SACrB,SACJ,IAAK,mBACD/P,EAAO8P,gBAAkB,OACzB9P,EAAO+P,YAAc,QACrB,SACJ,IAAK,uBACD/P,EAAO8P,gBAAkB,OACzB9P,EAAO+P,YAAc,OACrB,SACJ,IAAK,sBACD/P,EAAO8P,gBAAkB,SACzB,SACJ,IAAK,QACD9P,EAAO2P,MAAQK,WAAWN,EAAMnJ,QAAQ,IACxC,SACJ,IAAK,sBACDvG,EAAOiQ,aAAe,QACtB,SACJ,IAAK,wBACDjQ,EAAOiQ,aAAe,OACtB,SACJ,IAAK,qBACDjQ,EAAOiQ,aAAe,QACtB,SACJ,IAAK,mBACDjQ,EAAOiQ,aAAe,SACtB,SACJ,IAAK,0BACDjQ,EAAOiQ,aAAe,WACtB,SACJ,IAAK,0BACDjQ,EAAOiQ,aAAe,YACtB,SACJ,IAAK,wBACDjQ,EAAOiQ,aAAe,aACtB,SAEJ,IAAK,gBACD,GAAIP,EAAMnJ,QAAQxG,OAAS,EACvB,MAAM,IAAI6N,WAAW,4DAEzB8B,EAAMnJ,QAAQ,GAAGiH,QAAQW,EAAqB,SAAUK,EAAGC,EAAIC,EAAIwB,EAAIC,EAAIC,GACvE,GAAI3B,EACAzO,EAAOoP,qBAAuBV,EAAG3O,WAEhC,IAAImQ,GAAMC,EACX,MAAM,IAAI5L,MAAM,sDAEf,GAAI6L,EACL,MAAM,IAAI7L,MAAM,mDACpB,CACA,MAAO,EACX,GACA,SAGR,GAAI6J,EAA4Be,KAAKO,EAAMT,MACvCjP,EAAOoP,qBAAuBM,EAAMT,KAAKlP,YAG7C,GAAIkO,EAAyBkB,KAAKO,EAAMT,MAAxC,CAII,GAAIS,EAAMnJ,QAAQxG,OAAS,EACvB,MAAM,IAAI6N,WAAW,iEAEzB8B,EAAMT,KAAKzB,QAAQS,EAA0B,SAAUO,EAAGC,EAAIC,EAAIwB,EAAIC,EAAIC,GAkBtE,MAhBW,MAAP1B,EACA1O,EAAOqQ,sBAAwB5B,EAAG1O,OAG7BmQ,GAAgB,MAAVA,EAAG,GACdlQ,EAAOkD,sBAAwBgN,EAAGnQ,OAG7BoQ,GAAMC,GACXpQ,EAAOqQ,sBAAwBF,EAAGpQ,OAClCC,EAAOkD,sBAAwBiN,EAAGpQ,OAASqQ,EAAGrQ,SAG9CC,EAAOqQ,sBAAwB5B,EAAG1O,OAClCC,EAAOkD,sBAAwBuL,EAAG1O,QAE/B,EACX,GACA,IAAIuP,EAAMI,EAAMnJ,QAAQ,GAEZ,MAAR+I,EACAtP,GAAS,SAAS,QAAS,CAAC,EAAGA,GAAS,CAAEsQ,oBAAqB,mBAE1DhB,IACLtP,GAAS,SAAS,QAAS,CAAC,EAAGA,GAASqO,EAA0BiB,IAG1E,MAEA,GAAIpB,EAA4BiB,KAAKO,EAAMT,MACvCjP,GAAS,SAAS,QAAS,CAAC,EAAGA,GAASqO,EAA0BqB,EAAMT,WAD5E,CAIA,IAAIsB,EAAW1B,EAAUa,EAAMT,MAC3BsB,IACAvQ,GAAS,SAAS,QAAS,CAAC,EAAGA,GAASuQ,IAE5C,IAAIC,EAAsCxB,EAAyCU,EAAMT,MACrFuB,IACAxQ,GAAS,SAAS,QAAS,CAAC,EAAGA,GAASwQ,GAP5C,CASJ,CACA,OAAOxQ,CACX,CCzTO,ICFHY,EDEO6P,EAAW,CAClB,MAAO,CACH,IACA,KAEJ,IAAO,CACH,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,KAEJ,GAAM,CACF,IACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,KACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,KACA,KACA,IACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,KACA,KAEJ,GAAM,CACF,IACA,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,KACA,KACA,IACA,KAEJ,GAAM,CACF,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,KACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,KACA,KAEJ,GAAM,CACF,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,IACA,KAEJ,GAAM,CACF,KACA,KACA,IACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,KACA,IACA,IACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,KACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,KAEJ,GAAM,CACF,KACA,KACA,IACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,KACA,KACA,IACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,KAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,KAEJ,GAAM,CACF,KAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,KAEJ,GAAM,CACF,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,MAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,KACA,KACA,IACA,KAEJ,GAAM,CACF,KACA,KACA,IACA,KAEJ,GAAM,CACF,IACA,KACA,KAEJ,GAAM,CACF,KACA,KACA,IACA,KAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,KAEJ,GAAM,CACF,IACA,IACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,KAEJ,GAAM,CACF,IACA,KACA,KAEJ,GAAM,CACF,IACA,KACA,KACA,KAEJ,GAAM,CACF,IACA,MAEJ,GAAM,CACF,IACA,IACA,KACA,MAEJ,GAAM,CACF,IACA,KACA,IACA,MAEJ,GAAM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CX,CA/yB2B,GAszB3B,SAASoB,GAASwB,GACd,OAASA,GAAa,IAAMA,GAAa,KACpCA,GAAa,IAAMA,GAAa,EACzC,CAKA,SAASP,GAA4B3O,GACjC,OAAc,KAANA,GACE,KAANA,GACCA,GAAK,IAAMA,GAAK,IACX,KAANA,GACCA,GAAK,IAAMA,GAAK,KAChBA,GAAK,IAAMA,GAAK,IACZ,KAALA,GACCA,GAAK,KAAQA,GAAK,KAClBA,GAAK,KAAQA,GAAK,KAClBA,GAAK,KAAQA,GAAK,KAClBA,GAAK,KAASA,GAAK,MACnBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAWA,GAAK,MAC9B,CAKA,SAASoM,GAAcpM,GACnB,OAASA,GAAK,GAAUA,GAAK,IACnB,KAANA,GACM,MAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,CACR,CAKA,SAASqM,GAAiBrM,GACtB,OAASA,GAAK,IAAUA,GAAK,IACnB,KAANA,GACCA,GAAK,IAAUA,GAAK,IACf,KAANA,GACM,KAANA,GACM,KAANA,GACM,KAANA,GACM,KAANA,GACM,KAANA,GACCA,GAAK,IAAUA,GAAK,IACpBA,GAAK,IAAUA,GAAK,IACpBA,GAAK,IAAUA,GAAK,IACpBA,GAAK,IAAUA,GAAK,IACf,KAANA,GACM,KAANA,GACM,KAANA,GACM,KAANA,GACM,KAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACCA,GAAK,KAAUA,GAAK,KACf,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,GACM,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,KACf,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACf,QAANA,GACCA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QA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","sources":["webpack://@carbon/ai-chat-examples-demo/../node_modules/intl-messageformat/lib/src/core.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/@formatjs/intl/lib/src/utils.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/@formatjs/fast-memoize/lib/index.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/react-intl/lib/src/components/injectIntl.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/@formatjs/icu-messageformat-parser/lib/error.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/@formatjs/icu-messageformat-parser/lib/types.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/@formatjs/icu-skeleton-parser/lib/number.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/@formatjs/icu-messageformat-parser/lib/time-data.generated.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/@formatjs/icu-messageformat-parser/lib/parser.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/@formatjs/icu-messageformat-parser/lib/index.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/@formatjs/intl/lib/src/error.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/intl-messageformat/lib/src/error.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/react-intl/lib/src/utils.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/react-intl/lib/src/components/useIntl.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/intl-messageformat/lib/src/formatters.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/hoist-non-react-statics/node_modules/react-is/index.js"],"sourcesContent":["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nimport { __assign, __rest, __spreadArray } from \"tslib\";\nimport { memoize, strategies } from '@formatjs/fast-memoize';\nimport { parse, } from '@formatjs/icu-messageformat-parser';\nimport { formatToParts, PART_TYPE, } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign(__assign(__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign(__assign({}, c1[k]), (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\nfunction createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoize(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.number),\n            strategy: strategies.variadic,\n        }),\n        getDateTimeFormat: memoize(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.dateTime),\n            strategy: strategies.variadic,\n        }),\n        getPluralRules: memoize(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.pluralRules),\n            strategy: strategies.variadic,\n        }),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        var _this = this;\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            var parts = _this.formatToParts(values);\n            // Hot path for straight simple msg translations\n            if (parts.length === 1) {\n                return parts[0].value;\n            }\n            var result = parts.reduce(function (all, part) {\n                if (!all.length ||\n                    part.type !== PART_TYPE.literal ||\n                    typeof all[all.length - 1] !== 'string') {\n                    all.push(part.value);\n                }\n                else {\n                    all[all.length - 1] += part.value;\n                }\n                return all;\n            }, []);\n            if (result.length <= 1) {\n                return result[0] || '';\n            }\n            return result;\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\n        };\n        this.resolvedOptions = function () {\n            var _a;\n            return ({\n                locale: ((_a = _this.resolvedLocale) === null || _a === void 0 ? void 0 : _a.toString()) ||\n                    Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\n            });\n        };\n        this.getAst = function () { return _this.ast; };\n        // Defined first because it's used to build the format pattern.\n        this.locales = locales;\n        this.resolvedLocale = IntlMessageFormat.resolveLocale(locales);\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            var _a = opts || {}, formatters = _a.formatters, parseOpts = __rest(_a, [\"formatters\"]);\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message, __assign(__assign({}, parseOpts), { locale: this.resolvedLocale }));\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n    }\n    Object.defineProperty(IntlMessageFormat, \"defaultLocale\", {\n        get: function () {\n            if (!IntlMessageFormat.memoizedDefaultLocale) {\n                IntlMessageFormat.memoizedDefaultLocale =\n                    new Intl.NumberFormat().resolvedOptions().locale;\n            }\n            return IntlMessageFormat.memoizedDefaultLocale;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IntlMessageFormat.memoizedDefaultLocale = null;\n    IntlMessageFormat.resolveLocale = function (locales) {\n        if (typeof Intl.Locale === 'undefined') {\n            return;\n        }\n        var supportedLocales = Intl.NumberFormat.supportedLocalesOf(locales);\n        if (supportedLocales.length > 0) {\n            return new Intl.Locale(supportedLocales[0]);\n        }\n        return new Intl.Locale(typeof locales === 'string' ? locales : locales[0]);\n    };\n    IntlMessageFormat.__parse = parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            integer: {\n                maximumFractionDigits: 0,\n            },\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\n","import { __assign, __spreadArray } from \"tslib\";\nimport { memoize, strategies } from '@formatjs/fast-memoize';\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport { UnsupportedFormatterError } from './error';\nexport function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\nexport function filterProps(props, allowlist, defaults) {\n    if (defaults === void 0) { defaults = {}; }\n    return allowlist.reduce(function (filtered, name) {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nvar defaultErrorHandler = function (error) {\n    // @ts-ignore just so we don't need to declare dep on @types/node\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n};\nvar defaultWarnHandler = function (warning) {\n    // @ts-ignore just so we don't need to declare dep on @types/node\n    if (process.env.NODE_ENV !== 'production') {\n        console.warn(warning);\n    }\n};\nexport var DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    fallbackOnEmptyString: true,\n    onError: defaultErrorHandler,\n    onWarn: defaultWarnHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache) {\n    if (cache === void 0) { cache = createIntlCache(); }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    var ListFormat = Intl.ListFormat;\n    var DisplayNames = Intl.DisplayNames;\n    var getDateTimeFormat = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.dateTime),\n        strategy: strategies.variadic,\n    });\n    var getNumberFormat = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.number),\n        strategy: strategies.variadic,\n    });\n    var getPluralRules = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.pluralRules),\n        strategy: strategies.variadic,\n    });\n    return {\n        getDateTimeFormat: getDateTimeFormat,\n        getNumberFormat: getNumberFormat,\n        getMessageFormat: memoize(function (message, locales, overrideFormats, opts) {\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\n                    getNumberFormat: getNumberFormat,\n                    getDateTimeFormat: getDateTimeFormat,\n                    getPluralRules: getPluralRules,\n                } }, (opts || {})));\n        }, {\n            cache: createFastMemoizeCache(cache.message),\n            strategy: strategies.variadic,\n        }),\n        getRelativeTimeFormat: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.relativeTime),\n            strategy: strategies.variadic,\n        }),\n        getPluralRules: getPluralRules,\n        getListFormat: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (ListFormat.bind.apply(ListFormat, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.list),\n            strategy: strategies.variadic,\n        }),\n        getDisplayNames: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.displayNames),\n            strategy: strategies.variadic,\n        }),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    var formatType = formats && formats[type];\n    var format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(new UnsupportedFormatterError(\"No \".concat(type, \" format named: \").concat(name)));\n}\n","//\n// Main\n//\nexport function memoize(fn, options) {\n    var cache = options && options.cache ? options.cache : cacheDefault;\n    var serializer = options && options.serializer ? options.serializer : serializerDefault;\n    var strategy = options && options.strategy ? options.strategy : strategyDefault;\n    return strategy(fn, {\n        cache: cache,\n        serializer: serializer,\n    });\n}\n//\n// Strategy\n//\nfunction isPrimitive(value) {\n    return (value == null || typeof value === 'number' || typeof value === 'boolean'); // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\nfunction monadic(fn, cache, serializer, arg) {\n    var cacheKey = isPrimitive(arg) ? arg : serializer(arg);\n    var computedValue = cache.get(cacheKey);\n    if (typeof computedValue === 'undefined') {\n        computedValue = fn.call(this, arg);\n        cache.set(cacheKey, computedValue);\n    }\n    return computedValue;\n}\nfunction variadic(fn, cache, serializer) {\n    var args = Array.prototype.slice.call(arguments, 3);\n    var cacheKey = serializer(args);\n    var computedValue = cache.get(cacheKey);\n    if (typeof computedValue === 'undefined') {\n        computedValue = fn.apply(this, args);\n        cache.set(cacheKey, computedValue);\n    }\n    return computedValue;\n}\nfunction assemble(fn, context, strategy, cache, serialize) {\n    return strategy.bind(context, fn, cache, serialize);\n}\nfunction strategyDefault(fn, options) {\n    var strategy = fn.length === 1 ? monadic : variadic;\n    return assemble(fn, this, strategy, options.cache.create(), options.serializer);\n}\nfunction strategyVariadic(fn, options) {\n    return assemble(fn, this, variadic, options.cache.create(), options.serializer);\n}\nfunction strategyMonadic(fn, options) {\n    return assemble(fn, this, monadic, options.cache.create(), options.serializer);\n}\n//\n// Serializer\n//\nvar serializerDefault = function () {\n    return JSON.stringify(arguments);\n};\n//\n// Cache\n//\nvar ObjectWithoutPrototypeCache = /** @class */ (function () {\n    function ObjectWithoutPrototypeCache() {\n        this.cache = Object.create(null);\n    }\n    ObjectWithoutPrototypeCache.prototype.get = function (key) {\n        return this.cache[key];\n    };\n    ObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n        this.cache[key] = value;\n    };\n    return ObjectWithoutPrototypeCache;\n}());\nvar cacheDefault = {\n    create: function create() {\n        return new ObjectWithoutPrototypeCache();\n    },\n};\nexport var strategies = {\n    variadic: strategyVariadic,\n    monadic: strategyMonadic,\n};\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","import { __assign } from \"tslib\";\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// This is primarily dealing with packaging systems where multiple copies of react-intl\n// might exist\nvar IntlContext = typeof window !== 'undefined' && !window.__REACT_INTL_BYPASS_GLOBAL_CONTEXT__\n    ? window.__REACT_INTL_CONTEXT__ ||\n        (window.__REACT_INTL_CONTEXT__ = React.createContext(null))\n    : React.createContext(null);\nvar IntlConsumer = IntlContext.Consumer, IntlProvider = IntlContext.Provider;\nexport var Provider = IntlProvider;\nexport var Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    var _a = options || {}, _b = _a.intlPropName, intlPropName = _b === void 0 ? 'intl' : _b, _c = _a.forwardRef, forwardRef = _c === void 0 ? false : _c, _d = _a.enforceContext, enforceContext = _d === void 0 ? true : _d;\n    var WithIntl = function (props) { return (React.createElement(IntlConsumer, null, function (intl) {\n        var _a;\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\n        return (React.createElement(WrappedComponent, __assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\n    })); };\n    WithIntl.displayName = \"injectIntl(\".concat(getDisplayName(WrappedComponent), \")\");\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(\n        // @ts-expect-error\n        React.forwardRef(function (props, ref) { return (React.createElement(WithIntl, __assign({}, props, { forwardedRef: ref }))); }), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n","export var ErrorKind;\n(function (ErrorKind) {\n    /** Argument is unclosed (e.g. `{0`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_CLOSING_BRACE\"] = 1] = \"EXPECT_ARGUMENT_CLOSING_BRACE\";\n    /** Argument is empty (e.g. `{}`). */\n    ErrorKind[ErrorKind[\"EMPTY_ARGUMENT\"] = 2] = \"EMPTY_ARGUMENT\";\n    /** Argument is malformed (e.g. `{foo!}``) */\n    ErrorKind[ErrorKind[\"MALFORMED_ARGUMENT\"] = 3] = \"MALFORMED_ARGUMENT\";\n    /** Expect an argument type (e.g. `{foo,}`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_TYPE\"] = 4] = \"EXPECT_ARGUMENT_TYPE\";\n    /** Unsupported argument type (e.g. `{foo,foo}`) */\n    ErrorKind[ErrorKind[\"INVALID_ARGUMENT_TYPE\"] = 5] = \"INVALID_ARGUMENT_TYPE\";\n    /** Expect an argument style (e.g. `{foo, number, }`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_STYLE\"] = 6] = \"EXPECT_ARGUMENT_STYLE\";\n    /** The number skeleton is invalid. */\n    ErrorKind[ErrorKind[\"INVALID_NUMBER_SKELETON\"] = 7] = \"INVALID_NUMBER_SKELETON\";\n    /** The date time skeleton is invalid. */\n    ErrorKind[ErrorKind[\"INVALID_DATE_TIME_SKELETON\"] = 8] = \"INVALID_DATE_TIME_SKELETON\";\n    /** Exepct a number skeleton following the `::` (e.g. `{foo, number, ::}`) */\n    ErrorKind[ErrorKind[\"EXPECT_NUMBER_SKELETON\"] = 9] = \"EXPECT_NUMBER_SKELETON\";\n    /** Exepct a date time skeleton following the `::` (e.g. `{foo, date, ::}`) */\n    ErrorKind[ErrorKind[\"EXPECT_DATE_TIME_SKELETON\"] = 10] = \"EXPECT_DATE_TIME_SKELETON\";\n    /** Unmatched apostrophes in the argument style (e.g. `{foo, number, 'test`) */\n    ErrorKind[ErrorKind[\"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\"] = 11] = \"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\";\n    /** Missing select argument options (e.g. `{foo, select}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_OPTIONS\"] = 12] = \"EXPECT_SELECT_ARGUMENT_OPTIONS\";\n    /** Expecting an offset value in `plural` or `selectordinal` argument (e.g `{foo, plural, offset}`) */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 13] = \"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\";\n    /** Offset value in `plural` or `selectordinal` is invalid (e.g. `{foo, plural, offset: x}`) */\n    ErrorKind[ErrorKind[\"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 14] = \"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\";\n    /** Expecting a selector in `select` argument (e.g `{foo, select}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_SELECTOR\"] = 15] = \"EXPECT_SELECT_ARGUMENT_SELECTOR\";\n    /** Expecting a selector in `plural` or `selectordinal` argument (e.g `{foo, plural}`) */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_SELECTOR\"] = 16] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR\";\n    /** Expecting a message fragment after the `select` selector (e.g. `{foo, select, apple}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\"] = 17] = \"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\";\n    /**\n     * Expecting a message fragment after the `plural` or `selectordinal` selector\n     * (e.g. `{foo, plural, one}`)\n     */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\"] = 18] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\";\n    /** Selector in `plural` or `selectordinal` is malformed (e.g. `{foo, plural, =x {#}}`) */\n    ErrorKind[ErrorKind[\"INVALID_PLURAL_ARGUMENT_SELECTOR\"] = 19] = \"INVALID_PLURAL_ARGUMENT_SELECTOR\";\n    /**\n     * Duplicate selectors in `plural` or `selectordinal` argument.\n     * (e.g. {foo, plural, one {#} one {#}})\n     */\n    ErrorKind[ErrorKind[\"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\"] = 20] = \"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\";\n    /** Duplicate selectors in `select` argument.\n     * (e.g. {foo, select, apple {apple} apple {apple}})\n     */\n    ErrorKind[ErrorKind[\"DUPLICATE_SELECT_ARGUMENT_SELECTOR\"] = 21] = \"DUPLICATE_SELECT_ARGUMENT_SELECTOR\";\n    /** Plural or select argument option must have `other` clause. */\n    ErrorKind[ErrorKind[\"MISSING_OTHER_CLAUSE\"] = 22] = \"MISSING_OTHER_CLAUSE\";\n    /** The tag is malformed. (e.g. `<bold!>foo</bold!>) */\n    ErrorKind[ErrorKind[\"INVALID_TAG\"] = 23] = \"INVALID_TAG\";\n    /** The tag name is invalid. (e.g. `<123>foo</123>`) */\n    ErrorKind[ErrorKind[\"INVALID_TAG_NAME\"] = 25] = \"INVALID_TAG_NAME\";\n    /** The closing tag does not match the opening tag. (e.g. `<bold>foo</italic>`) */\n    ErrorKind[ErrorKind[\"UNMATCHED_CLOSING_TAG\"] = 26] = \"UNMATCHED_CLOSING_TAG\";\n    /** The opening tag has unmatched closing tag. (e.g. `<bold>foo`) */\n    ErrorKind[ErrorKind[\"UNCLOSED_TAG\"] = 27] = \"UNCLOSED_TAG\";\n})(ErrorKind || (ErrorKind = {}));\n","export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n    /**\n     * XML-like tag\n     */\n    TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE || (TYPE = {}));\nexport var SKELETON_TYPE;\n(function (SKELETON_TYPE) {\n    SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n    SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexport function isTagElement(el) {\n    return el.type === TYPE.tag;\n}\nexport function isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.number);\n}\nexport function isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.dateTime);\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n","// @generated from regex-gen.ts\nexport var SPACE_SEPARATOR_REGEX = /[ \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\nexport var WHITE_SPACE_REGEX = /[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/;\n","/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(skeleton) {\n    var result = {};\n    skeleton.replace(DATE_TIME_REGEX, function (match) {\n        var len = match.length;\n        switch (match[0]) {\n            // Era\n            case 'G':\n                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            // Year\n            case 'y':\n                result.year = len === 2 ? '2-digit' : 'numeric';\n                break;\n            case 'Y':\n            case 'u':\n            case 'U':\n            case 'r':\n                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\n            // Quarter\n            case 'q':\n            case 'Q':\n                throw new RangeError('`q/Q` (quarter) patterns are not supported');\n            // Month\n            case 'M':\n            case 'L':\n                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n                break;\n            // Week\n            case 'w':\n            case 'W':\n                throw new RangeError('`w/W` (week) patterns are not supported');\n            case 'd':\n                result.day = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'D':\n            case 'F':\n            case 'g':\n                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\n            // Weekday\n            case 'E':\n                result.weekday = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            case 'e':\n                if (len < 4) {\n                    throw new RangeError('`e..eee` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            case 'c':\n                if (len < 4) {\n                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            // Period\n            case 'a': // AM, PM\n                result.hour12 = true;\n                break;\n            case 'b': // am, pm, noon, midnight\n            case 'B': // flexible day periods\n                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\n            // Hour\n            case 'h':\n                result.hourCycle = 'h12';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'H':\n                result.hourCycle = 'h23';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'K':\n                result.hourCycle = 'h11';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'k':\n                result.hourCycle = 'h24';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'j':\n            case 'J':\n            case 'C':\n                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n            // Minute\n            case 'm':\n                result.minute = ['numeric', '2-digit'][len - 1];\n                break;\n            // Second\n            case 's':\n                result.second = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'S':\n            case 'A':\n                throw new RangeError('`S/A` (second) patterns are not supported, use `s` instead');\n            // Zone\n            case 'z': // 1..3, 4: specific non-location format\n                result.timeZoneName = len < 4 ? 'short' : 'long';\n                break;\n            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n            case 'O': // 1, 4: milliseconds in day short, long\n            case 'v': // 1, 4: generic non-location format\n            case 'V': // 1, 2, 3, 4: time zone ID or city\n            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n                throw new RangeError('`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead');\n        }\n        return '';\n    });\n    return result;\n}\n","// @generated from regex-gen.ts\nexport var WHITE_SPACE_REGEX = /[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/i;\n","import { __assign } from \"tslib\";\nimport { WHITE_SPACE_REGEX } from './regex.generated';\nexport function parseNumberSkeletonFromString(skeleton) {\n    if (skeleton.length === 0) {\n        throw new Error('Number skeleton cannot be empty');\n    }\n    // Parse the skeleton\n    var stringTokens = skeleton\n        .split(WHITE_SPACE_REGEX)\n        .filter(function (x) { return x.length > 0; });\n    var tokens = [];\n    for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {\n        var stringToken = stringTokens_1[_i];\n        var stemAndOptions = stringToken.split('/');\n        if (stemAndOptions.length === 0) {\n            throw new Error('Invalid number skeleton');\n        }\n        var stem = stemAndOptions[0], options = stemAndOptions.slice(1);\n        for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {\n            var option = options_1[_a];\n            if (option.length === 0) {\n                throw new Error('Invalid number skeleton');\n            }\n        }\n        tokens.push({ stem: stem, options: options });\n    }\n    return tokens;\n}\nfunction icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?[rs]?$/g;\nvar INTEGER_WIDTH_REGEX = /(\\*)(0+)|(#+)(0+)|(0+)/g;\nvar CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;\nfunction parseSignificantPrecision(str) {\n    var result = {};\n    if (str[str.length - 1] === 'r') {\n        result.roundingPriority = 'morePrecision';\n    }\n    else if (str[str.length - 1] === 's') {\n        result.roundingPriority = 'lessPrecision';\n    }\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n        // @@@ case\n        if (typeof g2 !== 'string') {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits = g1.length;\n        }\n        // @@@+ case\n        else if (g2 === '+') {\n            result.minimumSignificantDigits = g1.length;\n        }\n        // .### case\n        else if (g1[0] === '#') {\n            result.maximumSignificantDigits = g1.length;\n        }\n        // .@@## or .@@@ case\n        else {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits =\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\n        }\n        return '';\n    });\n    return result;\n}\nfunction parseSign(str) {\n    switch (str) {\n        case 'sign-auto':\n            return {\n                signDisplay: 'auto',\n            };\n        case 'sign-accounting':\n        case '()':\n            return {\n                currencySign: 'accounting',\n            };\n        case 'sign-always':\n        case '+!':\n            return {\n                signDisplay: 'always',\n            };\n        case 'sign-accounting-always':\n        case '()!':\n            return {\n                signDisplay: 'always',\n                currencySign: 'accounting',\n            };\n        case 'sign-except-zero':\n        case '+?':\n            return {\n                signDisplay: 'exceptZero',\n            };\n        case 'sign-accounting-except-zero':\n        case '()?':\n            return {\n                signDisplay: 'exceptZero',\n                currencySign: 'accounting',\n            };\n        case 'sign-never':\n        case '+_':\n            return {\n                signDisplay: 'never',\n            };\n    }\n}\nfunction parseConciseScientificAndEngineeringStem(stem) {\n    // Engineering\n    var result;\n    if (stem[0] === 'E' && stem[1] === 'E') {\n        result = {\n            notation: 'engineering',\n        };\n        stem = stem.slice(2);\n    }\n    else if (stem[0] === 'E') {\n        result = {\n            notation: 'scientific',\n        };\n        stem = stem.slice(1);\n    }\n    if (result) {\n        var signDisplay = stem.slice(0, 2);\n        if (signDisplay === '+!') {\n            result.signDisplay = 'always';\n            stem = stem.slice(2);\n        }\n        else if (signDisplay === '+?') {\n            result.signDisplay = 'exceptZero';\n            stem = stem.slice(2);\n        }\n        if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {\n            throw new Error('Malformed concise eng/scientific notation');\n        }\n        result.minimumIntegerDigits = stem.length;\n    }\n    return result;\n}\nfunction parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n        return signOpts;\n    }\n    return result;\n}\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nexport function parseNumberSkeleton(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        switch (token.stem) {\n            case 'percent':\n            case '%':\n                result.style = 'percent';\n                continue;\n            case '%x100':\n                result.style = 'percent';\n                result.scale = 100;\n                continue;\n            case 'currency':\n                result.style = 'currency';\n                result.currency = token.options[0];\n                continue;\n            case 'group-off':\n            case ',_':\n                result.useGrouping = false;\n                continue;\n            case 'precision-integer':\n            case '.':\n                result.maximumFractionDigits = 0;\n                continue;\n            case 'measure-unit':\n            case 'unit':\n                result.style = 'unit';\n                result.unit = icuUnitToEcma(token.options[0]);\n                continue;\n            case 'compact-short':\n            case 'K':\n                result.notation = 'compact';\n                result.compactDisplay = 'short';\n                continue;\n            case 'compact-long':\n            case 'KK':\n                result.notation = 'compact';\n                result.compactDisplay = 'long';\n                continue;\n            case 'scientific':\n                result = __assign(__assign(__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'engineering':\n                result = __assign(__assign(__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'notation-simple':\n                result.notation = 'standard';\n                continue;\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n            case 'unit-width-narrow':\n                result.currencyDisplay = 'narrowSymbol';\n                result.unitDisplay = 'narrow';\n                continue;\n            case 'unit-width-short':\n                result.currencyDisplay = 'code';\n                result.unitDisplay = 'short';\n                continue;\n            case 'unit-width-full-name':\n                result.currencyDisplay = 'name';\n                result.unitDisplay = 'long';\n                continue;\n            case 'unit-width-iso-code':\n                result.currencyDisplay = 'symbol';\n                continue;\n            case 'scale':\n                result.scale = parseFloat(token.options[0]);\n                continue;\n            case 'rounding-mode-floor':\n                result.roundingMode = 'floor';\n                continue;\n            case 'rounding-mode-ceiling':\n                result.roundingMode = 'ceil';\n                continue;\n            case 'rounding-mode-down':\n                result.roundingMode = 'trunc';\n                continue;\n            case 'rounding-mode-up':\n                result.roundingMode = 'expand';\n                continue;\n            case 'rounding-mode-half-even':\n                result.roundingMode = 'halfEven';\n                continue;\n            case 'rounding-mode-half-down':\n                result.roundingMode = 'halfTrunc';\n                continue;\n            case 'rounding-mode-half-up':\n                result.roundingMode = 'halfExpand';\n                continue;\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width\n            case 'integer-width':\n                if (token.options.length > 1) {\n                    throw new RangeError('integer-width stems only accept a single optional option');\n                }\n                token.options[0].replace(INTEGER_WIDTH_REGEX, function (_, g1, g2, g3, g4, g5) {\n                    if (g1) {\n                        result.minimumIntegerDigits = g2.length;\n                    }\n                    else if (g3 && g4) {\n                        throw new Error('We currently do not support maximum integer digits');\n                    }\n                    else if (g5) {\n                        throw new Error('We currently do not support exact integer digits');\n                    }\n                    return '';\n                });\n                continue;\n        }\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width\n        if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {\n            result.minimumIntegerDigits = token.stem.length;\n            continue;\n        }\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n            // Precision\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#fraction-precision\n            // precision-integer case\n            if (token.options.length > 1) {\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\n            }\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {\n                // .000* case (before ICU67 it was .000+)\n                if (g2 === '*') {\n                    result.minimumFractionDigits = g1.length;\n                }\n                // .### case\n                else if (g3 && g3[0] === '#') {\n                    result.maximumFractionDigits = g3.length;\n                }\n                // .00## case\n                else if (g4 && g5) {\n                    result.minimumFractionDigits = g4.length;\n                    result.maximumFractionDigits = g4.length + g5.length;\n                }\n                else {\n                    result.minimumFractionDigits = g1.length;\n                    result.maximumFractionDigits = g1.length;\n                }\n                return '';\n            });\n            var opt = token.options[0];\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#trailing-zero-display\n            if (opt === 'w') {\n                result = __assign(__assign({}, result), { trailingZeroDisplay: 'stripIfInteger' });\n            }\n            else if (opt) {\n                result = __assign(__assign({}, result), parseSignificantPrecision(opt));\n            }\n            continue;\n        }\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#significant-digits-precision\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n            result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));\n            continue;\n        }\n        var signOpts = parseSign(token.stem);\n        if (signOpts) {\n            result = __assign(__assign({}, result), signOpts);\n        }\n        var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);\n        if (conciseScientificAndEngineeringOpts) {\n            result = __assign(__assign({}, result), conciseScientificAndEngineeringOpts);\n        }\n    }\n    return result;\n}\n","// @generated from time-data-gen.ts\n// prettier-ignore  \nexport var timeData = {\n    \"001\": [\n        \"H\",\n        \"h\"\n    ],\n    \"419\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"AC\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"AD\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"AE\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"AF\": [\n        \"H\",\n        \"hb\",\n        \"hB\",\n        \"h\"\n    ],\n    \"AG\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"AI\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"AL\": [\n        \"h\",\n        \"H\",\n        \"hB\"\n    ],\n    \"AM\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"AO\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"AR\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"AS\": [\n        \"h\",\n        \"H\"\n    ],\n    \"AT\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"AU\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"AW\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"AX\": [\n        \"H\"\n    ],\n    \"AZ\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"BA\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"BB\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"BD\": [\n        \"h\",\n        \"hB\",\n        \"H\"\n    ],\n    \"BE\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"BF\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"BG\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"BH\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"BI\": [\n        \"H\",\n        \"h\"\n    ],\n    \"BJ\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"BL\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"BM\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"BN\": [\n        \"hb\",\n        \"hB\",\n        \"h\",\n        \"H\"\n    ],\n    \"BO\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"BQ\": [\n        \"H\"\n    ],\n    \"BR\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"BS\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"BT\": [\n        \"h\",\n        \"H\"\n    ],\n    \"BW\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"BY\": [\n        \"H\",\n        \"h\"\n    ],\n    \"BZ\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"CA\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"CC\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"CD\": [\n        \"hB\",\n        \"H\"\n    ],\n    \"CF\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"CG\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"CH\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"CI\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"CK\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"CL\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"CM\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"CN\": [\n        \"H\",\n        \"hB\",\n        \"hb\",\n        \"h\"\n    ],\n    \"CO\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"CP\": [\n        \"H\"\n    ],\n    \"CR\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"CU\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"CV\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"CW\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"CX\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"CY\": [\n        \"h\",\n        \"H\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"CZ\": [\n        \"H\"\n    ],\n    \"DE\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"DG\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"DJ\": [\n        \"h\",\n        \"H\"\n    ],\n    \"DK\": [\n        \"H\"\n    ],\n    \"DM\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"DO\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"DZ\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"EA\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"EC\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"EE\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"EG\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"EH\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"ER\": [\n        \"h\",\n        \"H\"\n    ],\n    \"ES\": [\n        \"H\",\n        \"hB\",\n        \"h\",\n        \"hb\"\n    ],\n    \"ET\": [\n        \"hB\",\n        \"hb\",\n        \"h\",\n        \"H\"\n    ],\n    \"FI\": [\n        \"H\"\n    ],\n    \"FJ\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"FK\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"FM\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"FO\": [\n        \"H\",\n        \"h\"\n    ],\n    \"FR\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"GA\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"GB\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"GD\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"GE\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"GF\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"GG\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"GH\": [\n        \"h\",\n        \"H\"\n    ],\n    \"GI\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"GL\": [\n        \"H\",\n        \"h\"\n    ],\n    \"GM\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"GN\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"GP\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"GQ\": [\n        \"H\",\n        \"hB\",\n        \"h\",\n        \"hb\"\n    ],\n    \"GR\": [\n        \"h\",\n        \"H\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"GT\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"GU\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"GW\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"GY\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"HK\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"HN\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"HR\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"HU\": [\n        \"H\",\n        \"h\"\n    ],\n    \"IC\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"ID\": [\n        \"H\"\n    ],\n    \"IE\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"IL\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"IM\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"IN\": [\n        \"h\",\n        \"H\"\n    ],\n    \"IO\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"IQ\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"IR\": [\n        \"hB\",\n        \"H\"\n    ],\n    \"IS\": [\n        \"H\"\n    ],\n    \"IT\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"JE\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"JM\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"JO\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"JP\": [\n        \"H\",\n        \"K\",\n        \"h\"\n    ],\n    \"KE\": [\n        \"hB\",\n        \"hb\",\n        \"H\",\n        \"h\"\n    ],\n    \"KG\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"KH\": [\n        \"hB\",\n        \"h\",\n        \"H\",\n        \"hb\"\n    ],\n    \"KI\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"KM\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"KN\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"KP\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"KR\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"KW\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"KY\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"KZ\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"LA\": [\n        \"H\",\n        \"hb\",\n        \"hB\",\n        \"h\"\n    ],\n    \"LB\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"LC\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"LI\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"LK\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"LR\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"LS\": [\n        \"h\",\n        \"H\"\n    ],\n    \"LT\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"LU\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"LV\": [\n        \"H\",\n        \"hB\",\n        \"hb\",\n        \"h\"\n    ],\n    \"LY\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"MA\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"MC\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"MD\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"ME\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"MF\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"MG\": [\n        \"H\",\n        \"h\"\n    ],\n    \"MH\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"MK\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"ML\": [\n        \"H\"\n    ],\n    \"MM\": [\n        \"hB\",\n        \"hb\",\n        \"H\",\n        \"h\"\n    ],\n    \"MN\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"MO\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"MP\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"MQ\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"MR\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"MS\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"MT\": [\n        \"H\",\n        \"h\"\n    ],\n    \"MU\": [\n        \"H\",\n        \"h\"\n    ],\n    \"MV\": [\n        \"H\",\n        \"h\"\n    ],\n    \"MW\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"MX\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"MY\": [\n        \"hb\",\n        \"hB\",\n        \"h\",\n        \"H\"\n    ],\n    \"MZ\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"NA\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"NC\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"NE\": [\n        \"H\"\n    ],\n    \"NF\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"NG\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"NI\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"NL\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"NO\": [\n        \"H\",\n        \"h\"\n    ],\n    \"NP\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"NR\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"NU\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"NZ\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"OM\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"PA\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"PE\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"PF\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"PG\": [\n        \"h\",\n        \"H\"\n    ],\n    \"PH\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"PK\": [\n        \"h\",\n        \"hB\",\n        \"H\"\n    ],\n    \"PL\": [\n        \"H\",\n        \"h\"\n    ],\n    \"PM\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"PN\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"PR\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"PS\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"PT\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"PW\": [\n        \"h\",\n        \"H\"\n    ],\n    \"PY\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"QA\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"RE\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"RO\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"RS\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"RU\": [\n        \"H\"\n    ],\n    \"RW\": [\n        \"H\",\n        \"h\"\n    ],\n    \"SA\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"SB\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"SC\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"SD\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"SE\": [\n        \"H\"\n    ],\n    \"SG\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"SH\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"SI\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"SJ\": [\n        \"H\"\n    ],\n    \"SK\": [\n        \"H\"\n    ],\n    \"SL\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"SM\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"SN\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"SO\": [\n        \"h\",\n        \"H\"\n    ],\n    \"SR\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"SS\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"ST\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"SV\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"SX\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"SY\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"SZ\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"TA\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"TC\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"TD\": [\n        \"h\",\n        \"H\",\n        \"hB\"\n    ],\n    \"TF\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"TG\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"TH\": [\n        \"H\",\n        \"h\"\n    ],\n    \"TJ\": [\n        \"H\",\n        \"h\"\n    ],\n    \"TL\": [\n        \"H\",\n        \"hB\",\n        \"hb\",\n        \"h\"\n    ],\n    \"TM\": [\n        \"H\",\n        \"h\"\n    ],\n    \"TN\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"TO\": [\n        \"h\",\n        \"H\"\n    ],\n    \"TR\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"TT\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"TW\": [\n        \"hB\",\n        \"hb\",\n        \"h\",\n        \"H\"\n    ],\n    \"TZ\": [\n        \"hB\",\n        \"hb\",\n        \"H\",\n        \"h\"\n    ],\n    \"UA\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"UG\": [\n        \"hB\",\n        \"hb\",\n        \"H\",\n        \"h\"\n    ],\n    \"UM\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"US\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"UY\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"UZ\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"VA\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"VC\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"VE\": [\n        \"h\",\n        \"H\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"VG\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"VI\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"VN\": [\n        \"H\",\n        \"h\"\n    ],\n    \"VU\": [\n        \"h\",\n        \"H\"\n    ],\n    \"WF\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"WS\": [\n        \"h\",\n        \"H\"\n    ],\n    \"XK\": [\n        \"H\",\n        \"hB\",\n        \"h\"\n    ],\n    \"YE\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"YT\": [\n        \"H\",\n        \"hB\"\n    ],\n    \"ZA\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"ZM\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"ZW\": [\n        \"H\",\n        \"h\"\n    ],\n    \"af-ZA\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"ar-001\": [\n        \"h\",\n        \"hB\",\n        \"hb\",\n        \"H\"\n    ],\n    \"ca-ES\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"en-001\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"en-HK\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"en-IL\": [\n        \"H\",\n        \"h\",\n        \"hb\",\n        \"hB\"\n    ],\n    \"en-MY\": [\n        \"h\",\n        \"hb\",\n        \"H\",\n        \"hB\"\n    ],\n    \"es-BR\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"es-ES\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"es-GQ\": [\n        \"H\",\n        \"h\",\n        \"hB\",\n        \"hb\"\n    ],\n    \"fr-CA\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"gl-ES\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"gu-IN\": [\n        \"hB\",\n        \"hb\",\n        \"h\",\n        \"H\"\n    ],\n    \"hi-IN\": [\n        \"hB\",\n        \"h\",\n        \"H\"\n    ],\n    \"it-CH\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"it-IT\": [\n        \"H\",\n        \"h\",\n        \"hB\"\n    ],\n    \"kn-IN\": [\n        \"hB\",\n        \"h\",\n        \"H\"\n    ],\n    \"ml-IN\": [\n        \"hB\",\n        \"h\",\n        \"H\"\n    ],\n    \"mr-IN\": [\n        \"hB\",\n        \"hb\",\n        \"h\",\n        \"H\"\n    ],\n    \"pa-IN\": [\n        \"hB\",\n        \"hb\",\n        \"h\",\n        \"H\"\n    ],\n    \"ta-IN\": [\n        \"hB\",\n        \"h\",\n        \"hb\",\n        \"H\"\n    ],\n    \"te-IN\": [\n        \"hB\",\n        \"h\",\n        \"H\"\n    ],\n    \"zu-ZA\": [\n        \"H\",\n        \"hB\",\n        \"hb\",\n        \"h\"\n    ]\n};\n","var _a;\nimport { __assign } from \"tslib\";\nimport { ErrorKind } from './error';\nimport { SKELETON_TYPE, TYPE, } from './types';\nimport { SPACE_SEPARATOR_REGEX } from './regex.generated';\nimport { parseNumberSkeleton, parseNumberSkeletonFromString, parseDateTimeSkeleton, } from '@formatjs/icu-skeleton-parser';\nimport { getBestPattern } from './date-time-pattern-generator';\nvar SPACE_SEPARATOR_START_REGEX = new RegExp(\"^\".concat(SPACE_SEPARATOR_REGEX.source, \"*\"));\nvar SPACE_SEPARATOR_END_REGEX = new RegExp(\"\".concat(SPACE_SEPARATOR_REGEX.source, \"*$\"));\nfunction createLocation(start, end) {\n    return { start: start, end: end };\n}\n// #region Ponyfills\n// Consolidate these variables up top for easier toggling during debugging\nvar hasNativeStartsWith = !!String.prototype.startsWith && '_a'.startsWith('a', 1);\nvar hasNativeFromCodePoint = !!String.fromCodePoint;\nvar hasNativeFromEntries = !!Object.fromEntries;\nvar hasNativeCodePointAt = !!String.prototype.codePointAt;\nvar hasTrimStart = !!String.prototype.trimStart;\nvar hasTrimEnd = !!String.prototype.trimEnd;\nvar hasNativeIsSafeInteger = !!Number.isSafeInteger;\nvar isSafeInteger = hasNativeIsSafeInteger\n    ? Number.isSafeInteger\n    : function (n) {\n        return (typeof n === 'number' &&\n            isFinite(n) &&\n            Math.floor(n) === n &&\n            Math.abs(n) <= 0x1fffffffffffff);\n    };\n// IE11 does not support y and u.\nvar REGEX_SUPPORTS_U_AND_Y = true;\ntry {\n    var re = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n    /**\n     * legacy Edge or Xbox One browser\n     * Unicode flag support: supported\n     * Pattern_Syntax support: not supported\n     * See https://github.com/formatjs/formatjs/issues/2822\n     */\n    REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec('a')) === null || _a === void 0 ? void 0 : _a[0]) === 'a';\n}\ncatch (_) {\n    REGEX_SUPPORTS_U_AND_Y = false;\n}\nvar startsWith = hasNativeStartsWith\n    ? // Native\n        function startsWith(s, search, position) {\n            return s.startsWith(search, position);\n        }\n    : // For IE11\n        function startsWith(s, search, position) {\n            return s.slice(position, position + search.length) === search;\n        };\nvar fromCodePoint = hasNativeFromCodePoint\n    ? String.fromCodePoint\n    : // IE11\n        function fromCodePoint() {\n            var codePoints = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                codePoints[_i] = arguments[_i];\n            }\n            var elements = '';\n            var length = codePoints.length;\n            var i = 0;\n            var code;\n            while (length > i) {\n                code = codePoints[i++];\n                if (code > 0x10ffff)\n                    throw RangeError(code + ' is not a valid code point');\n                elements +=\n                    code < 0x10000\n                        ? String.fromCharCode(code)\n                        : String.fromCharCode(((code -= 0x10000) >> 10) + 0xd800, (code % 0x400) + 0xdc00);\n            }\n            return elements;\n        };\nvar fromEntries = \n// native\nhasNativeFromEntries\n    ? Object.fromEntries\n    : // Ponyfill\n        function fromEntries(entries) {\n            var obj = {};\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n                var _a = entries_1[_i], k = _a[0], v = _a[1];\n                obj[k] = v;\n            }\n            return obj;\n        };\nvar codePointAt = hasNativeCodePointAt\n    ? // Native\n        function codePointAt(s, index) {\n            return s.codePointAt(index);\n        }\n    : // IE 11\n        function codePointAt(s, index) {\n            var size = s.length;\n            if (index < 0 || index >= size) {\n                return undefined;\n            }\n            var first = s.charCodeAt(index);\n            var second;\n            return first < 0xd800 ||\n                first > 0xdbff ||\n                index + 1 === size ||\n                (second = s.charCodeAt(index + 1)) < 0xdc00 ||\n                second > 0xdfff\n                ? first\n                : ((first - 0xd800) << 10) + (second - 0xdc00) + 0x10000;\n        };\nvar trimStart = hasTrimStart\n    ? // Native\n        function trimStart(s) {\n            return s.trimStart();\n        }\n    : // Ponyfill\n        function trimStart(s) {\n            return s.replace(SPACE_SEPARATOR_START_REGEX, '');\n        };\nvar trimEnd = hasTrimEnd\n    ? // Native\n        function trimEnd(s) {\n            return s.trimEnd();\n        }\n    : // Ponyfill\n        function trimEnd(s) {\n            return s.replace(SPACE_SEPARATOR_END_REGEX, '');\n        };\n// Prevent minifier to translate new RegExp to literal form that might cause syntax error on IE11.\nfunction RE(s, flag) {\n    return new RegExp(s, flag);\n}\n// #endregion\nvar matchIdentifierAtIndex;\nif (REGEX_SUPPORTS_U_AND_Y) {\n    // Native\n    var IDENTIFIER_PREFIX_RE_1 = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n        var _a;\n        IDENTIFIER_PREFIX_RE_1.lastIndex = index;\n        var match = IDENTIFIER_PREFIX_RE_1.exec(s);\n        return (_a = match[1]) !== null && _a !== void 0 ? _a : '';\n    };\n}\nelse {\n    // IE11\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n        var match = [];\n        while (true) {\n            var c = codePointAt(s, index);\n            if (c === undefined || _isWhiteSpace(c) || _isPatternSyntax(c)) {\n                break;\n            }\n            match.push(c);\n            index += c >= 0x10000 ? 2 : 1;\n        }\n        return fromCodePoint.apply(void 0, match);\n    };\n}\nvar Parser = /** @class */ (function () {\n    function Parser(message, options) {\n        if (options === void 0) { options = {}; }\n        this.message = message;\n        this.position = { offset: 0, line: 1, column: 1 };\n        this.ignoreTag = !!options.ignoreTag;\n        this.locale = options.locale;\n        this.requiresOtherClause = !!options.requiresOtherClause;\n        this.shouldParseSkeletons = !!options.shouldParseSkeletons;\n    }\n    Parser.prototype.parse = function () {\n        if (this.offset() !== 0) {\n            throw Error('parser can only be used once');\n        }\n        return this.parseMessage(0, '', false);\n    };\n    Parser.prototype.parseMessage = function (nestingLevel, parentArgType, expectingCloseTag) {\n        var elements = [];\n        while (!this.isEOF()) {\n            var char = this.char();\n            if (char === 123 /* `{` */) {\n                var result = this.parseArgument(nestingLevel, expectingCloseTag);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n            else if (char === 125 /* `}` */ && nestingLevel > 0) {\n                break;\n            }\n            else if (char === 35 /* `#` */ &&\n                (parentArgType === 'plural' || parentArgType === 'selectordinal')) {\n                var position = this.clonePosition();\n                this.bump();\n                elements.push({\n                    type: TYPE.pound,\n                    location: createLocation(position, this.clonePosition()),\n                });\n            }\n            else if (char === 60 /* `<` */ &&\n                !this.ignoreTag &&\n                this.peek() === 47 // char code for '/'\n            ) {\n                if (expectingCloseTag) {\n                    break;\n                }\n                else {\n                    return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));\n                }\n            }\n            else if (char === 60 /* `<` */ &&\n                !this.ignoreTag &&\n                _isAlpha(this.peek() || 0)) {\n                var result = this.parseTag(nestingLevel, parentArgType);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n            else {\n                var result = this.parseLiteral(nestingLevel, parentArgType);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n        }\n        return { val: elements, err: null };\n    };\n    /**\n     * A tag name must start with an ASCII lower/upper case letter. The grammar is based on the\n     * [custom element name][] except that a dash is NOT always mandatory and uppercase letters\n     * are accepted:\n     *\n     * ```\n     * tag ::= \"<\" tagName (whitespace)* \"/>\" | \"<\" tagName (whitespace)* \">\" message \"</\" tagName (whitespace)* \">\"\n     * tagName ::= [a-z] (PENChar)*\n     * PENChar ::=\n     *     \"-\" | \".\" | [0-9] | \"_\" | [a-z] | [A-Z] | #xB7 | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x37D] |\n     *     [#x37F-#x1FFF] | [#x200C-#x200D] | [#x203F-#x2040] | [#x2070-#x218F] | [#x2C00-#x2FEF] |\n     *     [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n     * ```\n     *\n     * [custom element name]: https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\n     * NOTE: We're a bit more lax here since HTML technically does not allow uppercase HTML element but we do\n     * since other tag-based engines like React allow it\n     */\n    Parser.prototype.parseTag = function (nestingLevel, parentArgType) {\n        var startPosition = this.clonePosition();\n        this.bump(); // `<`\n        var tagName = this.parseTagName();\n        this.bumpSpace();\n        if (this.bumpIf('/>')) {\n            // Self closing tag\n            return {\n                val: {\n                    type: TYPE.literal,\n                    value: \"<\".concat(tagName, \"/>\"),\n                    location: createLocation(startPosition, this.clonePosition()),\n                },\n                err: null,\n            };\n        }\n        else if (this.bumpIf('>')) {\n            var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);\n            if (childrenResult.err) {\n                return childrenResult;\n            }\n            var children = childrenResult.val;\n            // Expecting a close tag\n            var endTagStartPosition = this.clonePosition();\n            if (this.bumpIf('</')) {\n                if (this.isEOF() || !_isAlpha(this.char())) {\n                    return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n                }\n                var closingTagNameStartPosition = this.clonePosition();\n                var closingTagName = this.parseTagName();\n                if (tagName !== closingTagName) {\n                    return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));\n                }\n                this.bumpSpace();\n                if (!this.bumpIf('>')) {\n                    return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n                }\n                return {\n                    val: {\n                        type: TYPE.tag,\n                        value: tagName,\n                        children: children,\n                        location: createLocation(startPosition, this.clonePosition()),\n                    },\n                    err: null,\n                };\n            }\n            else {\n                return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));\n            }\n        }\n        else {\n            return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));\n        }\n    };\n    /**\n     * This method assumes that the caller has peeked ahead for the first tag character.\n     */\n    Parser.prototype.parseTagName = function () {\n        var startOffset = this.offset();\n        this.bump(); // the first tag name character\n        while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {\n            this.bump();\n        }\n        return this.message.slice(startOffset, this.offset());\n    };\n    Parser.prototype.parseLiteral = function (nestingLevel, parentArgType) {\n        var start = this.clonePosition();\n        var value = '';\n        while (true) {\n            var parseQuoteResult = this.tryParseQuote(parentArgType);\n            if (parseQuoteResult) {\n                value += parseQuoteResult;\n                continue;\n            }\n            var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);\n            if (parseUnquotedResult) {\n                value += parseUnquotedResult;\n                continue;\n            }\n            var parseLeftAngleResult = this.tryParseLeftAngleBracket();\n            if (parseLeftAngleResult) {\n                value += parseLeftAngleResult;\n                continue;\n            }\n            break;\n        }\n        var location = createLocation(start, this.clonePosition());\n        return {\n            val: { type: TYPE.literal, value: value, location: location },\n            err: null,\n        };\n    };\n    Parser.prototype.tryParseLeftAngleBracket = function () {\n        if (!this.isEOF() &&\n            this.char() === 60 /* `<` */ &&\n            (this.ignoreTag ||\n                // If at the opening tag or closing tag position, bail.\n                !_isAlphaOrSlash(this.peek() || 0))) {\n            this.bump(); // `<`\n            return '<';\n        }\n        return null;\n    };\n    /**\n     * Starting with ICU 4.8, an ASCII apostrophe only starts quoted text if it immediately precedes\n     * a character that requires quoting (that is, \"only where needed\"), and works the same in\n     * nested messages as on the top level of the pattern. The new behavior is otherwise compatible.\n     */\n    Parser.prototype.tryParseQuote = function (parentArgType) {\n        if (this.isEOF() || this.char() !== 39 /* `'` */) {\n            return null;\n        }\n        // Parse escaped char following the apostrophe, or early return if there is no escaped char.\n        // Check if is valid escaped character\n        switch (this.peek()) {\n            case 39 /* `'` */:\n                // double quote, should return as a single quote.\n                this.bump();\n                this.bump();\n                return \"'\";\n            // '{', '<', '>', '}'\n            case 123:\n            case 60:\n            case 62:\n            case 125:\n                break;\n            case 35: // '#'\n                if (parentArgType === 'plural' || parentArgType === 'selectordinal') {\n                    break;\n                }\n                return null;\n            default:\n                return null;\n        }\n        this.bump(); // apostrophe\n        var codePoints = [this.char()]; // escaped char\n        this.bump();\n        // read chars until the optional closing apostrophe is found\n        while (!this.isEOF()) {\n            var ch = this.char();\n            if (ch === 39 /* `'` */) {\n                if (this.peek() === 39 /* `'` */) {\n                    codePoints.push(39);\n                    // Bump one more time because we need to skip 2 characters.\n                    this.bump();\n                }\n                else {\n                    // Optional closing apostrophe.\n                    this.bump();\n                    break;\n                }\n            }\n            else {\n                codePoints.push(ch);\n            }\n            this.bump();\n        }\n        return fromCodePoint.apply(void 0, codePoints);\n    };\n    Parser.prototype.tryParseUnquoted = function (nestingLevel, parentArgType) {\n        if (this.isEOF()) {\n            return null;\n        }\n        var ch = this.char();\n        if (ch === 60 /* `<` */ ||\n            ch === 123 /* `{` */ ||\n            (ch === 35 /* `#` */ &&\n                (parentArgType === 'plural' || parentArgType === 'selectordinal')) ||\n            (ch === 125 /* `}` */ && nestingLevel > 0)) {\n            return null;\n        }\n        else {\n            this.bump();\n            return fromCodePoint(ch);\n        }\n    };\n    Parser.prototype.parseArgument = function (nestingLevel, expectingCloseTag) {\n        var openingBracePosition = this.clonePosition();\n        this.bump(); // `{`\n        this.bumpSpace();\n        if (this.isEOF()) {\n            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        if (this.char() === 125 /* `}` */) {\n            this.bump();\n            return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        // argument name\n        var value = this.parseIdentifierIfPossible().value;\n        if (!value) {\n            return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        this.bumpSpace();\n        if (this.isEOF()) {\n            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        switch (this.char()) {\n            // Simple argument: `{name}`\n            case 125 /* `}` */: {\n                this.bump(); // `}`\n                return {\n                    val: {\n                        type: TYPE.argument,\n                        // value does not include the opening and closing braces.\n                        value: value,\n                        location: createLocation(openingBracePosition, this.clonePosition()),\n                    },\n                    err: null,\n                };\n            }\n            // Argument with options: `{name, format, ...}`\n            case 44 /* `,` */: {\n                this.bump(); // `,`\n                this.bumpSpace();\n                if (this.isEOF()) {\n                    return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n                }\n                return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);\n            }\n            default:\n                return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n    };\n    /**\n     * Advance the parser until the end of the identifier, if it is currently on\n     * an identifier character. Return an empty string otherwise.\n     */\n    Parser.prototype.parseIdentifierIfPossible = function () {\n        var startingPosition = this.clonePosition();\n        var startOffset = this.offset();\n        var value = matchIdentifierAtIndex(this.message, startOffset);\n        var endOffset = startOffset + value.length;\n        this.bumpTo(endOffset);\n        var endPosition = this.clonePosition();\n        var location = createLocation(startingPosition, endPosition);\n        return { value: value, location: location };\n    };\n    Parser.prototype.parseArgumentOptions = function (nestingLevel, expectingCloseTag, value, openingBracePosition) {\n        var _a;\n        // Parse this range:\n        // {name, type, style}\n        //        ^---^\n        var typeStartPosition = this.clonePosition();\n        var argType = this.parseIdentifierIfPossible().value;\n        var typeEndPosition = this.clonePosition();\n        switch (argType) {\n            case '':\n                // Expecting a style string number, date, time, plural, selectordinal, or select.\n                return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n            case 'number':\n            case 'date':\n            case 'time': {\n                // Parse this range:\n                // {name, number, style}\n                //              ^-------^\n                this.bumpSpace();\n                var styleAndLocation = null;\n                if (this.bumpIf(',')) {\n                    this.bumpSpace();\n                    var styleStartPosition = this.clonePosition();\n                    var result = this.parseSimpleArgStyleIfPossible();\n                    if (result.err) {\n                        return result;\n                    }\n                    var style = trimEnd(result.val);\n                    if (style.length === 0) {\n                        return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));\n                    }\n                    var styleLocation = createLocation(styleStartPosition, this.clonePosition());\n                    styleAndLocation = { style: style, styleLocation: styleLocation };\n                }\n                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n                if (argCloseResult.err) {\n                    return argCloseResult;\n                }\n                var location_1 = createLocation(openingBracePosition, this.clonePosition());\n                // Extract style or skeleton\n                if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, '::', 0)) {\n                    // Skeleton starts with `::`.\n                    var skeleton = trimStart(styleAndLocation.style.slice(2));\n                    if (argType === 'number') {\n                        var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);\n                        if (result.err) {\n                            return result;\n                        }\n                        return {\n                            val: { type: TYPE.number, value: value, location: location_1, style: result.val },\n                            err: null,\n                        };\n                    }\n                    else {\n                        if (skeleton.length === 0) {\n                            return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);\n                        }\n                        var dateTimePattern = skeleton;\n                        // Get \"best match\" pattern only if locale is passed, if not, let it\n                        // pass as-is where `parseDateTimeSkeleton()` will throw an error\n                        // for unsupported patterns.\n                        if (this.locale) {\n                            dateTimePattern = getBestPattern(skeleton, this.locale);\n                        }\n                        var style = {\n                            type: SKELETON_TYPE.dateTime,\n                            pattern: dateTimePattern,\n                            location: styleAndLocation.styleLocation,\n                            parsedOptions: this.shouldParseSkeletons\n                                ? parseDateTimeSkeleton(dateTimePattern)\n                                : {},\n                        };\n                        var type = argType === 'date' ? TYPE.date : TYPE.time;\n                        return {\n                            val: { type: type, value: value, location: location_1, style: style },\n                            err: null,\n                        };\n                    }\n                }\n                // Regular style or no style.\n                return {\n                    val: {\n                        type: argType === 'number'\n                            ? TYPE.number\n                            : argType === 'date'\n                                ? TYPE.date\n                                : TYPE.time,\n                        value: value,\n                        location: location_1,\n                        style: (_a = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a !== void 0 ? _a : null,\n                    },\n                    err: null,\n                };\n            }\n            case 'plural':\n            case 'selectordinal':\n            case 'select': {\n                // Parse this range:\n                // {name, plural, options}\n                //              ^---------^\n                var typeEndPosition_1 = this.clonePosition();\n                this.bumpSpace();\n                if (!this.bumpIf(',')) {\n                    return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign({}, typeEndPosition_1)));\n                }\n                this.bumpSpace();\n                // Parse offset:\n                // {name, plural, offset:1, options}\n                //                ^-----^\n                //\n                // or the first option:\n                //\n                // {name, plural, one {...} other {...}}\n                //                ^--^\n                var identifierAndLocation = this.parseIdentifierIfPossible();\n                var pluralOffset = 0;\n                if (argType !== 'select' && identifierAndLocation.value === 'offset') {\n                    if (!this.bumpIf(':')) {\n                        return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));\n                    }\n                    this.bumpSpace();\n                    var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);\n                    if (result.err) {\n                        return result;\n                    }\n                    // Parse another identifier for option parsing\n                    this.bumpSpace();\n                    identifierAndLocation = this.parseIdentifierIfPossible();\n                    pluralOffset = result.val;\n                }\n                var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);\n                if (optionsResult.err) {\n                    return optionsResult;\n                }\n                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n                if (argCloseResult.err) {\n                    return argCloseResult;\n                }\n                var location_2 = createLocation(openingBracePosition, this.clonePosition());\n                if (argType === 'select') {\n                    return {\n                        val: {\n                            type: TYPE.select,\n                            value: value,\n                            options: fromEntries(optionsResult.val),\n                            location: location_2,\n                        },\n                        err: null,\n                    };\n                }\n                else {\n                    return {\n                        val: {\n                            type: TYPE.plural,\n                            value: value,\n                            options: fromEntries(optionsResult.val),\n                            offset: pluralOffset,\n                            pluralType: argType === 'plural' ? 'cardinal' : 'ordinal',\n                            location: location_2,\n                        },\n                        err: null,\n                    };\n                }\n            }\n            default:\n                return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n        }\n    };\n    Parser.prototype.tryParseArgumentClose = function (openingBracePosition) {\n        // Parse: {value, number, ::currency/GBP }\n        //\n        if (this.isEOF() || this.char() !== 125 /* `}` */) {\n            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        this.bump(); // `}`\n        return { val: true, err: null };\n    };\n    /**\n     * See: https://github.com/unicode-org/icu/blob/af7ed1f6d2298013dc303628438ec4abe1f16479/icu4c/source/common/messagepattern.cpp#L659\n     */\n    Parser.prototype.parseSimpleArgStyleIfPossible = function () {\n        var nestedBraces = 0;\n        var startPosition = this.clonePosition();\n        while (!this.isEOF()) {\n            var ch = this.char();\n            switch (ch) {\n                case 39 /* `'` */: {\n                    // Treat apostrophe as quoting but include it in the style part.\n                    // Find the end of the quoted literal text.\n                    this.bump();\n                    var apostrophePosition = this.clonePosition();\n                    if (!this.bumpUntil(\"'\")) {\n                        return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));\n                    }\n                    this.bump();\n                    break;\n                }\n                case 123 /* `{` */: {\n                    nestedBraces += 1;\n                    this.bump();\n                    break;\n                }\n                case 125 /* `}` */: {\n                    if (nestedBraces > 0) {\n                        nestedBraces -= 1;\n                    }\n                    else {\n                        return {\n                            val: this.message.slice(startPosition.offset, this.offset()),\n                            err: null,\n                        };\n                    }\n                    break;\n                }\n                default:\n                    this.bump();\n                    break;\n            }\n        }\n        return {\n            val: this.message.slice(startPosition.offset, this.offset()),\n            err: null,\n        };\n    };\n    Parser.prototype.parseNumberSkeletonFromString = function (skeleton, location) {\n        var tokens = [];\n        try {\n            tokens = parseNumberSkeletonFromString(skeleton);\n        }\n        catch (e) {\n            return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location);\n        }\n        return {\n            val: {\n                type: SKELETON_TYPE.number,\n                tokens: tokens,\n                location: location,\n                parsedOptions: this.shouldParseSkeletons\n                    ? parseNumberSkeleton(tokens)\n                    : {},\n            },\n            err: null,\n        };\n    };\n    /**\n     * @param nesting_level The current nesting level of messages.\n     *     This can be positive when parsing message fragment in select or plural argument options.\n     * @param parent_arg_type The parent argument's type.\n     * @param parsed_first_identifier If provided, this is the first identifier-like selector of\n     *     the argument. It is a by-product of a previous parsing attempt.\n     * @param expecting_close_tag If true, this message is directly or indirectly nested inside\n     *     between a pair of opening and closing tags. The nested message will not parse beyond\n     *     the closing tag boundary.\n     */\n    Parser.prototype.tryParsePluralOrSelectOptions = function (nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {\n        var _a;\n        var hasOtherClause = false;\n        var options = [];\n        var parsedSelectors = new Set();\n        var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;\n        // Parse:\n        // one {one apple}\n        // ^--^\n        while (true) {\n            if (selector.length === 0) {\n                var startPosition = this.clonePosition();\n                if (parentArgType !== 'select' && this.bumpIf('=')) {\n                    // Try parse `={number}` selector\n                    var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);\n                    if (result.err) {\n                        return result;\n                    }\n                    selectorLocation = createLocation(startPosition, this.clonePosition());\n                    selector = this.message.slice(startPosition.offset, this.offset());\n                }\n                else {\n                    break;\n                }\n            }\n            // Duplicate selector clauses\n            if (parsedSelectors.has(selector)) {\n                return this.error(parentArgType === 'select'\n                    ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR\n                    : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);\n            }\n            if (selector === 'other') {\n                hasOtherClause = true;\n            }\n            // Parse:\n            // one {one apple}\n            //     ^----------^\n            this.bumpSpace();\n            var openingBracePosition = this.clonePosition();\n            if (!this.bumpIf('{')) {\n                return this.error(parentArgType === 'select'\n                    ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\n                    : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));\n            }\n            var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);\n            if (fragmentResult.err) {\n                return fragmentResult;\n            }\n            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n            if (argCloseResult.err) {\n                return argCloseResult;\n            }\n            options.push([\n                selector,\n                {\n                    value: fragmentResult.val,\n                    location: createLocation(openingBracePosition, this.clonePosition()),\n                },\n            ]);\n            // Keep track of the existing selectors\n            parsedSelectors.add(selector);\n            // Prep next selector clause.\n            this.bumpSpace();\n            (_a = this.parseIdentifierIfPossible(), selector = _a.value, selectorLocation = _a.location);\n        }\n        if (options.length === 0) {\n            return this.error(parentArgType === 'select'\n                ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR\n                : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));\n        }\n        if (this.requiresOtherClause && !hasOtherClause) {\n            return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));\n        }\n        return { val: options, err: null };\n    };\n    Parser.prototype.tryParseDecimalInteger = function (expectNumberError, invalidNumberError) {\n        var sign = 1;\n        var startingPosition = this.clonePosition();\n        if (this.bumpIf('+')) {\n        }\n        else if (this.bumpIf('-')) {\n            sign = -1;\n        }\n        var hasDigits = false;\n        var decimal = 0;\n        while (!this.isEOF()) {\n            var ch = this.char();\n            if (ch >= 48 /* `0` */ && ch <= 57 /* `9` */) {\n                hasDigits = true;\n                decimal = decimal * 10 + (ch - 48);\n                this.bump();\n            }\n            else {\n                break;\n            }\n        }\n        var location = createLocation(startingPosition, this.clonePosition());\n        if (!hasDigits) {\n            return this.error(expectNumberError, location);\n        }\n        decimal *= sign;\n        if (!isSafeInteger(decimal)) {\n            return this.error(invalidNumberError, location);\n        }\n        return { val: decimal, err: null };\n    };\n    Parser.prototype.offset = function () {\n        return this.position.offset;\n    };\n    Parser.prototype.isEOF = function () {\n        return this.offset() === this.message.length;\n    };\n    Parser.prototype.clonePosition = function () {\n        // This is much faster than `Object.assign` or spread.\n        return {\n            offset: this.position.offset,\n            line: this.position.line,\n            column: this.position.column,\n        };\n    };\n    /**\n     * Return the code point at the current position of the parser.\n     * Throws if the index is out of bound.\n     */\n    Parser.prototype.char = function () {\n        var offset = this.position.offset;\n        if (offset >= this.message.length) {\n            throw Error('out of bound');\n        }\n        var code = codePointAt(this.message, offset);\n        if (code === undefined) {\n            throw Error(\"Offset \".concat(offset, \" is at invalid UTF-16 code unit boundary\"));\n        }\n        return code;\n    };\n    Parser.prototype.error = function (kind, location) {\n        return {\n            val: null,\n            err: {\n                kind: kind,\n                message: this.message,\n                location: location,\n            },\n        };\n    };\n    /** Bump the parser to the next UTF-16 code unit. */\n    Parser.prototype.bump = function () {\n        if (this.isEOF()) {\n            return;\n        }\n        var code = this.char();\n        if (code === 10 /* '\\n' */) {\n            this.position.line += 1;\n            this.position.column = 1;\n            this.position.offset += 1;\n        }\n        else {\n            this.position.column += 1;\n            // 0 ~ 0x10000 -> unicode BMP, otherwise skip the surrogate pair.\n            this.position.offset += code < 0x10000 ? 1 : 2;\n        }\n    };\n    /**\n     * If the substring starting at the current position of the parser has\n     * the given prefix, then bump the parser to the character immediately\n     * following the prefix and return true. Otherwise, don't bump the parser\n     * and return false.\n     */\n    Parser.prototype.bumpIf = function (prefix) {\n        if (startsWith(this.message, prefix, this.offset())) {\n            for (var i = 0; i < prefix.length; i++) {\n                this.bump();\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Bump the parser until the pattern character is found and return `true`.\n     * Otherwise bump to the end of the file and return `false`.\n     */\n    Parser.prototype.bumpUntil = function (pattern) {\n        var currentOffset = this.offset();\n        var index = this.message.indexOf(pattern, currentOffset);\n        if (index >= 0) {\n            this.bumpTo(index);\n            return true;\n        }\n        else {\n            this.bumpTo(this.message.length);\n            return false;\n        }\n    };\n    /**\n     * Bump the parser to the target offset.\n     * If target offset is beyond the end of the input, bump the parser to the end of the input.\n     */\n    Parser.prototype.bumpTo = function (targetOffset) {\n        if (this.offset() > targetOffset) {\n            throw Error(\"targetOffset \".concat(targetOffset, \" must be greater than or equal to the current offset \").concat(this.offset()));\n        }\n        targetOffset = Math.min(targetOffset, this.message.length);\n        while (true) {\n            var offset = this.offset();\n            if (offset === targetOffset) {\n                break;\n            }\n            if (offset > targetOffset) {\n                throw Error(\"targetOffset \".concat(targetOffset, \" is at invalid UTF-16 code unit boundary\"));\n            }\n            this.bump();\n            if (this.isEOF()) {\n                break;\n            }\n        }\n    };\n    /** advance the parser through all whitespace to the next non-whitespace code unit. */\n    Parser.prototype.bumpSpace = function () {\n        while (!this.isEOF() && _isWhiteSpace(this.char())) {\n            this.bump();\n        }\n    };\n    /**\n     * Peek at the *next* Unicode codepoint in the input without advancing the parser.\n     * If the input has been exhausted, then this returns null.\n     */\n    Parser.prototype.peek = function () {\n        if (this.isEOF()) {\n            return null;\n        }\n        var code = this.char();\n        var offset = this.offset();\n        var nextCode = this.message.charCodeAt(offset + (code >= 0x10000 ? 2 : 1));\n        return nextCode !== null && nextCode !== void 0 ? nextCode : null;\n    };\n    return Parser;\n}());\nexport { Parser };\n/**\n * This check if codepoint is alphabet (lower & uppercase)\n * @param codepoint\n * @returns\n */\nfunction _isAlpha(codepoint) {\n    return ((codepoint >= 97 && codepoint <= 122) ||\n        (codepoint >= 65 && codepoint <= 90));\n}\nfunction _isAlphaOrSlash(codepoint) {\n    return _isAlpha(codepoint) || codepoint === 47; /* '/' */\n}\n/** See `parseTag` function docs. */\nfunction _isPotentialElementNameChar(c) {\n    return (c === 45 /* '-' */ ||\n        c === 46 /* '.' */ ||\n        (c >= 48 && c <= 57) /* 0..9 */ ||\n        c === 95 /* '_' */ ||\n        (c >= 97 && c <= 122) /** a..z */ ||\n        (c >= 65 && c <= 90) /* A..Z */ ||\n        c == 0xb7 ||\n        (c >= 0xc0 && c <= 0xd6) ||\n        (c >= 0xd8 && c <= 0xf6) ||\n        (c >= 0xf8 && c <= 0x37d) ||\n        (c >= 0x37f && c <= 0x1fff) ||\n        (c >= 0x200c && c <= 0x200d) ||\n        (c >= 0x203f && c <= 0x2040) ||\n        (c >= 0x2070 && c <= 0x218f) ||\n        (c >= 0x2c00 && c <= 0x2fef) ||\n        (c >= 0x3001 && c <= 0xd7ff) ||\n        (c >= 0xf900 && c <= 0xfdcf) ||\n        (c >= 0xfdf0 && c <= 0xfffd) ||\n        (c >= 0x10000 && c <= 0xeffff));\n}\n/**\n * Code point equivalent of regex `\\p{White_Space}`.\n * From: https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n */\nfunction _isWhiteSpace(c) {\n    return ((c >= 0x0009 && c <= 0x000d) ||\n        c === 0x0020 ||\n        c === 0x0085 ||\n        (c >= 0x200e && c <= 0x200f) ||\n        c === 0x2028 ||\n        c === 0x2029);\n}\n/**\n * Code point equivalent of regex `\\p{Pattern_Syntax}`.\n * See https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n */\nfunction _isPatternSyntax(c) {\n    return ((c >= 0x0021 && c <= 0x0023) ||\n        c === 0x0024 ||\n        (c >= 0x0025 && c <= 0x0027) ||\n        c === 0x0028 ||\n        c === 0x0029 ||\n        c === 0x002a ||\n        c === 0x002b ||\n        c === 0x002c ||\n        c === 0x002d ||\n        (c >= 0x002e && c <= 0x002f) ||\n        (c >= 0x003a && c <= 0x003b) ||\n        (c >= 0x003c && c <= 0x003e) ||\n        (c >= 0x003f && c <= 0x0040) ||\n        c === 0x005b ||\n        c === 0x005c ||\n        c === 0x005d ||\n        c === 0x005e ||\n        c === 0x0060 ||\n        c === 0x007b ||\n        c === 0x007c ||\n        c === 0x007d ||\n        c === 0x007e ||\n        c === 0x00a1 ||\n        (c >= 0x00a2 && c <= 0x00a5) ||\n        c === 0x00a6 ||\n        c === 0x00a7 ||\n        c === 0x00a9 ||\n        c === 0x00ab ||\n        c === 0x00ac ||\n        c === 0x00ae ||\n        c === 0x00b0 ||\n        c === 0x00b1 ||\n        c === 0x00b6 ||\n        c === 0x00bb ||\n        c === 0x00bf ||\n        c === 0x00d7 ||\n        c === 0x00f7 ||\n        (c >= 0x2010 && c <= 0x2015) ||\n        (c >= 0x2016 && c <= 0x2017) ||\n        c === 0x2018 ||\n        c === 0x2019 ||\n        c === 0x201a ||\n        (c >= 0x201b && c <= 0x201c) ||\n        c === 0x201d ||\n        c === 0x201e ||\n        c === 0x201f ||\n        (c >= 0x2020 && c <= 0x2027) ||\n        (c >= 0x2030 && c <= 0x2038) ||\n        c === 0x2039 ||\n        c === 0x203a ||\n        (c >= 0x203b && c <= 0x203e) ||\n        (c >= 0x2041 && c <= 0x2043) ||\n        c === 0x2044 ||\n        c === 0x2045 ||\n        c === 0x2046 ||\n        (c >= 0x2047 && c <= 0x2051) ||\n        c === 0x2052 ||\n        c === 0x2053 ||\n        (c >= 0x2055 && c <= 0x205e) ||\n        (c >= 0x2190 && c <= 0x2194) ||\n        (c >= 0x2195 && c <= 0x2199) ||\n        (c >= 0x219a && c <= 0x219b) ||\n        (c >= 0x219c && c <= 0x219f) ||\n        c === 0x21a0 ||\n        (c >= 0x21a1 && c <= 0x21a2) ||\n        c === 0x21a3 ||\n        (c >= 0x21a4 && c <= 0x21a5) ||\n        c === 0x21a6 ||\n        (c >= 0x21a7 && c <= 0x21ad) ||\n        c === 0x21ae ||\n        (c >= 0x21af && c <= 0x21cd) ||\n        (c >= 0x21ce && c <= 0x21cf) ||\n        (c >= 0x21d0 && c <= 0x21d1) ||\n        c === 0x21d2 ||\n        c === 0x21d3 ||\n        c === 0x21d4 ||\n        (c >= 0x21d5 && c <= 0x21f3) ||\n        (c >= 0x21f4 && c <= 0x22ff) ||\n        (c >= 0x2300 && c <= 0x2307) ||\n        c === 0x2308 ||\n        c === 0x2309 ||\n        c === 0x230a ||\n        c === 0x230b ||\n        (c >= 0x230c && c <= 0x231f) ||\n        (c >= 0x2320 && c <= 0x2321) ||\n        (c >= 0x2322 && c <= 0x2328) ||\n        c === 0x2329 ||\n        c === 0x232a ||\n        (c >= 0x232b && c <= 0x237b) ||\n        c === 0x237c ||\n        (c >= 0x237d && c <= 0x239a) ||\n        (c >= 0x239b && c <= 0x23b3) ||\n        (c >= 0x23b4 && c <= 0x23db) ||\n        (c >= 0x23dc && c <= 0x23e1) ||\n        (c >= 0x23e2 && c <= 0x2426) ||\n        (c >= 0x2427 && c <= 0x243f) ||\n        (c >= 0x2440 && c <= 0x244a) ||\n        (c >= 0x244b && c <= 0x245f) ||\n        (c >= 0x2500 && c <= 0x25b6) ||\n        c === 0x25b7 ||\n        (c >= 0x25b8 && c <= 0x25c0) ||\n        c === 0x25c1 ||\n        (c >= 0x25c2 && c <= 0x25f7) ||\n        (c >= 0x25f8 && c <= 0x25ff) ||\n        (c >= 0x2600 && c <= 0x266e) ||\n        c === 0x266f ||\n        (c >= 0x2670 && c <= 0x2767) ||\n        c === 0x2768 ||\n        c === 0x2769 ||\n        c === 0x276a ||\n        c === 0x276b ||\n        c === 0x276c ||\n        c === 0x276d ||\n        c === 0x276e ||\n        c === 0x276f ||\n        c === 0x2770 ||\n        c === 0x2771 ||\n        c === 0x2772 ||\n        c === 0x2773 ||\n        c === 0x2774 ||\n        c === 0x2775 ||\n        (c >= 0x2794 && c <= 0x27bf) ||\n        (c >= 0x27c0 && c <= 0x27c4) ||\n        c === 0x27c5 ||\n        c === 0x27c6 ||\n        (c >= 0x27c7 && c <= 0x27e5) ||\n        c === 0x27e6 ||\n        c === 0x27e7 ||\n        c === 0x27e8 ||\n        c === 0x27e9 ||\n        c === 0x27ea ||\n        c === 0x27eb ||\n        c === 0x27ec ||\n        c === 0x27ed ||\n        c === 0x27ee ||\n        c === 0x27ef ||\n        (c >= 0x27f0 && c <= 0x27ff) ||\n        (c >= 0x2800 && c <= 0x28ff) ||\n        (c >= 0x2900 && c <= 0x2982) ||\n        c === 0x2983 ||\n        c === 0x2984 ||\n        c === 0x2985 ||\n        c === 0x2986 ||\n        c === 0x2987 ||\n        c === 0x2988 ||\n        c === 0x2989 ||\n        c === 0x298a ||\n        c === 0x298b ||\n        c === 0x298c ||\n        c === 0x298d ||\n        c === 0x298e ||\n        c === 0x298f ||\n        c === 0x2990 ||\n        c === 0x2991 ||\n        c === 0x2992 ||\n        c === 0x2993 ||\n        c === 0x2994 ||\n        c === 0x2995 ||\n        c === 0x2996 ||\n        c === 0x2997 ||\n        c === 0x2998 ||\n        (c >= 0x2999 && c <= 0x29d7) ||\n        c === 0x29d8 ||\n        c === 0x29d9 ||\n        c === 0x29da ||\n        c === 0x29db ||\n        (c >= 0x29dc && c <= 0x29fb) ||\n        c === 0x29fc ||\n        c === 0x29fd ||\n        (c >= 0x29fe && c <= 0x2aff) ||\n        (c >= 0x2b00 && c <= 0x2b2f) ||\n        (c >= 0x2b30 && c <= 0x2b44) ||\n        (c >= 0x2b45 && c <= 0x2b46) ||\n        (c >= 0x2b47 && c <= 0x2b4c) ||\n        (c >= 0x2b4d && c <= 0x2b73) ||\n        (c >= 0x2b74 && c <= 0x2b75) ||\n        (c >= 0x2b76 && c <= 0x2b95) ||\n        c === 0x2b96 ||\n        (c >= 0x2b97 && c <= 0x2bff) ||\n        (c >= 0x2e00 && c <= 0x2e01) ||\n        c === 0x2e02 ||\n        c === 0x2e03 ||\n        c === 0x2e04 ||\n        c === 0x2e05 ||\n        (c >= 0x2e06 && c <= 0x2e08) ||\n        c === 0x2e09 ||\n        c === 0x2e0a ||\n        c === 0x2e0b ||\n        c === 0x2e0c ||\n        c === 0x2e0d ||\n        (c >= 0x2e0e && c <= 0x2e16) ||\n        c === 0x2e17 ||\n        (c >= 0x2e18 && c <= 0x2e19) ||\n        c === 0x2e1a ||\n        c === 0x2e1b ||\n        c === 0x2e1c ||\n        c === 0x2e1d ||\n        (c >= 0x2e1e && c <= 0x2e1f) ||\n        c === 0x2e20 ||\n        c === 0x2e21 ||\n        c === 0x2e22 ||\n        c === 0x2e23 ||\n        c === 0x2e24 ||\n        c === 0x2e25 ||\n        c === 0x2e26 ||\n        c === 0x2e27 ||\n        c === 0x2e28 ||\n        c === 0x2e29 ||\n        (c >= 0x2e2a && c <= 0x2e2e) ||\n        c === 0x2e2f ||\n        (c >= 0x2e30 && c <= 0x2e39) ||\n        (c >= 0x2e3a && c <= 0x2e3b) ||\n        (c >= 0x2e3c && c <= 0x2e3f) ||\n        c === 0x2e40 ||\n        c === 0x2e41 ||\n        c === 0x2e42 ||\n        (c >= 0x2e43 && c <= 0x2e4f) ||\n        (c >= 0x2e50 && c <= 0x2e51) ||\n        c === 0x2e52 ||\n        (c >= 0x2e53 && c <= 0x2e7f) ||\n        (c >= 0x3001 && c <= 0x3003) ||\n        c === 0x3008 ||\n        c === 0x3009 ||\n        c === 0x300a ||\n        c === 0x300b ||\n        c === 0x300c ||\n        c === 0x300d ||\n        c === 0x300e ||\n        c === 0x300f ||\n        c === 0x3010 ||\n        c === 0x3011 ||\n        (c >= 0x3012 && c <= 0x3013) ||\n        c === 0x3014 ||\n        c === 0x3015 ||\n        c === 0x3016 ||\n        c === 0x3017 ||\n        c === 0x3018 ||\n        c === 0x3019 ||\n        c === 0x301a ||\n        c === 0x301b ||\n        c === 0x301c ||\n        c === 0x301d ||\n        (c >= 0x301e && c <= 0x301f) ||\n        c === 0x3020 ||\n        c === 0x3030 ||\n        c === 0xfd3e ||\n        c === 0xfd3f ||\n        (c >= 0xfe45 && c <= 0xfe46));\n}\n","import { timeData } from './time-data.generated';\n/**\n * Returns the best matching date time pattern if a date time skeleton\n * pattern is provided with a locale. Follows the Unicode specification:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#table-mapping-requested-time-skeletons-to-patterns\n * @param skeleton date time skeleton pattern that possibly includes j, J or C\n * @param locale\n */\nexport function getBestPattern(skeleton, locale) {\n    var skeletonCopy = '';\n    for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {\n        var patternChar = skeleton.charAt(patternPos);\n        if (patternChar === 'j') {\n            var extraLength = 0;\n            while (patternPos + 1 < skeleton.length &&\n                skeleton.charAt(patternPos + 1) === patternChar) {\n                extraLength++;\n                patternPos++;\n            }\n            var hourLen = 1 + (extraLength & 1);\n            var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);\n            var dayPeriodChar = 'a';\n            var hourChar = getDefaultHourSymbolFromLocale(locale);\n            if (hourChar == 'H' || hourChar == 'k') {\n                dayPeriodLen = 0;\n            }\n            while (dayPeriodLen-- > 0) {\n                skeletonCopy += dayPeriodChar;\n            }\n            while (hourLen-- > 0) {\n                skeletonCopy = hourChar + skeletonCopy;\n            }\n        }\n        else if (patternChar === 'J') {\n            skeletonCopy += 'H';\n        }\n        else {\n            skeletonCopy += patternChar;\n        }\n    }\n    return skeletonCopy;\n}\n/**\n * Maps the [hour cycle type](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle)\n * of the given `locale` to the corresponding time pattern.\n * @param locale\n */\nfunction getDefaultHourSymbolFromLocale(locale) {\n    var hourCycle = locale.hourCycle;\n    if (hourCycle === undefined &&\n        // @ts-ignore hourCycle(s) is not identified yet\n        locale.hourCycles &&\n        // @ts-ignore\n        locale.hourCycles.length) {\n        // @ts-ignore\n        hourCycle = locale.hourCycles[0];\n    }\n    if (hourCycle) {\n        switch (hourCycle) {\n            case 'h24':\n                return 'k';\n            case 'h23':\n                return 'H';\n            case 'h12':\n                return 'h';\n            case 'h11':\n                return 'K';\n            default:\n                throw new Error('Invalid hourCycle');\n        }\n    }\n    // TODO: Once hourCycle is fully supported remove the following with data generation\n    var languageTag = locale.language;\n    var regionTag;\n    if (languageTag !== 'root') {\n        regionTag = locale.maximize().region;\n    }\n    var hourCycles = timeData[regionTag || ''] ||\n        timeData[languageTag || ''] ||\n        timeData[\"\".concat(languageTag, \"-001\")] ||\n        timeData['001'];\n    return hourCycles[0];\n}\n","import { __assign } from \"tslib\";\nimport { ErrorKind } from './error';\nimport { Parser } from './parser';\nimport { isDateElement, isDateTimeSkeleton, isNumberElement, isNumberSkeleton, isPluralElement, isSelectElement, isTagElement, isTimeElement, } from './types';\nfunction pruneLocation(els) {\n    els.forEach(function (el) {\n        delete el.location;\n        if (isSelectElement(el) || isPluralElement(el)) {\n            for (var k in el.options) {\n                delete el.options[k].location;\n                pruneLocation(el.options[k].value);\n            }\n        }\n        else if (isNumberElement(el) && isNumberSkeleton(el.style)) {\n            delete el.style.location;\n        }\n        else if ((isDateElement(el) || isTimeElement(el)) &&\n            isDateTimeSkeleton(el.style)) {\n            delete el.style.location;\n        }\n        else if (isTagElement(el)) {\n            pruneLocation(el.children);\n        }\n    });\n}\nexport function parse(message, opts) {\n    if (opts === void 0) { opts = {}; }\n    opts = __assign({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);\n    var result = new Parser(message, opts).parse();\n    if (result.err) {\n        var error = SyntaxError(ErrorKind[result.err.kind]);\n        // @ts-expect-error Assign to error object\n        error.location = result.err.location;\n        // @ts-expect-error Assign to error object\n        error.originalMessage = result.err.message;\n        throw error;\n    }\n    if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {\n        pruneLocation(result.val);\n    }\n    return result.val;\n}\nexport * from './types';\n// only for testing\nexport var _Parser = Parser;\nexport { isStructurallySame } from './manipulator';\n","import { __extends } from \"tslib\";\nexport var IntlErrorCode;\n(function (IntlErrorCode) {\n    IntlErrorCode[\"FORMAT_ERROR\"] = \"FORMAT_ERROR\";\n    IntlErrorCode[\"UNSUPPORTED_FORMATTER\"] = \"UNSUPPORTED_FORMATTER\";\n    IntlErrorCode[\"INVALID_CONFIG\"] = \"INVALID_CONFIG\";\n    IntlErrorCode[\"MISSING_DATA\"] = \"MISSING_DATA\";\n    IntlErrorCode[\"MISSING_TRANSLATION\"] = \"MISSING_TRANSLATION\";\n})(IntlErrorCode || (IntlErrorCode = {}));\nvar IntlError = /** @class */ (function (_super) {\n    __extends(IntlError, _super);\n    function IntlError(code, message, exception) {\n        var _this = this;\n        var err = exception\n            ? exception instanceof Error\n                ? exception\n                : new Error(String(exception))\n            : undefined;\n        _this = _super.call(this, \"[@formatjs/intl Error \".concat(code, \"] \").concat(message, \"\\n\").concat(err ? \"\\n\".concat(err.message, \"\\n\").concat(err.stack) : '')) || this;\n        _this.code = code;\n        // @ts-ignore just so we don't need to declare dep on @types/node\n        if (typeof Error.captureStackTrace === 'function') {\n            // @ts-ignore just so we don't need to declare dep on @types/node\n            Error.captureStackTrace(_this, IntlError);\n        }\n        return _this;\n    }\n    return IntlError;\n}(Error));\nexport { IntlError };\nvar UnsupportedFormatterError = /** @class */ (function (_super) {\n    __extends(UnsupportedFormatterError, _super);\n    function UnsupportedFormatterError(message, exception) {\n        return _super.call(this, IntlErrorCode.UNSUPPORTED_FORMATTER, message, exception) || this;\n    }\n    return UnsupportedFormatterError;\n}(IntlError));\nexport { UnsupportedFormatterError };\nvar InvalidConfigError = /** @class */ (function (_super) {\n    __extends(InvalidConfigError, _super);\n    function InvalidConfigError(message, exception) {\n        return _super.call(this, IntlErrorCode.INVALID_CONFIG, message, exception) || this;\n    }\n    return InvalidConfigError;\n}(IntlError));\nexport { InvalidConfigError };\nvar MissingDataError = /** @class */ (function (_super) {\n    __extends(MissingDataError, _super);\n    function MissingDataError(message, exception) {\n        return _super.call(this, IntlErrorCode.MISSING_DATA, message, exception) || this;\n    }\n    return MissingDataError;\n}(IntlError));\nexport { MissingDataError };\nvar IntlFormatError = /** @class */ (function (_super) {\n    __extends(IntlFormatError, _super);\n    function IntlFormatError(message, locale, exception) {\n        var _this = _super.call(this, IntlErrorCode.FORMAT_ERROR, \"\".concat(message, \"\\nLocale: \").concat(locale, \"\\n\"), exception) || this;\n        _this.locale = locale;\n        return _this;\n    }\n    return IntlFormatError;\n}(IntlError));\nexport { IntlFormatError };\nvar MessageFormatError = /** @class */ (function (_super) {\n    __extends(MessageFormatError, _super);\n    function MessageFormatError(message, locale, descriptor, exception) {\n        var _this = _super.call(this, \"\".concat(message, \"\\nMessageID: \").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.id, \"\\nDefault Message: \").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.defaultMessage, \"\\nDescription: \").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.description, \"\\n\"), locale, exception) || this;\n        _this.descriptor = descriptor;\n        _this.locale = locale;\n        return _this;\n    }\n    return MessageFormatError;\n}(IntlFormatError));\nexport { MessageFormatError };\nvar MissingTranslationError = /** @class */ (function (_super) {\n    __extends(MissingTranslationError, _super);\n    function MissingTranslationError(descriptor, locale) {\n        var _this = _super.call(this, IntlErrorCode.MISSING_TRANSLATION, \"Missing message: \\\"\".concat(descriptor.id, \"\\\" for locale \\\"\").concat(locale, \"\\\", using \").concat(descriptor.defaultMessage\n            ? \"default message (\".concat(typeof descriptor.defaultMessage === 'string'\n                ? descriptor.defaultMessage\n                : descriptor.defaultMessage\n                    .map(function (e) { var _a; return (_a = e.value) !== null && _a !== void 0 ? _a : JSON.stringify(e); })\n                    .join(), \")\")\n            : 'id', \" as fallback.\")) || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MissingTranslationError;\n}(IntlError));\nexport { MissingTranslationError };\n","import { __extends } from \"tslib\";\nexport var ErrorCode;\n(function (ErrorCode) {\n    // When we have a placeholder but no value to format\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n    // When value supplied is invalid\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n    // When we need specific Intl API but it's not available\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, code, originalMessage) {\n        var _this = _super.call(this, msg) || this;\n        _this.code = code;\n        _this.originalMessage = originalMessage;\n        return _this;\n    }\n    FormatError.prototype.toString = function () {\n        return \"[formatjs Error: \".concat(this.code, \"] \").concat(this.message);\n    };\n    return FormatError;\n}(Error));\nexport { FormatError };\nvar InvalidValueError = /** @class */ (function (_super) {\n    __extends(InvalidValueError, _super);\n    function InvalidValueError(variableId, value, options, originalMessage) {\n        return _super.call(this, \"Invalid values for \\\"\".concat(variableId, \"\\\": \\\"\").concat(value, \"\\\". Options are \\\"\").concat(Object.keys(options).join('\", \"'), \"\\\"\"), ErrorCode.INVALID_VALUE, originalMessage) || this;\n    }\n    return InvalidValueError;\n}(FormatError));\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */ (function (_super) {\n    __extends(InvalidValueTypeError, _super);\n    function InvalidValueTypeError(value, type, originalMessage) {\n        return _super.call(this, \"Value for \\\"\".concat(value, \"\\\" must be of type \").concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;\n    }\n    return InvalidValueTypeError;\n}(FormatError));\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */ (function (_super) {\n    __extends(MissingValueError, _super);\n    function MissingValueError(variableId, originalMessage) {\n        return _super.call(this, \"The intl string context variable \\\"\".concat(variableId, \"\\\" was not provided to the string \\\"\").concat(originalMessage, \"\\\"\"), ErrorCode.MISSING_VALUE, originalMessage) || this;\n    }\n    return MissingValueError;\n}(FormatError));\nexport { MissingValueError };\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { DEFAULT_INTL_CONFIG as CORE_DEFAULT_INTL_CONFIG } from '@formatjs/intl';\nexport function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var DEFAULT_INTL_CONFIG = __assign(__assign({}, CORE_DEFAULT_INTL_CONFIG), { textComponent: React.Fragment });\nvar arbitraryKeyProps = { key: 42 };\nvar toArbitrarilyKeyedReactNode = function (reactNode) {\n    return React.isValidElement(reactNode)\n        ? React.createElement(React.Fragment, arbitraryKeyProps, reactNode)\n        : reactNode;\n};\n/**\n * Builds an array of {@link React.ReactNode}s with index-based keys, similar to\n * {@link React.Children.toArray}. However, this function tells React that it\n * was intentional, so they won't produce a bunch of warnings about it.\n *\n * React doesn't recommend doing this because it makes reordering inefficient,\n * but we mostly need this for message chunks, which don't tend to reorder to\n * begin with.\n */\nexport var toKeyedReactNodeArray = function (children) { var _a; \n/**\n * Note: {@link React.Children.map} will add its own index-based prefix to\n * every key anyway, so the auto-injected one doesn't even have to be unique.\n * This basically just tells React that it's explicit/intentional.\n */\nreturn (_a = React.Children.map(children, toArbitrarilyKeyedReactNode)) !== null && _a !== void 0 ? _a : []; };\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n    return function (parts) {\n        // eslint-disable-next-line prefer-rest-params\n        return formatXMLElementFn(React.Children.toArray(parts));\n    };\n}\nexport function shallowEqual(objA, objB) {\n    if (objA === objB) {\n        return true;\n    }\n    if (!objA || !objB) {\n        return false;\n    }\n    var aKeys = Object.keys(objA);\n    var bKeys = Object.keys(objB);\n    var len = aKeys.length;\n    if (bKeys.length !== len) {\n        return false;\n    }\n    for (var i = 0; i < len; i++) {\n        var key = aKeys[i];\n        if (objA[key] !== objB[key] ||\n            !Object.prototype.hasOwnProperty.call(objB, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nimport { Context } from './injectIntl';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","import { isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTagElement, isTimeElement, } from '@formatjs/icu-messageformat-parser';\nimport { ErrorCode, FormatError, InvalidValueError, InvalidValueTypeError, MissingValueError, } from './error';\nexport var PART_TYPE;\n(function (PART_TYPE) {\n    PART_TYPE[PART_TYPE[\"literal\"] = 0] = \"literal\";\n    PART_TYPE[PART_TYPE[\"object\"] = 1] = \"object\";\n})(PART_TYPE || (PART_TYPE = {}));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== PART_TYPE.literal ||\n            part.type !== PART_TYPE.literal) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\nexport function isFormatXMLElementFn(el) {\n    return typeof el === 'function';\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: PART_TYPE.literal,\n                value: els[0].value,\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: PART_TYPE.literal,\n                value: el.value,\n            });\n            continue;\n        }\n        // TODO: should this part be literal type?\n        // Replace `#` in plural rules with the actual numeric value.\n        if (isPoundElement(el)) {\n            if (typeof currentPluralValue === 'number') {\n                result.push({\n                    type: PART_TYPE.literal,\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\n                });\n            }\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new MissingValueError(varName, originalMessage);\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: typeof value === 'string' ? PART_TYPE.literal : PART_TYPE.object,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.date[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : undefined;\n            result.push({\n                type: PART_TYPE.literal,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.time[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : formats.time.medium;\n            result.push({\n                type: PART_TYPE.literal,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.number[el.style]\n                : isNumberSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : undefined;\n            if (style && style.scale) {\n                value =\n                    value *\n                        (style.scale || 1);\n            }\n            result.push({\n                type: PART_TYPE.literal,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTagElement(el)) {\n            var children = el.children, value_1 = el.value;\n            var formatFn = values[value_1];\n            if (!isFormatXMLElementFn(formatFn)) {\n                throw new InvalidValueTypeError(value_1, 'function', originalMessage);\n            }\n            var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);\n            var chunks = formatFn(parts.map(function (p) { return p.value; }));\n            if (!Array.isArray(chunks)) {\n                chunks = [chunks];\n            }\n            result.push.apply(result, chunks.map(function (c) {\n                return {\n                    type: typeof c === 'string' ? PART_TYPE.literal : PART_TYPE.object,\n                    value: c,\n                };\n            }));\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\".concat(value)];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API, originalMessage);\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n"],"names":["createFastMemoizeCache","store","create","get","key","set","value","IntlMessageFormat","message","locales","overrideFormats","opts","defaultLocale","cache","defaultConfig","configs","_this","this","formatterCache","number","dateTime","pluralRules","format","values","parts","formatToParts","length","result","reduce","all","part","type","literal","push","ast","formatters","formats","undefined","resolvedOptions","_a","locale","resolvedLocale","toString","Intl","NumberFormat","supportedLocalesOf","getAst","resolveLocale","__parse","TypeError","parseOpts","Array","isArray","Object","keys","k","c1","c2","getNumberFormat","args","_i","arguments","bind","apply","strategy","variadic","getDateTimeFormat","DateTimeFormat","getPluralRules","PluralRules","defineProperty","memoizedDefaultLocale","enumerable","configurable","Locale","supportedLocales","integer","maximumFractionDigits","currency","style","percent","date","short","month","day","year","medium","long","full","weekday","time","hour","minute","second","timeZoneName","invariant","condition","Err","Error","filterProps","props","allowlist","defaults","filtered","name","DEFAULT_INTL_CONFIG","messages","timeZone","defaultFormats","fallbackOnEmptyString","onError","error","onWarn","warning","createFormatters","relativeTime","list","displayNames","RelativeTimeFormat","ListFormat","DisplayNames","getMessageFormat","getRelativeTimeFormat","getListFormat","getDisplayNames","getNamedFormat","formatType","concat","memoize","fn","options","cacheDefault","serializer","serializerDefault","strategyDefault","monadic","arg","cacheKey","computedValue","call","prototype","slice","assemble","context","serialize","JSON","stringify","ObjectWithoutPrototypeCache","strategies","b","Symbol","for","c","d","e","f","g","h","l","m","n","p","q","r","t","v","w","x","y","z","a","u","$$typeof","A","exports","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","IntlContext","window","__REACT_INTL_BYPASS_GLOBAL_CONTEXT__","__REACT_INTL_CONTEXT__","IntlConsumer","Consumer","Provider","Context","injectIntl","WrappedComponent","Component","_b","intlPropName","_c","forwardRef","_d","enforceContext","WithIntl","intl","intlProp","ref","forwardedRef","displayName","ErrorKind","SKELETON_TYPE","TYPE","isLiteralElement","el","argument","select","plural","isPoundElement","pound","tag","isNumberSkeleton","isDateTimeSkeleton","SPACE_SEPARATOR_REGEX","DATE_TIME_REGEX","parseDateTimeSkeleton","skeleton","replace","match","len","era","RangeError","hour12","hourCycle","icuUnitToEcma","unit","FRACTION_PRECISION_REGEX","SIGNIFICANT_PRECISION_REGEX","INTEGER_WIDTH_REGEX","CONCISE_INTEGER_WIDTH_REGEX","parseSignificantPrecision","str","roundingPriority","_","g1","g2","minimumSignificantDigits","maximumSignificantDigits","parseSign","signDisplay","currencySign","parseConciseScientificAndEngineeringStem","stem","notation","test","minimumIntegerDigits","parseNotationOptions","opt","parseNumberSkeleton","tokens","tokens_1","token","scale","useGrouping","compactDisplay","currencyDisplay","unitDisplay","parseFloat","roundingMode","g3","g4","g5","minimumFractionDigits","trailingZeroDisplay","signOpts","conciseScientificAndEngineeringOpts","timeData","getDefaultHourSymbolFromLocale","hourCycles","regionTag","languageTag","language","maximize","region","SPACE_SEPARATOR_START_REGEX","RegExp","source","SPACE_SEPARATOR_END_REGEX","createLocation","start","end","hasNativeStartsWith","String","startsWith","hasNativeFromCodePoint","fromCodePoint","hasNativeFromEntries","fromEntries","hasNativeCodePointAt","codePointAt","hasTrimStart","trimStart","hasTrimEnd","trimEnd","isSafeInteger","Number","isFinite","Math","floor","abs","REGEX_SUPPORTS_U_AND_Y","RE","exec","matchIdentifierAtIndex","s","search","position","codePoints","code","elements","i","fromCharCode","entries","obj","entries_1","index","size","first","charCodeAt","flag","IDENTIFIER_PREFIX_RE_1","lastIndex","_isWhiteSpace","_isPatternSyntax","Parser","offset","line","column","ignoreTag","requiresOtherClause","shouldParseSkeletons","parse","parseMessage","nestingLevel","parentArgType","expectingCloseTag","isEOF","char","parseArgument","err","val","peek","UNMATCHED_CLOSING_TAG","clonePosition","_isAlpha","parseTag","parseLiteral","bump","location","startPosition","tagName","parseTagName","bumpSpace","bumpIf","childrenResult","children","endTagStartPosition","INVALID_TAG","closingTagNameStartPosition","UNCLOSED_TAG","startOffset","_isPotentialElementNameChar","parseQuoteResult","tryParseQuote","parseUnquotedResult","tryParseUnquoted","parseLeftAngleResult","tryParseLeftAngleBracket","codepoint","ch","openingBracePosition","EXPECT_ARGUMENT_CLOSING_BRACE","EMPTY_ARGUMENT","parseIdentifierIfPossible","MALFORMED_ARGUMENT","parseArgumentOptions","startingPosition","endOffset","bumpTo","typeStartPosition","argType","typeEndPosition","EXPECT_ARGUMENT_TYPE","styleAndLocation","styleStartPosition","parseSimpleArgStyleIfPossible","EXPECT_ARGUMENT_STYLE","styleLocation","argCloseResult","tryParseArgumentClose","location_1","parseNumberSkeletonFromString","EXPECT_DATE_TIME_SKELETON","dateTimePattern","skeletonCopy","patternPos","patternChar","charAt","extraLength","hourLen","dayPeriodLen","hourChar","getBestPattern","pattern","parsedOptions","typeEndPosition_1","EXPECT_SELECT_ARGUMENT_OPTIONS","identifierAndLocation","pluralOffset","EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE","tryParseDecimalInteger","INVALID_PLURAL_ARGUMENT_OFFSET_VALUE","optionsResult","tryParsePluralOrSelectOptions","location_2","pluralType","INVALID_ARGUMENT_TYPE","nestedBraces","apostrophePosition","bumpUntil","UNCLOSED_QUOTE_IN_ARGUMENT_STYLE","stringTokens_1","split","filter","stemAndOptions","options_1","INVALID_NUMBER_SKELETON","expectCloseTag","parsedFirstIdentifier","hasOtherClause","parsedSelectors","Set","selector","selectorLocation","EXPECT_PLURAL_ARGUMENT_SELECTOR","INVALID_PLURAL_ARGUMENT_SELECTOR","has","DUPLICATE_SELECT_ARGUMENT_SELECTOR","DUPLICATE_PLURAL_ARGUMENT_SELECTOR","EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT","EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT","fragmentResult","add","EXPECT_SELECT_ARGUMENT_SELECTOR","MISSING_OTHER_CLAUSE","expectNumberError","invalidNumberError","sign","hasDigits","decimal","kind","prefix","currentOffset","indexOf","targetOffset","min","nextCode","pruneLocation","els","forEach","SyntaxError","originalMessage","captureLocation","IntlErrorCode","IntlError","_super","exception","stack","captureStackTrace","UnsupportedFormatterError","UNSUPPORTED_FORMATTER","InvalidConfigError","INVALID_CONFIG","MissingDataError","MISSING_DATA","IntlFormatError","FORMAT_ERROR","MessageFormatError","descriptor","id","defaultMessage","description","MissingTranslationError","MISSING_TRANSLATION","map","join","ErrorCode","FormatError","msg","InvalidValueError","variableId","INVALID_VALUE","InvalidValueTypeError","MissingValueError","MISSING_VALUE","invariantIntlContext","textComponent","arbitraryKeyProps","toArbitrarilyKeyedReactNode","reactNode","toKeyedReactNodeArray","assignUniqueKeysToParts","formatXMLElementFn","toArray","shallowEqual","objA","objB","aKeys","bKeys","hasOwnProperty","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","render","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","useIntl","PART_TYPE","isFormatXMLElementFn","currentPluralValue","els_1","varName","object","value_1","formatFn","chunks","other","MISSING_INTL_API","rule","lastPart"],"sourceRoot":""}