{"version":3,"file":"9362.bundle.js","mappings":"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","sources":["webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat.resolvablePromise.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat.HomeScreenHeader.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat.BasePanelComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat.AppContainer.js"],"sourcesContent":["import { b as MessageResponseTypes, a as ButtonItemType } from \"./chat.Messages.js\";\n\nimport { u as uuid, U as UUIDType } from \"./chat.uuid.js\";\n\nimport { s as streamItemID, I as createMessageResponseForItem, K as isGridResponseType, L as isCarouselResponseType, M as isShowPanelButtonType, p as isResponseWithNestedItems, N as isItemSupportedInResponseBody, O as isCardResponseType, P as isButtonResponseType } from \"./chat.messageUtils.js\";\n\nimport { b as consoleError } from \"./chat.miscUtils.js\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function inputItemToLocalItem(message, originalUserText, id = uuid(UUIDType.LOCAL_MESSAGE)) {\n  const localMessage = {\n    item: {\n      response_type: MessageResponseTypes.TEXT,\n      ...message.input\n    },\n    ui_state: {\n      id: id,\n      originalUserText: originalUserText,\n      needsAnnouncement: false\n    },\n    fullMessageID: message.id\n  };\n  return localMessage;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function outputItemToLocalItem(messageItem, fullMessage, isLatestWelcomeNode = false, disableFadeAnimation = false) {\n  const id = streamItemID(fullMessage.id, messageItem) || uuid(UUIDType.LOCAL_MESSAGE);\n  const localMessage = {\n    ui_state: {\n      id: id,\n      needsAnnouncement: !fullMessage.history.from_history,\n      disableFadeAnimation: disableFadeAnimation\n    },\n    item: messageItem,\n    fullMessageID: fullMessage.id\n  };\n  if (isLatestWelcomeNode) {\n    localMessage.ui_state.isWelcomeResponse = true;\n  }\n  return localMessage;\n}\n\nfunction createLocalMessageForInlineError(text) {\n  const messageItem = {\n    response_type: MessageResponseTypes.INLINE_ERROR,\n    text: text\n  };\n  return createLocalMessageForItem(messageItem);\n}\n\nfunction createLocalMessageForItem(messageItem) {\n  const originalMessage = createMessageResponseForItem(messageItem);\n  const localMessage = outputItemToLocalItem(messageItem, originalMessage);\n  return {\n    originalMessage: originalMessage,\n    localMessage: localMessage\n  };\n}\n\nfunction createLocalMessageItemsForNestedMessageItems(localMessageItem, originalMessage, fromHistory, nestedLocalMessageItems, allowFooter) {\n  const {item: item} = localMessageItem;\n  if (isGridResponseType(item)) {\n    localMessageItem.ui_state.gridLocalMessageItemIDs = item.rows.map(row => row.cells.map(cell => {\n      const cellLocalMessageItemIDs = [];\n      createLocalMessageItemsForNestedType(\"items\", localMessageItem, cell.items, cellLocalMessageItemIDs, originalMessage, fromHistory, nestedLocalMessageItems, nestedMessageItem => isSupportedMessageItemInBody(localMessageItem.item, nestedMessageItem), false);\n      return cellLocalMessageItemIDs;\n    }));\n  } else if (isCarouselResponseType(item)) {\n    localMessageItem.ui_state.itemsLocalMessageItemIDs = [];\n    createLocalMessageItemsForNestedType(\"items\", localMessageItem, item.items, localMessageItem.ui_state.itemsLocalMessageItemIDs, originalMessage, fromHistory, nestedLocalMessageItems, nestedMessageItem => isSupportedMessageItemInBody(item, nestedMessageItem), allowFooter);\n  } else {\n    const bodyItems = item.body || item.panel?.body;\n    if (bodyItems) {\n      localMessageItem.ui_state.bodyLocalMessageItemIDs = [];\n      createLocalMessageItemsForNestedType(\"body\", localMessageItem, bodyItems, localMessageItem.ui_state.bodyLocalMessageItemIDs, originalMessage, fromHistory, nestedLocalMessageItems, nestedMessageItem => isSupportedMessageItemInBody(item, nestedMessageItem), !isShowPanelButtonType(item));\n    }\n    if (!allowFooter) {\n      return;\n    }\n    const footerItems = item.footer || item.panel?.footer;\n    if (footerItems) {\n      localMessageItem.ui_state.footerLocalMessageItemIDs = [];\n      createLocalMessageItemsForNestedType(\"footer\", localMessageItem, footerItems, localMessageItem.ui_state.footerLocalMessageItemIDs, originalMessage, fromHistory, nestedLocalMessageItems, nestedMessageItem => isSupportedMessageItemInFooter(item, nestedMessageItem), !isShowPanelButtonType(item));\n    }\n  }\n}\n\nfunction createLocalMessageItemsForNestedType(type, localMessageItem, items, nestedMessageItemIDs, originalMessage, fromHistory, nestedLocalMessageItems, isSupported, allowFooter) {\n  items.forEach(nestedMessageItem => {\n    if (isSupported(nestedMessageItem)) {\n      const nestedLocalMessageItem = outputItemToLocalItem(nestedMessageItem, originalMessage, false, true);\n      nestedMessageItemIDs.push(nestedLocalMessageItem.ui_state.id);\n      nestedLocalMessageItems.push(nestedLocalMessageItem);\n      if (isResponseWithNestedItems(nestedLocalMessageItem.item)) {\n        createLocalMessageItemsForNestedMessageItems(nestedLocalMessageItem, originalMessage, fromHistory, nestedLocalMessageItems, allowFooter);\n      }\n    } else {\n      consoleError(`The \"${localMessageItem.item.response_type}\" response type does not support \"${nestedMessageItem.response_type}\" in \"${type}\" array.`);\n    }\n  });\n}\n\nfunction isSupportedMessageItemInBody(rootMessageItem, nestedMessageItem) {\n  switch (rootMessageItem.response_type) {\n   case MessageResponseTypes.CARD:\n    return !isCardResponseType(nestedMessageItem) && isItemSupportedInResponseBody(nestedMessageItem);\n\n   case MessageResponseTypes.CAROUSEL:\n    return isCardResponseType(nestedMessageItem);\n\n   case MessageResponseTypes.BUTTON:\n    return rootMessageItem.button_type === ButtonItemType.SHOW_PANEL && isItemSupportedInResponseBody(nestedMessageItem);\n\n   case MessageResponseTypes.GRID:\n    return !isCardResponseType(nestedMessageItem) && isItemSupportedInResponseBody(nestedMessageItem);\n\n   default:\n    return false;\n  }\n}\n\nfunction isSupportedMessageItemInFooter(rootMessageItem, nestedMessageItem) {\n  if (isButtonResponseType(nestedMessageItem)) {\n    if (isShowPanelButtonType(rootMessageItem)) {\n      return !isShowPanelButtonType(nestedMessageItem);\n    }\n    return true;\n  }\n  return false;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const HA_SET_AGENT_AVAILABILITY = \"HA_SET_AGENT_AVAILABILITY\";\n\nconst HA_SET_IS_CONNECTING = \"HA_SET_IS_CONNECTING\";\n\nconst HA_SET_IS_RECONNECTING = \"HA_SET_IS_RECONNECTING\";\n\nconst HA_SET_AGENT_JOINED = \"HA_SET_AGENT_JOINED\";\n\nconst HA_SET_AGENT_LEFT_CHAT = \"HA_SET_AGENT_LEFT_CHAT\";\n\nconst HA_END_CHAT = \"HA_END_CHAT\";\n\nconst HA_UPDATE_CAPABILITIES = \"HA_UPDATE_CAPABILITIES\";\n\nconst HA_UPDATE_FILE_UPLOAD_IN_PROGRESS = \"HA_UPDATE_FILE_UPLOAD_IN_PROGRESS\";\n\nconst HA_SET_SHOW_SCREEN_SHARE_REQUEST = \"HA_SET_SHOW_SCREEN_SHARE_REQUEST\";\n\nconst HA_SET_IS_SCREEN_SHARING = \"HA_SET_IS_SCREEN_SHARING\";\n\nconst HA_SET_PERSISTED_STATE = \"HA_SET_PERSISTED_STATE\";\n\nconst HA_UPDATE_IS_SUSPENDED = \"HA_UPDATE_IS_SUSPENDED\";\n\nconst HA_UPDATE_IS_TYPING = \"HA_UPDATE_IS_TYPING\";\n\nfunction setIsConnecting(isConnecting, localMessageID) {\n  return {\n    type: HA_SET_IS_CONNECTING,\n    isConnecting: isConnecting,\n    localMessageID: localMessageID\n  };\n}\n\nfunction setIsReconnecting(isReconnecting) {\n  return {\n    type: HA_SET_IS_RECONNECTING,\n    isReconnecting: isReconnecting\n  };\n}\n\nfunction setAgentLeftChat() {\n  return {\n    type: HA_SET_AGENT_LEFT_CHAT\n  };\n}\n\nfunction endChat() {\n  return {\n    type: HA_END_CHAT\n  };\n}\n\nfunction setAgentAvailability(availability) {\n  return {\n    type: HA_SET_AGENT_AVAILABILITY,\n    availability: availability\n  };\n}\n\nfunction setAgentJoined(agentProfile) {\n  return {\n    type: HA_SET_AGENT_JOINED,\n    agentProfile: agentProfile\n  };\n}\n\nfunction updateCapabilities(capabilities) {\n  return {\n    type: HA_UPDATE_CAPABILITIES,\n    capabilities: capabilities\n  };\n}\n\nfunction updateFilesUploadInProgress(fileUploadInProgress) {\n  return {\n    type: HA_UPDATE_FILE_UPLOAD_IN_PROGRESS,\n    fileUploadInProgress: fileUploadInProgress\n  };\n}\n\nfunction setShowScreenShareRequest(showRequest) {\n  return {\n    type: HA_SET_SHOW_SCREEN_SHARE_REQUEST,\n    showRequest: showRequest\n  };\n}\n\nfunction setIsScreenSharing(isSharing) {\n  return {\n    type: HA_SET_IS_SCREEN_SHARING,\n    isSharing: isSharing\n  };\n}\n\nfunction setPersistedServiceDeskState(state) {\n  return {\n    type: HA_SET_PERSISTED_STATE,\n    state: state\n  };\n}\n\nfunction agentUpdateIsSuspended(isSuspended) {\n  return {\n    type: HA_UPDATE_IS_SUSPENDED,\n    isSuspended: isSuspended\n  };\n}\n\nfunction agentUpdateIsTyping(isTyping) {\n  return {\n    type: HA_UPDATE_IS_TYPING,\n    isTyping: isTyping\n  };\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function deepFreeze(object) {\n  Object.freeze(object);\n  Object.getOwnPropertyNames(object).forEach(prop => {\n    if (Object.prototype.hasOwnProperty.call(object, prop) && object[prop] !== null && (typeof object[prop] === \"object\" || typeof object[prop] === \"function\") && !Object.isFrozen(object[prop])) {\n      deepFreeze(object[prop]);\n    }\n  });\n  return object;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function resolvablePromise() {\n  let resolveFunction;\n  let rejectFunction;\n  const promise = new Promise((resolve, reject) => {\n    resolveFunction = resolve;\n    rejectFunction = reject;\n  });\n  promise.doResolve = resolveValue => {\n    promise.isResolved = true;\n    promise.isComplete = true;\n    resolveFunction(resolveValue);\n  };\n  promise.doReject = rejectValue => {\n    promise.isRejected = true;\n    promise.isComplete = true;\n    rejectFunction(rejectValue);\n  };\n  promise.isResolved = false;\n  promise.isRejected = false;\n  promise.isComplete = false;\n  return promise;\n}\n\nexport { setAgentAvailability as A, setAgentJoined as B, agentUpdateIsTyping as C, setAgentLeftChat as D, setPersistedServiceDeskState as E, HA_END_CHAT as H, agentUpdateIsSuspended as a, createLocalMessageForInlineError as b, createLocalMessageItemsForNestedMessageItems as c, deepFreeze as d, HA_UPDATE_FILE_UPLOAD_IN_PROGRESS as e, HA_SET_IS_SCREEN_SHARING as f, HA_UPDATE_CAPABILITIES as g, HA_SET_AGENT_LEFT_CHAT as h, inputItemToLocalItem as i, HA_UPDATE_IS_TYPING as j, HA_UPDATE_IS_SUSPENDED as k, HA_SET_PERSISTED_STATE as l, HA_SET_AGENT_JOINED as m, HA_SET_SHOW_SCREEN_SHARE_REQUEST as n, outputItemToLocalItem as o, HA_SET_AGENT_AVAILABILITY as p, HA_SET_IS_RECONNECTING as q, resolvablePromise as r, HA_SET_IS_CONNECTING as s, setIsConnecting as t, updateFilesUploadInProgress as u, endChat as v, setIsScreenSharing as w, setIsReconnecting as x, setShowScreenShareRequest as y, updateCapabilities as z };\n","import React, { forwardRef, useRef, useImperativeHandle, useCallback } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { H as HeaderExport } from \"./chat.Header.js\";\n\nimport { O as OverlayPanelName } from \"./chat.PageObjectId.js\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function HomeScreenHeader(props, ref) {\n  const {brandColor: brandColor, onClose: onClose, onRestart: onRestart, onCloseAndRestart: onCloseAndRestart} = props;\n  const showRestartButton = useSelector(state => state.config.public.showRestartButton || state.config.public.headerConfig?.showRestartButton);\n  const showBackButton = useSelector(state => state.persistedToBrowserStorage.chatState.homeScreenState.showBackToBot);\n  const displayName = useSelector(state => state.headerDisplayName);\n  const customMenuOptions = useSelector(state => state.customMenuOptions);\n  const useAITheme = useSelector(state => state.theme.useAITheme);\n  const headerRef = useRef();\n  useImperativeHandle(ref, () => headerRef.current);\n  const hideCloseAndRestartButton = !showBackButton;\n  const overflowClicked = useCallback(index => {\n    const {handler: handler} = customMenuOptions[index];\n    handler();\n  }, [ customMenuOptions ]);\n  const overflowItems = customMenuOptions?.map(option => option.text);\n  return React.createElement(\"div\", {\n    className: \"WACHomeScreenHeader\"\n  }, React.createElement(HeaderExport, {\n    ref: headerRef,\n    displayName: displayName,\n    showCenter: true,\n    showRestartButton: showRestartButton,\n    hideCloseAndRestartButton: hideCloseAndRestartButton,\n    onClickRestart: onRestart,\n    onClickClose: onClose,\n    onCloseAndRestart: onCloseAndRestart,\n    overflowClicked: overflowClicked,\n    overflowItems: overflowItems,\n    useAITheme: useAITheme,\n    brandColor: brandColor,\n    testIdPrefix: OverlayPanelName.HOME_SCREEN\n  }));\n}\n\nconst HomeScreenHeaderExport = React.memo(forwardRef(HomeScreenHeader));\n\nexport { HomeScreenHeaderExport as H };\n","import FocusTrap from \"focus-trap-react\";\n\nimport React, { useRef, useImperativeHandle } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { I as IS_MOBILE } from \"./chat.browserUtils.js\";\n\nimport { H as HeaderExport } from \"./chat.Header.js\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function BasePanelComponent({className: className, children: children, isOpen: isOpen, hidePanelHeader: hidePanelHeader, labelBackButton: labelBackButton, title: title, hideBackButton: hideBackButton, useAITheme: useAITheme, onClickCloseAndRestart: onClickCloseAndRestart, onClickRestart: onClickRestart, testIdPrefix: testIdPrefix, ...headerProps}, ref) {\n  const showRestartButton = useSelector(state => state.config.public.headerConfig?.showRestartButton);\n  const headerRef = useRef();\n  useImperativeHandle(ref, () => headerRef.current);\n  return React.createElement(FocusTrap, {\n    active: isOpen,\n    focusTrapOptions: {\n      clickOutsideDeactivates: true,\n      returnFocusOnDeactivate: !IS_MOBILE,\n      preventScroll: true\n    }\n  }, React.createElement(\"div\", {\n    className: className\n  }, !hidePanelHeader && React.createElement(HeaderExport, {\n    ...headerProps,\n    ref: headerRef,\n    showRestartButton: showRestartButton,\n    onClickRestart: onClickRestart,\n    onCloseAndRestart: onClickCloseAndRestart,\n    showBackButton: !hideBackButton,\n    labelBackButton: labelBackButton,\n    displayName: title,\n    useAITheme: useAITheme,\n    testIdPrefix: testIdPrefix,\n    showCenter: true\n  }), React.createElement(\"div\", {\n    className: \"WACPanelContent\"\n  }, children)));\n}\n\nconst BasePanelComponentExport = React.memo(React.forwardRef(BasePanelComponent));\n\nexport { BasePanelComponentExport as B };\n","import isEqual from \"lodash-es/isEqual.js\";\n\nimport React, { useRef, useCallback, useEffect, forwardRef, useImperativeHandle, useState, useContext, Component, Suspense, useMemo } from \"react\";\n\nimport dayjs from \"dayjs\";\n\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat.js\";\n\nimport merge from \"lodash-es/merge.js\";\n\nimport cloneDeep from \"lodash-es/cloneDeep.js\";\n\nimport { a as actions, U as UPDATE_MAIN_HEADER_AVATAR, S as SET_STREAM_ID, b as SET_STOP_STREAMING_BUTTON_DISABLED, c as SET_STOP_STREAMING_BUTTON_VISIBLE, d as UPDATE_MAX_VISIBLE_HEADER_OBJECTS, e as UPDATE_CHAT_HEADER_CONFIG, f as STREAMING_ADD_CHUNK, g as STREAMING_MERGE_HISTORY, h as STREAMING_START, i as SET_RESPONSE_PANEL_CONTENT, j as SET_RESPONSE_PANEL_IS_OPEN, A as ADD_NESTED_MESSAGES, F as FILE_UPLOAD_INPUT_ERROR, C as CLEAR_INPUT_FILES, R as REMOVE_ALL_NOTIFICATIONS, k as REMOVE_NOTIFICATIONS, l as ADD_NOTIFICATION, m as REMOVE_LOCAL_MESSAGE_ITEM, n as REMOVE_INPUT_FILE, o as ADD_INPUT_FILE, p as SET_IS_BROWSER_PAGE_VISIBLE, q as UPDATE_INPUT_STATE, r as CHANGE_STEP_IN_TOUR, s as CLEAR_TOUR_DATA, t as SET_TOUR_DATA, u as SET_CUSTOM_PANEL_OPTIONS, v as SET_CUSTOM_PANEL_OPEN, w as SET_CONVERSATIONAL_SEARCH_CITATION_PANEL_IS_OPEN, x as CLOSE_IFRAME_PANEL, O as OPEN_IFRAME_CONTENT, y as SET_LAUNCHER_MINIMIZED, z as SET_CHAT_MESSAGES_PROPERTY, B as SET_LAUNCHER_CONFIG_PROPERTY, D as SET_LAUNCHER_PROPERTY, E as UPDATE_LAUNCHER_CONFIG, T as TOGGLE_HOME_SCREEN, G as SET_HOME_SCREEN_IS_OPEN, H as ACCEPTED_DISCLAIMER, I as ANNOUNCE_MESSAGE, M as MERGE_HISTORY, J as SET_MESSAGE_HISTORY_PROPERTY, K as SET_MESSAGE_UI_PROPERTY, L as UPDATE_HOME_SCREEN_CONFIG, N as UPDATE_CSS_VARIABLES, P as UPDATE_MAIN_HEADER_TITLE, Q as UPDATE_LAUNCHER_AVATAR_URL, V as UPDATE_BOT_AVATAR_URL, W as UPDATE_BOT_NAME, X as SET_INITIAL_VIEW_CHANGE_COMPLETE, Y as SET_VIEW_CHANGING, Z as SET_VIEW_STATE, _ as UPDATE_HAS_SENT_NON_WELCOME_MESSAGE, $ as UPDATE_PERSISTED_CHAT_STATE, a0 as SET_APP_STATE_VALUE, a1 as ADD_IS_HYDRATING_COUNTER, a2 as ADD_IS_LOADING_COUNTER, a3 as ADD_IS_TYPING_COUNTER, a4 as MESSAGE_SET_OPTION_SELECTED, a5 as ADD_MESSAGE, a6 as UPDATE_MESSAGE, a7 as UPDATE_LOCAL_MESSAGE_ITEM, a8 as REMOVE_MESSAGES, a9 as ADD_LOCAL_MESSAGE_ITEM, aa as HYDRATE_MESSAGE_HISTORY, ab as RESTART_CONVERSATION, ac as HYDRATE_CHAT, ad as CHANGE_STATE } from \"./chat.actions.js\";\n\nimport { a as selectInputState, b as selectIsInputToAgent, s as selectAgentDisplayState } from \"./chat.selectors.js\";\n\nimport { u as useLanguagePack, C as ChatWidthBreakpoint, L as LanguagePackContext } from \"./chat.AppState.js\";\n\nimport { l as loadLocale, b as loadLanguagePack, e as enLanguagePack, A as AnnounceOnMountComponentExport, V as VisuallyHidden } from \"./chat.VideoComponent.js\";\n\nimport { d as consoleDebug, e as debugLog, b as consoleError, c as consoleWarn, f as isEnableDebugLog, s as sleep, g as callOnError, h as debugStackTrace, j as consoleLog, k as safeFetchTextWithTimeout, l as getBotName, m as setEnableDebugLog, n as setEnableDebugStackTracesLog, a as createDidCatchErrorData } from \"./chat.miscUtils.js\";\n\nimport { V as ViewChangeReason, M as MessageSendSource, B as BusEventType, a as TourStartReason, d as MainWindowCloseReason, b as MainWindowOpenReason } from \"./chat.customElement.js\";\n\nimport { createIntl, useIntl, RawIntlProvider } from \"react-intl\";\n\nimport { V as ViewType, b as CarbonTheme, a as CornersType, O as OnErrorType, C as CSSVariable, F as FileStatusValue, L as LauncherType, W as WriteableElementName, l as loadHAA, c as lazyChat, d as lazyCatastrophicError, e as lazyDisclaimer, f as lazyHomeScreenContainer, g as lazyIFramePanel, h as lazyViewSourcePanel, i as lazyBodyAndFooterPanelComponent, j as lazyTourComponent } from \"./chat.dynamic-imports.js\";\n\nimport { d as deepFreeze, i as inputItemToLocalItem, r as resolvablePromise, o as outputItemToLocalItem, c as createLocalMessageItemsForNestedMessageItems, a as agentUpdateIsSuspended, b as createLocalMessageForInlineError, H as HA_END_CHAT, e as HA_UPDATE_FILE_UPLOAD_IN_PROGRESS, f as HA_SET_IS_SCREEN_SHARING, g as HA_UPDATE_CAPABILITIES, h as HA_SET_AGENT_LEFT_CHAT, j as HA_UPDATE_IS_TYPING, k as HA_UPDATE_IS_SUSPENDED, l as HA_SET_PERSISTED_STATE, m as HA_SET_AGENT_JOINED, n as HA_SET_SHOW_SCREEN_SHARE_REQUEST, p as HA_SET_AGENT_AVAILABILITY, q as HA_SET_IS_RECONNECTING, s as HA_SET_IS_CONNECTING } from \"./chat.resolvablePromise.js\";\n\nimport { A as AgentsOnlineStatus, M as MessageErrorState } from \"./chat.LocalMessageItem.js\";\n\nimport { D as DEFAULT_CUSTOM_PANEL_ID, W as WA_CONSOLE_PREFIX } from \"./chat.constants.js\";\n\nimport { C as CarbonThemeClassNames, a as ButtonKindEnum } from \"./chat.carbonTypes.js\";\n\nimport { f as createWelcomeRequest, e as arrayLastValue, h as isLiveAgentMessage, a as isRequest, j as createMessageRequestForText, k as addDefaultsToMessage, b as isResponse, l as createMessageResponseForText, m as isStreamCompleteItem, n as isStreamPartialItem, o as isStreamFinalResponse, r as renderAsUserDefinedMessage, p as isResponseWithNestedItems, q as asyncForEach, s as streamItemID, t as isPause, i as isConnectToAgent, u as hasTourUserDefinedType, v as hasServiceDesk, w as isTyping, x as asArray, T as THREAD_ID_MAIN, y as findLast, c as isOptionItem, z as isDateResponseType, A as isEventRequest, B as getLastBotResponseWithContext, C as createMessageRequestForChoice } from \"./chat.messageUtils.js\";\n\nimport { u as uuid, U as UUIDType } from \"./chat.uuid.js\";\n\nimport Color from \"color\";\n\nimport { b as MessageResponseTypes, M as MessageInputType, A as AgentMessageType } from \"./chat.Messages.js\";\n\nimport { a as IS_SESSION_STORAGE, b as IS_PHONE, I as IS_MOBILE, c as IS_IOS, d as IS_PHONE_IN_PORTRAIT_MODE } from \"./chat.browserUtils.js\";\n\nimport { createStore } from \"redux\";\n\nimport mergeWith from \"lodash-es/mergeWith.js\";\n\nimport \"intl-pluralrules\";\n\nimport cx from \"classnames\";\n\nimport { useSelector, connect, Provider, useDispatch } from \"react-redux\";\n\nimport { u as useServiceManager, A as AriaAnnouncerContext, d as doFocusRef, b as usePrevious, c as SCROLLBAR_WIDTH, S as ServiceManagerContext } from \"./chat.usePrevious.js\";\n\nimport { a as AriaAnnouncerComponent, M as MessageTypeComponent, W as WindowSizeContext } from \"./chat.MessageTypeComponent.js\";\n\nimport { u as useOnMount } from \"./chat.useOnMount.js\";\n\nimport AiLaunch from \"@carbon/icons-react/es/AiLaunch.js\";\n\nimport ArrowUpLeft from \"@carbon/icons-react/es/ArrowUpLeft.js\";\n\nimport ChatLaunch from \"@carbon/icons-react/es/ChatLaunch.js\";\n\nimport { Button, Tag, Loading } from \"@carbon/react\";\n\nimport { P as PageObjectId, O as OverlayPanelName, b as AnimationInType, A as AnimationOutType, a as OverlayPanel } from \"./chat.PageObjectId.js\";\n\nimport Close from \"@carbon/icons-react/es/Close.js\";\n\nimport { u as useAriaAnnouncer, M as MountChildrenOnDelay } from \"./chat.MountChildrenOnDelay.js\";\n\nimport FocusTrap from \"focus-trap-react\";\n\nimport { a as HideComponentContext, H as HideComponent } from \"./chat.HideComponent.js\";\n\nimport { B as BotHeaderExport } from \"./chat.BotHeader.js\";\n\nimport { H as HomeScreenHeaderExport } from \"./chat.HomeScreenHeader.js\";\n\nimport { B as BasePanelComponentExport } from \"./chat.BasePanelComponent.js\";\n\nimport { a as WriteableElement, M as ModalPortalRootContext } from \"./chat.Header.js\";\n\nimport ReactDOM from \"react-dom\";\n\nimport \"dayjs/locale/en.js\";\n\nimport \"intl-messageformat\";\n\nimport \"@carbon/icons-react/es/Music.js\";\n\nimport \"uuid\";\n\nimport \"detect-browser\";\n\nimport \"memoize-one\";\n\nimport \"compute-scroll-into-view\";\n\nimport \"tabbable\";\n\nimport \"@carbon/icons-react/es/Attachment.js\";\n\nimport \"@lit/react\";\n\nimport \"tslib\";\n\nimport \"lit\";\n\nimport \"lit/decorators.js\";\n\nimport \"@carbon/web-components/es-custom/components/textarea/index.js\";\n\nimport \"@carbon/web-components/es-custom/components/icon-button/index.js\";\n\nimport \"@carbon/icon-helpers\";\n\nimport \"@carbon/icons/es/thumbs-down/16.js\";\n\nimport \"@carbon/icons/es/thumbs-down--filled/16.js\";\n\nimport \"@carbon/icons/es/thumbs-up/16.js\";\n\nimport \"@carbon/icons/es/thumbs-up--filled/16.js\";\n\nimport \"lit/directives/unsafe-svg.js\";\n\nimport \"@carbon/web-components/es-custom/components/tag/index.js\";\n\nimport \"@carbon/web-components/es-custom/components/chat-button/index.js\";\n\nimport \"@carbon/web-components/es-custom/components/button/button.js\";\n\nimport \"bind-decorator\";\n\nimport \"@carbon/web-components/es-custom/components/button/index.js\";\n\nimport \"@carbon/web-components/es-custom/components/layer/index.js\";\n\nimport \"@carbon/icons-react/es/Checkmark.js\";\n\nimport \"@carbon/icons-react/es/Headset.js\";\n\nimport \"@carbon/icons-react/es/HelpDesk.js\";\n\nimport \"@carbon/icons-react/es/Logout.js\";\n\nimport \"./chat.RichText.js\";\n\nimport \"lodash-es/throttle.js\";\n\nimport \"dompurify\";\n\nimport \"lit/directives/repeat.js\";\n\nimport \"lit/directives/unsafe-html.js\";\n\nimport \"./chat.htmlUtils.js\";\n\nimport \"./chat.stringUtils.js\";\n\nimport \"@carbon/icons-react/es/TouchInteraction.js\";\n\nimport \"@carbon/icons-react/es/Send.js\";\n\nimport \"@carbon/icons-react/es/ArrowRight.js\";\n\nimport \"@carbon/icons-react/es/Launch.js\";\n\nimport \"./chat.BodyWithFooterComponent.js\";\n\nimport \"lodash-es/debounce.js\";\n\nimport \"@carbon/icons-react/es/Link.js\";\n\nimport \"@carbon/icons-react/es/Maximize.js\";\n\nimport \"@carbon/icons-react/es/ChevronDown.js\";\n\nimport \"@carbon/icons-react/es/ChevronUp.js\";\n\nimport \"./chat.useCounter.js\";\n\nimport \"./chat.IFrameComponent.js\";\n\nimport \"csv-stringify/browser/esm/sync\";\n\nimport \"@carbon/web-components/es-custom/components/data-table/index.js\";\n\nimport \"@carbon/web-components/es-custom/components/checkbox/index.js\";\n\nimport \"@carbon/icons/es/download/16.js\";\n\nimport \"lit-html/directives/repeat.js\";\n\nimport \"@carbon/web-components/es-custom/components/pagination/index.js\";\n\nimport \"@carbon/web-components/es-custom/components/select/index.js\";\n\nimport \"@carbon/web-components/es-custom/components/data-table/table-skeleton.js\";\n\nimport \"@carbon/icons-react/es/Restart.js\";\n\nimport \"@carbon/web-components/es-custom/components/inline-loading/index.js\";\n\nimport \"@carbon/icons/es/checkmark--filled/16.js\";\n\nimport \"@carbon/icons/es/chevron--right/16.js\";\n\nimport \"@carbon/icons/es/error--filled/16.js\";\n\nimport \"@carbon/icons-react/es/ErrorFilled.js\";\n\nimport \"@carbon/icons-react/es/Home.js\";\n\nimport \"@carbon/web-components/es-custom/components/slug/index.js\";\n\nimport \"@carbon/icons-react/es/CloseLarge.js\";\n\nimport \"@carbon/icons-react/es/DownToBottom.js\";\n\nimport \"@carbon/icons-react/es/Menu.js\";\n\nimport \"@carbon/icons-react/es/SidePanelClose.js\";\n\nimport \"@carbon/icons-react/es/SubtractLarge.js\";\n\nimport \"@carbon/web-components/es-custom/components/ai-label/defs.js\";\n\nimport \"@carbon/web-components/es-custom/components/popover/defs.js\";\n\nimport \"@carbon/web-components/es-custom/components/skeleton-icon/index.js\";\n\nimport \"@carbon/web-components/es-custom/components/overflow-menu/index.js\";\n\nimport \"@floating-ui/react\";\n\nimport \"@carbon/web-components/es-custom/components/ai-label/ai-label-action-button.js\";\n\nimport \"@carbon/web-components/es-custom/components/ai-label/ai-label.js\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function withoutEmptyStarters(config) {\n  let newConfig = config;\n  if (config?.starters?.buttons?.length) {\n    newConfig = {\n      allow_return: true,\n      ...config,\n      starters: {\n        ...config.starters,\n        buttons: config.starters.buttons.filter(button => Boolean(button.label?.trim()))\n      }\n    };\n    if (!newConfig?.starters?.buttons?.length) {\n      newConfig.starters.is_on = false;\n    }\n  }\n  return newConfig;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function setIntl(serviceManager, locale, messages) {\n  serviceManager.intl = createIntl({\n    locale: locale,\n    messages: messages\n  });\n  serviceManager.store.dispatch(actions.setAppStateValue(\"languagePack\", messages));\n  serviceManager.store.dispatch(actions.setAppStateValue(\"locale\", locale));\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function createChatInstance({serviceManager: serviceManager, callRender: callRender}) {\n  let wasRendered = false;\n  function getMainWindow() {\n    return {\n      addClassName: name => serviceManager.mainWindow?.addClassName(name),\n      removeClassName: name => serviceManager.mainWindow?.removeClassName(name)\n    };\n  }\n  function getMessageInput() {\n    return {\n      getHTMLElement: () => serviceManager.mainWindow?.getMessageInput()?.getHTMLElement(),\n      setValue: value => serviceManager.mainWindow?.getMessageInput()?.setValue(value),\n      setEnableEnterKey: value => serviceManager.mainWindow?.getMessageInput()?.setEnableEnterKey(value),\n      addChangeListener: listener => serviceManager.mainWindow?.getMessageInput()?.addChangeListener(listener),\n      removeChangeListener: listener => serviceManager.mainWindow?.getMessageInput()?.removeChangeListener(listener)\n    };\n  }\n  function getHomeScreenInput() {\n    return {\n      getHTMLElement: () => serviceManager.mainWindow?.getHomeScreenInput()?.getHTMLElement(),\n      setValue: value => serviceManager.mainWindow?.getHomeScreenInput()?.setValue(value),\n      setEnableEnterKey: value => serviceManager.mainWindow?.getHomeScreenInput()?.setEnableEnterKey(value),\n      addChangeListener: listener => serviceManager.mainWindow?.getHomeScreenInput()?.addChangeListener(listener),\n      removeChangeListener: listener => serviceManager.mainWindow?.getHomeScreenInput()?.removeChangeListener(listener)\n    };\n  }\n  let instance = {\n    render: () => {\n      if (wasRendered) {\n        consoleError(\"The render function has already been called!\");\n        return Promise.resolve(instance);\n      }\n      wasRendered = true;\n      return callRender();\n    },\n    on: handlers => {\n      serviceManager.eventBus.on(handlers);\n      return instance;\n    },\n    off: handlers => {\n      serviceManager.eventBus.off(handlers);\n      return instance;\n    },\n    once: handlers => {\n      serviceManager.eventBus.once(handlers);\n      return instance;\n    },\n    updateLanguagePack: newPack => {\n      debugLog(\"Called instance.updateLanguagePack\", newPack);\n      return serviceManager.actions.updateLanguagePack(newPack);\n    },\n    updateLocale: newLocale => {\n      debugLog(\"Called instance.updateLocale\", newLocale);\n      const localePromise = loadLocale(newLocale);\n      const languagePackPromise = loadLanguagePack(serviceManager.store.getState().languagePack);\n      return Promise.all([ localePromise, languagePackPromise ]).then(([localePack, languagePack]) => {\n        dayjs.locale(localePack);\n        setIntl(serviceManager, localePack.name, languagePack);\n        serviceManager.messageService.pendingLocale = true;\n        serviceManager.messageService.localeIsExplicit = true;\n      });\n    },\n    updateCSSVariables: (variables, whiteLabelVariables) => {\n      debugLog(\"Called instance.updateCSSVariables\", variables);\n      return serviceManager.actions.updateCSSVariables(variables, whiteLabelVariables);\n    },\n    send: async (message, options) => {\n      debugLog(\"Called instance.send\", message, options);\n      if (selectInputState(serviceManager.store.getState()).isReadonly) {\n        throw new Error(\"You are unable to send messages in read only mode.\");\n      }\n      return serviceManager.actions.send(message, MessageSendSource.INSTANCE_SEND, options);\n    },\n    doAutoScroll: (options = {}) => {\n      debugLog(\"Called instance.doAutoScroll\", options);\n      serviceManager.mainWindow?.doAutoScroll?.(options);\n    },\n    destroy: () => {\n      debugLog(\"Called instance.destroy\");\n      serviceManager.store.dispatch(actions.setAppStateValue(\"isDestroyed\", true));\n      serviceManager.container?.remove();\n      instance = undefined;\n    },\n    updateAssistantInputFieldVisibility: isVisible => {\n      debugLog(\"Called instance.updateAssistantInputFieldVisibility\", isVisible);\n      serviceManager.store.dispatch(actions.updateInputState({\n        fieldVisible: isVisible\n      }, false));\n    },\n    updateInputIsDisabled: isDisabled => {\n      debugLog(\"Called instance.updateInputIsDisabled\", isDisabled);\n      serviceManager.store.dispatch(actions.updateInputState({\n        isReadonly: isDisabled\n      }, false));\n    },\n    updateBotUnreadIndicatorVisibility: isVisible => {\n      debugLog(\"Called instance.updateBotUnreadIndicatorVisibility\", isVisible);\n      serviceManager.store.dispatch(actions.setLauncherProperty(\"showUnreadIndicator\", isVisible));\n    },\n    changeView: async newView => {\n      debugLog(\"Called instance.changeView\", newView);\n      let issueWithNewView = false;\n      if (!wasRendered) {\n        consoleError(`You tried to call \"changeView\" without ever having called the \"render\" method. There is no view to change!`);\n        issueWithNewView = true;\n      }\n      const viewTypeValues = Object.values(ViewType);\n      if (typeof newView === \"string\") {\n        if (!viewTypeValues.includes(newView)) {\n          consoleError(`You tried to change the view but the view you specified is not a valid view name. Please use` + ` the valid view names; ${viewTypeValues.join(\", \")}.`);\n          issueWithNewView = true;\n        }\n      } else if (typeof newView === \"object\") {\n        Object.keys(newView).forEach(key => {\n          if (!viewTypeValues.includes(key)) {\n            consoleError(`You tried to change the state of multiple views by providing an object, however you included the key` + ` \"${key}\" within the object which is not a valid view name. Please use the valid view names; ` + `${viewTypeValues.join(\", \")}.`);\n            issueWithNewView = true;\n          }\n        });\n      } else {\n        consoleError(\"You tried to change the view but the view you provided was not a string or an object. You can either change\" + ' to one of the supported views by providing a string, ex. \"launcher\", \"mainWindow\", or \"tour\". Or you can' + ' change the state of multiple views by providing an object, ex. { \"launcher\": true, \"mainWindow\": false,' + ' \"tour\": true }. Please use one of these supported options.');\n        issueWithNewView = true;\n      }\n      if (!issueWithNewView) {\n        await serviceManager.actions.changeView(newView, {\n          viewChangeReason: ViewChangeReason.CALLED_CHANGE_VIEW\n        });\n      }\n    },\n    notifications: {\n      addNotification: notification => {\n        debugLog(\"Called instance.addNotification\", notification);\n        serviceManager.actions.addNotification(notification);\n      },\n      removeNotifications: groupID => {\n        debugLog(\"Called instance.removeNotifications\", groupID);\n        serviceManager.actions.removeNotification(groupID);\n      },\n      removeAllNotifications: () => {\n        debugLog(\"Called instance.removeAllNotifications\");\n        serviceManager.actions.removeAllNotifications();\n      }\n    },\n    updateMainHeaderTitle: title => {\n      debugLog(\"Called instance.updateMainHeaderTitle\", title);\n      if (!title) {\n        title = null;\n      }\n      serviceManager.actions.updateMainHeaderTitle(title);\n    },\n    updateHomeScreenConfig: homeScreenConfig => {\n      debugLog(\"Called instance.updateHomeScreenConfig\", homeScreenConfig);\n      const homeScreenConfigClone = cloneDeep(homeScreenConfig);\n      const isAIThemeEnabled = serviceManager.store.getState().theme.useAITheme;\n      if (isAIThemeEnabled) {\n        if (homeScreenConfig?.background) {\n          consoleWarn(\"The home screen background can not be changed when the AI theme is enabled.\");\n          delete homeScreenConfigClone.background;\n        }\n      }\n      serviceManager.actions.updateHomeScreenConfig(withoutEmptyStarters(homeScreenConfigClone));\n    },\n    getState: () => serviceManager.actions.getPublicWebChatState(),\n    writeableElements: createWriteableElementsProxy(serviceManager),\n    scrollToMessage: (messageID, animate) => {\n      debugLog(\"Called instance.scrollToMessage\", messageID, animate);\n      serviceManager.mainWindow?.doScrollToMessage(messageID, animate);\n    },\n    updateLauncherConfig: config => serviceManager.actions.updateLauncherConfig(config),\n    customPanels: serviceManager.customPanelManager,\n    updateCustomMenuOptions: options => {\n      debugLog(\"Called instance.updateCustomMenuOptions\", options);\n      serviceManager.store.dispatch(actions.setAppStateValue(\"customMenuOptions\", options));\n    },\n    restartConversation: async () => {\n      debugLog(\"Called instance.restartConversation\");\n      return serviceManager.actions.restartConversation();\n    },\n    agentEndConversation: () => {\n      debugLog(\"Called instance.agentEndConversation\");\n      consoleWarn(`The instance.agentEndConversation method is deprecated. Use instance.serviceDesk.endConversation instead.`);\n      return serviceManager.actions.agentEndConversation(false);\n    },\n    updateIsTypingCounter(direction) {\n      debugLog(\"Called instance.updateIsTypingCounter\", direction);\n      const {store: store} = serviceManager;\n      if (direction === \"increase\") {\n        store.dispatch(actions.addIsTypingCounter(1));\n      } else if (direction === \"decrease\") {\n        if (store.getState().botMessageState.isTypingCounter <= 0) {\n          consoleError(\"You cannot decrease the typing counter when it is already <= 0\");\n          return;\n        }\n        store.dispatch(actions.addIsTypingCounter(-1));\n      } else {\n        consoleError(`[updateIsTypingCounter] Invalid direction: ${direction}. Valid values are \"increase\" and \"decrease\".`);\n      }\n    },\n    updateIsLoadingCounter(direction) {\n      debugLog(\"Called instance.updateIsLoadingCounter\", direction);\n      const {store: store} = serviceManager;\n      if (direction === \"increase\") {\n        store.dispatch(actions.addIsLoadingCounter(1));\n      } else if (direction === \"decrease\") {\n        if (store.getState().botMessageState.isLoadingCounter <= 0) {\n          consoleError(\"You cannot decrease the loading counter when it is already <= 0\");\n          return;\n        }\n        store.dispatch(actions.addIsLoadingCounter(-1));\n      } else {\n        consoleError(`[updateIsLoadingCounter] Invalid direction: ${direction}. Valid values are \"increase\" and \"decrease\".`);\n      }\n    },\n    updateIsChatLoadingCounter(direction) {\n      debugLog(\"Called instance.updateIsChatLoadingCounter\", direction);\n      const {store: store} = serviceManager;\n      if (direction === \"increase\") {\n        store.dispatch(actions.addIsHydratingCounter(1));\n      } else if (direction === \"decrease\") {\n        if (store.getState().botMessageState.isHydratingCounter <= 0) {\n          consoleError(\"You cannot decrease the hydrating counter when it is already <= 0\");\n          return;\n        }\n        store.dispatch(actions.addIsHydratingCounter(-1));\n      } else {\n        consoleError(`[updateIsChatLoadingCounter] Invalid direction: ${direction}. Valid values are \"increase\" and \"decrease\".`);\n      }\n    },\n    updateHeaderConfig: config => {\n      const configCopy = cloneDeep(config);\n      serviceManager.store.dispatch(actions.updateChatHeaderConfig(configCopy));\n    },\n    updateMainHeaderAvatar: config => {\n      serviceManager.store.dispatch(actions.updateMainHeaderAvatar(config));\n    },\n    updateBotName: name => serviceManager.actions.updateBotName(name),\n    updateBotAvatarURL: url => serviceManager.actions.updateBotAvatarURL(url),\n    elements: {\n      getMainWindow: getMainWindow,\n      getMessageInput: getMessageInput,\n      getHomeScreenInput: getHomeScreenInput\n    },\n    tours: {\n      startTour: async message => {\n        debugLog(\"Called instance.tours.startTour\", message);\n        await serviceManager.actions.send(message, MessageSendSource.START_TOUR_METHOD, {\n          skipTourCard: true\n        });\n      },\n      endTour: async () => {\n        debugLog(\"Called instance.tours.endTour\");\n        serviceManager.actions.endTour({\n          viewChangeReason: ViewChangeReason.CALLED_END_TOUR\n        });\n      },\n      goToNextStep: async () => {\n        debugLog(\"Called instance.tours.goToNextStep\");\n        serviceManager.actions.changeStepInTour({\n          nextStep: true\n        });\n      },\n      goToStep: async stepId => {\n        debugLog(\"Called instance.tours.goToStep\", stepId);\n        serviceManager.actions.goToSpecificTourStep(stepId);\n      }\n    },\n    messaging: {\n      addMessage: (message, options = {}) => {\n        debugLog(\"Called instance.messaging.addMessage\", message, options);\n        serviceManager.messageService.messageLoadingManager.end();\n        return serviceManager.actions.receive(message, options?.isLatestWelcomeNode ?? false, null, {\n          disableFadeAnimation: options?.disableFadeAnimation\n        });\n      },\n      addMessageChunk: async (chunk, options = {}) => {\n        debugLog(\"Called instance.messaging.addMessageChunk\", chunk, options);\n        serviceManager.messageService.messageLoadingManager.end();\n        await serviceManager.actions.receiveChunk(chunk, null, options);\n      },\n      removeMessages: async messageIDs => {\n        debugLog(\"Called instance.messaging.removeMessages\", messageIDs);\n        return serviceManager.actions.removeMessages(messageIDs);\n      },\n      clearConversation: () => {\n        debugLog(\"Called instance.messaging.clearConversation\");\n        return serviceManager.actions.restartConversation({\n          skipHydration: true,\n          endAgentConversation: false,\n          fireEvents: false\n        });\n      },\n      insertHistory: messages => {\n        debugLog(\"Called instance.messaging.insertHistory\", messages);\n        return serviceManager.actions.insertHistory(messages);\n      }\n    },\n    requestFocus: () => {\n      debugLog(\"Called instance.requestFocus\");\n      serviceManager.appWindow?.requestFocus();\n    },\n    serviceDesk: {\n      endConversation: () => {\n        debugLog(\"Called instance.serviceDesk.endConversation\");\n        return serviceManager.actions.agentEndConversation(false);\n      },\n      updateIsSuspended: async isSuspended => {\n        debugLog(\"Called instance.serviceDesk.updateIsSuspended\", isSuspended);\n        return serviceManager.actions.agentUpdateIsSuspended(isSuspended);\n      }\n    }\n  };\n  if (serviceManager.store.getState().config.public.debug) {\n    consoleDebug(\"[ChatInstanceImpl] Created chat instance\", instance);\n  }\n  return instance;\n}\n\nfunction createWriteableElementsProxy(serviceManager) {\n  const elementSet = new Set;\n  const handler = {\n    get(target, element) {\n      if (!elementSet.has(element)) {\n        elementSet.add(element);\n      }\n      return target[element];\n    }\n  };\n  return new Proxy(serviceManager.writeableElements, handler);\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const NODE_ENV = \"production\";\n\nconst VERSION = \"0.4.0\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ var NotificationType;\n\n(function(NotificationType) {\n  NotificationType[\"TEXT_NOTIFICATION\"] = \"text_notification\";\n})(NotificationType || (NotificationType = {}));\n\nconst BOUNCING_ANIMATION_TIMEOUTS = [ 15e3, 6e4 ];\n\nconst TIME_TO_ENTRANCE_ANIMATION_START = 15e3;\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const DEFAULT_LAUNCHER = {\n  config: {\n    is_on: true,\n    mobile: {\n      is_on: true,\n      title: \"\",\n      time_to_expand: TIME_TO_ENTRANCE_ANIMATION_START,\n      new_expand_time: false,\n      time_to_reduce: 1e4,\n      notification_type: NotificationType.TEXT_NOTIFICATION\n    },\n    desktop: {\n      is_on: true,\n      title: \"\",\n      new_expand_time: false,\n      time_to_expand: TIME_TO_ENTRANCE_ANIMATION_START,\n      notification_type: NotificationType.TEXT_NOTIFICATION\n    }\n  }\n};\n\ndeepFreeze(DEFAULT_LAUNCHER);\n\nconst DEFAULT_CUSTOM_PANEL_CONFIG_OPTIONS = {\n  title: null,\n  hideBackButton: false,\n  hidePanelHeader: false,\n  disableAnimation: false\n};\n\ndeepFreeze(DEFAULT_CUSTOM_PANEL_CONFIG_OPTIONS);\n\nconst DEFAULT_CUSTOM_PANEL_STATE = {\n  isOpen: false,\n  panelID: DEFAULT_CUSTOM_PANEL_ID,\n  options: DEFAULT_CUSTOM_PANEL_CONFIG_OPTIONS\n};\n\ndeepFreeze(DEFAULT_CUSTOM_PANEL_STATE);\n\nconst DEFAULT_IFRAME_PANEL_STATE = {\n  isOpen: false,\n  messageItem: null\n};\n\ndeepFreeze(DEFAULT_IFRAME_PANEL_STATE);\n\nconst DEFAULT_CITATION_PANEL_STATE = {\n  isOpen: false,\n  citationItem: null\n};\n\ndeepFreeze(DEFAULT_CITATION_PANEL_STATE);\n\nconst DEFAULT_TOUR_STATE = {\n  activeTourStepItems: null\n};\n\ndeepFreeze(DEFAULT_TOUR_STATE);\n\nconst DEFAULT_MESSAGE_PANEL_STATE = {\n  isOpen: false,\n  localMessageItem: null,\n  isMessageForInput: false\n};\n\ndeepFreeze(DEFAULT_MESSAGE_PANEL_STATE);\n\nconst VIEW_STATE_ALL_CLOSED = {\n  launcher: false,\n  mainWindow: false,\n  tour: false\n};\n\ndeepFreeze(VIEW_STATE_ALL_CLOSED);\n\nconst VIEW_STATE_LAUNCHER_OPEN = {\n  launcher: true,\n  mainWindow: false,\n  tour: false\n};\n\ndeepFreeze(VIEW_STATE_LAUNCHER_OPEN);\n\nconst VIEW_STATE_MAIN_WINDOW_OPEN = {\n  mainWindow: true,\n  launcher: false,\n  tour: false\n};\n\ndeepFreeze(VIEW_STATE_MAIN_WINDOW_OPEN);\n\nconst DEFAULT_PERSISTED_TO_BROWSER = {\n  chatState: {\n    version: VERSION,\n    disclaimersAccepted: {},\n    homeScreenState: {\n      isHomeScreenOpen: false,\n      showBackToBot: false\n    },\n    hasSentNonWelcomeMessage: false,\n    persistedTourState: {\n      activeTourID: null,\n      activeTourCurrentStepIndex: null\n    },\n    agentState: {\n      isConnected: false,\n      isSuspended: false,\n      agentProfiles: {}\n    }\n  },\n  launcherState: {\n    wasLoadedFromBrowser: false,\n    version: VERSION,\n    viewState: VIEW_STATE_ALL_CLOSED,\n    activeTour: false,\n    showUnreadIndicator: false,\n    mobileLauncherIsExtended: false,\n    mobileLauncherWasReduced: false,\n    mobileLauncherDisableBounce: false,\n    desktopLauncherIsExpanded: false,\n    desktopLauncherWasMinimized: false,\n    bounceTurn: 1,\n    hasSentNonWelcomeMessage: false\n  }\n};\n\ndeepFreeze(DEFAULT_PERSISTED_TO_BROWSER);\n\nconst DEFAULT_CHAT_MESSAGES_STATE = {\n  localMessageIDs: [],\n  messageIDs: [],\n  isTypingCounter: 0,\n  isLoadingCounter: 0,\n  isHydratingCounter: 0,\n  isScrollAnchored: false\n};\n\ndeepFreeze(DEFAULT_CHAT_MESSAGES_STATE);\n\nconst DEFAULT_MESSAGE_STATE = {\n  allMessageItemsByID: {},\n  allMessagesByID: {},\n  botMessageState: {\n    ...DEFAULT_CHAT_MESSAGES_STATE\n  }\n};\n\ndeepFreeze(DEFAULT_MESSAGE_STATE);\n\nconst DEFAULT_INPUT_STATE = () => ({\n  fieldVisible: true,\n  isReadonly: false,\n  files: [],\n  allowFileUploads: false,\n  allowMultipleFileUploads: false,\n  allowedFileUploadTypes: null,\n  stopStreamingButtonState: {\n    currentStreamID: null,\n    isVisible: false,\n    isDisabled: false\n  }\n});\n\nconst DEFAULT_AGENT_STATE = {\n  isConnecting: false,\n  isReconnecting: false,\n  numUnreadMessages: 0,\n  fileUploadInProgress: false,\n  showScreenShareRequest: false,\n  isScreenSharing: false,\n  isAgentTyping: false,\n  inputState: DEFAULT_INPUT_STATE()\n};\n\ndeepFreeze(DEFAULT_AGENT_STATE);\n\nconst DEFAULT_THEME_STATE = {\n  carbonTheme: CarbonTheme.G10,\n  useAITheme: false,\n  corners: CornersType.ROUND\n};\n\ndeepFreeze(DEFAULT_THEME_STATE);\n\nconst DEFAULT_LAYOUT_STATE = {\n  showFrame: true,\n  hasContentMaxWidth: true\n};\n\ndeepFreeze(DEFAULT_LAYOUT_STATE);\n\nfunction calcAnnouncementForWidgetOpen(previousState, newViewState) {\n  if (isEqual(previousState.persistedToBrowserStorage.launcherState.viewState, newViewState)) {\n    return previousState.announceMessage;\n  }\n  return {\n    messageID: newViewState.mainWindow ? \"window_ariaWindowOpened\" : \"window_ariaWindowClosed\"\n  };\n}\n\nfunction applyBotMessageState(state, newState) {\n  return {\n    ...state,\n    botMessageState: {\n      ...state.botMessageState,\n      ...newState\n    }\n  };\n}\n\nfunction handleViewStateChange(state, viewState) {\n  let {agentState: agentState} = state;\n  let {showUnreadIndicator: showUnreadIndicator} = state.persistedToBrowserStorage.launcherState;\n  if (viewState.mainWindow && state.isBrowserPageVisible) {\n    if (agentState.numUnreadMessages !== 0) {\n      agentState = {\n        ...agentState,\n        numUnreadMessages: 0\n      };\n    }\n    showUnreadIndicator = false;\n  }\n  return {\n    ...state,\n    announceMessage: calcAnnouncementForWidgetOpen(state, viewState),\n    agentState: agentState,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      launcherState: {\n        ...state.persistedToBrowserStorage.launcherState,\n        viewState: viewState,\n        showUnreadIndicator: showUnreadIndicator\n      }\n    }\n  };\n}\n\nfunction setHomeScreenOpenState(state, isOpen, showBackToBot) {\n  if (showBackToBot === undefined) {\n    showBackToBot = state.persistedToBrowserStorage.chatState.homeScreenState.showBackToBot;\n  }\n  return {\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      chatState: {\n        ...state.persistedToBrowserStorage.chatState,\n        homeScreenState: {\n          ...state.persistedToBrowserStorage.chatState.homeScreenState,\n          isHomeScreenOpen: isOpen,\n          showBackToBot: showBackToBot\n        }\n      }\n    }\n  };\n}\n\nfunction applyLocalMessageUIState(state, localMessageID, propertyName, propertyValue) {\n  const oldMessage = state.allMessageItemsByID[localMessageID];\n  if (oldMessage) {\n    return {\n      ...state,\n      allMessageItemsByID: {\n        ...state.allMessageItemsByID,\n        [localMessageID]: {\n          ...oldMessage,\n          ui_state: {\n            ...oldMessage.ui_state,\n            [propertyName]: propertyValue\n          }\n        }\n      }\n    };\n  }\n  return state;\n}\n\nfunction applyFullMessage(state, message) {\n  const newState = {\n    ...state,\n    allMessagesByID: {\n      ...state.allMessagesByID,\n      [message.id]: message\n    }\n  };\n  if (!state.allMessagesByID[message.id]) {\n    const currentMessageIDs = state.botMessageState.messageIDs;\n    const newMessageIDs = [ ...currentMessageIDs, message.id ];\n    return applyBotMessageState(newState, {\n      messageIDs: newMessageIDs\n    });\n  }\n  return newState;\n}\n\nvar white = \"#ffffff\";\n\nvar blue60 = \"#0f62fe\";\n\nvar gray10 = \"#f4f4f4\";\n\nvar gray80 = \"#393939\";\n\nvar gray100 = \"#161616\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const MIN_CONTRAST = 4.5;\n\nfunction hexCodeToRGB(color) {\n  if (color.length === 7) {\n    const red = color.substring(1, 3);\n    const blue = color.substring(3, 5);\n    const green = color.substring(5, 7);\n    return [ parseInt(red, 16), parseInt(blue, 16), parseInt(green, 16) ];\n  }\n  if (color.length === 4) {\n    const red = color.substring(1, 2);\n    const blue = color.substring(2, 3);\n    const green = color.substring(3, 4);\n    return [ parseInt(red + red, 16), parseInt(blue + blue, 16), parseInt(green + green, 16) ];\n  }\n  consoleError(`Unsupported color code: \"${color}\"`);\n  return [ 0, 0, 0 ];\n}\n\nfunction calculateContrast(color1, color2) {\n  const rgb1 = hexCodeToRGB(color1);\n  const rgb2 = hexCodeToRGB(color2);\n  const luminance1 = calculateRelativeLuminance(rgb1);\n  const luminance2 = calculateRelativeLuminance(rgb2);\n  let contrast;\n  if (luminance1 > luminance2) {\n    contrast = (luminance1 + .05) / (luminance2 + .05);\n  } else {\n    contrast = (luminance2 + .05) / (luminance1 + .05);\n  }\n  return contrast;\n}\n\nfunction calculateRelativeLuminance([r8, g8, b8]) {\n  const rRGB = r8 / 255;\n  const gRGB = g8 / 255;\n  const bRGB = b8 / 255;\n  const R = rRGB <= .03928 ? rRGB / 12.92 : ((rRGB + .055) / 1.055) ** 2.4;\n  const G = gRGB <= .03928 ? gRGB / 12.92 : ((gRGB + .055) / 1.055) ** 2.4;\n  const B = bRGB <= .03928 ? bRGB / 12.92 : ((bRGB + .055) / 1.055) ** 2.4;\n  const luminance = .2126 * R + .7152 * G + .0722 * B;\n  return luminance;\n}\n\nfunction whiteOrBlackText(background) {\n  return calculateContrast(gray100, background) >= MIN_CONTRAST ? gray100 : white;\n}\n\nfunction adjustLightness(token, shift) {\n  const original = Color(token).hsl().object();\n  return Color({\n    ...original,\n    l: original.l + shift\n  }).round().hex().toLowerCase();\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const CSS_VAR_PREFIX = \"--cds-\";\n\nconst CSS_CHAT_PREFIX = \"chat-\";\n\nconst HEXADECIMAL_REGEX = /#([a-f0-9]{3}){1,2}\\b/i;\n\nconst INTERNAL_OVERRIDES_LIGHT_THEME_MAP = {\n  \"$chat-button\": \"#000000\",\n  \"$chat-button-text-hover\": \"#525252\"\n};\n\nconst INTERNAL_OVERRIDES_DARK_THEME_MAP = {\n  \"$chat-button\": \"#ffffff\",\n  \"$chat-button-text-hover\": \"#f4f4f4\"\n};\n\nfunction convertCSSVariablesToString(cssVariables) {\n  const pieces = Object.keys(cssVariables).map(key => {\n    const value = cssVariables[key];\n    if (value === undefined) {\n      return \"\";\n    }\n    const fullName = key.startsWith(\"$\") ? `${CSS_VAR_PREFIX}${key.replace(/^\\$/, \"\")}` : `${CSS_VAR_PREFIX}${CSS_CHAT_PREFIX}${key}`;\n    return `${fullName}:${value};`;\n  });\n  let cssVariablesString = \"\";\n  const allValues = pieces.join(\"\");\n  const prefix = \"\";\n  if (allValues.length > 0) {\n    const rule = `${prefix}.WACContainer .cds--white, ${prefix}.WACContainer .cds--g10, ${prefix}.WACContainer .cds--g90, ${prefix}.WACContainer .cds--g100`;\n    cssVariablesString = `${rule}${`, :host`}{${allValues}}`;\n  }\n  return cssVariablesString;\n}\n\nfunction remoteStylesToCSSVars(whiteLabelVariables, carbonTheme) {\n  const cssOverrides = {};\n  const primaryColor = whiteLabelVariables[\"BASE-primary-color\"];\n  const secondaryColor = whiteLabelVariables[\"BASE-secondary-color\"];\n  const accentColor = whiteLabelVariables[\"BASE-accent-color\"];\n  if (primaryColor) {\n    cssOverrides[\"PRIMARY-color\"] = primaryColor;\n    cssOverrides[\"PRIMARY-color-text\"] = whiteOrBlackText(primaryColor);\n    cssOverrides[\"PRIMARY-color-hover\"] = adjustLightness(primaryColor, -8);\n    cssOverrides[\"PRIMARY-color-active\"] = adjustLightness(primaryColor, -10);\n    const useAccentColor = accentColor || blue60;\n    const tryFocusColor = carbonTheme === CarbonTheme.G90 || carbonTheme === CarbonTheme.G100 ? white : useAccentColor;\n    let useFocusColor;\n    if (calculateContrast(primaryColor, tryFocusColor) >= MIN_CONTRAST) {\n      useFocusColor = tryFocusColor;\n    } else if (tryFocusColor !== useAccentColor && calculateContrast(primaryColor, useAccentColor) >= MIN_CONTRAST) {\n      useFocusColor = useAccentColor;\n    } else if (tryFocusColor !== white && calculateContrast(primaryColor, white) >= MIN_CONTRAST) {\n      useFocusColor = white;\n    } else {\n      useFocusColor = gray100;\n    }\n    if (useFocusColor !== tryFocusColor) {\n      cssOverrides[\"PRIMARY-color-focus\"] = useFocusColor;\n    }\n  }\n  if (secondaryColor) {\n    cssOverrides[\"SECONDARY-color\"] = secondaryColor;\n    cssOverrides[\"SECONDARY-color-text\"] = whiteOrBlackText(secondaryColor);\n  } else if (carbonTheme === CarbonTheme.G90 || carbonTheme === CarbonTheme.G100) {\n    cssOverrides[\"SECONDARY-color\"] = `var(${CSS_VAR_PREFIX}layer-02)`;\n    cssOverrides[\"SECONDARY-color-text\"] = `var(${CSS_VAR_PREFIX}text-primary);`;\n  }\n  if (accentColor) {\n    const colorMap = ACCENT_COLOR_MAPS[carbonTheme];\n    const accentBlue20 = adjustLightness(accentColor, 40);\n    const accentBlue60Hover = adjustLightness(accentColor, -8);\n    const accentBlue80 = adjustLightness(accentColor, -20);\n    fillValues(cssOverrides, colorMap.blue20, accentBlue20);\n    fillValues(cssOverrides, colorMap.blue60, accentColor);\n    fillValues(cssOverrides, colorMap.blue60Hover, accentBlue60Hover);\n    fillValues(cssOverrides, colorMap.blue80, accentBlue80);\n    cssOverrides[\"LAUNCHER-color-background\"] = accentColor;\n    cssOverrides[\"LAUNCHER-color-background-hover\"] = accentBlue60Hover;\n    cssOverrides[\"LAUNCHER-color-background-active\"] = accentBlue80;\n    cssOverrides[\"LAUNCHER-EXPANDED-MESSAGE-color-background\"] = accentColor;\n    cssOverrides[\"LAUNCHER-EXPANDED-MESSAGE-color-hover\"] = accentBlue60Hover;\n    cssOverrides[\"LAUNCHER-EXPANDED-MESSAGE-color-active\"] = accentBlue80;\n    cssOverrides[\"ACCENT-color\"] = accentColor;\n    const accentColorRGB = hexCodeToRGB(accentColor);\n    cssOverrides[\"ACCENT-color-r\"] = accentColorRGB[0].toString();\n    cssOverrides[\"ACCENT-color-g\"] = accentColorRGB[1].toString();\n    cssOverrides[\"ACCENT-color-b\"] = accentColorRGB[2].toString();\n    cssOverrides[\"ACCENT-color-ghost-text\"] = accentColor;\n    const accentColorBW = whiteOrBlackText(accentColor);\n    cssOverrides[\"ACCENT-color-text\"] = accentColorBW;\n    cssOverrides[\"ACCENT-color-background-hover\"] = accentBlue60Hover;\n    cssOverrides[\"ACCENT-color-background-active\"] = accentBlue80;\n    cssOverrides[\"LAUNCHER-color-focus-border\"] = accentColorBW;\n    cssOverrides[\"LAUNCHER-color-avatar\"] = accentColorBW;\n    cssOverrides[\"LAUNCHER-EXPANDED-MESSAGE-color-text\"] = accentColorBW;\n    cssOverrides[\"LAUNCHER-EXPANDED-MESSAGE-color-focus-border\"] = accentColorBW;\n    cssOverrides[\"LAUNCHER-MOBILE-color-text\"] = accentColorBW;\n    cssOverrides[\"ACCENT-color-bw\"] = accentColorBW;\n    cssOverrides[\"ACCENT-color-bw-hover\"] = adjustLightness(accentColorBW, -8);\n    cssOverrides[\"ACCENT-color-bw-active\"] = adjustLightness(accentColorBW, -10);\n    cssOverrides[\"ACCENT-color-bw-inverse\"] = accentColorBW === gray100 ? white : gray100;\n    cssOverrides[\"ACCENT-color-bw-gray\"] = accentColorBW === gray100 ? gray80 : gray10;\n    cssOverrides[\"ACCENT-color-pastel\"] = accentColorBW === gray100 ? adjustLightness(accentColor, 20) : adjustLightness(accentColor, -15);\n  }\n  return cssOverrides;\n}\n\nconst ACCENT_COLOR_MAPS = {\n  white: {\n    blue20: [ \"$highlight\" ],\n    blue60: [ \"$background-brand\", \"$interactive\", \"$border-interactive\", \"$button-primary\", \"$button-tertiary\", \"$icon-interactive\", \"$focus\" ],\n    blue60Hover: [ \"$button-primary-hover\", \"$button-tertiary-hover\" ],\n    blue80: [ \"$button-primary-active\", \"$button-tertiary-active\" ]\n  },\n  g10: {\n    blue20: [ \"$highlight\" ],\n    blue60: [ \"$background-brand\", \"$interactive\", \"$border-interactive\", \"$button-primary\", \"$button-tertiary\", \"$icon-interactive\", \"$focus\" ],\n    blue60Hover: [ \"$button-primary-hover\", \"$button-tertiary-hover\" ],\n    blue80: [ \"$button-primary-active\", \"$button-tertiary-active\" ]\n  },\n  g90: {\n    blue20: [],\n    blue60: [ \"$background-brand\", \"$interactive\", \"$border-interactive\", \"$button-primary\", \"$button-tertiary\", \"$focus-inverse\" ],\n    blue60Hover: [ \"$button-primary-hover\", \"$button-tertiary-hover\" ],\n    blue80: [ \"$button-primary-active\", \"$highlight\", \"$button-tertiary-active\" ]\n  },\n  g100: {\n    blue20: [],\n    blue60: [ \"$background-brand\", \"$interactive\", \"$border-interactive\", \"$button-primary\", \"$button-tertiary\", \"$focus-inverse\" ],\n    blue60Hover: [ \"$button-primary-hover\", \"$button-tertiary-hover\" ],\n    blue80: [ \"$button-primary-active\", \"$highlight\", \"$button-tertiary-active\" ]\n  }\n};\n\nfunction fillValues(styles, propertyNames, value) {\n  propertyNames.forEach(propertyName => {\n    styles[propertyName] = value;\n  });\n}\n\nfunction mergeCSSVariables(publicVars, whiteLabelVariables, carbonTheme, useAITheme) {\n  carbonTheme = carbonTheme || CarbonTheme.G10;\n  useAITheme = useAITheme || false;\n  publicVars = publicVars || {};\n  const internalOverrides = createInternalCSSOverridesMap(carbonTheme, useAITheme);\n  const result = {\n    ...internalOverrides,\n    ...publicVars\n  };\n  Object.entries(result).forEach(([key, value]) => {\n    if (key.startsWith(\"$\") && !value.match(HEXADECIMAL_REGEX)) {\n      console.warn(`${WA_CONSOLE_PREFIX} You tried to call \"updateCSSVariables\" with an invalid value for \"${key}\": \"${publicVars[key]}\". You must use hexadecimal values for colors.`);\n      delete result[key];\n    }\n  });\n  const remoteVars = remoteStylesToCSSVars(whiteLabelVariables || {}, carbonTheme);\n  Object.entries(remoteVars).forEach(([key, value]) => {\n    if (value !== \"\" && publicVars[key] === undefined) {\n      result[key] = value;\n    }\n  });\n  return result;\n}\n\nfunction createInternalCSSOverridesMap(carbonTheme, useAITheme) {\n  let internalOverridesMap = {};\n  if (!useAITheme) {\n    if ([ CarbonTheme.G10, CarbonTheme.WHITE ].includes(carbonTheme)) {\n      internalOverridesMap = {\n        ...internalOverridesMap,\n        ...INTERNAL_OVERRIDES_LIGHT_THEME_MAP\n      };\n    } else if ([ CarbonTheme.G90, CarbonTheme.G100 ].includes(carbonTheme)) {\n      internalOverridesMap = {\n        ...internalOverridesMap,\n        ...INTERNAL_OVERRIDES_DARK_THEME_MAP\n      };\n    }\n  }\n  return internalOverridesMap;\n}\n\nfunction getThemeClassNames(themeState) {\n  let themeClassnames;\n  switch (themeState?.carbonTheme) {\n   case CarbonTheme.WHITE:\n    themeClassnames = CarbonThemeClassNames.WHITE;\n    break;\n\n   case CarbonTheme.G10:\n    themeClassnames = CarbonThemeClassNames.G10;\n    break;\n\n   case CarbonTheme.G90:\n    themeClassnames = CarbonThemeClassNames.G90;\n    break;\n\n   case CarbonTheme.G100:\n    themeClassnames = CarbonThemeClassNames.G100;\n    break;\n\n   default:\n    themeClassnames = CarbonThemeClassNames.G10;\n    break;\n  }\n  if (themeState?.useAITheme) {\n    themeClassnames += \" WAC--aiTheme\";\n  }\n  return themeClassnames;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function constructViewState(newView, appState) {\n  const {viewState: viewState} = appState.persistedToBrowserStorage.launcherState;\n  let newViewState;\n  if (typeof newView === \"string\") {\n    newViewState = {\n      ...VIEW_STATE_ALL_CLOSED,\n      [newView]: true\n    };\n  } else {\n    newViewState = {\n      ...viewState,\n      ...newView\n    };\n  }\n  return newViewState;\n}\n\nfunction validateViewState(viewState, appState) {\n  const {activeTour: activeTour} = appState.persistedToBrowserStorage.launcherState;\n  if (viewState.tour && !activeTour) {\n    consoleError(\"Error changing the view. The new view was supposed to show a tour however there is no active tour to show.\" + \" Changing the view has been canceled.\");\n    return false;\n  }\n  return true;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const VALID_PUBLIC_VARS_IN_AI_THEME_SET = new Set(Object.values(CSSVariable));\n\nconst UPDATE_CSS_VARS_AI_THEME_WARNING_MESSAGE = `[updateCSSVariables] The AI theme is enabled and only ${Object.values(CSSVariable).join(\", \")} can be updated.`;\n\nclass ChatActionsImpl {\n  constructor(serviceManager) {\n    this.hydrating = false;\n    this.restarting = false;\n    this.alreadyHydrated = false;\n    this.chunkQueue = [];\n    this.serviceManager = serviceManager;\n  }\n  async hydrateChat(alternateWelcomeRequest, alternateWelcomeRequestSource, alternateOptions) {\n    let fireReady = false;\n    try {\n      if (!this.hydrationPromise) {\n        this.hydrating = true;\n        this.hydrationPromise = this.doHydrateChat(alternateWelcomeRequest, alternateWelcomeRequestSource, alternateOptions);\n        fireReady = true;\n      }\n      await this.hydrationPromise;\n    } finally {\n      this.hydrating = false;\n    }\n    if (fireReady) {\n      await this.serviceManager.fire({\n        type: BusEventType.CHAT_READY\n      });\n    }\n  }\n  async doHydrateChat(alternateWelcomeRequest, alternateWelcomeRequestSource, alternateOptions) {\n    debugLog(\"Hydrating Carbon AI chat\", alternateWelcomeRequest, alternateWelcomeRequestSource, alternateOptions);\n    let history;\n    const {serviceManager: serviceManager} = this;\n    serviceManager.store.dispatch(actions.addIsHydratingCounter(1));\n    if (!this.alreadyHydrated) {\n      history = await this.serviceManager.historyService.loadHistory();\n      if (serviceManager.humanAgentService) {\n        debugLog(\"Initializing the human agent service\");\n        await serviceManager.humanAgentService.initialize();\n      } else {\n        debugLog(\"No service desk integrations present\");\n      }\n    }\n    const {config: config} = serviceManager.store.getState();\n    if (!history) {\n      if (!alternateWelcomeRequest) {\n        const state = serviceManager.store.getState();\n        if (state.homeScreenConfig?.is_on) {\n          serviceManager.store.dispatch(actions.setHomeScreenIsOpen(true));\n        } else if (!config.public.messaging?.skipWelcome) {\n          await serviceManager.actions.send(createWelcomeRequest(), MessageSendSource.WELCOME_REQUEST, {\n            returnBeforeStreaming: true\n          }, true);\n        }\n      }\n    } else {\n      serviceManager.store.dispatch(actions.hydrateMessageHistory(history.messageHistory));\n      await this.createElementsForUserDefinedResponses(history.messageHistory);\n      if (history.latestPanelLocalMessageItem) {\n        this.openResponsePanel(history.latestPanelLocalMessageItem, true);\n      }\n    }\n    if (alternateWelcomeRequest) {\n      serviceManager.store.dispatch(actions.setHomeScreenIsOpen(false));\n      await serviceManager.actions.send(alternateWelcomeRequest, alternateWelcomeRequestSource, alternateOptions, true);\n    }\n    serviceManager.store.dispatch(actions.chatWasHydrated());\n    serviceManager.store.dispatch(actions.addIsHydratingCounter(-1));\n    if (history) {\n      const lastMessageID = arrayLastValue(history.messageHistory.botMessageState.localMessageIDs);\n      const lastMessage = history.messageHistory.allMessageItemsByID[lastMessageID];\n      const lastOriginalMessage = history.messageHistory.allMessagesByID[lastMessage?.fullMessageID];\n      if (!isLiveAgentMessage(lastMessage) && isRequest(lastOriginalMessage)) {\n        serviceManager.messageService.resendMessage(lastOriginalMessage, lastMessage.ui_state.id);\n      }\n    }\n    const allowReconnect = config.public.serviceDesk.allowReconnect ?? true;\n    this.serviceManager?.humanAgentService?.handleHydration(allowReconnect, Boolean(history));\n    this.alreadyHydrated = true;\n  }\n  getPublicWebChatState() {\n    const state = this.serviceManager.store.getState();\n    const {persistedToBrowserStorage: persistedToBrowserStorage} = state;\n    const {chatState: chatState, launcherState: launcherState} = persistedToBrowserStorage;\n    const publicWebChatState = {\n      isConnectedWithHumanAgent: chatState.agentState.isConnected,\n      isWebChatOpen: launcherState.viewState.mainWindow,\n      isConnectingWithHumanAgent: state.agentState.isConnecting,\n      isHomeScreenOpen: chatState.homeScreenState.isHomeScreenOpen,\n      isDebugEnabled: isEnableDebugLog(),\n      hasUserSentMessage: chatState.hasSentNonWelcomeMessage,\n      isTourActive: launcherState.activeTour,\n      viewState: {\n        ...launcherState.viewState\n      },\n      serviceDesk: {\n        isConnected: chatState.agentState.isConnected,\n        isConnecting: state.agentState.isConnecting,\n        isSuspended: chatState.agentState.isSuspended ?? false\n      },\n      locale: this.serviceManager.store.getState().locale,\n      intl: this.serviceManager.intl\n    };\n    return publicWebChatState;\n  }\n  async sendWithCatch(message, source, options = {}, ignoreHydration = false) {\n    try {\n      await this.send(message, source, options, ignoreHydration);\n    } catch (error) {\n      consoleError(\"An error occurred sending the message\", error);\n    }\n  }\n  async send(message, source, options = {}, ignoreHydration = false) {\n    const messageRequest = typeof message === \"string\" ? createMessageRequestForText(message) : message;\n    if (this.serviceManager.store.getState().persistedToBrowserStorage.chatState.homeScreenState.isHomeScreenOpen) {\n      this.serviceManager.store.dispatch(actions.setHomeScreenIsOpen(false));\n    }\n    if (this.serviceManager.store.getState().responsePanelState.isOpen) {\n      this.serviceManager.store.dispatch(actions.setResponsePanelIsOpen(false));\n    }\n    if (this.hydrationPromise || ignoreHydration) {\n      if (!ignoreHydration) {\n        await this.hydrationPromise;\n      }\n      await this.doSend(messageRequest, source, options);\n    } else {\n      await this.hydrateChat(messageRequest, source, options);\n    }\n  }\n  async doSend(message, source, options = {}) {\n    const {store: store} = this.serviceManager;\n    addDefaultsToMessage(message);\n    const originalUserText = message.history?.label || message.input.text;\n    if (options.silent) {\n      message.history.silent = true;\n    }\n    const localMessage = inputItemToLocalItem(message, originalUserText);\n    if (!message.history.silent) {\n      store.dispatch(actions.addLocalMessageItem(localMessage, message, true));\n    } else {\n      store.dispatch(actions.addMessage(message));\n    }\n    if (options.setValueSelectedForMessageID) {\n      store.dispatch(actions.messageSetOptionSelected(options.setValueSelectedForMessageID, message));\n    }\n    deepFreeze(message);\n    await this.serviceManager.messageService.send(cloneDeep(message), source, localMessage.ui_state.id, options);\n  }\n  async receive(message, isLatestWelcomeNode = false, requestMessage, requestOptions) {\n    const {restartCount: initialRestartCount} = this.serviceManager;\n    if (!message.id) {\n      message.id = uuid(UUIDType.MESSAGE);\n    }\n    const preReceiveEvent = {\n      type: BusEventType.PRE_RECEIVE,\n      data: message\n    };\n    await this.serviceManager.fire(preReceiveEvent);\n    if (initialRestartCount !== this.serviceManager.restartCount) {\n      return;\n    }\n    if (!isLatestWelcomeNode) {\n      this.serviceManager.store.dispatch(actions.updateHasSentNonWelcomeMessage(true));\n    }\n    if (initialRestartCount !== this.serviceManager.restartCount) {\n      return;\n    }\n    const {languagePack: languagePack} = this.serviceManager.store.getState();\n    if (isResponse(message)) {\n      this.processMessageResponse(message, isLatestWelcomeNode, requestMessage, requestOptions).catch(error => {\n        consoleError(\"Error processing the message response\", error);\n      });\n    } else {\n      const inlineError = createMessageResponseForText(languagePack.errors_singleMessage, message.thread_id, MessageResponseTypes.INLINE_ERROR);\n      this.receive(inlineError, false);\n    }\n    deepFreeze(message);\n    await this.serviceManager.fire({\n      type: BusEventType.RECEIVE,\n      data: message\n    });\n  }\n  async removeMessages(messageIDs) {\n    this.serviceManager.store.dispatch(actions.removeMessages(messageIDs));\n  }\n  async insertHistory(messages) {\n    const scrollBottom = this.serviceManager.mainWindow?.getMessagesScrollBottom();\n    const state = this.serviceManager.store.getState();\n    const notes = {\n      notes: [ {\n        body: messages\n      } ]\n    };\n    const history = await this.serviceManager.historyService.loadHistory(notes);\n    const currentAppStateMessages = {\n      allMessageItemsByID: state.allMessageItemsByID,\n      allMessagesByID: state.allMessagesByID,\n      botMessageState: state.botMessageState\n    };\n    const newAppStateMessages = merge({}, history.messageHistory, currentAppStateMessages);\n    newAppStateMessages.botMessageState.messageIDs = [ ...history.messageHistory.botMessageState.messageIDs, ...currentAppStateMessages.botMessageState.messageIDs ];\n    newAppStateMessages.botMessageState.localMessageIDs = [ ...history.messageHistory.botMessageState.localMessageIDs, ...currentAppStateMessages.botMessageState.localMessageIDs ];\n    this.serviceManager.store.dispatch(actions.hydrateMessageHistory(newAppStateMessages));\n    await this.createElementsForUserDefinedResponses(history.messageHistory);\n    this.serviceManager.mainWindow?.doAutoScroll({\n      scrollToBottom: scrollBottom\n    });\n  }\n  async receiveChunk(chunk, messageID, options = {}) {\n    const chunkPromise = resolvablePromise();\n    this.chunkQueue.push({\n      chunk: chunk,\n      messageID: messageID,\n      options: options,\n      chunkPromise: chunkPromise\n    });\n    if (this.chunkQueue.length === 1) {\n      this.processChunkQueue();\n    }\n    return chunkPromise;\n  }\n  async processChunkQueue() {\n    const {chunk: chunk, options: options, chunkPromise: chunkPromise} = this.chunkQueue[0];\n    let {messageID: messageID} = this.chunkQueue[0];\n    const isCompleteItem = isStreamCompleteItem(chunk);\n    const isPartialItem = isStreamPartialItem(chunk);\n    const {store: store} = this.serviceManager;\n    const isStopGeneratingVisible = store.getState().botInputState.stopStreamingButtonState.isVisible;\n    if (isPartialItem) {\n      const streamingData = chunk.partial_item.streaming_metadata;\n      if (streamingData.cancellable && !isStopGeneratingVisible) {\n        store.dispatch(actions.setStopStreamingButtonVisible(true));\n      }\n    }\n    if (isCompleteItem || isPartialItem) {\n      if (!messageID) {\n        messageID = chunk.streaming_metadata.response_id;\n      }\n      if (!store.getState().allMessagesByID[messageID]) {\n        store.dispatch(actions.streamingStart(messageID));\n      }\n      const item = chunk.partial_item || chunk.complete_item;\n      store.dispatch(actions.streamingAddChunk(messageID, item, isCompleteItem, options.disableFadeAnimation ?? true));\n      if (chunk.partial_response?.history) {\n        if (Object.keys(chunk.partial_response).length > 1) {\n          throw new Error(`The partial_response object only supports the \"history\" property.`);\n        }\n        store.dispatch(actions.streamingMergeHistory(messageID, chunk.partial_response?.history));\n      }\n      await this.handleUserDefinedResponseItemsChunk(messageID, chunk, item);\n    } else if (isStreamFinalResponse(chunk)) {\n      this.receive(chunk.final_response, options.isLatestWelcomeNode, null, {\n        disableFadeAnimation: true\n      });\n    }\n    if ((isCompleteItem || isStreamFinalResponse(chunk)) && isStopGeneratingVisible) {\n      store.dispatch(actions.setStopStreamingButtonDisabled(false));\n      store.dispatch(actions.setStopStreamingButtonVisible(false));\n    }\n    this.chunkQueue.shift();\n    chunkPromise.doResolve();\n    if (this.chunkQueue[0]) {\n      this.processChunkQueue();\n    }\n  }\n  getOrCreateUserDefinedElement(messageItemID) {\n    let userDefinedItem = this.serviceManager.userDefinedElementRegistry.get(messageItemID);\n    if (!userDefinedItem) {\n      userDefinedItem = {\n        element: document.createElement(\"div\"),\n        slotName: `slot-user-defined-${uuid()}`\n      };\n      userDefinedItem.element.setAttribute(\"slot\", userDefinedItem.slotName);\n      this.serviceManager.userDefinedElementRegistry.set(messageItemID, userDefinedItem);\n    }\n    return userDefinedItem;\n  }\n  async handleUserDefinedResponseItems(localMessage, originalMessage) {\n    if (renderAsUserDefinedMessage(localMessage.item)) {\n      let element;\n      let slotName;\n      if (!localMessage.item.user_defined?.silent) {\n        ({element: element, slotName: slotName} = this.getOrCreateUserDefinedElement(localMessage.ui_state.id));\n      }\n      const userDefinedResponseEvent = {\n        type: BusEventType.USER_DEFINED_RESPONSE,\n        data: {\n          message: localMessage.item,\n          fullMessage: originalMessage,\n          element: element,\n          slot: slotName,\n          fullWidth: false\n        }\n      };\n      await this.serviceManager.fire(userDefinedResponseEvent);\n      if (userDefinedResponseEvent.data.fullWidth) {\n        this.serviceManager.store.dispatch(actions.setMessageUIProperty(localMessage.ui_state.id, \"fullWidth\", true));\n      }\n    } else if (isResponseWithNestedItems(localMessage.item)) {\n      const {itemsLocalMessageItemIDs: itemsLocalMessageItemIDs, bodyLocalMessageItemIDs: bodyLocalMessageItemIDs, footerLocalMessageItemIDs: footerLocalMessageItemIDs, gridLocalMessageItemIDs: gridLocalMessageItemIDs} = localMessage.ui_state;\n      const {allMessageItemsByID: allMessageItemsByID} = this.serviceManager.store.getState();\n      const createElementForNestedUserDefinedResponse = localMessageItemID => {\n        const nestedLocalMessage = allMessageItemsByID[localMessageItemID];\n        return this.handleUserDefinedResponseItems(nestedLocalMessage, originalMessage);\n      };\n      if (gridLocalMessageItemIDs?.length) {\n        await asyncForEach(gridLocalMessageItemIDs, row => asyncForEach(row, cell => asyncForEach(cell, itemID => createElementForNestedUserDefinedResponse(itemID))));\n      }\n      if (itemsLocalMessageItemIDs?.length) {\n        await asyncForEach(itemsLocalMessageItemIDs, createElementForNestedUserDefinedResponse);\n      }\n      if (bodyLocalMessageItemIDs?.length) {\n        await asyncForEach(bodyLocalMessageItemIDs, createElementForNestedUserDefinedResponse);\n      }\n      if (footerLocalMessageItemIDs?.length) {\n        await asyncForEach(footerLocalMessageItemIDs, createElementForNestedUserDefinedResponse);\n      }\n    }\n  }\n  async handleUserDefinedResponseItemsChunk(messageID, chunk, messageItem) {\n    if (renderAsUserDefinedMessage(messageItem)) {\n      const {store: store} = this.serviceManager;\n      const itemID = streamItemID(messageID, messageItem);\n      let element;\n      let slotName;\n      if (!messageItem.user_defined?.silent) {\n        ({element: element, slotName: slotName} = this.getOrCreateUserDefinedElement(itemID));\n      }\n      const userDefinedResponseEvent = {\n        type: BusEventType.CHUNK_USER_DEFINED_RESPONSE,\n        data: {\n          messageItem: messageItem,\n          chunk: chunk,\n          element: element,\n          slot: slotName,\n          fullWidth: false\n        }\n      };\n      await this.serviceManager.fire(userDefinedResponseEvent);\n      if (store.getState().allMessageItemsByID[itemID].ui_state.fullWidth !== userDefinedResponseEvent.data.fullWidth) {\n        store.dispatch(actions.setMessageUIProperty(itemID, \"fullWidth\", userDefinedResponseEvent.data.fullWidth));\n      }\n    }\n  }\n  async processMessageResponse(fullMessage, isLatestWelcomeNode, requestMessage, requestOptions = {}) {\n    const {store: store} = this.serviceManager;\n    const {config: config} = store.getState();\n    const initialRestartCount = this.serviceManager.restartCount;\n    const output = fullMessage.output.generic;\n    fullMessage.request_id = requestMessage?.id;\n    addDefaultsToMessage(fullMessage);\n    store.dispatch(actions.addMessage(fullMessage));\n    let previousItemID = null;\n    for (let index = 0; index < output.length && initialRestartCount === this.serviceManager.restartCount; index++) {\n      const messageItem = output[index];\n      if (messageItem) {\n        const pause = isPause(messageItem);\n        const agent = isConnectToAgent(messageItem);\n        const tour = hasTourUserDefinedType(messageItem);\n        const localMessageItem = outputItemToLocalItem(messageItem, fullMessage, isLatestWelcomeNode, requestOptions.disableFadeAnimation);\n        if (tour && (requestOptions.skipTourCard || messageItem.user_defined?.skip_card)) {\n          const startTourReason = requestOptions.skipTourCard ? TourStartReason.START_TOUR_METHOD : TourStartReason.SKIP_CARD;\n          const {viewState: viewState} = store.getState().persistedToBrowserStorage.launcherState;\n          if (viewState.mainWindow) {\n            const mainWindowCloseReason = requestOptions.skipTourCard ? MainWindowCloseReason.CALLED_START_TOUR : MainWindowCloseReason.TOUR_SKIP_CARD;\n            this.startTour(localMessageItem, startTourReason, {\n              mainWindowCloseReason: mainWindowCloseReason\n            }).catch(error => {\n              consoleError(\"Error starting the tour\", error);\n            });\n          } else {\n            const viewChangeReason = requestOptions.skipTourCard ? ViewChangeReason.CALLED_START_TOUR : ViewChangeReason.TOUR_SKIP_CARD;\n            this.startTour(localMessageItem, startTourReason, {\n              viewChangeReason: viewChangeReason\n            }).catch(error => {\n              consoleError(\"Error starting the tour\", error);\n            });\n          }\n        } else if (!tour && requestOptions.skipTourCard) {\n          consoleError(\"The message response received was not a tour, so the tour card was not skipped nor was a tour started by the startTour() call.\");\n        }\n        const nestedLocalMessageItems = [];\n        createLocalMessageItemsForNestedMessageItems(localMessageItem, fullMessage, false, nestedLocalMessageItems, true);\n        store.dispatch(actions.addNestedMessages(nestedLocalMessageItems));\n        if (agent && isResponse(fullMessage)) {\n          store.dispatch(actions.addIsTypingCounter(1));\n          if (!hasServiceDesk(config)) {\n            const message = 'Web chat received a \"connect_to_agent\" message but there is no service desk configured. Check your chat configuration.';\n            this.errorOccurred({\n              errorType: OnErrorType.INTEGRATION_ERROR,\n              message: message\n            });\n            store.dispatch(actions.setMessageHistoryProperty(localMessageItem.fullMessageID, \"agent_no_service_desk\", true));\n          }\n          const agentAvailability = await (this.serviceManager.humanAgentService?.checkAreAnyAgentsOnline(fullMessage));\n          if (initialRestartCount === this.serviceManager.restartCount) {\n            store.dispatch(actions.setMessageHistoryProperty(localMessageItem.fullMessageID, \"agent_availability\", agentAvailability));\n            let shouldAutoRequestAgent = false;\n            if (config.public.serviceDesk?.skipConnectAgentCard) {\n              shouldAutoRequestAgent = true;\n            }\n            store.dispatch(actions.addIsTypingCounter(-1));\n            if (shouldAutoRequestAgent && agentAvailability === AgentsOnlineStatus.ONLINE) {\n              this.serviceManager.humanAgentService.startChat(localMessageItem, fullMessage);\n            }\n          }\n        }\n        if (pause) {\n          const showIsTyping = isTyping(messageItem);\n          if (showIsTyping) {\n            store.dispatch(actions.addIsTypingCounter(1));\n          }\n          await sleep(messageItem.time);\n          if (showIsTyping && initialRestartCount === this.serviceManager.restartCount) {\n            store.dispatch(actions.addIsTypingCounter(-1));\n          }\n        } else {\n          await this.handleUserDefinedResponseItems(localMessageItem, fullMessage);\n          if (!localMessageItem.item.user_defined?.silent && initialRestartCount === this.serviceManager.restartCount) {\n            this.serviceManager.store.dispatch(actions.addLocalMessageItem(localMessageItem, fullMessage, false, previousItemID));\n            previousItemID = localMessageItem.ui_state.id;\n          }\n        }\n      }\n    }\n  }\n  openResponsePanel(localMessageItem, isMessageForInput) {\n    this.serviceManager.store.dispatch(actions.setResponsePanelContent(localMessageItem, isMessageForInput));\n    this.serviceManager.store.dispatch(actions.setResponsePanelIsOpen(true));\n  }\n  async insertLocalMessageResponse(message) {\n    message.id = uuid(UUIDType.MESSAGE);\n    await this.processMessageResponse(message, false, null, {});\n  }\n  updateLanguagePack(changes) {\n    const {languagePack: languagePack, locale: locale} = this.serviceManager.store.getState();\n    const messages = {\n      ...languagePack,\n      ...changes\n    };\n    setIntl(this.serviceManager, locale, messages);\n  }\n  addNotification(notification) {\n    this.serviceManager.store.dispatch(actions.addNotification(notification));\n  }\n  removeNotification(groupID) {\n    this.serviceManager.store.dispatch(actions.removeNotifications({\n      groupID: groupID\n    }));\n  }\n  removeAllNotifications() {\n    this.serviceManager.store.dispatch(actions.removeAllNotifications());\n  }\n  updateCSSVariables(publicVars, whiteLabelVariables = {}) {\n    const {store: store} = this.serviceManager;\n    const {theme: theme} = store.getState();\n    const {carbonTheme: carbonTheme, useAITheme: useAITheme} = theme;\n    if (useAITheme) {\n      const usePublicVars = publicVars;\n      publicVars = {};\n      whiteLabelVariables = {};\n      usePublicVars && Object.entries(usePublicVars).forEach(([variable]) => {\n        if (VALID_PUBLIC_VARS_IN_AI_THEME_SET.has(variable)) {\n          publicVars[variable] = usePublicVars[variable];\n        } else {\n          consoleWarn(UPDATE_CSS_VARS_AI_THEME_WARNING_MESSAGE);\n        }\n      });\n    } else {\n      publicVars = {\n        ...publicVars\n      };\n      whiteLabelVariables = {\n        ...whiteLabelVariables\n      };\n    }\n    const allVariables = mergeCSSVariables(publicVars, whiteLabelVariables, carbonTheme, useAITheme);\n    store.dispatch(actions.updateCSSVariables(allVariables, publicVars, whiteLabelVariables));\n  }\n  updateBotName(name) {\n    this.serviceManager.store.dispatch(actions.updateBotName(name));\n  }\n  updateMainHeaderTitle(title) {\n    this.serviceManager.store.dispatch(actions.updateMainHeaderTitle(title));\n  }\n  updateBotAvatarURL(url) {\n    this.serviceManager.store.dispatch(actions.updateBotAvatarURL(url));\n  }\n  updateHomeScreenConfig(homeScreenConfig) {\n    this.serviceManager.store.dispatch(actions.updateHomeScreenConfig(homeScreenConfig));\n  }\n  updateLauncherConfig(launcherConfig) {\n    this.serviceManager.store.dispatch(actions.updateLauncherConfig(launcherConfig));\n  }\n  async changeView(newView, reason, tryHydrating = true, forceViewChange = false) {\n    const {store: store} = this.serviceManager;\n    const {viewState: viewState} = store.getState().persistedToBrowserStorage.launcherState;\n    let newViewState = constructViewState(newView, store.getState());\n    if (!validateViewState(newViewState, store.getState())) {\n      return viewState;\n    }\n    if (!isEqual(newViewState, viewState) || forceViewChange) {\n      await this.fireViewChangeEventsAndChangeView(newViewState, reason);\n      newViewState = store.getState().persistedToBrowserStorage.launcherState.viewState;\n      if (tryHydrating && (newViewState.mainWindow || newViewState.tour) && !store.getState().isHydrated) {\n        this.hydrateChat().catch(error => {\n          consoleError(\"Error hydrating the chat\", error);\n        });\n      }\n    }\n    return newViewState;\n  }\n  async fireViewChangeEventsAndChangeView(newViewState, reason) {\n    const {store: store} = this.serviceManager;\n    if (store.getState().viewChanging) {\n      throw new Error(\"The view may not be changed while a view change event is already running. Please make sure to resolve any promises from these events.\");\n    }\n    store.dispatch(actions.setViewChanging(true));\n    const {viewState: viewState} = store.getState().persistedToBrowserStorage.launcherState;\n    const {viewChangeReason: viewChangeReason} = reason;\n    const oldViewState = deepFreeze(viewState);\n    try {\n      const preViewChangeEvent = {\n        type: BusEventType.VIEW_PRE_CHANGE,\n        reason: viewChangeReason,\n        oldViewState: oldViewState,\n        newViewState: newViewState,\n        cancelViewChange: false\n      };\n      await this.serviceManager.fire(preViewChangeEvent);\n      if (preViewChangeEvent.cancelViewChange) {\n        debugLog(\"The view changing was cancelled by a view:pre:change event.\");\n        return;\n      }\n      if (!validateViewState(preViewChangeEvent.newViewState, store.getState())) {\n        return;\n      }\n      newViewState = preViewChangeEvent.newViewState;\n      store.dispatch(actions.setViewState(deepFreeze(newViewState)));\n      const viewChangeEvent = {\n        type: BusEventType.VIEW_CHANGE,\n        reason: viewChangeReason,\n        oldViewState: oldViewState,\n        newViewState: newViewState,\n        cancelViewChange: false\n      };\n      await this.serviceManager.fire(viewChangeEvent);\n      if (viewChangeEvent.cancelViewChange) {\n        store.dispatch(actions.setViewState(oldViewState));\n        debugLog(\"The view changing was cancelled by a view:change event.\");\n        return;\n      }\n      if (!validateViewState(viewChangeEvent.newViewState, store.getState())) {\n        store.dispatch(actions.setViewState(oldViewState));\n        return;\n      }\n      newViewState = viewChangeEvent.newViewState;\n      store.dispatch(actions.setViewState(deepFreeze(newViewState)));\n    } finally {\n      store.dispatch(actions.setViewChanging(false));\n    }\n  }\n  async startTour(message, startTourReason, changeViewReason) {\n    this.serviceManager.store.dispatch(actions.setTourData(message.fullMessageID));\n    const newViewState = await this.changeView(ViewType.TOUR, changeViewReason);\n    if (newViewState.tour) {\n      await this.serviceManager.fire({\n        type: BusEventType.TOUR_START,\n        reason: startTourReason\n      });\n      await this.serviceManager.fire({\n        type: BusEventType.TOUR_STEP,\n        step: this.serviceManager.store.getState().tourState.activeTourStepItems[0]\n      });\n    }\n  }\n  async endTour(reason) {\n    const {viewState: viewState} = this.serviceManager.store.getState().persistedToBrowserStorage.launcherState;\n    let newViewState = viewState;\n    if (viewState.tour) {\n      newViewState = await this.changeView(ViewType.LAUNCHER, reason);\n    }\n    if (!newViewState.tour) {\n      this.serviceManager.store.dispatch(actions.clearTourData());\n      return true;\n    }\n    return false;\n  }\n  goToSpecificTourStep(stepId) {\n    const {activeTourStepItems: activeTourStepItems} = this.serviceManager.store.getState().tourState;\n    const newStepIndex = activeTourStepItems.findIndex(stepItem => stepItem.step_id === stepId);\n    if (newStepIndex) {\n      this.changeStepInTour({\n        newStepIndex: newStepIndex\n      });\n    } else {\n      consoleError(`No step with the id \"${stepId}\" was found within the current tour. As a result, goToTourStep() did not change the current tour step.`);\n    }\n  }\n  async changeStepInTour(changeStepOptions) {\n    const {store: store} = this.serviceManager;\n    const {activeTourStepItems: activeTourStepItems} = store.getState().tourState;\n    const {activeTourCurrentStepIndex: activeTourCurrentStepIndex} = store.getState().persistedToBrowserStorage.chatState.persistedTourState;\n    let {newStepIndex: newStepIndex} = changeStepOptions;\n    if (changeStepOptions.nextStep) {\n      newStepIndex = activeTourCurrentStepIndex + 1;\n    } else if (changeStepOptions.previousStep) {\n      newStepIndex = activeTourCurrentStepIndex - 1;\n    }\n    store.dispatch(actions.changeStepInTour(newStepIndex));\n    const actualNewStepIndex = store.getState().persistedToBrowserStorage.chatState.persistedTourState.activeTourCurrentStepIndex;\n    if (actualNewStepIndex === newStepIndex) {\n      await this.serviceManager.fire({\n        type: BusEventType.TOUR_STEP,\n        step: activeTourStepItems[actualNewStepIndex]\n      });\n    } else {\n      consoleWarn(\"The tour tried to change to a step that was out of bounds for the step array, so no step change was made.\");\n    }\n  }\n  errorOccurred(error) {\n    consoleError(\"An error has occurred\", error);\n    if (error.catastrophicErrorType) {\n      this.serviceManager.store.dispatch(actions.setAppStateValue(\"catastrophicErrorType\", error.catastrophicErrorType));\n    }\n    callOnError(this.serviceManager.additionalChatParameters.onError, error);\n  }\n  async restartConversation(options = {}) {\n    const {skipHydration: skipHydration = false, endAgentConversation: endAgentConversation = true, fireEvents: fireEvents = true} = options;\n    debugLog(\"Restarting conversation\");\n    if (this.restarting) {\n      consoleWarn(\"You cannot restart a conversation while a previous restart is still pending.\");\n      return;\n    }\n    this.restarting = true;\n    try {\n      const {serviceManager: serviceManager} = this;\n      const {store: store} = serviceManager;\n      if (fireEvents) {\n        await serviceManager.fire({\n          type: BusEventType.PRE_RESTART_CONVERSATION\n        });\n      }\n      serviceManager.restartCount++;\n      if (this.hydrating) {\n        await this.hydrationPromise;\n      }\n      const currentState = store.getState();\n      const {persistedToBrowserStorage: persistedToBrowserStorage} = currentState;\n      const {viewState: viewState} = persistedToBrowserStorage.launcherState;\n      const {isConnecting: isConnecting} = currentState.agentState;\n      const {isConnected: isConnected} = currentState.persistedToBrowserStorage.chatState.agentState;\n      if ((isConnected || isConnecting) && endAgentConversation) {\n        await serviceManager.humanAgentService.endChat(true, false, false);\n      }\n      if (viewState.tour) {\n        await this.serviceManager.actions.changeView(ViewType.MAIN_WINDOW, {\n          mainWindowOpenReason: MainWindowOpenReason.CALLED_RESTART_CONVERSATION\n        }, false);\n      }\n      this.serviceManager.instance.updateAssistantInputFieldVisibility(true);\n      this.serviceManager.messageService.cancelAllMessageRequests();\n      store.dispatch(actions.restartConversation());\n      if (!skipHydration) {\n        this.hydrationPromise = null;\n      }\n      if (fireEvents) {\n        await serviceManager.fire({\n          type: BusEventType.RESTART_CONVERSATION\n        });\n      }\n      if (this.hydrating) {\n        await this.hydrationPromise;\n      }\n      if (!skipHydration && !serviceManager.store.getState().isHydrated) {\n        this.hydrationPromise = null;\n        if (store.getState().persistedToBrowserStorage.launcherState.viewState.mainWindow) {\n          await serviceManager.actions.hydrateChat();\n        }\n      } else {\n        store.dispatch(actions.chatWasHydrated());\n      }\n    } finally {\n      this.restarting = false;\n    }\n  }\n  async destroySession(keepOpenState) {\n    const {store: store} = this.serviceManager;\n    const {persistedToBrowserStorage: persistedToBrowserStorage} = store.getState();\n    const originalViewState = persistedToBrowserStorage.launcherState.viewState;\n    const newPersistedToBrowserStorage = cloneDeep(DEFAULT_PERSISTED_TO_BROWSER);\n    if (keepOpenState) {\n      newPersistedToBrowserStorage.launcherState.viewState = originalViewState;\n      if (originalViewState.tour) {\n        newPersistedToBrowserStorage.launcherState.viewState = {\n          ...originalViewState,\n          tour: false,\n          mainWindow: true\n        };\n      }\n    } else {\n      newPersistedToBrowserStorage.launcherState.viewState = VIEW_STATE_LAUNCHER_OPEN;\n    }\n    this.serviceManager.messageService.cancelAllMessageRequests();\n    this.serviceManager.userSessionStorageService.clearLauncherSession();\n    this.serviceManager.userSessionStorageService.clearChatSession();\n    this.serviceManager.store.dispatch(actions.setAppStateValue(\"persistedToBrowserStorage\", newPersistedToBrowserStorage));\n  }\n  agentEndConversation(endedByUser) {\n    return this.serviceManager.humanAgentService.endChat(endedByUser);\n  }\n  agentUpdateIsSuspended(isSuspended) {\n    this.serviceManager.store.dispatch(agentUpdateIsSuspended(isSuspended));\n  }\n  async createElementsForUserDefinedResponses(messages) {\n    await asyncForEach(Object.values(messages.allMessageItemsByID), localMessage => {\n      const originalMessage = messages.allMessagesByID[localMessage.fullMessageID];\n      return this.handleUserDefinedResponseItems(localMessage, originalMessage);\n    });\n  }\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const HANDLER_NOT_FUNCTION = \"The event handler is not a function.\";\n\nclass EventBus {\n  constructor() {\n    this.handlersByType = new Map;\n    this.eventsTypesRunning = new Set;\n    this.eventsRunningCount = 0;\n  }\n  async fire(busEvent, instance) {\n    logEvent(\"Before fire\", busEvent);\n    const {type: type} = busEvent;\n    if (!type) {\n      throw new Error(`Attempted to fire an event with no type! ${JSON.stringify(busEvent)}`);\n    }\n    function wrappedHandler(handler) {\n      const result = handler(busEvent, instance);\n      if (result && !(result instanceof Promise)) {\n        consoleWarn(`An event handler for event ${type} returned a non-promise. This might be a mistake.`, result);\n      }\n      return result;\n    }\n    if (this.eventsTypesRunning.has(type)) {\n      throw new Error(`An event of type ${type} is already running. Please make sure that you have resolved the Promises for any earlier events that were fired.`);\n    }\n    try {\n      this.eventsRunningCount++;\n      try {\n        this.eventsTypesRunning.add(type);\n        const handlersForType = this.handlersByType.get(type);\n        if (handlersForType && handlersForType.length) {\n          const handlersCopy = handlersForType.slice();\n          await asyncForEach(handlersCopy, wrappedHandler);\n        }\n      } finally {\n        this.eventsTypesRunning.delete(type);\n      }\n    } finally {\n      this.eventsRunningCount--;\n      if (this.waitForEmptyPromise && this.eventsRunningCount === 0) {\n        this.waitForEmptyPromise.doResolve();\n      }\n    }\n    logEvent(\"After fire\", busEvent);\n  }\n  fireSync(busEvent, instance) {\n    logEvent(\"Before fire\", busEvent);\n    const {type: type} = busEvent;\n    const handlersForType = this.handlersByType.get(type);\n    if (handlersForType && handlersForType.length) {\n      const handlersCopy = handlersForType.slice();\n      handlersCopy.forEach(handler => handler(busEvent, instance));\n    }\n    logEvent(\"After fire\", busEvent);\n  }\n  async waitForEmpty() {\n    if (this.eventsRunningCount === 0) {\n      return;\n    }\n    if (!this.waitForEmptyPromise) {\n      this.waitForEmptyPromise = resolvablePromise();\n    }\n    await this.waitForEmptyPromise;\n    this.waitForEmptyPromise = null;\n  }\n  on(handlers) {\n    const data = asArray(handlers);\n    data.forEach(({type: type, handler: handler}) => {\n      if (!type) {\n        throw new Error(`Attempted to listen to an event with no type: \"${type}\"!`);\n      }\n      if (typeof handler === \"function\") {\n        if (!this.handlersByType.has(type)) {\n          this.handlersByType.set(type, []);\n        }\n        const handlersForType = this.handlersByType.get(type);\n        debugStackTrace(`[EventBus] Adding ${type} event handler`, handler);\n        handlersForType.push(handler);\n      } else {\n        consoleError(HANDLER_NOT_FUNCTION, handler);\n      }\n    });\n    return this;\n  }\n  off(handlers) {\n    const data = asArray(handlers);\n    data.forEach(({type: type, handler: handler}) => {\n      const handlersForType = this.handlersByType.get(type);\n      if (handlersForType) {\n        if (handler) {\n          const index = handlersForType.indexOf(handler);\n          if (index !== -1) {\n            const removed = handlersForType.splice(index, 1);\n            debugStackTrace(`[EventBus] Removing ${type} event handlers`, removed);\n          }\n        } else {\n          debugStackTrace(`[EventBus] Removing all ${type} event handlers`);\n          this.handlersByType.set(type, []);\n        }\n      }\n    });\n    return this;\n  }\n  once(handlers) {\n    const data = asArray(handlers);\n    data.forEach(({type: type, handler: handler}) => {\n      if (typeof handler === \"function\") {\n        const onceHandler = (event, instance) => {\n          this.off({\n            type: type,\n            handler: onceHandler\n          });\n          return handler(event, instance);\n        };\n        this.on({\n          type: type,\n          handler: onceHandler\n        });\n      } else {\n        consoleError(HANDLER_NOT_FUNCTION, handler);\n      }\n    });\n    return this;\n  }\n  logListeners() {\n    this.handlersByType.forEach((listeners, type) => {\n      console.group(`Event ${type} (${listeners.length})`);\n      listeners.forEach(listener => {\n        consoleLog(\"Listener\", listener);\n      });\n      console.groupEnd();\n    });\n  }\n  clear() {\n    this.handlersByType.clear();\n    return this;\n  }\n}\n\nfunction logEvent(message, busEvent) {\n  if (isEnableDebugLog()) {\n    const eventCopy = cloneDeep(busEvent);\n    debugLog(`[EventBus] ${message}`, eventCopy);\n  }\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function createCustomPanelInstance(serviceManager) {\n  const customPanelInstance = {\n    open(options = DEFAULT_CUSTOM_PANEL_CONFIG_OPTIONS) {\n      const {store: store} = serviceManager;\n      store.dispatch(actions.setCustomPanelConfigOptions(options));\n      store.dispatch(actions.setCustomPanelOpen(true));\n    },\n    close() {\n      serviceManager.store.dispatch(actions.setCustomPanelOpen(false));\n    }\n  };\n  return Object.freeze(customPanelInstance);\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function createCustomPanelManager(serviceManger) {\n  const panels = {\n    [DEFAULT_CUSTOM_PANEL_ID]: createCustomPanelInstance(serviceManger)\n  };\n  return Object.freeze({\n    getPanel() {\n      return panels[DEFAULT_CUSTOM_PANEL_ID];\n    }\n  });\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ async function notesToLoadedHistory(notes, serviceManager) {\n  const allLocalMessagesByID = {};\n  const allMessagesByID = {};\n  const loadingState = {\n    serviceManager: serviceManager,\n    allMessages: [],\n    allMessagesByID: allMessagesByID,\n    allLocalMessagesByID: allLocalMessagesByID,\n    threadMessagesByThreadID: {},\n    responsesByRequestID: {},\n    relatedMessageByID: {},\n    localMessagesByOriginalMessageID: {},\n    lastThreadID: null,\n    loadedHistory: {\n      messageHistory: {\n        allMessageItemsByID: allLocalMessagesByID,\n        allMessagesByID: allMessagesByID,\n        botMessageState: null\n      },\n      latestTransferToAgentResponse: null,\n      latestPanelLocalMessageItem: null\n    }\n  };\n  await notesToMessages(notes, loadingState);\n  if (!loadingState.allMessages.length) {\n    return null;\n  }\n  createLocalMessages(loadingState);\n  createChatStates(loadingState);\n  markIsLatestWelcomeNode(loadingState);\n  markSelectedOptions(loadingState);\n  return loadingState.loadedHistory;\n}\n\nasync function notesToMessages(notes, loadingState) {\n  const {allMessages: allMessages, allMessagesByID: allMessagesByID, responsesByRequestID: responsesByRequestID, relatedMessageByID: relatedMessageByID, serviceManager: serviceManager, localMessagesByOriginalMessageID: localMessagesByOriginalMessageID} = loadingState;\n  if (!notes?.length) {\n    return;\n  }\n  notes.forEach(note => {\n    const sessionHistory = note.body;\n    const pushAndPrepareMessage = historyItem => {\n      const {message: message} = historyItem;\n      if (!isEventRequest(message) && (isRequest(message) || isResponse(message))) {\n        addMessage(message, loadingState, historyItem);\n      }\n    };\n    sessionHistory.forEach(pushAndPrepareMessage);\n  });\n  for (let index = allMessages.length - 1; index >= 0; index--) {\n    const message = allMessages[index];\n    if (message.history?.file_upload_status === FileStatusValue.UPLOADING) {\n      message.history.file_upload_status = FileStatusValue.COMPLETE;\n      message.history.error_state = MessageErrorState.FAILED;\n    }\n    if (isResponse(message) && message.history.silent) {\n      allMessages.splice(index, 1);\n      delete allMessagesByID[message.id];\n    } else {\n      localMessagesByOriginalMessageID[message.id] = [];\n      if (isResponse(message) && message.request_id) {\n        responsesByRequestID[message.request_id] = message;\n      }\n      if (message.history.related_message_id) {\n        relatedMessageByID[message.history.related_message_id] = message;\n      }\n    }\n  }\n  if (!allMessages.length) {\n    return;\n  }\n  Object.freeze(allMessages);\n  const beginEvent = {\n    type: BusEventType.HISTORY_BEGIN,\n    messages: allMessages\n  };\n  await serviceManager.eventBus.fire(beginEvent, serviceManager.instance);\n  allMessages.forEach(deepFreeze);\n  await serviceManager.eventBus.fire({\n    type: BusEventType.HISTORY_END,\n    messages: allMessages\n  }, serviceManager.instance);\n}\n\nfunction addMessage(message, loadingState, historyItem) {\n  message.history = message.history || {};\n  message.history.from_history = true;\n  message.history.timestamp = new Date(historyItem.time).getTime();\n  if (message.thread_id !== THREAD_ID_MAIN) {\n    loadingState.lastThreadID = message.thread_id;\n  }\n  loadingState.allMessagesByID[message.id] = message;\n  loadingState.allMessages.push(message);\n}\n\nfunction createLocalMessages(loadingState) {\n  const {allMessages: allMessages, allLocalMessagesByID: allLocalMessagesByID, localMessagesByOriginalMessageID: localMessagesByOriginalMessageID} = loadingState;\n  allMessages.forEach(message => {\n    if (isRequest(message)) {\n      if (!message.history?.silent) {\n        const text = message.history?.label || message.input.text;\n        const localMessage = inputItemToLocalItem(message, text);\n        localMessagesByOriginalMessageID[message.id].push(localMessage);\n        allLocalMessagesByID[localMessage.ui_state.id] = localMessage;\n      }\n    } else {\n      const items = getResponseItems(message);\n      if (items?.length) {\n        items.forEach(messageItem => {\n          if (!isPause(messageItem)) {\n            const localMessage = outputItemToLocalItem(messageItem, message, false);\n            localMessagesByOriginalMessageID[message.id].push(localMessage);\n            allLocalMessagesByID[localMessage.ui_state.id] = localMessage;\n            if (isResponseWithNestedItems(localMessage.item)) {\n              const nestedLocalMessageItems = [];\n              createLocalMessageItemsForNestedMessageItems(localMessage, message, true, nestedLocalMessageItems, true);\n              nestedLocalMessageItems.forEach(localMessageItem => {\n                const localMessageID = localMessageItem.ui_state.id;\n                loadingState.loadedHistory.messageHistory.allMessageItemsByID[localMessageID] = localMessageItem;\n              });\n            }\n          }\n        });\n      }\n    }\n    addMessageToThread(message, loadingState);\n  });\n}\n\nfunction getResponseItems(message) {\n  if (isResponse(message)) {\n    return message.output.generic;\n  }\n  return null;\n}\n\nfunction addMessageToThread(message, loadingState) {\n  const {threadMessagesByThreadID: threadMessagesByThreadID} = loadingState;\n  let thread = threadMessagesByThreadID[THREAD_ID_MAIN];\n  if (!thread) {\n    thread = [];\n    threadMessagesByThreadID[THREAD_ID_MAIN] = thread;\n  }\n  thread.push(message);\n}\n\nfunction createChatStates(loadingState) {\n  const {loadedHistory: loadedHistory, threadMessagesByThreadID: threadMessagesByThreadID, localMessagesByOriginalMessageID: localMessagesByOriginalMessageID} = loadingState;\n  loadedHistory.messageHistory.botMessageState = toChatMessageState(threadMessagesByThreadID[THREAD_ID_MAIN], localMessagesByOriginalMessageID);\n}\n\nfunction toChatMessageState(messages, localMessagesByFullMessageID) {\n  const localMessageIDs = [];\n  const messageIDs = [];\n  if (messages) {\n    messages.forEach(message => {\n      messageIDs.push(message.id);\n      localMessagesByFullMessageID[message.id].forEach(localMessage => {\n        localMessageIDs.push(localMessage.ui_state.id);\n      });\n    });\n  }\n  return {\n    ...DEFAULT_CHAT_MESSAGES_STATE,\n    localMessageIDs: localMessageIDs,\n    messageIDs: messageIDs\n  };\n}\n\nfunction markIsLatestWelcomeNode(loadingState) {\n  const {responsesByRequestID: responsesByRequestID, threadMessagesByThreadID: threadMessagesByThreadID, localMessagesByOriginalMessageID: localMessagesByOriginalMessageID} = loadingState;\n  const mainThreadMessages = threadMessagesByThreadID[THREAD_ID_MAIN];\n  const welcomeRequest = findLast(mainThreadMessages, message => isRequest(message) && message.history.is_welcome_request);\n  if (welcomeRequest) {\n    const welcomeResponse = responsesByRequestID[welcomeRequest.id];\n    if (welcomeResponse) {\n      localMessagesByOriginalMessageID[welcomeResponse.id].forEach(localMessage => {\n        localMessage.ui_state.isWelcomeResponse = true;\n      });\n    }\n  }\n}\n\nfunction markSelectedOptions({allMessages: allMessages, relatedMessageByID: relatedMessageByID, localMessagesByOriginalMessageID: localMessagesByOriginalMessageID}) {\n  allMessages.forEach(message => {\n    if (isResponse(message)) {\n      localMessagesByOriginalMessageID[message.id].forEach(localMessage => {\n        if (isOptionItem(localMessage.item)) {\n          const relatedRequest = relatedMessageByID[message.id];\n          if (isRequest(relatedRequest)) {\n            localMessage.ui_state.optionSelected = relatedRequest;\n          }\n        } else if (isDateResponseType(localMessage)) {\n          const relatedRequest = relatedMessageByID[message.id];\n          if (isRequest(relatedRequest)) {\n            localMessage.ui_state.originalUserText = relatedRequest.history.label;\n          }\n        }\n      });\n    }\n  });\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ class HistoryService {\n  constructor(serviceManager) {\n    this.serviceManager = serviceManager;\n  }\n  async loadHistory(useHistory) {\n    const state = this.serviceManager.store.getState();\n    const {config: config, persistedToBrowserStorage: persistedToBrowserStorage} = state;\n    const publicConfig = config.public;\n    const {viewState: viewState} = persistedToBrowserStorage.launcherState;\n    try {\n      let resultData;\n      if (useHistory) {\n        resultData = useHistory;\n      } else if (publicConfig.messaging?.customLoadHistory) {\n        const items = await publicConfig.messaging.customLoadHistory(this.serviceManager.instance);\n        const note = {\n          body: items\n        };\n        resultData = {\n          notes: [ note ]\n        };\n      }\n      if (resultData) {\n        const historyNotes = resultData?.notes;\n        return notesToLoadedHistory(historyNotes, this.serviceManager);\n      }\n      if (viewState.tour) {\n        await this.serviceManager.actions.changeView(ViewType.MAIN_WINDOW, {\n          mainWindowOpenReason: MainWindowOpenReason.SESSION_HISTORY\n        }, false);\n        this.serviceManager.store.dispatch(actions.clearTourData());\n      }\n    } catch (error) {\n      consoleError(\"An error occurred while attempting to load the conversation history\", error);\n    }\n    return null;\n  }\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ class MessageLoadingManager {\n  start(onExceededMaxSilentLoading, onEnd, onTimeout, msMaxSilentLoading, msMaxAttempt) {\n    this.hasExceededMaxSilentLoading = false;\n    this.onEnd = onEnd;\n    this.onSilentLoading = setTimeout(() => {\n      this.hasExceededMaxSilentLoading = true;\n      onExceededMaxSilentLoading();\n    }, msMaxSilentLoading);\n    this.onMaxAttempt = setTimeout(() => {\n      onTimeout();\n    }, msMaxAttempt);\n  }\n  end() {\n    if (this.onMaxAttempt) {\n      clearTimeout(this.onMaxAttempt);\n    }\n    if (this.onSilentLoading) {\n      clearTimeout(this.onSilentLoading);\n    }\n    if (this.onEnd) {\n      this.onEnd(this.hasExceededMaxSilentLoading);\n    }\n    this.hasExceededMaxSilentLoading = null;\n    this.onEnd = null;\n  }\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const MS_BETWEEN_RETRIES = [ 1e3, 3e3, 5e3 ];\n\nconst MS_MAX_ATTEMPT = 150 * 1e3;\n\nconst MS_MAX_SILENT_ERROR = 6e3;\n\nconst MS_MAX_SILENT_LOADING = 4e3;\n\nvar RetryType;\n\n(function(RetryType) {\n  RetryType[RetryType[\"SILENT\"] = 1] = \"SILENT\";\n  RetryType[RetryType[\"VISIBLE\"] = 2] = \"VISIBLE\";\n})(RetryType || (RetryType = {}));\n\nclass MessageService {\n  constructor(serviceManager, publicConfig) {\n    this.pendingLocale = false;\n    this.localeIsExplicit = false;\n    this.serviceManager = serviceManager;\n    this.messageLoadingManager = new MessageLoadingManager;\n    this.queue = {\n      waiting: [],\n      current: null\n    };\n    const timeoutOverride = publicConfig.messaging?.messageTimeoutSecs;\n    this.timeoutMS = timeoutOverride ? timeoutOverride * 1e3 : MS_MAX_ATTEMPT;\n  }\n  async processSuccess(current, received) {\n    const {requestOptions: requestOptions, isProcessed: isProcessed} = current;\n    const isWelcomeNode = Boolean(current.message.history.is_welcome_request);\n    if (isProcessed) {\n      return;\n    }\n    this.setMessageErrorState(current, MessageErrorState.NONE);\n    const {message: message} = current;\n    if (received) {\n      if (message.input.message_type !== MessageInputType.EVENT) {\n        if (!isWelcomeNode) {\n          this.messageLoadingManager.end();\n        }\n        received.history = received.history || {};\n        received.history.timestamp = received.history.timestamp || Date.now();\n        current.trackData.lastRequestTime = Date.now() - current.timeLastRequest;\n        current.trackData.totalRequestTime = Date.now() - current.timeFirstRequest;\n        await this.serviceManager.actions.receive(received, isWelcomeNode, message, requestOptions);\n      }\n      this.messageLoadingManager.end();\n    }\n    if (current.isProcessed) {\n      return;\n    }\n    {\n      current.sendMessagePromise.doResolve();\n      current.isProcessed = true;\n    }\n    this.moveToNextQueueItem();\n  }\n  addErrorMessage() {\n    const {store: store} = this.serviceManager;\n    const errorMessage = store.getState().languagePack.errors_singleMessage;\n    const {originalMessage: originalMessage, localMessage: localMessage} = createLocalMessageForInlineError(errorMessage);\n    store.dispatch(actions.addLocalMessageItem(localMessage, originalMessage, true));\n  }\n  async resendMessage(message, localMessageID) {\n    await this.send(cloneDeep(message), MessageSendSource.HYDRATE_RESEND, localMessageID, {\n      skipQueue: true,\n      silent: true\n    });\n  }\n  sendToAssistantAndUpdateErrorState(current) {\n    if (current.isProcessed) {\n      return;\n    }\n    this.sendToAssistant(current);\n    const now = Date.now();\n    const msSinceStarted = now - current.timeFirstRequest;\n    const isSilentErrorWindow = MS_MAX_SILENT_ERROR > msSinceStarted;\n    const type = isSilentErrorWindow ? RetryType.SILENT : RetryType.VISIBLE;\n    if (type === RetryType.VISIBLE) {\n      this.setMessageErrorState(current, MessageErrorState.RETRYING);\n      this.queue.waiting.forEach(waitingMessage => {\n        this.setMessageErrorState(waitingMessage, MessageErrorState.WAITING);\n      });\n    }\n  }\n  async processError(pendingRequest, resultText, allowRetry) {\n    const {message: message, timeFirstRequest: timeFirstRequest, timeLastRequest: timeLastRequest, tryCount: tryCount, isProcessed: isProcessed, trackData: trackData, requestOptions: requestOptions} = pendingRequest;\n    const isWelcome = message.history.is_welcome_request;\n    const now = Date.now();\n    const msSinceStarted = now - timeFirstRequest;\n    const isInAttemptWindow = this.timeoutMS > msSinceStarted && tryCount < MS_BETWEEN_RETRIES.length;\n    if (isProcessed) {\n      return;\n    }\n    trackData.lastRequestTime = Date.now() - timeLastRequest;\n    trackData.totalRequestTime = Date.now() - timeFirstRequest;\n    if (isInAttemptWindow && allowRetry) {\n      trackData.numErrors++;\n      const retryDelay = MS_BETWEEN_RETRIES[pendingRequest.tryCount++];\n      setTimeout(() => {\n        this.sendToAssistantAndUpdateErrorState(pendingRequest);\n      }, retryDelay);\n    } else {\n      let catastrophicErrorType = false;\n      if (isWelcome) {\n        catastrophicErrorType = true;\n      } else if (requestOptions.silent) {\n        this.addErrorMessage();\n      }\n      this.serviceManager.actions.errorOccurred({\n        errorType: OnErrorType.MESSAGE_COMMUNICATION,\n        message: \"An error occurred sending a message\",\n        otherData: resultText,\n        catastrophicErrorType: catastrophicErrorType\n      });\n      this.rejectFinalErrorOnMessage(pendingRequest, resultText);\n    }\n  }\n  rejectFinalErrorOnMessage(pendingRequest, resultText = \"An undefined error occurred trying to send your message.\") {\n    const {sendMessagePromise: sendMessagePromise} = pendingRequest;\n    this.setMessageErrorState(pendingRequest, MessageErrorState.FAILED);\n    const {message: message} = pendingRequest;\n    if (pendingRequest === this.queue.current && message.input.message_type !== MessageInputType.EVENT && !message.history.is_welcome_request) {\n      this.messageLoadingManager.end();\n    }\n    sendMessagePromise.doReject(new Error(resultText));\n    pendingRequest.isProcessed = true;\n    if (pendingRequest === this.queue.current) {\n      this.moveToNextQueueItem();\n    }\n  }\n  async sendToAssistant(current) {\n    const {store: store} = this.serviceManager;\n    const state = store.getState();\n    const {customSendMessage: customSendMessage} = state.config.public.messaging;\n    current.timeLastRequest = Date.now();\n    if (current.isProcessed) {\n      return;\n    }\n    try {\n      const message = cloneDeep(current.message);\n      current.message = message;\n      store.dispatch(actions.updateMessage(message));\n      const controller = new AbortController;\n      current.sendMessageController = controller;\n      debugLog(\"Called customSendMessage\", message);\n      await customSendMessage(message, {\n        signal: controller.signal\n      }, this.serviceManager.instance);\n      await this.processSuccess(current, null);\n    } catch (error) {\n      consoleError(\"An error occurred while sending a message\", error);\n      const resultText = error && (typeof error === \"string\" ? error : JSON.stringify(error)) || \"There was an unidentified error.\";\n      this.processError(current, resultText, !customSendMessage);\n    }\n  }\n  async runQueueIfReady() {\n    if (!this.queue.current && this.queue.waiting.length > 0) {\n      const {eventBus: eventBus, store: store} = this.serviceManager;\n      this.clearCurrentQueueItem();\n      this.queue.current = this.queue.waiting.shift();\n      const {current: current} = this.queue;\n      const {message: message, source: source} = current;\n      const state = store.getState();\n      const {config: config} = store.getState();\n      const {public: publicConfig} = config;\n      current.timeFirstRequest = Date.now();\n      if (message.input.message_type !== MessageInputType.EVENT) {\n        const lastResponse = getLastBotResponseWithContext(state);\n        if (lastResponse) {\n          message.thread_id = THREAD_ID_MAIN;\n        }\n        if (!message.history.is_welcome_request) {\n          const LOADING_INDICATOR_TIMER = !publicConfig.messaging?.messageLoadingIndicatorTimeoutSecs && publicConfig.messaging?.messageLoadingIndicatorTimeoutSecs !== 0 ? MS_MAX_SILENT_LOADING : publicConfig.messaging.messageLoadingIndicatorTimeoutSecs * 1e3;\n          this.messageLoadingManager.start(() => {\n            this.serviceManager.store.dispatch(actions.addIsLoadingCounter(1));\n          }, didExceedMaxLoading => {\n            if (didExceedMaxLoading) {\n              this.serviceManager.store.dispatch(actions.addIsLoadingCounter(-1));\n            }\n          }, () => {\n            this.cancelMessageRequestByID(message.id, true);\n          }, LOADING_INDICATOR_TIMER, this.timeoutMS);\n        }\n        if (current.isProcessed) {\n          return;\n        }\n        const originalUserText = message.history?.label || message.input.text;\n        await eventBus.fire({\n          type: BusEventType.PRE_SEND,\n          data: message,\n          source: source\n        }, this.serviceManager.instance);\n        if (current.isProcessed) {\n          return;\n        }\n        const localMessage = inputItemToLocalItem(message, originalUserText, current.localMessageID);\n        if (!message.history.silent) {\n          store.dispatch(actions.updateLocalMessageItem(localMessage));\n          store.dispatch(actions.updateMessage(message));\n        }\n        deepFreeze(message);\n        await eventBus.fire({\n          type: BusEventType.SEND,\n          data: message,\n          source: source\n        }, this.serviceManager.instance);\n      }\n      this.sendToAssistant(current);\n    }\n  }\n  addToMessageQueue(message, source, localMessageID, sendMessagePromise, requestOptions = {}) {\n    const newPendingMessage = {\n      localMessageID: localMessageID,\n      message: message,\n      sendMessagePromise: sendMessagePromise,\n      requestOptions: requestOptions || {},\n      timeFirstRequest: 0,\n      timeLastRequest: 0,\n      trackData: {\n        numErrors: 0,\n        lastRequestTime: 0,\n        totalRequestTime: 0\n      },\n      tryCount: 0,\n      isProcessed: false,\n      source: source\n    };\n    this.queue.waiting.push(newPendingMessage);\n    if (this.queue.current) {\n      if (message.history?.error_state === MessageErrorState.RETRYING) {\n        this.setMessageErrorState(newPendingMessage, MessageErrorState.WAITING);\n      }\n    }\n  }\n  clearCurrentQueueItem() {\n    if (this.queue.current) {\n      this.queue.current = null;\n    }\n  }\n  moveToNextQueueItem() {\n    this.clearCurrentQueueItem();\n    this.runQueueIfReady();\n  }\n  setMessageErrorState(pendingRequest, errorState) {\n    const {message: message} = pendingRequest;\n    const {allMessagesByID: allMessagesByID} = this.serviceManager.store.getState();\n    const messageToUpdate = allMessagesByID[message.id];\n    if (messageToUpdate) {\n      const currentState = messageToUpdate.history?.error_state;\n      const errorSame = currentState === errorState || errorState === MessageErrorState.NONE && !currentState;\n      if (!errorSame) {\n        let announceMessageID;\n        switch (errorState) {\n         case MessageErrorState.FAILED:\n          {\n            announceMessageID = \"errors_ariaMessageFailed\";\n            break;\n          }\n        }\n        if (announceMessageID) {\n          this.serviceManager.store.dispatch(actions.announceMessage({\n            messageID: announceMessageID\n          }));\n        }\n        this.serviceManager.store.dispatch(actions.setMessageErrorState(message.id, errorState));\n        const {allMessagesByID: allMessagesByID} = this.serviceManager.store.getState();\n        pendingRequest.message = allMessagesByID[message.id];\n      }\n    }\n  }\n  send(message, source, localMessageID, requestOptions) {\n    message.history.timestamp = message.history.timestamp || Date.now();\n    message.input = message.input || {};\n    message.input.message_type = message.input.message_type || MessageInputType.TEXT;\n    const sendMessagePromise = resolvablePromise();\n    this.addToMessageQueue(message, source, localMessageID, sendMessagePromise, requestOptions);\n    this.runQueueIfReady();\n    return sendMessagePromise;\n  }\n  cancelAllMessageRequests() {\n    while (this.queue.waiting.length) {\n      this.cancelMessageRequestByID(this.queue.waiting[0].message.id, false);\n    }\n    if (this.queue.current) {\n      this.cancelMessageRequestByID(this.queue.current.message.id, false);\n      this.clearCurrentQueueItem();\n    }\n  }\n  async cancelMessageRequestByID(messageID, logError) {\n    let pendingRequest;\n    if (this.queue.current?.message.id === messageID) {\n      pendingRequest = this.queue.current;\n    } else {\n      const index = this.queue.waiting.findIndex(item => item.message.id === messageID);\n      if (index !== -1) {\n        pendingRequest = this.queue.waiting[index];\n        this.queue.waiting.splice(index, 1);\n      }\n    }\n    if (pendingRequest) {\n      const {lastResponse: lastResponse, sendMessageController: sendMessageController} = pendingRequest;\n      sendMessageController?.abort(\"Message was cancelled\");\n      this.rejectFinalErrorOnMessage(pendingRequest, \"Message was cancelled\");\n      if (logError) {\n        this.serviceManager.actions.errorOccurred({\n          errorType: OnErrorType.MESSAGE_COMMUNICATION,\n          message: \"Message was cancelled\",\n          otherData: await safeFetchTextWithTimeout(lastResponse)\n        });\n      }\n    }\n  }\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ class NamespaceService {\n  constructor(namespace) {\n    this.originalName = namespace;\n    this.attributeSafe = namespace;\n    this.suffix = getSuffix(namespace);\n  }\n}\n\nfunction getSuffix(namespace) {\n  const computedName = computeNamespaceName(namespace);\n  return computedName?.length ? `--${namespace}` : \"\";\n}\n\nfunction computeNamespaceName(namespace) {\n  return namespace ? namespace.trim() : \"\";\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ class ServiceManager {\n  constructor() {\n    this.userDefinedElementRegistry = new Map;\n    this.restartCount = 0;\n  }\n  async fire(busEvent) {\n    return this.eventBus.fire(busEvent, this.instance);\n  }\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ let innerStorage = {};\n\nconst storage$1 = {\n  getItem(key) {\n    return innerStorage[key];\n  },\n  setItem(key, value) {\n    innerStorage[key] = value;\n  },\n  removeItem(key) {\n    delete innerStorage[key];\n  },\n  length: Object.keys(innerStorage).length,\n  clear() {\n    innerStorage = {};\n  },\n  key(index) {\n    return Object.keys(innerStorage)[index];\n  }\n};\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const storage = IS_SESSION_STORAGE() ? window.sessionStorage : storage$1;\n\nclass UserSessionStorageService {\n  constructor(serviceManager) {\n    this.serviceManager = serviceManager;\n    this.prefix = `CARBON_CHAT_SESSION${this.serviceManager?.namespace?.suffix || \"\"}`;\n  }\n  loadChatSession() {\n    try {\n      const chatSessionString = storage.getItem(this.getChatSessionKey());\n      const chatSession = chatSessionString ? JSON.parse(chatSessionString) : null;\n      if (chatSession?.version === VERSION) {\n        return chatSession;\n      }\n      this.clearChatSession();\n      return null;\n    } catch (error) {\n      this.clearChatSession();\n      return null;\n    }\n  }\n  loadLauncherSession() {\n    try {\n      const launcherSessionString = storage.getItem(this.getLauncherSessionKey());\n      const launcherSession = launcherSessionString ? JSON.parse(launcherSessionString) : null;\n      if (launcherSession?.version === VERSION) {\n        launcherSession.wasLoadedFromBrowser = true;\n        return launcherSession;\n      }\n      this.clearLauncherSession();\n      return null;\n    } catch (error) {\n      this.clearLauncherSession();\n      return null;\n    }\n  }\n  persistChatSession(session) {\n    try {\n      storage.setItem(this.getChatSessionKey(), JSON.stringify(session));\n    } catch (error) {\n      consoleError(\"Error in persistChatSession\", error);\n    }\n  }\n  persistLauncherSession(session) {\n    try {\n      storage.setItem(this.getLauncherSessionKey(), JSON.stringify(session));\n    } catch (error) {\n      consoleError(\"Error in persistLauncherSession\", error);\n    }\n  }\n  clearChatSession() {\n    try {\n      storage.removeItem(this.getChatSessionKey());\n    } catch (error) {\n      consoleError(\"Error in clearChatSession\", error);\n    }\n  }\n  clearLauncherSession() {\n    try {\n      storage.removeItem(this.getLauncherSessionKey());\n    } catch (error) {\n      consoleError(\"Error in clearLauncherSession\", error);\n    }\n  }\n  getChatSessionKey() {\n    return this.prefix;\n  }\n  getLauncherSessionKey() {\n    return this.prefix;\n  }\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function replaceCurrentArrayValue(currentValue, newValue) {\n  if (Array.isArray(newValue)) {\n    return newValue;\n  }\n  return undefined;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const agentReducers = {\n  [HA_SET_IS_CONNECTING]: (state, action) => {\n    const {isConnecting: isConnecting, localMessageID: localMessageID} = action;\n    return {\n      ...state,\n      agentState: {\n        ...state.agentState,\n        isConnecting: isConnecting,\n        activeLocalMessageID: localMessageID,\n        numUnreadMessages: isConnecting ? 0 : state.agentState.numUnreadMessages\n      },\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        chatState: {\n          ...state.persistedToBrowserStorage.chatState,\n          agentState: {\n            ...state.persistedToBrowserStorage.chatState.agentState,\n            isSuspended: isConnecting ? state.persistedToBrowserStorage.chatState.agentState.isSuspended : false\n          }\n        }\n      }\n    };\n  },\n  [HA_SET_IS_RECONNECTING]: (state, action) => {\n    const {isReconnecting: isReconnecting} = action;\n    return {\n      ...state,\n      agentState: {\n        ...state.agentState,\n        isReconnecting: isReconnecting\n      }\n    };\n  },\n  [HA_SET_AGENT_AVAILABILITY]: (state, action) => {\n    if (!state.agentState.isConnecting) {\n      return state;\n    }\n    return {\n      ...state,\n      agentState: {\n        ...state.agentState,\n        availability: state.agentState.isConnecting ? action.availability : null\n      }\n    };\n  },\n  [HA_SET_SHOW_SCREEN_SHARE_REQUEST]: (state, {showRequest: showRequest}) => ({\n    ...state,\n    agentState: {\n      ...state.agentState,\n      showScreenShareRequest: showRequest\n    }\n  }),\n  [HA_SET_AGENT_JOINED]: (state, action) => {\n    const agentProfiles = {\n      ...state.persistedToBrowserStorage.chatState.agentState.agentProfiles\n    };\n    const {agentProfile: agentProfile} = action;\n    if (agentProfile) {\n      agentProfiles[agentProfile.id] = agentProfile;\n    }\n    return {\n      ...state,\n      agentState: {\n        ...state.agentState,\n        isConnecting: false,\n        isReconnecting: false,\n        availability: null\n      },\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        chatState: {\n          ...state.persistedToBrowserStorage.chatState,\n          agentState: {\n            ...state.persistedToBrowserStorage.chatState.agentState,\n            isConnected: true,\n            agentProfile: agentProfile,\n            agentProfiles: agentProfiles\n          }\n        }\n      }\n    };\n  },\n  [HA_SET_PERSISTED_STATE]: (state, action) => ({\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      chatState: {\n        ...state.persistedToBrowserStorage.chatState,\n        agentState: {\n          ...state.persistedToBrowserStorage.chatState.agentState,\n          serviceDeskState: action.state\n        }\n      }\n    }\n  }),\n  [HA_UPDATE_IS_SUSPENDED]: (state, action) => {\n    if (!state.agentState.isConnecting && !state.persistedToBrowserStorage.chatState.agentState.isConnected) {\n      return state;\n    }\n    return {\n      ...state,\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        chatState: {\n          ...state.persistedToBrowserStorage.chatState,\n          agentState: {\n            ...state.persistedToBrowserStorage.chatState.agentState,\n            isSuspended: action.isSuspended\n          }\n        }\n      }\n    };\n  },\n  [HA_UPDATE_IS_TYPING]: (state, action) => ({\n    ...state,\n    agentState: {\n      ...state.agentState,\n      isAgentTyping: action.isTyping\n    }\n  }),\n  [HA_SET_AGENT_LEFT_CHAT]: state => ({\n    ...state,\n    botMessageState: {\n      ...state.botMessageState\n    },\n    agentState: {\n      ...state.agentState,\n      isAgentTyping: false\n    },\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      chatState: {\n        ...state.persistedToBrowserStorage.chatState,\n        agentState: {\n          ...state.persistedToBrowserStorage.chatState.agentState,\n          agentProfile: null\n        }\n      }\n    }\n  }),\n  [HA_UPDATE_CAPABILITIES]: (state, action) => {\n    const newInputState = {\n      ...state.agentState.inputState,\n      ...action.capabilities\n    };\n    if (!newInputState.allowFileUploads) {\n      newInputState.files = [];\n    }\n    return {\n      ...state,\n      agentState: {\n        ...state.agentState,\n        inputState: newInputState\n      }\n    };\n  },\n  [HA_SET_IS_SCREEN_SHARING]: (state, {isSharing: isSharing}) => ({\n    ...state,\n    agentState: {\n      ...state.agentState,\n      isScreenSharing: isSharing\n    }\n  }),\n  [HA_UPDATE_FILE_UPLOAD_IN_PROGRESS]: (state, action) => ({\n    ...state,\n    agentState: {\n      ...state.agentState,\n      fileUploadInProgress: action.fileUploadInProgress\n    }\n  }),\n  [HA_END_CHAT]: state => {\n    let newState = applyLocalMessageUIState(state, state.agentState.activeLocalMessageID, \"wasAgentChatEnded\", true);\n    newState = {\n      ...newState,\n      agentState: {\n        ...newState.agentState,\n        isConnecting: false,\n        isReconnecting: false,\n        availability: null,\n        activeLocalMessageID: null,\n        isAgentTyping: false,\n        inputState: {\n          ...newState.agentState.inputState,\n          isReadonly: false\n        }\n      },\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        chatState: {\n          ...state.persistedToBrowserStorage.chatState,\n          agentState: {\n            ...state.persistedToBrowserStorage.chatState.agentState,\n            isConnected: false,\n            isSuspended: false,\n            agentProfile: null\n          }\n        }\n      }\n    };\n    return newState;\n  }\n};\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function populateTourStepItems(state) {\n  const {activeTourID: activeTourID} = state.persistedToBrowserStorage.chatState.persistedTourState;\n  if (activeTourID) {\n    const originalMessage = state.allMessagesByID[activeTourID];\n    const tourMessageItem = originalMessage?.output?.generic?.find(message => Boolean(message.user_defined?.steps));\n    if (tourMessageItem) {\n      return {\n        ...state,\n        tourState: {\n          ...state.tourState,\n          activeTourStepItems: tourMessageItem.user_defined?.steps\n        }\n      };\n    }\n  }\n  return clearTourState(state);\n}\n\nfunction clearTourState(state) {\n  return {\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      chatState: {\n        ...state.persistedToBrowserStorage.chatState,\n        persistedTourState: {\n          activeTourID: null,\n          activeTourCurrentStepIndex: null\n        }\n      },\n      launcherState: {\n        ...state.persistedToBrowserStorage.launcherState,\n        activeTour: false\n      }\n    },\n    tourState: {\n      ...state.tourState,\n      activeTourStepItems: null\n    }\n  };\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const EXCLUDE_AGENT_UNREAD = new Set([ AgentMessageType.USER_ENDED_CHAT, AgentMessageType.CHAT_WAS_ENDED, AgentMessageType.RELOAD_WARNING ]);\n\nconst reducers = {\n  [CHANGE_STATE]: (state, action) => merge({}, state, action.partialState),\n  [HYDRATE_CHAT]: state => ({\n    ...state,\n    isHydrated: true\n  }),\n  [RESTART_CONVERSATION]: state => {\n    let newState = {\n      ...state,\n      botMessageState: {\n        ...state.botMessageState,\n        localMessageIDs: [],\n        messageIDs: [],\n        isTypingCounter: 0,\n        isScrollAnchored: false\n      },\n      allMessageItemsByID: {},\n      allMessagesByID: {},\n      iFramePanelState: {\n        ...DEFAULT_IFRAME_PANEL_STATE\n      },\n      viewSourcePanelState: {\n        ...DEFAULT_CITATION_PANEL_STATE\n      },\n      customPanelState: {\n        ...DEFAULT_CUSTOM_PANEL_STATE\n      },\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        chatState: {\n          ...state.persistedToBrowserStorage.chatState,\n          homeScreenState: {\n            ...state.persistedToBrowserStorage.chatState.homeScreenState,\n            showBackToBot: false\n          }\n        }\n      },\n      isHydrated: false,\n      catastrophicErrorType: null\n    };\n    newState = clearTourState(newState);\n    if (newState.homeScreenConfig.is_on) {\n      newState = setHomeScreenOpenState(newState, true);\n    }\n    return newState;\n  },\n  [HYDRATE_MESSAGE_HISTORY]: (state, action) => {\n    let newState = {\n      ...state,\n      ...action.messageHistory\n    };\n    if (state.persistedToBrowserStorage.chatState.persistedTourState.activeTourID) {\n      newState = populateTourStepItems(newState);\n    }\n    return newState;\n  },\n  [ADD_LOCAL_MESSAGE_ITEM]: (state, action) => {\n    const {messageItem: messageItem, message: message, addMessage: addMessage, addAfterID: addAfterID} = action;\n    const {id: id} = messageItem.ui_state;\n    const isSilent = message.history.silent;\n    let newState = state;\n    if (addMessage) {\n      newState = applyFullMessage(newState, message);\n    }\n    const currentIndex = newState.botMessageState.localMessageIDs.findIndex(existingID => existingID === id);\n    const newLocalMessageIDs = [ ...newState.botMessageState.localMessageIDs ];\n    let insertAtIndex = currentIndex;\n    if (currentIndex !== -1) {\n      newLocalMessageIDs.splice(currentIndex, 1);\n    } else {\n      insertAtIndex = newLocalMessageIDs.length;\n    }\n    if (addAfterID) {\n      const afterIDIndex = newLocalMessageIDs.findIndex(existingID => existingID === addAfterID);\n      if (afterIDIndex !== -1) {\n        insertAtIndex = afterIDIndex + 1;\n      }\n    }\n    newLocalMessageIDs.splice(insertAtIndex, 0, id);\n    if (!isSilent) {\n      newState = {\n        ...newState,\n        allMessageItemsByID: {\n          ...newState.allMessageItemsByID,\n          [id]: messageItem\n        },\n        botMessageState: {\n          ...newState.botMessageState,\n          localMessageIDs: newLocalMessageIDs\n        }\n      };\n      if (newState.persistedToBrowserStorage.chatState.homeScreenState.isHomeScreenOpen) {\n        newState = setHomeScreenOpenState(newState, false);\n      }\n      const isBotMessage = !messageItem.item.agent_message_type;\n      const isMainWindowOpen = state.persistedToBrowserStorage.launcherState.viewState.mainWindow;\n      if (!isBotMessage && (!isMainWindowOpen || !state.isBrowserPageVisible)) {\n        const fromAgent = !isRequest(message);\n        if (fromAgent && !EXCLUDE_AGENT_UNREAD.has(messageItem.item.agent_message_type)) {\n          newState = {\n            ...newState,\n            agentState: {\n              ...newState.agentState,\n              numUnreadMessages: newState.agentState.numUnreadMessages + 1\n            }\n          };\n        }\n      }\n    }\n    return newState;\n  },\n  [REMOVE_MESSAGES]: (state, {messageIDs: messageIDs}) => {\n    const idsSet = new Set(messageIDs);\n    const newAllMessages = {\n      ...state.allMessagesByID\n    };\n    const newAllMessageItems = {\n      ...state.allMessageItemsByID\n    };\n    const newMessageIDs = state.botMessageState.messageIDs.filter(messageID => !idsSet.has(messageID));\n    const newMessageItemsIDs = state.botMessageState.localMessageIDs.filter(messageItemID => {\n      const messageItem = newAllMessageItems[messageItemID];\n      const removeItem = idsSet.has(messageItem?.fullMessageID);\n      if (removeItem) {\n        delete newAllMessageItems[messageItemID];\n      }\n      return !removeItem;\n    });\n    messageIDs.forEach(messageID => {\n      delete newAllMessages[messageID];\n    });\n    const newState = {\n      ...state,\n      allMessagesByID: newAllMessages,\n      allMessageItemsByID: newAllMessageItems,\n      botMessageState: {\n        ...state.botMessageState,\n        messageIDs: newMessageIDs,\n        localMessageIDs: newMessageItemsIDs\n      }\n    };\n    return newState;\n  },\n  [UPDATE_LOCAL_MESSAGE_ITEM]: (state, action) => {\n    const {messageItem: messageItem} = action;\n    return {\n      ...state,\n      allMessageItemsByID: {\n        ...state.allMessageItemsByID,\n        [messageItem.ui_state.id]: messageItem\n      }\n    };\n  },\n  [UPDATE_MESSAGE]: (state, action) => {\n    const {message: message} = action;\n    return {\n      ...state,\n      allMessagesByID: {\n        ...state.allMessagesByID,\n        [message.id]: message\n      }\n    };\n  },\n  [ADD_MESSAGE]: (state, action) => {\n    const {message: message} = action;\n    const messageID = message.id;\n    let newState = state;\n    if (isResponse(message)) {\n      const itemIDsInNewMessage = [];\n      message.output.generic.forEach(item => {\n        const id = streamItemID(messageID, item);\n        if (id) {\n          itemIDsInNewMessage.push(id);\n        }\n      });\n      const newAllMessageItemsByID = {\n        ...state.allMessageItemsByID\n      };\n      const existingItemIDs = [];\n      let firstFoundIndex;\n      const newLocalMessageIDs = state.botMessageState.localMessageIDs.filter((itemID, index) => {\n        const item = state.allMessageItemsByID[itemID];\n        const isItemInMessage = item.fullMessageID === messageID;\n        if (isItemInMessage) {\n          if (firstFoundIndex === undefined) {\n            firstFoundIndex = index;\n          }\n          if (!itemIDsInNewMessage.includes(itemID)) {\n            delete newAllMessageItemsByID[itemID];\n          } else {\n            existingItemIDs.push(itemID);\n          }\n        }\n        return !isItemInMessage;\n      });\n      if (existingItemIDs.length) {\n        const itemIDsToInsert = itemIDsInNewMessage.filter(itemID => existingItemIDs.includes(itemID));\n        if (itemIDsToInsert.length) {\n          newLocalMessageIDs.splice(firstFoundIndex, 0, ...itemIDsToInsert);\n        }\n      }\n      newState = {\n        ...newState,\n        allMessageItemsByID: newAllMessageItemsByID,\n        botMessageState: {\n          ...newState.botMessageState,\n          localMessageIDs: newLocalMessageIDs\n        }\n      };\n    }\n    return applyFullMessage(newState, message);\n  },\n  [MESSAGE_SET_OPTION_SELECTED]: (state, action) => {\n    const newMessagesByID = {\n      ...state.allMessageItemsByID\n    };\n    newMessagesByID[action.messageID] = {\n      ...state.allMessageItemsByID[action.messageID],\n      ui_state: {\n        ...state.allMessageItemsByID[action.messageID].ui_state,\n        optionSelected: action.sentMessage\n      }\n    };\n    return {\n      ...state,\n      allMessageItemsByID: newMessagesByID\n    };\n  },\n  [ADD_IS_TYPING_COUNTER]: (state, action) => ({\n    ...state,\n    botMessageState: {\n      ...state.botMessageState,\n      isTypingCounter: Math.max(state.botMessageState.isTypingCounter + action.addToIsTyping, 0)\n    }\n  }),\n  [ADD_IS_LOADING_COUNTER]: (state, action) => ({\n    ...state,\n    botMessageState: {\n      ...state.botMessageState,\n      isLoadingCounter: Math.max(state.botMessageState.isLoadingCounter + action.addToIsLoading, 0)\n    }\n  }),\n  [ADD_IS_HYDRATING_COUNTER]: (state, action) => ({\n    ...state,\n    botMessageState: {\n      ...state.botMessageState,\n      isHydratingCounter: Math.max(state.botMessageState.isHydratingCounter + action.addToIsHydrating, 0)\n    }\n  }),\n  [SET_APP_STATE_VALUE]: (state, action) => ({\n    ...state,\n    [action.key]: action.value\n  }),\n  [UPDATE_PERSISTED_CHAT_STATE]: (state, action) => ({\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      chatState: {\n        ...state.persistedToBrowserStorage.chatState,\n        ...action.chatState\n      }\n    }\n  }),\n  [UPDATE_HAS_SENT_NON_WELCOME_MESSAGE]: (state, action) => {\n    if (state.persistedToBrowserStorage.chatState.hasSentNonWelcomeMessage === action.hasSentNonWelcomeMessage) {\n      return state;\n    }\n    return {\n      ...state,\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        chatState: {\n          ...state.persistedToBrowserStorage.chatState,\n          hasSentNonWelcomeMessage: action.hasSentNonWelcomeMessage\n        },\n        launcherState: {\n          ...state.persistedToBrowserStorage.launcherState,\n          hasSentNonWelcomeMessage: action.hasSentNonWelcomeMessage\n        }\n      }\n    };\n  },\n  [SET_VIEW_STATE]: (state, action) => handleViewStateChange(state, action.viewState),\n  [SET_VIEW_CHANGING]: (state, action) => ({\n    ...state,\n    viewChanging: action.viewChanging\n  }),\n  [SET_INITIAL_VIEW_CHANGE_COMPLETE]: (state, action) => ({\n    ...state,\n    initialViewChangeComplete: action.changeComplete\n  }),\n  [UPDATE_BOT_NAME]: (state, action) => ({\n    ...state,\n    botName: action.name,\n    headerDisplayName: state.theme.useAITheme ? state.headerDisplayName : action.name\n  }),\n  [UPDATE_BOT_AVATAR_URL]: (state, action) => ({\n    ...state,\n    botAvatarURL: action.url\n  }),\n  [UPDATE_LAUNCHER_AVATAR_URL]: (state, action) => ({\n    ...state,\n    launcher: {\n      ...state.launcher,\n      config: {\n        ...state.launcher.config,\n        mobile: {\n          ...state.launcher.config.mobile,\n          avatar_url_override: action.source\n        },\n        desktop: {\n          ...state.launcher.config.desktop,\n          avatar_url_override: action.source\n        }\n      }\n    }\n  }),\n  [UPDATE_MAIN_HEADER_TITLE]: (state, action) => ({\n    ...state,\n    headerDisplayName: action.title\n  }),\n  [UPDATE_CSS_VARIABLES]: (state, action) => {\n    const {config: config} = state;\n    const {variables: variables} = action;\n    const newConfig = {\n      public: {\n        ...config.public\n      }\n    };\n    return {\n      ...state,\n      config: newConfig,\n      cssVariableOverrides: variables\n    };\n  },\n  [UPDATE_HOME_SCREEN_CONFIG]: (state, action) => {\n    const newHomeScreenConfig = action.homeScreenConfig;\n    return {\n      ...state,\n      homeScreenConfig: mergeWith({}, state.homeScreenConfig, newHomeScreenConfig, replaceCurrentArrayValue)\n    };\n  },\n  [SET_MESSAGE_UI_PROPERTY]: (state, action) => applyLocalMessageUIState(state, action.localMessageID, action.propertyName, action.propertyValue),\n  [SET_MESSAGE_HISTORY_PROPERTY]: (state, action) => {\n    const {messageID: messageID, propertyName: propertyName, propertyValue: propertyValue} = action;\n    const oldMessage = state.allMessagesByID[messageID];\n    if (oldMessage) {\n      return {\n        ...state,\n        allMessagesByID: {\n          ...state.allMessagesByID,\n          [messageID]: {\n            ...oldMessage,\n            history: {\n              ...oldMessage.history,\n              [propertyName]: propertyValue\n            }\n          }\n        }\n      };\n    }\n    return state;\n  },\n  [MERGE_HISTORY]: (state, action) => {\n    const oldMessage = state.allMessagesByID[action.messageID];\n    if (oldMessage) {\n      return {\n        ...state,\n        allMessagesByID: {\n          ...state.allMessagesByID,\n          [action.messageID]: {\n            ...oldMessage,\n            history: merge({}, oldMessage.history, action.history)\n          }\n        }\n      };\n    }\n    return state;\n  },\n  [ANNOUNCE_MESSAGE]: (state, action) => ({\n    ...state,\n    announceMessage: action.message\n  }),\n  [ACCEPTED_DISCLAIMER]: state => ({\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      chatState: {\n        ...state.persistedToBrowserStorage.chatState,\n        disclaimersAccepted: {\n          ...state.persistedToBrowserStorage.chatState.disclaimersAccepted,\n          [window.location.hostname]: true\n        }\n      }\n    }\n  }),\n  [SET_HOME_SCREEN_IS_OPEN]: (state, {isOpen: isOpen}) => setHomeScreenOpenState(state, isOpen),\n  [TOGGLE_HOME_SCREEN]: state => setHomeScreenOpenState(state, !state.persistedToBrowserStorage.chatState.homeScreenState.isHomeScreenOpen, true),\n  [UPDATE_LAUNCHER_CONFIG]: (state, action) => {\n    const newConfig = merge({}, state.launcher.config, action.launcherConfig);\n    return {\n      ...state,\n      launcher: {\n        ...state.launcher,\n        config: newConfig\n      },\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        launcherState: {\n          ...state.persistedToBrowserStorage.launcherState,\n          desktopLauncherIsExpanded: newConfig.is_on && newConfig.desktop.is_on ? state.persistedToBrowserStorage.launcherState.desktopLauncherIsExpanded : false,\n          mobileLauncherIsExtended: newConfig.is_on && newConfig.mobile.is_on ? state.persistedToBrowserStorage.launcherState.mobileLauncherIsExtended : false\n        }\n      }\n    };\n  },\n  [SET_LAUNCHER_PROPERTY]: (state, action) => ({\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      launcherState: {\n        ...state.persistedToBrowserStorage.launcherState,\n        [action.propertyName]: action.propertyValue\n      }\n    }\n  }),\n  [SET_LAUNCHER_CONFIG_PROPERTY]: (state, action) => {\n    const newState = {\n      ...state,\n      launcher: {\n        ...state.launcher,\n        config: {\n          ...state.launcher.config\n        }\n      }\n    };\n    if (!action.launcherType || action.launcherType === LauncherType.DESKTOP) {\n      newState.launcher.config.desktop = {\n        ...state.launcher.config.desktop,\n        [action.propertyName]: action.propertyValue\n      };\n    }\n    if (!action.launcherType || action.launcherType === LauncherType.MOBILE) {\n      newState.launcher.config.mobile = {\n        ...state.launcher.config.mobile,\n        [action.propertyName]: action.propertyValue\n      };\n    }\n    return newState;\n  },\n  [SET_CHAT_MESSAGES_PROPERTY]: (state, action) => applyBotMessageState(state, {\n    [action.propertyName]: action.propertyValue\n  }),\n  [SET_LAUNCHER_MINIMIZED]: state => ({\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      launcherState: {\n        ...state.persistedToBrowserStorage.launcherState,\n        desktopLauncherIsExpanded: false,\n        desktopLauncherWasMinimized: true\n      }\n    }\n  }),\n  [OPEN_IFRAME_CONTENT]: (state, {messageItem: messageItem}) => ({\n    ...state,\n    iFramePanelState: {\n      ...state.iFramePanelState,\n      messageItem: messageItem,\n      isOpen: true\n    },\n    announceMessage: {\n      messageID: \"iframe_ariaOpenedPanel\"\n    }\n  }),\n  [CLOSE_IFRAME_PANEL]: state => ({\n    ...state,\n    iFramePanelState: {\n      ...state.iFramePanelState,\n      isOpen: false\n    },\n    announceMessage: {\n      messageID: \"iframe_ariaClosedPanel\"\n    }\n  }),\n  [SET_CONVERSATIONAL_SEARCH_CITATION_PANEL_IS_OPEN]: (state, action) => ({\n    ...state,\n    viewSourcePanelState: {\n      ...state.viewSourcePanelState,\n      citationItem: action.citationItem,\n      relatedSearchResult: action.relatedSearchResult,\n      isOpen: action.isOpen\n    }\n  }),\n  [SET_CUSTOM_PANEL_OPEN]: (state, action) => ({\n    ...state,\n    customPanelState: {\n      ...state.customPanelState,\n      isOpen: action.isOpen\n    }\n  }),\n  [SET_CUSTOM_PANEL_OPTIONS]: (state, action) => ({\n    ...state,\n    customPanelState: {\n      ...state.customPanelState,\n      options: action.options\n    }\n  }),\n  [SET_TOUR_DATA]: (state, action) => {\n    const newStateWithPersistedTourData = {\n      ...state,\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        chatState: {\n          ...state.persistedToBrowserStorage.chatState,\n          persistedTourState: {\n            activeTourID: action.newActiveTourMessageID,\n            activeTourCurrentStepIndex: 0\n          }\n        },\n        launcherState: {\n          ...state.persistedToBrowserStorage.launcherState,\n          activeTour: true\n        }\n      }\n    };\n    return populateTourStepItems(newStateWithPersistedTourData);\n  },\n  [CLEAR_TOUR_DATA]: state => clearTourState(state),\n  [CHANGE_STEP_IN_TOUR]: (state, action) => ({\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      chatState: {\n        ...state.persistedToBrowserStorage.chatState,\n        persistedTourState: {\n          ...state.persistedToBrowserStorage.chatState.persistedTourState,\n          activeTourCurrentStepIndex: Math.max(Math.min(action.newStepNumber, state.tourState.activeTourStepItems.length - 1), 0)\n        }\n      }\n    }\n  }),\n  [UPDATE_INPUT_STATE]: (state, action) => {\n    const currentInputState = getInputState(state, action.isInputToAgent);\n    const newInputState = {\n      ...currentInputState,\n      ...action.newState\n    };\n    const newState = applyInputState(state, newInputState, action.isInputToAgent);\n    return newState;\n  },\n  [SET_IS_BROWSER_PAGE_VISIBLE]: (state, action) => {\n    let numUnreadMessages;\n    const isMainWindowOpen = state.persistedToBrowserStorage.launcherState.viewState.mainWindow;\n    if (isMainWindowOpen && action.isVisible) {\n      numUnreadMessages = 0;\n    } else {\n      numUnreadMessages = state.agentState.numUnreadMessages;\n    }\n    return {\n      ...state,\n      isBrowserPageVisible: action.isVisible,\n      agentState: {\n        ...state.agentState,\n        numUnreadMessages: numUnreadMessages\n      }\n    };\n  },\n  [ADD_INPUT_FILE]: (state, {file: file, isInputToAgent: isInputToAgent}) => {\n    const currentInputState = getInputState(state, isInputToAgent);\n    return applyInputState(state, {\n      ...currentInputState,\n      files: [ ...currentInputState.files, file ]\n    }, isInputToAgent);\n  },\n  [REMOVE_INPUT_FILE]: (state, {fileID: fileID, isInputToAgent: isInputToAgent}) => {\n    const currentInputState = getInputState(state, isInputToAgent);\n    const newUploads = [ ...currentInputState.files ];\n    const index = newUploads.findIndex(file => file.id === fileID);\n    if (index !== -1) {\n      newUploads.splice(index, 1);\n    }\n    return applyInputState(state, {\n      ...currentInputState,\n      files: newUploads\n    }, isInputToAgent);\n  },\n  [REMOVE_LOCAL_MESSAGE_ITEM]: (state, {localMessageItemID: localMessageItemID}) => {\n    const newLocalMessageIDs = state.botMessageState.localMessageIDs.filter(id => id !== localMessageItemID);\n    const allMessageItemsByID = {\n      ...state.allMessageItemsByID\n    };\n    if (allMessageItemsByID[localMessageItemID]) {\n      delete allMessageItemsByID[localMessageItemID];\n    }\n    return {\n      ...state,\n      allMessageItemsByID: allMessageItemsByID,\n      botMessageState: {\n        ...state.botMessageState,\n        localMessageIDs: newLocalMessageIDs\n      }\n    };\n  },\n  [ADD_NOTIFICATION]: (state, {notification: notification, notificationID: notificationID}) => ({\n    ...state,\n    notifications: state.notifications.concat({\n      id: notificationID,\n      notification: notification\n    })\n  }),\n  [REMOVE_NOTIFICATIONS]: (state, {groupID: groupID, notificationID: notificationID}) => ({\n    ...state,\n    notifications: state.notifications.filter(notification => {\n      if (notificationID) {\n        return notification.id !== notificationID;\n      }\n      return notification.notification.groupID !== groupID;\n    })\n  }),\n  [REMOVE_ALL_NOTIFICATIONS]: state => ({\n    ...state,\n    notifications: []\n  }),\n  [CLEAR_INPUT_FILES]: (state, {isInputToAgent: isInputToAgent}) => {\n    const currentInputState = getInputState(state, isInputToAgent);\n    return applyInputState(state, {\n      ...currentInputState,\n      files: []\n    }, isInputToAgent);\n  },\n  [FILE_UPLOAD_INPUT_ERROR]: (state, {fileID: fileID, errorMessage: errorMessage, isInputToAgent: isInputToAgent}) => {\n    const currentInputSate = getInputState(state, isInputToAgent);\n    const newUploads = [ ...currentInputSate.files ];\n    const index = newUploads.findIndex(file => file.id === fileID);\n    if (index !== -1) {\n      newUploads[index] = {\n        ...newUploads[index],\n        isError: true,\n        errorMessage: errorMessage,\n        status: FileStatusValue.COMPLETE\n      };\n    }\n    return applyInputState(state, {\n      ...currentInputSate,\n      files: newUploads\n    }, isInputToAgent);\n  },\n  [ADD_NESTED_MESSAGES]: (state, {localMessageItems: localMessageItems}) => {\n    const allMessageItemsByID = {\n      ...state.allMessageItemsByID\n    };\n    localMessageItems.forEach(localMessageItem => {\n      allMessageItemsByID[localMessageItem.ui_state.id] = localMessageItem;\n    });\n    return {\n      ...state,\n      allMessageItemsByID: allMessageItemsByID\n    };\n  },\n  [SET_RESPONSE_PANEL_IS_OPEN]: (state, {isOpen: isOpen}) => ({\n    ...state,\n    responsePanelState: {\n      ...state.responsePanelState,\n      isOpen: isOpen\n    }\n  }),\n  [SET_RESPONSE_PANEL_CONTENT]: (state, {localMessageItem: localMessageItem, isMessageForInput: isMessageForInput}) => ({\n    ...state,\n    responsePanelState: {\n      ...state.responsePanelState,\n      localMessageItem: localMessageItem,\n      isMessageForInput: isMessageForInput\n    }\n  }),\n  [STREAMING_START]: (state, {messageID: messageID}) => {\n    const streamIntoResponse = {\n      id: messageID,\n      output: {\n        generic: []\n      },\n      history: {\n        timestamp: Date.now()\n      }\n    };\n    return applyFullMessage(state, streamIntoResponse);\n  },\n  [STREAMING_MERGE_HISTORY]: (state, {messageID: messageID, history: history}) => {\n    const existingMessage = state.allMessagesByID[messageID];\n    const newMessage = merge({}, existingMessage, {\n      history: history\n    });\n    if (existingMessage) {\n      return {\n        ...state,\n        allMessagesByID: {\n          ...state.allMessagesByID,\n          [messageID]: newMessage\n        }\n      };\n    }\n    return state;\n  },\n  [STREAMING_ADD_CHUNK]: (state, {chunkItem: chunkItem, fullMessageID: fullMessageID, isCompleteItem: isCompleteItem, disableFadeAnimation: disableFadeAnimation}) => {\n    const message = state.allMessagesByID[fullMessageID];\n    const localItemID = streamItemID(fullMessageID, chunkItem);\n    const existingLocalMessageItem = state.allMessageItemsByID[localItemID];\n    let {localMessageIDs: localMessageIDs} = state.botMessageState;\n    let newItem;\n    if (!existingLocalMessageItem) {\n      newItem = outputItemToLocalItem(chunkItem, message, false);\n      newItem.ui_state.needsAnnouncement = false;\n      newItem.ui_state.disableFadeAnimation = disableFadeAnimation;\n      newItem.ui_state.isIntermediateStreaming = true;\n      if (isCompleteItem) {\n        newItem.ui_state.streamingState = {\n          chunks: [],\n          isDone: true\n        };\n      } else {\n        newItem.ui_state.streamingState = {\n          chunks: [ chunkItem ],\n          isDone: false\n        };\n      }\n      localMessageIDs = [ ...localMessageIDs, localItemID ];\n      if (!newItem.item.response_type) {\n        throw new Error(`New chunk item does not have a response_type: ${JSON.stringify(chunkItem)}`);\n      }\n    } else if (isCompleteItem) {\n      newItem = outputItemToLocalItem(chunkItem, message, false);\n      newItem.ui_state.needsAnnouncement = false;\n      newItem.ui_state.disableFadeAnimation = disableFadeAnimation;\n      newItem.ui_state.streamingState = {\n        chunks: [],\n        isDone: true\n      };\n    } else {\n      newItem = {\n        ...existingLocalMessageItem,\n        ui_state: {\n          ...existingLocalMessageItem?.ui_state,\n          streamingState: {\n            ...existingLocalMessageItem?.ui_state.streamingState,\n            chunks: [ ...existingLocalMessageItem?.ui_state.streamingState?.chunks || [], chunkItem ]\n          }\n        }\n      };\n    }\n    return {\n      ...state,\n      allMessageItemsByID: {\n        ...state.allMessageItemsByID,\n        [localItemID]: newItem\n      },\n      botMessageState: {\n        ...state.botMessageState,\n        localMessageIDs: localMessageIDs\n      }\n    };\n  },\n  [UPDATE_CHAT_HEADER_CONFIG]: (state, {chatHeaderConfig: chatHeaderConfig}) => ({\n    ...state,\n    chatHeaderState: {\n      ...state.chatHeaderState,\n      config: {\n        ...state.chatHeaderState.config,\n        ...chatHeaderConfig\n      }\n    }\n  }),\n  [UPDATE_MAX_VISIBLE_HEADER_OBJECTS]: (state, {maxTotal: maxTotal}) => ({\n    ...state,\n    chatHeaderState: {\n      ...state.chatHeaderState,\n      maxVisibleHeaderObjects: maxTotal\n    }\n  }),\n  [SET_STOP_STREAMING_BUTTON_VISIBLE]: (state, {isVisible: isVisible}) => ({\n    ...state,\n    botInputState: {\n      ...state.botInputState,\n      stopStreamingButtonState: {\n        ...state.botInputState.stopStreamingButtonState,\n        isVisible: isVisible\n      }\n    }\n  }),\n  [SET_STOP_STREAMING_BUTTON_DISABLED]: (state, {isDisabled: isDisabled}) => ({\n    ...state,\n    botInputState: {\n      ...state.botInputState,\n      stopStreamingButtonState: {\n        ...state.botInputState.stopStreamingButtonState,\n        isDisabled: isDisabled\n      }\n    }\n  }),\n  [SET_STREAM_ID]: (state, {currentStreamID: currentStreamID}) => ({\n    ...state,\n    botInputState: {\n      ...state.botInputState,\n      stopStreamingButtonState: {\n        ...state.botInputState.stopStreamingButtonState,\n        currentStreamID: currentStreamID\n      }\n    }\n  }),\n  [UPDATE_MAIN_HEADER_AVATAR]: (state, {config: config}) => ({\n    ...state,\n    headerAvatarConfig: config\n  })\n};\n\nfunction applyInputState(state, newInputState, isInputToAgent) {\n  if (isInputToAgent) {\n    return {\n      ...state,\n      agentState: {\n        ...state.agentState,\n        inputState: newInputState\n      }\n    };\n  }\n  return {\n    ...state,\n    botInputState: newInputState\n  };\n}\n\nfunction getInputState(state, isInputToAgent) {\n  return isInputToAgent ? state.agentState.inputState : state.botInputState;\n}\n\nObject.assign(reducers, agentReducers);\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function doCreateStore(config, serviceManager) {\n  let useAITheme;\n  if (config.public.themeConfig?.useAITheme !== undefined) {\n    useAITheme = config.public.themeConfig?.useAITheme;\n  } else {\n    useAITheme = DEFAULT_THEME_STATE.useAITheme;\n  }\n  const themeState = {\n    carbonTheme: config.public.themeConfig?.carbonTheme || DEFAULT_THEME_STATE.carbonTheme,\n    useAITheme: useAITheme,\n    corners: getThemeCornersType(config)\n  };\n  const botName = getBotName(themeState.useAITheme, config);\n  const initialState = {\n    ...DEFAULT_MESSAGE_STATE,\n    notifications: [],\n    botInputState: {\n      ...DEFAULT_INPUT_STATE(),\n      isReadonly: config.public.isReadonly,\n      fieldVisible: !config.public.isReadonly\n    },\n    agentState: {\n      ...DEFAULT_AGENT_STATE\n    },\n    botName: botName,\n    headerDisplayName: null,\n    botAvatarURL: config.public.botAvatarURL || null,\n    headerAvatarConfig: null,\n    chatWidthBreakpoint: null,\n    chatWidth: null,\n    chatHeight: null,\n    cssVariableOverrides: mergeCSSVariables({}, {}, themeState.carbonTheme, themeState.useAITheme),\n    isHydrated: false,\n    languagePack: enLanguagePack,\n    locale: \"en\",\n    config: config,\n    originalConfig: config,\n    suspendScrollDetection: false,\n    homeScreenConfig: withoutEmptyStarters({}),\n    persistedToBrowserStorage: {\n      ...DEFAULT_PERSISTED_TO_BROWSER,\n      chatState: {\n        ...DEFAULT_PERSISTED_TO_BROWSER.chatState,\n        homeScreenState: {\n          ...DEFAULT_PERSISTED_TO_BROWSER.chatState.homeScreenState\n        }\n      }\n    },\n    launcher: merge({}, DEFAULT_LAUNCHER, {\n      config: merge({}, {}, {\n        mobile: {}\n      }, {\n        is_on: config.public.showLauncher\n      })\n    }),\n    iFramePanelState: DEFAULT_IFRAME_PANEL_STATE,\n    viewSourcePanelState: DEFAULT_CITATION_PANEL_STATE,\n    isDestroyed: false,\n    customPanelState: DEFAULT_CUSTOM_PANEL_STATE,\n    viewChanging: false,\n    initialViewChangeComplete: false,\n    targetViewState: config.public.openChatByDefault ? VIEW_STATE_MAIN_WINDOW_OPEN : VIEW_STATE_LAUNCHER_OPEN,\n    responsePanelState: DEFAULT_MESSAGE_PANEL_STATE,\n    customMenuOptions: null,\n    tourState: DEFAULT_TOUR_STATE,\n    isBrowserPageVisible: true,\n    showNonHeaderBackgroundCover: false,\n    theme: themeState,\n    layout: getLayoutState(config),\n    chatHeaderState: {\n      config: null,\n      maxVisibleHeaderObjects: 0\n    }\n  };\n  const sessionStorageLauncherState = serviceManager.userSessionStorageService?.loadLauncherSession();\n  if (sessionStorageLauncherState) {\n    initialState.targetViewState = sessionStorageLauncherState.viewState;\n    sessionStorageLauncherState.viewState = VIEW_STATE_ALL_CLOSED;\n    initialState.persistedToBrowserStorage.launcherState = sessionStorageLauncherState;\n  }\n  const enhancer = config.public.debug || NODE_ENV === \"development\" ? window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    name: \"CarbonAIChat\",\n    instanceId: `Chat${serviceManager.namespace.suffix}`\n  }) : undefined;\n  return createStore(reducerFunction, initialState, enhancer);\n}\n\nfunction getThemeCornersType(config) {\n  if (getLayoutState(config).showFrame === false || IS_PHONE || config.public.themeConfig?.corners === CornersType.SQUARE) {\n    return CornersType.SQUARE;\n  }\n  return DEFAULT_THEME_STATE.corners;\n}\n\nfunction getLayoutState(config) {\n  if (config.public.themeConfig?.useAITheme) {\n    return {\n      showFrame: config.public.layout?.showFrame ?? true,\n      hasContentMaxWidth: config.public.layout?.hasContentMaxWidth ?? true\n    };\n  }\n  return merge({}, DEFAULT_LAYOUT_STATE, config.public.layout);\n}\n\nfunction reducerFunction(state, action) {\n  return action && reducers[action.type] ? reducers[action.type](state, action) : state;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const UNREAD_COUNT_TITLE_TIME = 1e4;\n\nfunction copyToSessionStorage(serviceManager) {\n  let previousPersistedToBrowserStorage = serviceManager.store.getState().persistedToBrowserStorage;\n  return () => {\n    const {persistedToBrowserStorage: persistedToBrowserStorage} = serviceManager.store.getState();\n    const persistChatSession = previousPersistedToBrowserStorage !== persistedToBrowserStorage;\n    if (persistChatSession) {\n      previousPersistedToBrowserStorage = persistedToBrowserStorage;\n      serviceManager.userSessionStorageService.persistChatSession(persistedToBrowserStorage.chatState);\n      serviceManager.userSessionStorageService.persistLauncherSession(persistedToBrowserStorage.launcherState);\n    }\n  };\n}\n\nfunction createHandleWindowTitle(serviceManager) {\n  const {store: store} = serviceManager;\n  let originalTitle;\n  let changeTitleTimer;\n  let previousState = store.getState();\n  return () => {\n    const state = store.getState();\n    const {agentState: agentState} = store.getState();\n    const {numUnreadMessages: numUnreadMessages} = agentState;\n    if (numUnreadMessages !== previousState.agentState.numUnreadMessages) {\n      if (!numUnreadMessages) {\n        clearTimeout(changeTitleTimer);\n        if (originalTitle) {\n          window.document.title = originalTitle;\n          originalTitle = null;\n        }\n      } else {\n        clearTimeout(changeTitleTimer);\n        if (!originalTitle) {\n          originalTitle = window.document.title;\n        }\n        window.document.title = state.languagePack.agent_newMessage;\n        changeTitleTimer = setTimeout(() => {\n          window.document.title = `(${numUnreadMessages}) ${originalTitle}`;\n        }, UNREAD_COUNT_TITLE_TIME);\n      }\n    }\n    previousState = state;\n  };\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ async function createServiceManager(appConfig, additionalChatParameters) {\n  const publicConfig = appConfig.public;\n  const serviceManager = new ServiceManager;\n  serviceManager.additionalChatParameters = additionalChatParameters;\n  serviceManager.namespace = new NamespaceService(publicConfig.namespace);\n  serviceManager.userSessionStorageService = new UserSessionStorageService(serviceManager);\n  serviceManager.actions = new ChatActionsImpl(serviceManager);\n  serviceManager.eventBus = new EventBus;\n  serviceManager.store = doCreateStore(appConfig, serviceManager);\n  serviceManager.historyService = new HistoryService(serviceManager);\n  serviceManager.messageService = new MessageService(serviceManager, publicConfig);\n  serviceManager.store.subscribe(copyToSessionStorage(serviceManager));\n  if (!publicConfig.disableWindowTitleChanges) {\n    serviceManager.store.subscribe(createHandleWindowTitle(serviceManager));\n  }\n  serviceManager.customPanelManager = createCustomPanelManager(serviceManager);\n  setIntl(serviceManager, serviceManager.store.getState().locale, serviceManager.store.getState().languagePack);\n  serviceManager.writeableElements = {\n    [WriteableElementName.AI_TOOLTIP_AFTER_DESCRIPTION_ELEMENT]: document.createElement(\"div\"),\n    [WriteableElementName.WELCOME_NODE_BEFORE_ELEMENT]: document.createElement(\"div\"),\n    [WriteableElementName.HEADER_BOTTOM_ELEMENT]: document.createElement(\"div\"),\n    [WriteableElementName.BEFORE_INPUT_ELEMENT]: document.createElement(\"div\"),\n    [WriteableElementName.HOME_SCREEN_HEADER_BOTTOM_ELEMENT]: document.createElement(\"div\"),\n    [WriteableElementName.HOME_SCREEN_AFTER_STARTERS_ELEMENT]: document.createElement(\"div\"),\n    [WriteableElementName.HOME_SCREEN_BEFORE_INPUT_ELEMENT]: document.createElement(\"div\"),\n    [WriteableElementName.CUSTOM_PANEL_ELEMENT]: document.createElement(\"div\")\n  };\n  if (publicConfig.debug) {\n    setEnableDebugLog(true);\n  }\n  if (publicConfig.debugStackTraces) {\n    setEnableDebugStackTracesLog(true);\n  }\n  return serviceManager;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const DEFAULT_PUBLIC_CONFIG = {\n  openChatByDefault: false,\n  showLauncher: true,\n  shouldTakeFocusIfOpensAutomatically: true,\n  serviceDesk: {},\n  messaging: {},\n  themeConfig: {\n    useAITheme: true\n  }\n};\n\nasync function instantiateWidget(pagePublicConfig, chatConstructorPromise, render, element) {\n  const config = cloneDeep(pagePublicConfig);\n  if (!config.messaging?.customSendMessage) {\n    throw new Error(`You must set messaging.customSendMessage in your configuration object.`);\n  }\n  if (config?.debug) {\n    consoleDebug(\"[ChatEntry] Called instantiateWidget\", config);\n  }\n  if (document.location.protocol !== \"https:\") {\n    consoleWarn('Your page is not running with \"https\"; your data will not be sent  securely.');\n  }\n  if (document.compatMode !== \"CSS1Compat\") {\n    consoleWarn('Your page is running in quirks mode; you may experience layout issues with the chat. Add \"<!DOCTYPE html>\" to the page to run in standards mode.');\n  }\n  const {onError: onError, ...publicConfig} = config;\n  const Chat = await chatConstructorPromise(publicConfig);\n  const additionalChatParameters = {\n    onError: onError,\n    render: render\n  };\n  return new Chat(publicConfig, element, additionalChatParameters);\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ dayjs.extend(LocalizedFormat);\n\nlet Chat$1 = class Chat {\n  constructor(publicConfigProvided, customHostElement, additionalChatParametersProvided) {\n    if (publicConfigProvided?.debug) {\n      consoleDebug(\"Constructed chat widget\", publicConfigProvided);\n    }\n    const publicConfig = merge({}, DEFAULT_PUBLIC_CONFIG, publicConfigProvided);\n    this.additionalChatParameters = additionalChatParametersProvided || {};\n    this.appConfig = {\n      public: publicConfig\n    };\n    this.customHostElement = customHostElement;\n  }\n  async start() {\n    try {\n      const result = await this.startInternal();\n      return result.instance;\n    } catch (error) {\n      consoleError(\"There was an error starting your chat\", error);\n      return null;\n    }\n  }\n  async startInternal() {\n    const doesHaveServiceDesk = hasServiceDesk(this.appConfig);\n    this.serviceManager = await createServiceManager(this.appConfig, this.additionalChatParameters);\n    const [languagePack, localePack, render, createHumanAgentService] = await Promise.all([ loadLanguagePack(this.serviceManager.store.getState().languagePack), loadLocale(this.serviceManager.store.getState().locale), Promise.resolve(this.additionalChatParameters.render), doesHaveServiceDesk ? loadHAA() : Promise.resolve(null) ]);\n    this.serviceManager.customHostElement = this.customHostElement;\n    if (createHumanAgentService) {\n      this.serviceManager.humanAgentService = createHumanAgentService(this.serviceManager);\n    }\n    setIntl(this.serviceManager, localePack.name, languagePack);\n    dayjs.locale(localePack);\n    const reallyRenderAndReturnInstance = async () => {\n      await render({\n        serviceManager: this.serviceManager\n      });\n      const initialState = this.serviceManager.store.getState();\n      const {wasLoadedFromBrowser: wasLoadedFromBrowser} = initialState.persistedToBrowserStorage.launcherState;\n      const {targetViewState: targetViewState} = initialState;\n      const {openChatByDefault: openChatByDefault} = initialState.config.public;\n      if (targetViewState.mainWindow) {\n        let mainWindowOpenReason = MainWindowOpenReason.SESSION_HISTORY;\n        if (openChatByDefault && !wasLoadedFromBrowser) {\n          mainWindowOpenReason = MainWindowOpenReason.OPEN_BY_DEFAULT;\n        }\n        await this.serviceManager.actions.changeView(targetViewState, {\n          mainWindowOpenReason: mainWindowOpenReason\n        });\n      } else {\n        const viewChangeReason = ViewChangeReason.WEB_CHAT_LOADED;\n        const tryHydrating = targetViewState.tour;\n        const forceViewChange = isEqual(targetViewState, VIEW_STATE_ALL_CLOSED);\n        await this.serviceManager.actions.changeView(targetViewState, {\n          viewChangeReason: viewChangeReason\n        }, tryHydrating, forceViewChange);\n      }\n      this.serviceManager.store.dispatch(actions.setInitialViewChangeComplete(true));\n      return this.serviceManager.instance;\n    };\n    const renderAndReturnInstance = () => {\n      const promise = reallyRenderAndReturnInstance();\n      this.serviceManager.renderPromise = promise;\n      return promise;\n    };\n    this.serviceManager.instance = createChatInstance({\n      serviceManager: this.serviceManager,\n      callRender: renderAndReturnInstance\n    });\n    return {\n      instance: this.serviceManager.instance,\n      serviceManager: this.serviceManager\n    };\n  }\n};\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function AriaAnnouncerProvider(props) {\n  const intl = useIntl();\n  const {store: store} = useServiceManager();\n  const announcerRef = useRef();\n  const announcerFunction = useCallback(value => {\n    if (!announcerRef.current) {\n      setTimeout(() => announcerRef.current.announceValue(value));\n    } else {\n      announcerRef.current.announceValue(value);\n    }\n  }, []);\n  const previousAnnounceMessageRef = useRef();\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      const currentAnnounceMessage = store.getState().announceMessage;\n      if (currentAnnounceMessage !== previousAnnounceMessageRef.current) {\n        announcerFunction(currentAnnounceMessage);\n        previousAnnounceMessageRef.current = currentAnnounceMessage;\n      }\n    });\n    return unsubscribe;\n  }, [ store, announcerFunction ]);\n  return React.createElement(AriaAnnouncerContext.Provider, {\n    value: announcerFunction\n  }, props.children, React.createElement(AriaAnnouncerComponent, {\n    intl: intl,\n    ref: announcerRef\n  }));\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function useEffectDidUpdate(effect, deps) {\n  const hasRunRef = useRef(false);\n  useEffect(() => {\n    if (hasRunRef.current) {\n      return effect();\n    }\n    hasRunRef.current = true;\n    return undefined;\n  }, deps);\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function getLauncherButtonAriaLabel(languagePack, isLauncherHidden, isTourActive) {\n  if (isTourActive) {\n    return isLauncherHidden ? languagePack.launcher_isTourOpen : languagePack.launcher_isTourClosed;\n  }\n  return isLauncherHidden ? languagePack.launcher_isOpen : languagePack.launcher_isClosed;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function Launcher(props, ref) {\n  const {onToggleOpen: onToggleOpen, languagePack: languagePack, unreadAgentCount: unreadAgentCount, intl: intl, showUnreadIndicator: showUnreadIndicator, className: className, tabIndex: tabIndex, launcherHidden: launcherHidden, activeTour: activeTour} = props;\n  const launcherAvatarURL = useSelector(state => state.theme.useAITheme ? undefined : state.launcher.config.desktop.avatar_url_override);\n  const useAITheme = useSelector(state => state.theme.useAITheme);\n  const buttonRef = React.createRef();\n  useImperativeHandle(ref, () => ({\n    requestFocus: () => {\n      doFocusRef(buttonRef);\n    }\n  }));\n  let ariaLabel = getLauncherButtonAriaLabel(languagePack, launcherHidden, activeTour);\n  if (unreadAgentCount !== 0) {\n    ariaLabel += `. ${intl.formatMessage({\n      id: \"icon_ariaUnreadMessages\"\n    }, {\n      count: unreadAgentCount\n    })}`;\n  }\n  let launcherAvatar = useAITheme ? React.createElement(AiLaunch, {\n    size: 24,\n    className: \"WACLauncher_svg\"\n  }) : React.createElement(ChatLaunch, {\n    size: 24,\n    className: \"WACLauncher__svg\"\n  });\n  if (launcherAvatarURL) {\n    launcherAvatar = React.createElement(\"img\", {\n      className: \"WACLauncher__Avatar\",\n      src: launcherAvatarURL,\n      alt: \"\",\n      \"aria-hidden\": true\n    });\n  }\n  return React.createElement(\"div\", {\n    className: cx(\"WACLauncher__ButtonContainer\", \"WACLauncher__ButtonContainer--round\", className, {\n      \"WACLauncher__ButtonContainer--hidden\": launcherHidden\n    })\n  }, React.createElement(Button, {\n    \"aria-label\": ariaLabel,\n    className: cx(\"WACLauncher__Button\", {\n      WACLauncher__TourButton: activeTour\n    }),\n    \"data-testid\": PageObjectId.LAUNCHER,\n    kind: ButtonKindEnum.PRIMARY,\n    type: \"button\",\n    onClick: onToggleOpen,\n    ref: buttonRef,\n    tabIndex: tabIndex\n  }, activeTour ? React.createElement(ArrowUpLeft, {\n    size: 24,\n    className: \"WACLauncher__svg\"\n  }) : launcherAvatar, (unreadAgentCount !== 0 || showUnreadIndicator) && React.createElement(\"div\", {\n    className: \"WAC__countIndicator\"\n  }, unreadAgentCount !== 0 ? unreadAgentCount : \"\")));\n}\n\nconst LauncherExport = forwardRef(Launcher);\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function LauncherComplex(props) {\n  const {languagePack: languagePack, intl: intl, launcherConfig: launcherConfig, launcherComplexRef: launcherComplexRef, launcherRef: launcherRef, onOpen: onOpen, onMinimize: onMinimize, unreadAgentCount: unreadAgentCount, showUnreadIndicator: showUnreadIndicator, desktopLauncherIsExpanded: desktopLauncherIsExpanded, launcherHidden: launcherHidden, activeTour: activeTour, className: className} = props;\n  const {launcher_desktopGreeting: launcher_desktopGreeting, launcher_closeButton: launcher_closeButton, launcher_ariaIsExpanded: launcher_ariaIsExpanded} = languagePack;\n  function getLauncherContent() {\n    if (launcherConfig.desktop.title) {\n      return launcherConfig.desktop.title;\n    }\n    return launcher_desktopGreeting;\n  }\n  return React.createElement(\"div\", {\n    className: cx(\"WACLauncher__ButtonContainer\", \"WACLauncherComplex__Container\", className, {\n      \"WACLauncher__ButtonContainer--hidden\": launcherHidden\n    }),\n    ref: launcherComplexRef\n  }, React.createElement(\"button\", {\n    className: \"WACLauncherComplex__ContentButton\",\n    type: \"button\",\n    onClick: onOpen,\n    disabled: !desktopLauncherIsExpanded\n  }, React.createElement(\"div\", {\n    className: cx(\"WACWidget__textEllipsis\", {\n      WACLauncherComplex__Text: !launcherHidden\n    })\n  }, getLauncherContent())), React.createElement(LauncherExport, {\n    languagePack: languagePack,\n    intl: intl,\n    ref: launcherRef,\n    onToggleOpen: onOpen,\n    className: \"WACLauncherComplex__SmallLauncherContainer\",\n    unreadAgentCount: unreadAgentCount,\n    showUnreadIndicator: showUnreadIndicator,\n    launcherHidden: launcherHidden,\n    activeTour: activeTour\n  }), React.createElement(Tag, {\n    className: \"WACLauncher__CloseButton\",\n    \"aria-label\": launcher_ariaIsExpanded,\n    onClick: onMinimize,\n    disabled: !desktopLauncherIsExpanded\n  }, React.createElement(\"div\", {\n    className: \"WACLauncher__CloseButtonInnerWrapper\"\n  }, React.createElement(Close, {\n    className: \"WACLauncher__CloseButtonIcon\"\n  }), launcher_closeButton)));\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const TIME_FOR_MINIMIZE_ANIMATION = 400;\n\nconst TIME_FOR_BOUNCE_ANIMATION = 500;\n\nconst LauncherDesktopContainer = props => {\n  const {launcherRef: launcherRef, onDoToggle: onDoToggle, requestFocus: requestFocus, launcherHidden: launcherHidden, activeTour: activeTour} = props;\n  const serviceManager = useServiceManager();\n  const languagePack = useLanguagePack();\n  const intl = useIntl();\n  const browserLauncherState = useSelector(state => state.persistedToBrowserStorage.launcherState);\n  const {desktopLauncherWasMinimized: desktopLauncherWasMinimized, desktopLauncherIsExpanded: desktopLauncherIsExpanded, bounceTurn: bounceTurn, showUnreadIndicator: showUnreadIndicator, viewState: viewState} = browserLauncherState;\n  const launcherState = useSelector(state => state.launcher);\n  const launcherConfig = launcherState.config;\n  const {time_to_expand: time_to_expand, new_expand_time: new_expand_time} = launcherConfig.desktop;\n  const isExpandedLauncherEnabled = launcherConfig.desktop.is_on;\n  const unreadAgentCount = useSelector(state => state.agentState.numUnreadMessages);\n  const [smallLauncherClassName, setSmallLauncherClassName] = useState(\"\");\n  const [complexLauncherClassName, setComplexLauncherClassName] = useState(\"\");\n  const launcherComplexRef = useRef();\n  const launcherHiddenRef = useRef();\n  launcherHiddenRef.current = launcherHidden;\n  const animateOnceVisible = useRef(false);\n  const bounceTurnRef = useRef();\n  bounceTurnRef.current = bounceTurn;\n  const animationStartTimerRef = useRef();\n  const animationFinishedTimerRef = useRef();\n  const firstBounceAnimationStartTimerRef = useRef();\n  const firstBounceAnimationFinishedTimerRef = useRef();\n  const secondBounceAnimationStartTimerRef = useRef();\n  const secondBounceAnimationFinishedTimerRef = useRef();\n  const determineLauncherHeight = useCallback(() => {\n    const expandedLauncherHeight = `${launcherComplexRef.current?.offsetHeight}px`;\n    if (launcherComplexRef.current?.style?.setProperty) {\n      launcherComplexRef.current.style.setProperty(\"--cds-chat-LAUNCHER-desktop-expanded-height\", expandedLauncherHeight);\n    }\n  }, []);\n  const startExpandLauncher = useCallback(() => {\n    if (!launcherHiddenRef.current) {\n      serviceManager.store.dispatch(actions.setLauncherProperty(\"desktopLauncherIsExpanded\", true));\n      determineLauncherHeight();\n      setComplexLauncherClassName(\"WACLauncherComplex__Container--introAnimation\");\n    }\n  }, [ determineLauncherHeight, serviceManager.store ]);\n  const setExpandAnimationTimers = useCallback(() => {\n    animationStartTimerRef.current = setTimeout(() => {\n      startExpandLauncher();\n    }, time_to_expand);\n  }, [ time_to_expand, startExpandLauncher ]);\n  const clearExpandAnimationTimers = useCallback(() => {\n    clearTimeout(animationStartTimerRef.current);\n    clearTimeout(animationFinishedTimerRef.current);\n  }, []);\n  const startBounceAnimation = useCallback(() => {\n    if (!launcherHiddenRef.current) {\n      setSmallLauncherClassName(\"WACLauncher__ButtonContainer--bounceAnimation\");\n    }\n  }, []);\n  const finishBounceAnimation = useCallback(() => {\n    if (!launcherHiddenRef.current) {\n      setSmallLauncherClassName(\"WACLauncher__ButtonContainer--noAnimation\");\n      bounceTurnRef.current++;\n      serviceManager.store.dispatch(actions.setLauncherProperty(\"bounceTurn\", bounceTurnRef.current));\n    }\n  }, [ serviceManager.store ]);\n  const setBounceAnimationTimers = useCallback(() => {\n    if (bounceTurnRef.current === 1) {\n      firstBounceAnimationStartTimerRef.current = setTimeout(() => {\n        startBounceAnimation();\n      }, BOUNCING_ANIMATION_TIMEOUTS[0]);\n      firstBounceAnimationFinishedTimerRef.current = setTimeout(() => {\n        finishBounceAnimation();\n      }, BOUNCING_ANIMATION_TIMEOUTS[0] + TIME_FOR_BOUNCE_ANIMATION);\n      secondBounceAnimationStartTimerRef.current = setTimeout(() => {\n        startBounceAnimation();\n      }, BOUNCING_ANIMATION_TIMEOUTS[0] + BOUNCING_ANIMATION_TIMEOUTS[1]);\n      secondBounceAnimationFinishedTimerRef.current = setTimeout(() => {\n        finishBounceAnimation();\n      }, BOUNCING_ANIMATION_TIMEOUTS[0] + BOUNCING_ANIMATION_TIMEOUTS[1] + TIME_FOR_BOUNCE_ANIMATION);\n    } else if (bounceTurnRef.current === 2) {\n      secondBounceAnimationStartTimerRef.current = setTimeout(() => {\n        startBounceAnimation();\n      }, BOUNCING_ANIMATION_TIMEOUTS[1]);\n      secondBounceAnimationFinishedTimerRef.current = setTimeout(() => {\n        finishBounceAnimation();\n      }, BOUNCING_ANIMATION_TIMEOUTS[1] + TIME_FOR_BOUNCE_ANIMATION);\n    }\n  }, [ finishBounceAnimation, startBounceAnimation ]);\n  const clearBounceAnimationTimers = useCallback(() => {\n    clearTimeout(firstBounceAnimationStartTimerRef.current);\n    clearTimeout(firstBounceAnimationFinishedTimerRef.current);\n    clearTimeout(secondBounceAnimationStartTimerRef.current);\n    clearTimeout(secondBounceAnimationFinishedTimerRef.current);\n  }, []);\n  const setDefaultLauncherState = useCallback(() => {\n    clearExpandAnimationTimers();\n    serviceManager.store.dispatch(actions.setLauncherMinimized());\n    clearBounceAnimationTimers();\n    serviceManager.store.dispatch(actions.setLauncherProperty(\"bounceTurn\", 3));\n    animateOnceVisible.current = false;\n    setSmallLauncherClassName(\"WACLauncher__ButtonContainer--noAnimation\");\n  }, [ clearBounceAnimationTimers, clearExpandAnimationTimers, serviceManager.store ]);\n  useOnMount(() => {\n    if (desktopLauncherIsExpanded) {\n      animateOnceVisible.current = true;\n    } else if (!desktopLauncherWasMinimized && isExpandedLauncherEnabled) {\n      setExpandAnimationTimers();\n      return () => {\n        clearExpandAnimationTimers();\n      };\n    } else if (desktopLauncherWasMinimized && bounceTurn !== 3) {\n      setBounceAnimationTimers();\n      return () => {\n        clearBounceAnimationTimers();\n      };\n    }\n    return undefined;\n  });\n  useEffect(() => {\n    if (viewState.launcher && animateOnceVisible.current) {\n      determineLauncherHeight();\n      setComplexLauncherClassName(\"WACLauncherComplex__Container--simpleAnimation\");\n      animateOnceVisible.current = false;\n    }\n  }, [ determineLauncherHeight, viewState.launcher ]);\n  useEffect(() => {\n    if (viewState.mainWindow || viewState.tour) {\n      setDefaultLauncherState();\n    }\n  }, [ viewState, setDefaultLauncherState ]);\n  useEffect(() => {\n    if (new_expand_time) {\n      clearBounceAnimationTimers();\n      clearExpandAnimationTimers();\n      setExpandAnimationTimers();\n      serviceManager.store.dispatch(actions.setLauncherConfigProperty(\"new_expand_time\", false, LauncherType.DESKTOP));\n    }\n  }, [ animationFinishedTimerRef, animationStartTimerRef, new_expand_time, setExpandAnimationTimers, clearExpandAnimationTimers, clearBounceAnimationTimers, serviceManager.store ]);\n  const prevLauncherTitle = usePrevious(launcherConfig.desktop.title);\n  useEffect(() => {\n    if (prevLauncherTitle !== launcherConfig.desktop.title && (launcherConfig.desktop.title || prevLauncherTitle)) {\n      determineLauncherHeight();\n    }\n  }, [ determineLauncherHeight, launcherConfig, prevLauncherTitle ]);\n  const onMinimize = useCallback(() => {\n    setComplexLauncherClassName(\"WACLauncherComplex__Container--closeAnimation\");\n    setTimeout(() => {\n      setSmallLauncherClassName(\"WACLauncher__ButtonContainer--noAnimation\");\n      serviceManager.store.dispatch(actions.setLauncherMinimized());\n      setTimeout(requestFocus);\n    }, TIME_FOR_MINIMIZE_ANIMATION);\n  }, [ requestFocus, serviceManager.store ]);\n  const onOpen = useCallback(() => {\n    setDefaultLauncherState();\n    onDoToggle();\n  }, [ onDoToggle, setDefaultLauncherState ]);\n  let launcher;\n  if (desktopLauncherIsExpanded) {\n    launcher = React.createElement(LauncherComplex, {\n      languagePack: languagePack,\n      intl: intl,\n      launcherComplexRef: launcherComplexRef,\n      launcherRef: launcherRef,\n      launcherConfig: launcherConfig,\n      onOpen: onOpen,\n      onMinimize: onMinimize,\n      unreadAgentCount: unreadAgentCount,\n      showUnreadIndicator: showUnreadIndicator,\n      desktopLauncherIsExpanded: desktopLauncherIsExpanded,\n      launcherHidden: launcherHidden,\n      activeTour: activeTour,\n      className: complexLauncherClassName\n    });\n  } else {\n    launcher = React.createElement(LauncherExport, {\n      languagePack: languagePack,\n      intl: intl,\n      ref: launcherRef,\n      onToggleOpen: onOpen,\n      unreadAgentCount: unreadAgentCount,\n      showUnreadIndicator: showUnreadIndicator,\n      className: smallLauncherClassName,\n      launcherHidden: launcherHidden,\n      activeTour: activeTour\n    });\n  }\n  return launcher;\n};\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function animateWithClass(element, className, endAnimationNameOrDelay, endAnimationCallback) {\n  if (element) {\n    element.classList.add(className);\n    if (typeof endAnimationNameOrDelay === \"number\") {\n      setTimeout(() => {\n        element.classList.remove(className);\n        if (endAnimationCallback) {\n          endAnimationCallback();\n        }\n      }, endAnimationNameOrDelay);\n    } else {\n      const listener = event => {\n        if (!endAnimationNameOrDelay || event.animationName === endAnimationNameOrDelay) {\n          element.removeEventListener(\"animationend\", listener);\n          element.removeEventListener(\"animationcancel\", listener);\n          element.classList.remove(className);\n          if (endAnimationCallback) {\n            endAnimationCallback();\n          }\n        }\n      };\n      element.addEventListener(\"animationend\", listener);\n      element.addEventListener(\"animationcancel\", listener);\n    }\n  }\n}\n\nfunction setAnimationTimeouts(element, animation, timeouts, options) {\n  const {startingIndex: startingIndex, beforeAll: beforeAll, afterAll: afterAll, beforeEach: beforeEach, afterEach: afterEach} = options;\n  let index = startingIndex || 0;\n  let terminate = false;\n  let timeoutID = null;\n  function playAnimation() {\n    if (beforeAll && index === 0) {\n      beforeAll();\n    }\n    const isComplete = index === timeouts.length;\n    if (!isComplete && !terminate) {\n      timeoutID = setTimeout(setAnimationListener, timeouts[index]);\n    } else if (isComplete && afterAll) {\n      afterAll();\n    }\n  }\n  function replayAnimation() {\n    if (afterEach) {\n      afterEach();\n    }\n    index++;\n    element.removeEventListener(\"animationend\", replayAnimation);\n    element.classList.remove(animation);\n    playAnimation();\n  }\n  function setAnimationListener() {\n    if (beforeEach) {\n      beforeEach();\n    }\n    element.addEventListener(\"animationend\", replayAnimation);\n    element.classList.add(animation);\n  }\n  playAnimation();\n  return () => {\n    terminate = true;\n    clearTimeout(timeoutID);\n    element.classList.remove(animation);\n    element.removeEventListener(\"animationend\", replayAnimation);\n  };\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const MAX_EXTENDED_LAUNCHER_WIDTH = 400;\n\nfunction LauncherExtended(props, ref) {\n  const {unreadAgentCount: unreadAgentCount, showUnreadIndicator: showUnreadIndicator, launcherConfig: launcherConfig, isExtended: isExtended, playExtendAnimation: playExtendAnimation, onToggleOpen: onToggleOpen, onSwipeRight: onSwipeRight, onReduceEnd: onReduceEnd, className: className, launcherHidden: launcherHidden, activeTour: activeTour} = props;\n  const ariaAnnouncer = useAriaAnnouncer();\n  const languagePack = useLanguagePack();\n  const intl = useIntl();\n  const launcherAvatarURL = useSelector(state => state.theme.useAITheme ? undefined : state.launcher.config.mobile.avatar_url_override);\n  const [animateExtendedState, setAnimateExtendedState] = useState(playExtendAnimation);\n  const [showGreetingMessage, setShowGreetingMessage] = useState(false);\n  const prevIsExtended = usePrevious(isExtended);\n  const buttonRef = useRef();\n  const extendedContainerRef = useRef();\n  const greetingMessageRef = useRef();\n  const textHolderRef = useRef();\n  const touchStartRef = useRef({\n    touchStartX: null,\n    touchStartY: null\n  });\n  const shouldReduceExtendedLauncher = !isExtended && prevIsExtended;\n  const extendWithAnimation = isExtended && animateExtendedState;\n  const extendWithoutAnimation = isExtended && !animateExtendedState;\n  const launcherGreetingMessage = launcherConfig.mobile.title || languagePack.launcher_mobileGreeting;\n  let ariaLabel = getLauncherButtonAriaLabel(languagePack, launcherHidden, activeTour);\n  if (unreadAgentCount !== 0) {\n    ariaLabel += `. ${intl.formatMessage({\n      id: \"icon_ariaUnreadMessages\"\n    }, {\n      count: unreadAgentCount\n    })}`;\n  }\n  let launcherAvatar = React.createElement(ChatLaunch, {\n    size: 24,\n    className: \"WACLauncher__svg\"\n  });\n  if (launcherAvatarURL) {\n    launcherAvatar = React.createElement(\"img\", {\n      className: \"WACLauncher__Avatar\",\n      src: launcherAvatarURL,\n      \"aria-hidden\": true,\n      alt: \"\"\n    });\n  }\n  useImperativeHandle(ref, () => ({\n    requestFocus: () => {\n      doFocusRef(buttonRef);\n    },\n    launcherContainerElement: () => extendedContainerRef.current\n  }));\n  useEffect(() => {\n    const textHolderElement = textHolderRef.current;\n    const greetingMessageElement = greetingMessageRef.current;\n    const extendedContainerElement = extendedContainerRef.current;\n    calculateAndSetMaxExtendedLauncherWidth(textHolderElement, greetingMessageElement, extendedContainerElement);\n  }, [ ariaAnnouncer, extendWithoutAnimation, launcherGreetingMessage ]);\n  useEffect(() => {\n    if (isExtended) {\n      if (animateExtendedState) {\n        doFadeAnimationForElements({\n          fadeInElement: greetingMessageRef.current,\n          fadeInTime: 300\n        }, () => {\n          setAnimateExtendedState(false);\n        });\n      } else {\n        setShowGreetingMessage(true);\n      }\n      const buttonEl = buttonRef.current;\n      const handleTouchMove = event => {\n        checkIfUserSwipedRight(event.touches[0], touchStartRef.current, onSwipeRight);\n      };\n      const handleTouchStart = event => {\n        const {clientX: clientX, clientY: clientY} = event.touches[0];\n        const touchStart = touchStartRef.current;\n        touchStart.touchStartX = clientX;\n        touchStart.touchStartY = clientY;\n        buttonRef.current.addEventListener(\"touchmove\", handleTouchMove);\n      };\n      buttonEl.addEventListener(\"touchstart\", handleTouchStart);\n      return () => {\n        buttonEl.removeEventListener(\"touchmove\", handleTouchMove);\n        buttonEl.removeEventListener(\"touchstart\", handleTouchStart);\n      };\n    } else if (shouldReduceExtendedLauncher) {\n      const reduceAnimationEndListener = () => {\n        onReduceEnd();\n        setAnimateExtendedState(true);\n        extendedContainerRef.current.removeEventListener(\"animationend\", reduceAnimationEndListener);\n      };\n      extendedContainerRef.current.addEventListener(\"animationend\", reduceAnimationEndListener);\n      doFadeAnimationForElements({\n        fadeOutElement: greetingMessageRef.current\n      });\n    }\n    return undefined;\n  }, [ animateExtendedState, ariaAnnouncer, isExtended, launcherGreetingMessage, onReduceEnd, onSwipeRight, shouldReduceExtendedLauncher ]);\n  return React.createElement(\"div\", {\n    className: cx(\"WACLauncher__ButtonContainer WACLauncher__ButtonContainer--round WACLauncherExtended__Container\", className, {\n      \"WACLauncher__ButtonContainer--hidden\": launcherHidden,\n      \"WACLauncherExtended__Button--extended\": extendWithoutAnimation,\n      \"WACLauncherExtended__Button--extendedAnimation\": extendWithAnimation,\n      \"WACLauncherExtended__Button--reducedAnimation\": shouldReduceExtendedLauncher\n    }),\n    ref: extendedContainerRef\n  }, React.createElement(Button, {\n    \"aria-label\": ariaLabel,\n    className: cx(\"WACLauncher__Button\", \"WACLauncherExtended__Button\", {\n      WACLauncher__TourButton: activeTour\n    }),\n    kind: activeTour ? ButtonKindEnum.GHOST : ButtonKindEnum.PRIMARY,\n    type: \"button\",\n    ref: buttonRef,\n    onClick: onToggleOpen\n  }, React.createElement(\"div\", {\n    className: \"WACLauncherExtended__WrapperContainer\"\n  }, React.createElement(\"div\", {\n    className: \"WACLauncherExtended__Wrapper\"\n  }, React.createElement(\"div\", {\n    className: \"WACLauncherExtended__TextHolder\",\n    ref: textHolderRef\n  }, React.createElement(\"div\", {\n    className: cx(\"WACLauncherExtended__Greeting\", {\n      \"WACLauncherExtended__Element--hidden\": !showGreetingMessage\n    }),\n    ref: greetingMessageRef\n  }, React.createElement(\"div\", {\n    className: \"WACLauncherExtended__GreetingText\",\n    \"aria-hidden\": !isExtended\n  }, launcherGreetingMessage))), React.createElement(\"div\", {\n    className: \"WACLauncher__IconHolder\"\n  }, activeTour ? React.createElement(ArrowUpLeft, {\n    size: 24,\n    className: \"WACLauncher__svg\"\n  }) : launcherAvatar))), (unreadAgentCount !== 0 || showUnreadIndicator) && React.createElement(\"div\", {\n    className: \"WAC__countIndicator\"\n  }, unreadAgentCount !== 0 ? unreadAgentCount : \"\")));\n}\n\nfunction calculateAndSetMaxExtendedLauncherWidth(textHolderEl, greetingMessageEl, extendedContainerEl) {\n  const nonTextSpace = 68;\n  const maxLauncherExtendedWidth = getMaxLauncherExtendedWidth();\n  const maxTextHolderWidth = maxLauncherExtendedWidth - nonTextSpace + 12;\n  textHolderEl.style.setProperty(\"width\", `${maxTextHolderWidth}px`);\n  greetingMessageEl.style.setProperty(\"width\", `${maxTextHolderWidth - 12}px`);\n  greetingMessageEl.style.setProperty(\"display\", \"flex\");\n  const {clientWidth: clientWidth} = greetingMessageEl.querySelector(\".WACLauncherExtended__GreetingText\");\n  let launcherExtendedWidth = clientWidth + nonTextSpace + 1;\n  if (launcherExtendedWidth > MAX_EXTENDED_LAUNCHER_WIDTH) {\n    launcherExtendedWidth = MAX_EXTENDED_LAUNCHER_WIDTH;\n  }\n  greetingMessageEl.removeAttribute(\"style\");\n  textHolderEl.removeAttribute(\"style\");\n  extendedContainerEl.style.setProperty(\"--cds-chat--LAUNCHER-EXTENDED-width\", `${launcherExtendedWidth}px`);\n}\n\nfunction doFadeAnimationForElements({fadeOutElement: fadeOutElement, fadeInElement: fadeInElement, fadeInTime: fadeInTime = 600}, callback) {\n  if (fadeOutElement) {\n    fadeOutElement.classList.remove(\"WACLauncherExtended__Element--hidden\");\n    animateWithClass(fadeOutElement, \"WACLauncherExtended__Element--FadeOut\", 500, () => {\n      fadeOutElement.classList.add(\"WACLauncherExtended__Element--hidden\");\n      fadeOutElement.classList.remove(\"WACLauncherExtended__Element--FadeOut\");\n      if (!fadeInElement && callback) {\n        callback();\n      }\n    });\n  }\n  if (fadeInElement) {\n    setTimeout(() => {\n      fadeInElement.classList.remove(\"WACLauncherExtended__Element--hidden\");\n      animateWithClass(fadeInElement, \"WACLauncherExtended__Element--FadeIn\", 600, () => {\n        fadeInElement.classList.remove(\"WACLauncherExtended__Element--FadeIn\");\n        if (callback) {\n          callback();\n        }\n      });\n    }, fadeInTime);\n  }\n}\n\nfunction checkIfUserSwipedRight(touchList, touchStartCoordinates, callback) {\n  const {touchStartX: touchStartX, touchStartY: touchStartY} = touchStartCoordinates;\n  if (touchStartX === null || touchStartY === null) {\n    return;\n  }\n  const {clientX: touchEndX, clientY: touchEndY} = touchList;\n  const differenceX = touchEndX - touchStartX;\n  const differenceY = touchEndY - touchStartY;\n  if (Math.abs(differenceX) > Math.abs(differenceY)) {\n    if (differenceX > 0) {\n      callback();\n    }\n  }\n  touchStartCoordinates.touchStartX = null;\n  touchStartCoordinates.touchStartY = null;\n}\n\nfunction getMaxLauncherExtendedWidth() {\n  const launcherPosition = IS_MOBILE ? 32 : 64;\n  const {width: width, height: height} = window.screen;\n  const lowestValue = Math.min(height, width);\n  const extendedWidth = lowestValue - launcherPosition;\n  return Math.min(extendedWidth, MAX_EXTENDED_LAUNCHER_WIDTH);\n}\n\nconst LauncherExtendedExport = React.memo(forwardRef(LauncherExtended));\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function LauncherMobileContainer(props) {\n  const {launcherRef: launcherRef, onToggleOpen: onToggleOpen, launcherHidden: launcherHidden, activeTour: activeTour} = props;\n  const serviceManager = useServiceManager();\n  const {config: launcherConfig} = useSelector(state => state.launcher);\n  const unreadAgentCount = useSelector(state => state.agentState.numUnreadMessages);\n  const {mobileLauncherIsExtended: isExtended, mobileLauncherWasReduced: wasReduced, mobileLauncherDisableBounce: disableBounce, bounceTurn: bounceTurn, showUnreadIndicator: showUnreadIndicator, viewState: viewState} = useSelector(state => state.persistedToBrowserStorage.launcherState);\n  const [isStartingBounceAnimation, setIsStartingBounceAnimation] = useState(false);\n  const prevIsExtended = usePrevious(isExtended);\n  const prevWasReduced = usePrevious(wasReduced);\n  const initialBounceTurn = useRef(bounceTurn).current;\n  const previouslyPlayedExtendAnimation = useRef(wasReduced).current;\n  const extendLauncherTimeoutIDRef = useRef(null);\n  const reduceLauncherTimeoutIDRef = useRef(null);\n  const endBounceAnimationRef = useRef(null);\n  const shouldBounceRef = useRef(previouslyPlayedExtendAnimation && !disableBounce);\n  const {time_to_expand: time_to_expand, new_expand_time: new_expand_time, time_to_reduce: time_to_reduce} = launcherConfig.mobile;\n  const isExpandedLauncherEnabled = launcherConfig.mobile.is_on;\n  const playExtendAnimation = prevIsExtended === undefined && !isExtended;\n  const isExtending = prevIsExtended !== undefined && !prevIsExtended && isExtended;\n  const hasReduced = prevWasReduced !== undefined && !prevWasReduced && wasReduced;\n  const disableIntroAnimation = isExtending || hasReduced || isStartingBounceAnimation;\n  const setLauncherStateAsReduced = useCallback(() => {\n    if (!wasReduced) {\n      serviceManager.store.dispatch(actions.setLauncherProperty(\"mobileLauncherWasReduced\", true));\n    }\n  }, [ wasReduced, serviceManager ]);\n  const reduceLauncher = useCallback(() => {\n    clearTimeouts();\n    if (isExtended) {\n      document.removeEventListener(\"scroll\", reduceLauncher);\n      serviceManager.store.dispatch(actions.setLauncherProperty(\"mobileLauncherIsExtended\", false));\n    }\n  }, [ isExtended, serviceManager ]);\n  const setExpandAnimationTimeout = useCallback(() => {\n    extendLauncherTimeoutIDRef.current = setTimeout(() => {\n      if (!isExtended && !isExtending) {\n        serviceManager.store.dispatch(actions.setLauncherProperty(\"mobileLauncherWasReduced\", false));\n        serviceManager.store.dispatch(actions.setLauncherProperty(\"mobileLauncherIsExtended\", true));\n      }\n    }, time_to_expand);\n  }, [ isExtended, isExtending, serviceManager.store, time_to_expand ]);\n  const setDefaultLauncherState = useCallback(() => {\n    const endBounceAnimation = endBounceAnimationRef.current;\n    if (endBounceAnimation) {\n      endBounceAnimation();\n      endBounceAnimationRef.current = null;\n    }\n    serviceManager.store.dispatch(actions.setLauncherProperty(\"mobileLauncherDisableBounce\", true));\n    reduceLauncher();\n    setLauncherStateAsReduced();\n  }, [ reduceLauncher, serviceManager.store, setLauncherStateAsReduced ]);\n  useOnMount(() => {\n    if (!wasReduced && playExtendAnimation && isExpandedLauncherEnabled) {\n      setExpandAnimationTimeout();\n    } else if (shouldBounceRef.current) {\n      const launcherContainerElement = launcherRef?.current?.launcherContainerElement();\n      if (launcherContainerElement) {\n        const startRecurringBounceAnimation = () => {\n          if (shouldBounceRef.current) {\n            let turnCounter = initialBounceTurn;\n            launcherContainerElement.removeEventListener(\"animationend\", startRecurringBounceAnimation);\n            setIsStartingBounceAnimation(true);\n            endBounceAnimationRef.current = setAnimationTimeouts(launcherContainerElement, \"WACLauncher__ButtonContainer--bounceAnimation\", BOUNCING_ANIMATION_TIMEOUTS, {\n              startingIndex: initialBounceTurn - 1,\n              afterEach: () => {\n                turnCounter++;\n                serviceManager.store.dispatch(actions.setLauncherProperty(\"bounceTurn\", turnCounter));\n              },\n              afterAll: () => {\n                serviceManager.store.dispatch(actions.setLauncherProperty(\"mobileLauncherDisableBounce\", true));\n              }\n            });\n          }\n        };\n        launcherContainerElement.addEventListener(\"animationend\", startRecurringBounceAnimation);\n      }\n    }\n  });\n  useEffect(() => {\n    if (viewState.mainWindow || viewState.tour) {\n      setDefaultLauncherState();\n    }\n  }, [ viewState, setDefaultLauncherState ]);\n  useEffect(() => {\n    if (new_expand_time) {\n      if (shouldBounceRef.current) {\n        shouldBounceRef.current = false;\n      }\n      const endBounceAnimation = endBounceAnimationRef.current;\n      if (endBounceAnimation) {\n        endBounceAnimation();\n        endBounceAnimationRef.current = null;\n      }\n      if (extendLauncherTimeoutIDRef.current) {\n        clearTimeout(extendLauncherTimeoutIDRef.current);\n      }\n      setExpandAnimationTimeout();\n      serviceManager.store.dispatch(actions.setLauncherConfigProperty(\"new_expand_time\", false, LauncherType.MOBILE));\n    }\n  }, [ setExpandAnimationTimeout, new_expand_time, serviceManager.store, shouldBounceRef ]);\n  function clearTimeouts() {\n    const extendLauncherTimeoutID = extendLauncherTimeoutIDRef.current;\n    const reduceLauncherTimeoutID = reduceLauncherTimeoutIDRef.current;\n    if (reduceLauncherTimeoutID) {\n      clearTimeout(reduceLauncherTimeoutID);\n      reduceLauncherTimeoutIDRef.current = null;\n    }\n    if (extendLauncherTimeoutID) {\n      clearTimeout(extendLauncherTimeoutID);\n      extendLauncherTimeoutIDRef.current = null;\n    }\n  }\n  const handleToggleOpen = useCallback(() => {\n    setDefaultLauncherState();\n    onToggleOpen();\n  }, [ onToggleOpen, setDefaultLauncherState ]);\n  const handleSwipeRight = useCallback(() => {\n    reduceLauncher();\n  }, [ reduceLauncher ]);\n  useEffect(() => {\n    if (isExtended) {\n      reduceLauncherTimeoutIDRef.current = setTimeout(() => {\n        reduceLauncher();\n      }, time_to_reduce);\n      document.addEventListener(\"scroll\", reduceLauncher);\n    }\n  }, [ isExtended, reduceLauncher, time_to_reduce, serviceManager ]);\n  return React.createElement(LauncherExtendedExport, {\n    className: cx({\n      \"WACLauncher__ButtonContainer--noAnimation\": disableIntroAnimation\n    }),\n    ref: launcherRef,\n    launcherConfig: launcherConfig,\n    showUnreadIndicator: showUnreadIndicator,\n    unreadAgentCount: unreadAgentCount,\n    isExtended: isExtended,\n    playExtendAnimation: playExtendAnimation,\n    onToggleOpen: handleToggleOpen,\n    onSwipeRight: handleSwipeRight,\n    onReduceEnd: setLauncherStateAsReduced,\n    launcherHidden: launcherHidden,\n    activeTour: activeTour\n  });\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function LauncherContainer() {\n  const serviceManager = useServiceManager();\n  const launcherRef = useRef();\n  const viewState = useSelector(state => state.persistedToBrowserStorage.launcherState.viewState);\n  const initialViewChangeComplete = useSelector(state => state.initialViewChangeComplete);\n  const launcherHidden = !viewState.launcher;\n  const activeTour = useSelector(state => state.persistedToBrowserStorage.launcherState.activeTour);\n  const requestFocus = useCallback(() => {\n    launcherRef.current?.requestFocus();\n  }, [ launcherRef ]);\n  const onDoToggle = useCallback(() => {\n    if (activeTour) {\n      return serviceManager.actions.changeView(ViewType.TOUR, {\n        viewChangeReason: ViewChangeReason.LAUNCHER_CLICKED\n      });\n    }\n    return serviceManager.actions.changeView(ViewType.MAIN_WINDOW, {\n      mainWindowOpenReason: MainWindowOpenReason.DEFAULT_LAUNCHER\n    });\n  }, [ activeTour, serviceManager.actions ]);\n  useEffectDidUpdate(() => {\n    if (viewState.launcher && !viewState.mainWindow && !viewState.tour && initialViewChangeComplete) {\n      launcherRef.current?.requestFocus();\n    }\n  }, [ viewState ]);\n  let launcherContainer;\n  if (IS_PHONE) {\n    launcherContainer = React.createElement(LauncherMobileContainer, {\n      launcherRef: launcherRef,\n      onToggleOpen: onDoToggle,\n      launcherHidden: launcherHidden,\n      activeTour: activeTour\n    });\n  } else {\n    launcherContainer = React.createElement(LauncherDesktopContainer, {\n      launcherRef: launcherRef,\n      onDoToggle: onDoToggle,\n      requestFocus: requestFocus,\n      launcherHidden: launcherHidden,\n      activeTour: activeTour\n    });\n  }\n  return launcherContainer;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function HydrationPanel({onClose: onClose, languagePack: languagePack, isHydrated: isHydrated, headerDisplayName: headerDisplayName, useHomeScreenVersion: useHomeScreenVersion}) {\n  const isHidden = useContext(HideComponentContext);\n  let header;\n  if (useHomeScreenVersion) {\n    header = React.createElement(HomeScreenHeaderExport, {\n      onClose: onClose\n    });\n  } else {\n    header = React.createElement(BotHeaderExport, {\n      onClose: onClose,\n      headerDisplayName: headerDisplayName,\n      onToggleHomeScreen: null,\n      includeWriteableElement: false,\n      testIdPrefix: OverlayPanelName.HYDRATING\n    });\n  }\n  return React.createElement(\"div\", {\n    className: \"WAC WAC__hydratingContainer\"\n  }, header, React.createElement(\"div\", {\n    className: cx(\"WAC__hydrating\", \"WACPanelContent\", {\n      \"WAC__hydrating--homeScreen\": useHomeScreenVersion\n    })\n  }, !isHidden && React.createElement(MountChildrenOnDelay, {\n    delay: 400\n  }, !isHydrated && React.createElement(AnnounceOnMountComponentExport, {\n    announceOnce: languagePack.window_ariaWindowLoading\n  }), React.createElement(Loading, {\n    withOverlay: false,\n    \"aria-label\": languagePack.window_ariaWindowLoading\n  }))));\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function CustomPanel(props) {\n  const {useAITheme: useAITheme, onPanelOpenEnd: onPanelOpenEnd, onPanelCloseEnd: onPanelCloseEnd, onPanelOpenStart: onPanelOpenStart, onPanelCloseStart: onPanelCloseStart, onClose: onClose, onCloseAndRestart: onCloseAndRestart, onClickRestart: onClickRestart} = props;\n  const languagePack = useLanguagePack();\n  const {isOpen: isOpen, options: options} = useSelector(state => state.customPanelState);\n  const {title: title, hidePanelHeader: hidePanelHeader, disableDefaultCloseAction: disableDefaultCloseAction, disableAnimation: disableAnimation, onClickBack: onClickBack, onClickClose: onClickClose, onClickCloseAndRestart: onClickCloseAndRestart} = options;\n  const serviceManager = useServiceManager();\n  const ariaAnnouncer = useAriaAnnouncer();\n  const prevIsOpen = usePrevious(isOpen);\n  const openAnimation = disableAnimation ? AnimationInType.NONE : AnimationInType.SLIDE_IN_FROM_BOTTOM;\n  const closeAnimation = disableAnimation ? AnimationOutType.NONE : AnimationOutType.SLIDE_OUT_TO_BOTTOM;\n  useEffect(() => {\n    if (prevIsOpen !== isOpen && isOpen) {\n      if (!hidePanelHeader && title) {\n        ariaAnnouncer(title);\n      }\n    }\n  }, [ ariaAnnouncer, hidePanelHeader, isOpen, prevIsOpen, title ]);\n  const onClickBackLocal = useCallback(() => {\n    serviceManager.store.dispatch(actions.setCustomPanelOpen(false));\n    onClickBack?.();\n  }, [ serviceManager, onClickBack ]);\n  const onClickCloseLocal = useCallback(() => {\n    if (!disableDefaultCloseAction) {\n      checkAllowClose(serviceManager.store.getState().viewChanging);\n      onClose();\n    }\n    onClickClose?.();\n  }, [ disableDefaultCloseAction, onClickClose, onClose, serviceManager ]);\n  const onCloseAndRestartLocal = useCallback(() => {\n    if (!disableDefaultCloseAction) {\n      checkAllowClose(serviceManager.store.getState().viewChanging);\n      onCloseAndRestart();\n    }\n    onClickCloseAndRestart?.();\n  }, [ disableDefaultCloseAction, onClickCloseAndRestart, onCloseAndRestart, serviceManager ]);\n  return React.createElement(OverlayPanel, {\n    className: \"WAC__overlay--covering\",\n    onOpenStart: () => {\n      serviceManager.eventBus.fire({\n        type: BusEventType.CUSTOM_PANEL_PRE_OPEN\n      }, serviceManager.instance);\n      onPanelOpenStart();\n    },\n    onOpenEnd: () => {\n      serviceManager.eventBus.fire({\n        type: BusEventType.CUSTOM_PANEL_OPEN\n      }, serviceManager.instance);\n      onPanelOpenEnd();\n    },\n    onCloseStart: () => {\n      serviceManager.eventBus.fire({\n        type: BusEventType.CUSTOM_PANEL_PRE_CLOSE\n      }, serviceManager.instance);\n      onPanelCloseStart();\n    },\n    onCloseEnd: () => {\n      serviceManager.eventBus.fire({\n        type: BusEventType.CUSTOM_PANEL_CLOSE\n      }, serviceManager.instance);\n      onPanelCloseEnd();\n      serviceManager.store.dispatch(actions.setCustomPanelConfigOptions(DEFAULT_CUSTOM_PANEL_CONFIG_OPTIONS));\n    },\n    animationOnOpen: openAnimation,\n    animationOnClose: closeAnimation,\n    shouldOpen: isOpen,\n    serviceManager: serviceManager,\n    overlayPanelName: OverlayPanelName.CUSTOM\n  }, React.createElement(BasePanelComponentExport, {\n    className: \"WACCustomPanel\",\n    eventName: \"Custom panel opened\",\n    eventDescription: \"A user opened a custom panel.\",\n    labelBackButton: languagePack.general_returnToAssistant,\n    isOpen: isOpen,\n    title: title,\n    useAITheme: useAITheme,\n    onClickBack: onClickBackLocal,\n    onClickClose: onClickCloseLocal,\n    onClickCloseAndRestart: onCloseAndRestartLocal,\n    onClickRestart: onClickRestart,\n    hidePanelHeader: hidePanelHeader,\n    hideBackButton: options.hideBackButton,\n    hideCloseButton: options.hideCloseButton,\n    hideCloseAndRestartButton: options.hideCloseAndRestartButton,\n    testIdPrefix: OverlayPanelName.CUSTOM\n  }, React.createElement(WriteableElement, {\n    slotName: \"customPanelElement\",\n    className: \"WACCustomPanel__ContentContainer\"\n  })));\n}\n\nfunction checkAllowClose(viewChanging) {\n  if (viewChanging) {\n    const message = \"You are attempting to close Carbon AI chat from a custom panel while Carbon AI chat is currently running a view\" + \" change event which is not permitted. Please use the disableDefaultCloseAction option to disable\" + \" this behavior for the custom panel and then use onClickClose to resolve your Promise that is handling\" + \" the event; that Promise will allow you to close Carbon AI chat.\";\n    consoleError(message);\n    throw new Error(message);\n  }\n}\n\nconst CustomPanelExport = React.memo(CustomPanel);\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function addClassNameToState(name) {\n  return previousState => {\n    const currentIndex = previousState.extraClassNames.indexOf(name);\n    if (currentIndex === -1) {\n      return {\n        extraClassNames: [ ...previousState.extraClassNames, name ]\n      };\n    }\n    return null;\n  };\n}\n\nfunction removeClassNameFromState(name) {\n  return previousState => ({\n    extraClassNames: previousState.extraClassNames.filter(value => value !== name)\n  });\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const Chat = lazyChat();\n\nconst CatastrophicError = lazyCatastrophicError();\n\nconst Disclaimer = lazyDisclaimer();\n\nconst HomeScreenContainer = lazyHomeScreenContainer();\n\nconst IFramePanel = lazyIFramePanel();\n\nconst ViewSourcePanel = lazyViewSourcePanel();\n\nconst BodyAndFooterPanelComponent = lazyBodyAndFooterPanelComponent();\n\nconst WIDTH_BREAKPOINT_STANDARD = \"WAC--standardWidth\";\n\nconst WIDTH_BREAKPOINT_NARROW = \"WAC--narrowWidth\";\n\nconst WIDTH_BREAKPOINT_WIDE = \"WAC--wideWidth\";\n\nclass MainWindow extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      closing: false,\n      open: this.props.persistedToBrowserStorage.launcherState.viewState.mainWindow,\n      modalPortalHostElement: null,\n      numPanelsOpen: 0,\n      numPanelsAnimating: 0,\n      numPanelsCovering: 0,\n      isHydrationAnimationComplete: this.props.isHydrated,\n      shouldAutoFocus: this.props.config.public.shouldTakeFocusIfOpensAutomatically,\n      extraClassNames: [],\n      areModulesLoaded: false\n    };\n    this.mainWindowRef = React.createRef();\n    this.containerRef = React.createRef();\n    this.botChatRef = React.createRef();\n    this.homeScreenInputRef = React.createRef();\n    this.disclaimerRef = React.createRef();\n    this.brandingRef = React.createRef();\n    this.animationContainerRef = React.createRef();\n    this.iframePanelRef = React.createRef();\n    this.viewSourcePanelRef = React.createRef();\n    this.previousBodyVisibility = undefined;\n    this.previousBodyPosition = undefined;\n    this.onResize = () => {\n      let appChatWidthBreakpoint;\n      const height = this.containerRef?.current?.offsetHeight;\n      const width = this.containerRef?.current?.offsetWidth;\n      if (width >= 672 + 16 + 16) {\n        appChatWidthBreakpoint = ChatWidthBreakpoint.WIDE;\n      } else if (width >= 360) {\n        appChatWidthBreakpoint = ChatWidthBreakpoint.STANDARD;\n      } else {\n        appChatWidthBreakpoint = ChatWidthBreakpoint.NARROW;\n      }\n      this.props.serviceManager.store.dispatch(actions.setAppStateValue(\"chatWidth\", width));\n      this.props.serviceManager.store.dispatch(actions.setAppStateValue(\"chatHeight\", height));\n      this.props.serviceManager.store.dispatch(actions.setAppStateValue(\"chatWidthBreakpoint\", appChatWidthBreakpoint));\n    };\n    this.onVisualViewportResize = () => {\n      this.updateFromVisualViewport();\n    };\n    this.updateFromVisualViewport = () => {\n      const element = this.props.serviceManager.container;\n      const {visualViewport: visualViewport} = window;\n      if (visualViewport) {\n        element.style.setProperty(\"--cds-chat-viewport-height\", `${visualViewport.height}px`);\n        element.style.setProperty(\"--cds-chat-viewport-width\", `${visualViewport.width}px`);\n        element.style.setProperty(\"--cds-chat-viewport-offsetTop\", `${visualViewport.offsetTop}px`);\n        element.style.setProperty(\"--cds-chat-viewport-offsetLeft\", `${visualViewport.offsetLeft}px`);\n      } else {\n        const height = \"100vh\";\n        element.style.setProperty(\"--cds-chat-viewport-height\", height);\n        element.style.setProperty(\"--cds-chat-viewport-width\", \"100vw\");\n        element.style.setProperty(\"--cds-chat-viewport-offsetTop\", \"0\");\n        element.style.setProperty(\"--cds-chat-viewport-offsetLeft\", \"0\");\n      }\n    };\n    this.setModalPortalHostElement = ref => {\n      if (this.state.modalPortalHostElement !== ref) {\n        this.setState({\n          modalPortalHostElement: ref\n        });\n      }\n    };\n    this.onSendInput = async (text, source, options) => {\n      const isInputToAgent = selectIsInputToAgent(this.props);\n      const {serviceManager: serviceManager} = this.props;\n      const state = serviceManager.store.getState();\n      const {files: files} = selectInputState(state);\n      if (isInputToAgent) {\n        serviceManager.humanAgentService.sendMessageToAgent(text, files);\n      } else {\n        const messageRequest = createMessageRequestForText(text);\n        serviceManager.actions.sendWithCatch(messageRequest, source, {\n          ...options\n        });\n      }\n      if (files.length) {\n        serviceManager.store.dispatch(actions.clearInputFiles(isInputToAgent));\n      }\n    };\n    this.onSendHomeButtonInput = input => {\n      const messageRequest = createMessageRequestForChoice(input);\n      this.props.serviceManager.actions.sendWithCatch(messageRequest, MessageSendSource.HOME_SCREEN_STARTER);\n    };\n    this.removeChatFromDom = () => {\n      this.containerRef.current.removeEventListener(\"animationend\", this.removeChatFromDom);\n      this.setState({\n        open: false,\n        closing: false\n      });\n    };\n    this.onRestart = async () => {\n      await this.props.serviceManager.actions.restartConversation();\n      this.requestFocus();\n    };\n    this.onClose = async () => this.doClose(false);\n    this.onCloseAndRestart = async () => this.doClose(true);\n    this.onToggleHomeScreen = () => {\n      this.props.serviceManager.store.dispatch(actions.toggleHomeScreen());\n    };\n    this.requestFocus = () => {\n      try {\n        if (this.state.shouldAutoFocus && !IS_MOBILE) {\n          if (this.getShowDisclaimer()) {\n            if (this.disclaimerRef.current) {\n              doFocusRef(this.disclaimerRef);\n            }\n          } else if (this.getShowHomeScreen()) {\n            if (this.homeScreenInputRef.current) {\n              this.homeScreenInputRef.current.takeFocus();\n            }\n          } else if (this.props.iFramePanelState.isOpen) {\n            if (this.iframePanelRef.current) {\n              this.iframePanelRef.current.requestFocus();\n            }\n          } else if (this.botChatRef.current) {\n            this.botChatRef.current.requestInputFocus();\n          }\n        }\n      } catch (error) {\n        consoleError(\"An error occurred in MainWindow.requestFocus\", error);\n      }\n    };\n    this.onUserTyping = isTyping => {\n      if (this.props.serviceManager.store.getState().persistedToBrowserStorage.chatState.agentState.isConnected) {\n        this.props.serviceManager.humanAgentService.userTyping(isTyping);\n      }\n    };\n    this.onAcceptDisclaimer = () => {\n      this.props.serviceManager.store.dispatch(actions.acceptDisclaimer());\n    };\n    this.onPanelOpenStart = coverBackground => {\n      this.setState(prevState => ({\n        numPanelsOpen: prevState.numPanelsOpen + 1,\n        numPanelsAnimating: prevState.numPanelsAnimating + 1,\n        numPanelsCovering: prevState.numPanelsCovering + (coverBackground ? 1 : 0)\n      }), this.requestFocus);\n    };\n    this.onPanelOpenEnd = () => {\n      this.setState(prevState => ({\n        numPanelsAnimating: prevState.numPanelsAnimating - 1\n      }));\n    };\n    this.onPanelCloseStart = () => {\n      this.setState(prevState => ({\n        numPanelsAnimating: prevState.numPanelsAnimating + 1\n      }), this.requestFocus);\n    };\n    this.onPanelCloseEnd = coverBackground => {\n      this.setState(prevState => ({\n        numPanelsOpen: prevState.numPanelsOpen - 1,\n        numPanelsAnimating: prevState.numPanelsAnimating - 1,\n        numPanelsCovering: prevState.numPanelsCovering - (coverBackground ? 1 : 0)\n      }));\n    };\n    this.onHydrationPanelClose = () => {\n      this.setState({\n        isHydrationAnimationComplete: true\n      }, this.requestFocus);\n    };\n  }\n  componentDidMount() {\n    const {persistedToBrowserStorage: persistedToBrowserStorage, config: config, serviceManager: serviceManager, mainWindowRef: mainWindowRef} = this.props;\n    const {viewState: viewState} = persistedToBrowserStorage.launcherState;\n    const {public: publicConfig} = config;\n    serviceManager.mainWindow = this;\n    mainWindowRef.current = this;\n    this.mainWindowObserver = new ResizeObserver(this.onResize);\n    this.mainWindowObserver.observe(this.containerRef.current);\n    if (IS_MOBILE && !publicConfig.disableCustomElementMobileEnhancements) {\n      const {visualViewport: visualViewport} = window;\n      if (visualViewport) {\n        visualViewport.addEventListener(\"resize\", this.onVisualViewportResize);\n        visualViewport.addEventListener(\"scroll\", this.updateFromVisualViewport);\n      }\n      this.updateFromVisualViewport();\n      this.updateBody(false);\n    }\n    this.containerRef.current.style.setProperty(\"--cds-chat-scrollbar-width\", `${SCROLLBAR_WIDTH()}px`);\n    if (viewState.mainWindow) {\n      this.loadPanels();\n    }\n  }\n  componentWillUnmount() {\n    this.mainWindowObserver.unobserve(this.containerRef.current);\n  }\n  destroy() {\n    if (IS_MOBILE && !this.props.config.public.disableCustomElementMobileEnhancements) {\n      const {visualViewport: visualViewport} = window;\n      if (visualViewport) {\n        visualViewport.removeEventListener(\"resize\", this.onVisualViewportResize);\n        visualViewport.removeEventListener(\"scroll\", this.updateFromVisualViewport);\n      }\n    }\n    this.updateBody(true);\n  }\n  componentDidUpdate(oldProps, oldState) {\n    const newProps = this.props;\n    const newState = this.state;\n    const {persistedToBrowserStorage: persistedToBrowserStorage, useCustomHostElement: useCustomHostElement, isDestroyed: isDestroyed} = newProps;\n    const {viewState: viewState} = persistedToBrowserStorage.launcherState;\n    const {open: open} = newState;\n    const prevViewState = oldProps.persistedToBrowserStorage.launcherState.viewState;\n    if (viewState.mainWindow !== prevViewState.mainWindow) {\n      this.updateBody(false);\n      this.updateFromVisualViewport();\n    }\n    if (isDestroyed && !oldProps.isDestroyed) {\n      this.destroy();\n    }\n    if ((oldState.areModulesLoaded !== newState.areModulesLoaded || oldProps.isHydrated !== newProps.isHydrated) && newProps.isHydrated && newState.areModulesLoaded) {\n      this.setState({\n        isHydrationAnimationComplete: true\n      }, () => {\n        requestAnimationFrame(() => {\n          this.requestFocus();\n        });\n      });\n    }\n    if (viewState.mainWindow && (!prevViewState.mainWindow || !open)) {\n      this.setState({\n        open: true\n      }, () => {\n        this.requestFocus();\n      });\n      this.loadPanels();\n    } else if (!viewState.mainWindow && prevViewState.mainWindow && oldState.open && open) {\n      this.setState({\n        closing: true\n      });\n      if (useCustomHostElement) {\n        this.removeChatFromDom();\n      } else {\n        this.containerRef.current.addEventListener(\"animationend\", this.removeChatFromDom);\n        this.requestFocus();\n      }\n    }\n    if (newProps.config.public.shouldTakeFocusIfOpensAutomatically) {\n      if (!oldProps.persistedToBrowserStorage.chatState.hasSentNonWelcomeMessage && newProps.persistedToBrowserStorage.chatState.hasSentNonWelcomeMessage && !this.state.shouldAutoFocus) {\n        this.setState({\n          shouldAutoFocus: true\n        });\n      } else if (oldProps.botMessageState.localMessageIDs.length > newProps.botMessageState.localMessageIDs.length && this.state.shouldAutoFocus) {\n        this.setState({\n          shouldAutoFocus: false\n        });\n      } else if (oldProps.botMessageState.localMessageIDs.length < newProps.botMessageState.localMessageIDs.length && !this.state.shouldAutoFocus) {\n        this.setState({\n          shouldAutoFocus: true\n        });\n      }\n    }\n    const newLastItemID = arrayLastValue(newProps.botMessageState.localMessageIDs);\n    const oldLastItemID = arrayLastValue(oldProps.botMessageState.localMessageIDs);\n    if (newLastItemID !== oldLastItemID && newState.shouldAutoFocus) {\n      const lastMessageItem = newProps.allMessageItemsByID[newLastItemID];\n      const lastMessage = newProps.allMessagesByID[lastMessageItem?.fullMessageID];\n      if (!lastMessage?.history?.from_history) {\n        this.requestFocus();\n      }\n    }\n  }\n  componentDidCatch(error, errorInfo) {\n    this.props.serviceManager.actions.errorOccurred(createDidCatchErrorData(\"MainWindow\", error, errorInfo, true));\n  }\n  loadPanels() {\n    Promise.all([ Chat.preload(), CatastrophicError.preload(), Disclaimer.preload(), HomeScreenContainer.preload(), IFramePanel.preload(), ViewSourcePanel.preload(), BodyAndFooterPanelComponent.preload() ]).then(() => {\n      this.setState({\n        areModulesLoaded: true\n      });\n    });\n  }\n  updateBody(unmounting) {\n    if (IS_IOS && !this.props.config.public.disableCustomElementMobileEnhancements) {\n      if ((window.screen.width <= 500 || window.screen.height <= 500) && this.props.persistedToBrowserStorage.launcherState.viewState.mainWindow && !unmounting) {\n        this.previousBodyVisibility = document.body.style.getPropertyValue(\"visibility\");\n        this.previousBodyPosition = document.body.style.getPropertyValue(\"position\");\n        document.body.style.setProperty(\"visibility\", \"hidden\", \"important\");\n        document.body.style.setProperty(\"position\", \"fixed\", \"important\");\n      } else {\n        document.body.style.setProperty(\"visibility\", this.previousBodyVisibility);\n        document.body.style.setProperty(\"position\", this.previousBodyPosition);\n      }\n    }\n  }\n  async doClose(fromCloseAndRestart) {\n    const {serviceManager: serviceManager} = this.props;\n    const {activeTour: activeTour} = serviceManager.store.getState().persistedToBrowserStorage.launcherState;\n    if (fromCloseAndRestart) {\n      const newViewState = await serviceManager.actions.changeView(ViewType.LAUNCHER, {\n        mainWindowCloseReason: MainWindowCloseReason.MAIN_WINDOW_CLOSED_AND_RESTARTED\n      });\n      if (!newViewState.mainWindow) {\n        await serviceManager.actions.restartConversation();\n      }\n    } else {\n      await serviceManager.actions.changeView(activeTour ? ViewType.TOUR : ViewType.LAUNCHER, {\n        mainWindowCloseReason: MainWindowCloseReason.DEFAULT_MINIMIZE\n      });\n    }\n  }\n  getShowHomeScreen() {\n    return this.props.homeScreenConfig.is_on && this.props.persistedToBrowserStorage.chatState.homeScreenState.isHomeScreenOpen && !this.getShowDisclaimer();\n  }\n  getShowDisclaimer() {\n    return this.props.config.public.disclaimer?.is_on && !this.props.persistedToBrowserStorage.chatState.disclaimersAccepted[window.location.hostname];\n  }\n  doAutoScroll(options) {\n    this.botChatRef?.current?.doAutoScroll(options);\n  }\n  getMessagesScrollBottom() {\n    return this.botChatRef?.current?.getMessagesScrollBottom();\n  }\n  doScrollToMessage(messageID, animate = true) {\n    this.botChatRef.current?.doScrollToMessage(messageID, animate);\n  }\n  getMessageInput() {\n    return this.botChatRef.current?.getMessageInput();\n  }\n  getHomeScreenInput() {\n    return this.homeScreenInputRef.current?.getMessageInput();\n  }\n  addClassName(name) {\n    this.setState(addClassNameToState(name));\n  }\n  removeClassName(name) {\n    this.setState(removeClassNameFromState(name));\n  }\n  renderChat() {\n    const {isHydrated: isHydrated, config: config, chatWidthBreakpoint: chatWidthBreakpoint} = this.props;\n    const {areModulesLoaded: areModulesLoaded} = this.state;\n    const showCovering = this.state.numPanelsCovering > 0 && config.public.layout?.hasContentMaxWidth && chatWidthBreakpoint === ChatWidthBreakpoint.WIDE;\n    return React.createElement(\"div\", {\n      className: \"WACWidget--content\"\n    }, this.renderCustomPanel(), this.renderHydrationPanel(), isHydrated && areModulesLoaded && React.createElement(React.Fragment, null, this.renderDisclaimerPanel(), this.renderResponsePanel(), this.renderHomeScreenPanel(), this.renderIFramePanel(), this.renderViewSourcePanel(), showCovering && React.createElement(\"div\", {\n      className: \"WACBackgroundCover\"\n    }), this.renderBotChat()));\n  }\n  renderBotChat() {\n    const {botName: botName, languagePack: languagePack, config: config, serviceManager: serviceManager, botMessageState: botMessageState, agentState: agentState, allMessageItemsByID: allMessageItemsByID, isHydrated: isHydrated, locale: locale, theme: theme, headerDisplayName: headerDisplayName, headerAvatarConfig: headerAvatar} = this.props;\n    const {numPanelsAnimating: numPanelsAnimating, numPanelsOpen: numPanelsOpen, isHydrationAnimationComplete: isHydrationAnimationComplete} = this.state;\n    const inputState = selectInputState(this.props);\n    const agentDisplayState = selectAgentDisplayState(this.props);\n    const showDisclaimer = this.getShowDisclaimer();\n    let hideBotContainer;\n    if (!isHydrationAnimationComplete) {\n      hideBotContainer = true;\n    } else if (numPanelsAnimating > 0) {\n      hideBotContainer = false;\n    } else if (numPanelsOpen > 0) {\n      hideBotContainer = true;\n    }\n    return React.createElement(HideComponent, {\n      className: \"WACBotContainer\",\n      hidden: hideBotContainer\n    }, React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(Chat, {\n      botName: botName,\n      headerDisplayName: headerDisplayName,\n      headerAvatarConfig: headerAvatar,\n      ref: this.botChatRef,\n      languagePack: languagePack,\n      config: config,\n      serviceManager: serviceManager,\n      onClose: this.onClose,\n      onCloseAndRestart: this.onCloseAndRestart,\n      messageState: botMessageState,\n      onSendInput: text => this.onSendInput(text, MessageSendSource.MESSAGE_INPUT),\n      agentState: agentState,\n      agentDisplayState: agentDisplayState,\n      allMessageItemsByID: allMessageItemsByID,\n      onRestart: this.onRestart,\n      isHydrated: isHydrated,\n      isHydrationAnimationComplete: isHydrationAnimationComplete && !showDisclaimer,\n      inputState: inputState,\n      onToggleHomeScreen: this.onToggleHomeScreen,\n      onUserTyping: this.onUserTyping,\n      locale: locale,\n      useAITheme: theme.useAITheme,\n      carbonTheme: theme.carbonTheme\n    })));\n  }\n  renderInnerHydrationPanel() {\n    const {botMessageState: botMessageState, serviceManager: serviceManager, languagePack: languagePack, headerDisplayName: headerDisplayName, persistedToBrowserStorage: persistedToBrowserStorage, homeScreenConfig: homeScreenConfig} = this.props;\n    const {areModulesLoaded: areModulesLoaded} = this.state;\n    const useHomeScreenVersion = homeScreenConfig.is_on && !persistedToBrowserStorage.launcherState.hasSentNonWelcomeMessage;\n    return React.createElement(HydrationPanel, {\n      headerDisplayName: headerDisplayName,\n      isHydrated: botMessageState.isHydratingCounter === 0 && areModulesLoaded,\n      serviceManager: serviceManager,\n      onClose: this.onClose,\n      languagePack: languagePack,\n      useHomeScreenVersion: useHomeScreenVersion\n    });\n  }\n  renderHydrationPanel() {\n    const {botMessageState: botMessageState, serviceManager: serviceManager, catastrophicErrorType: catastrophicErrorType, persistedToBrowserStorage: persistedToBrowserStorage} = this.props;\n    const {viewState: viewState} = persistedToBrowserStorage.launcherState;\n    const {areModulesLoaded: areModulesLoaded} = this.state;\n    return React.createElement(OverlayPanel, {\n      onOpenStart: () => this.onPanelOpenStart(false),\n      onCloseStart: this.onPanelCloseStart,\n      onOpenEnd: this.onPanelOpenEnd,\n      onCloseEnd: () => {\n        this.onHydrationPanelClose();\n        this.onPanelCloseEnd(false);\n      },\n      animationOnOpen: AnimationInType.NONE,\n      animationOnClose: AnimationOutType.NONE,\n      shouldOpen: (botMessageState.isHydratingCounter > 0 || !areModulesLoaded) && !catastrophicErrorType && viewState.mainWindow,\n      shouldHide: false,\n      serviceManager: serviceManager,\n      overlayPanelName: OverlayPanelName.HYDRATING\n    }, this.renderInnerHydrationPanel());\n  }\n  renderCatastrophicPanel() {\n    const {serviceManager: serviceManager, botName: botName, languagePack: languagePack, headerDisplayName: headerDisplayName} = this.props;\n    return React.createElement(OverlayPanel, {\n      animationOnOpen: AnimationInType.NONE,\n      animationOnClose: AnimationOutType.NONE,\n      shouldOpen: true,\n      serviceManager: serviceManager,\n      overlayPanelName: OverlayPanelName.CATASTROPHIC\n    }, React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(CatastrophicError, {\n      onClose: this.onClose,\n      headerDisplayName: headerDisplayName,\n      languagePack: languagePack,\n      onRestart: this.onRestart,\n      showHeader: true,\n      botName: botName\n    })));\n  }\n  renderDisclaimerPanel() {\n    const {serviceManager: serviceManager, config: config} = this.props;\n    const showDisclaimer = this.getShowDisclaimer();\n    return config.public.disclaimer?.is_on ? React.createElement(OverlayPanel, {\n      onOpenStart: () => this.onPanelOpenStart(false),\n      onCloseStart: this.onPanelCloseStart,\n      onOpenEnd: this.onPanelOpenEnd,\n      onCloseEnd: () => this.onPanelCloseEnd(false),\n      animationOnOpen: AnimationInType.FADE_IN,\n      animationOnClose: AnimationOutType.FADE_OUT,\n      shouldOpen: showDisclaimer,\n      serviceManager: serviceManager,\n      overlayPanelName: OverlayPanelName.DISCLAIMER\n    }, React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(Disclaimer, {\n      onAcceptDisclaimer: this.onAcceptDisclaimer,\n      onClose: this.onClose,\n      disclaimerHTML: config.public.disclaimer?.disclaimerHTML,\n      disclaimerAcceptButtonRef: this.disclaimerRef\n    }))) : null;\n  }\n  renderHomeScreenPanel() {\n    const {isHydrationAnimationComplete: isHydrationAnimationComplete} = this.state;\n    const showHomeScreen = this.getShowHomeScreen();\n    return React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(HomeScreenContainer, {\n      onPanelOpenStart: () => this.onPanelOpenStart(false),\n      onPanelOpenEnd: this.onPanelOpenEnd,\n      onPanelCloseStart: this.onPanelCloseStart,\n      onPanelCloseEnd: () => this.onPanelCloseEnd(false),\n      onClose: this.onClose,\n      onCloseAndRestart: this.onCloseAndRestart,\n      onSendBotInput: text => this.onSendInput(text, MessageSendSource.HOME_SCREEN_INPUT),\n      onSendButtonInput: this.onSendHomeButtonInput,\n      onRestart: this.onRestart,\n      showHomeScreen: showHomeScreen,\n      isHydrationAnimationComplete: isHydrationAnimationComplete,\n      homeScreenInputRef: this.homeScreenInputRef,\n      onToggleHomeScreen: this.onToggleHomeScreen,\n      requestFocus: this.requestFocus\n    }));\n  }\n  renderIFramePanel() {\n    const {serviceManager: serviceManager, iFramePanelState: iFramePanelState} = this.props;\n    return React.createElement(OverlayPanel, {\n      className: \"WAC__overlay--covering\",\n      onOpenStart: () => this.onPanelOpenStart(true),\n      onCloseStart: this.onPanelCloseStart,\n      onOpenEnd: this.onPanelOpenEnd,\n      onCloseEnd: () => this.onPanelCloseEnd(true),\n      animationOnOpen: AnimationInType.SLIDE_IN_FROM_BOTTOM,\n      animationOnClose: AnimationOutType.SLIDE_OUT_TO_BOTTOM,\n      shouldOpen: iFramePanelState.isOpen,\n      serviceManager: serviceManager,\n      overlayPanelName: OverlayPanelName.IFRAME\n    }, React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(IFramePanel, {\n      useAITheme: this.props.theme.useAITheme,\n      ref: this.iframePanelRef,\n      onClickClose: this.onClose,\n      onClickRestart: this.onRestart,\n      onClickCloseAndRestart: this.onCloseAndRestart\n    })));\n  }\n  renderViewSourcePanel() {\n    const {serviceManager: serviceManager, viewSourcePanelState: viewSourcePanelState} = this.props;\n    return React.createElement(OverlayPanel, {\n      className: \"WAC__overlay--covering\",\n      onOpenStart: () => this.onPanelOpenStart(true),\n      onCloseStart: this.onPanelCloseStart,\n      onOpenEnd: this.onPanelOpenEnd,\n      onCloseEnd: () => this.onPanelCloseEnd(true),\n      animationOnOpen: AnimationInType.SLIDE_IN_FROM_BOTTOM,\n      animationOnClose: AnimationOutType.SLIDE_OUT_TO_BOTTOM,\n      shouldOpen: viewSourcePanelState.isOpen,\n      serviceManager: serviceManager,\n      overlayPanelName: OverlayPanelName.CONVERSATIONAL_SEARCH_CITATION\n    }, React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(ViewSourcePanel, {\n      ref: this.viewSourcePanelRef,\n      onClickClose: this.onClose,\n      onClickRestart: this.onRestart,\n      onClickCloseAndRestart: this.onCloseAndRestart\n    })));\n  }\n  renderCustomPanel() {\n    return React.createElement(CustomPanelExport, {\n      useAITheme: this.props.theme.useAITheme,\n      onClose: this.onClose,\n      onClickRestart: this.onRestart,\n      onCloseAndRestart: this.onCloseAndRestart,\n      onPanelOpenStart: () => this.onPanelOpenStart(true),\n      onPanelOpenEnd: this.onPanelOpenEnd,\n      onPanelCloseStart: this.onPanelCloseStart,\n      onPanelCloseEnd: () => this.onPanelCloseEnd(true)\n    });\n  }\n  renderResponsePanel() {\n    if (!this.props.responsePanelState.localMessageItem) {\n      return null;\n    }\n    const {isOpen: isOpen, localMessageItem: localMessageItem, isMessageForInput: isMessageForInput} = this.props.responsePanelState;\n    const panelOptions = (localMessageItem?.item).panel;\n    const eventName = `\"Show panel\" opened`;\n    const eventDescription = \"Panel opened through panel response type\";\n    const overlayPanelName = OverlayPanelName.PANEL_RESPONSE;\n    return React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(BodyAndFooterPanelComponent, {\n      eventName: eventName,\n      eventDescription: eventDescription,\n      overlayPanelName: overlayPanelName,\n      testIdPrefix: overlayPanelName,\n      isOpen: isOpen,\n      isMessageForInput: isMessageForInput,\n      localMessageItem: localMessageItem,\n      title: panelOptions?.title,\n      showAnimations: panelOptions?.show_animations,\n      useAITheme: this.props.theme.useAITheme,\n      requestFocus: this.requestFocus,\n      onClose: this.onClose,\n      onClickRestart: this.onRestart,\n      onCloseAndRestart: this.onCloseAndRestart,\n      onClickBack: () => this.props.serviceManager.store.dispatch(actions.setResponsePanelIsOpen(false)),\n      onPanelOpenStart: () => this.onPanelOpenStart(true),\n      onPanelOpenEnd: this.onPanelOpenEnd,\n      onPanelCloseStart: this.onPanelCloseStart,\n      onPanelCloseEnd: () => {\n        this.onPanelCloseEnd(true);\n        this.props.serviceManager.store.dispatch(actions.setResponsePanelContent(null, false));\n      },\n      renderMessageComponent: childProps => React.createElement(MessageTypeComponent, {\n        ...childProps\n      })\n    }));\n  }\n  renderWidget() {\n    const {serviceManager: serviceManager, useCustomHostElement: useCustomHostElement, locale: locale, catastrophicErrorType: catastrophicErrorType, config: config, isHydrated: isHydrated, theme: theme, chatWidthBreakpoint: chatWidthBreakpoint, layout: layout, languagePack: languagePack} = this.props;\n    const {closing: closing, open: open, extraClassNames: extraClassNames} = this.state;\n    const localeClassName = `WACLocale-${locale || \"en\"}`;\n    const showGlass = config.public.enableFocusTrap && open && !config.public.hideCloseButton && !config.public.headerConfig.hideMinimizeButton;\n    const trapActive = Boolean(showGlass && isHydrated);\n    const isWideWidth = chatWidthBreakpoint === ChatWidthBreakpoint.WIDE;\n    return React.createElement(FocusTrap, {\n      active: trapActive\n    }, React.createElement(\"div\", {\n      className: cx(\"WACMainWindow\", \"WACWidget__FocusTrapContainer\", ...extraClassNames),\n      ref: this.mainWindowRef\n    }, showGlass && React.createElement(\"div\", {\n      className: \"WACWidget__FocusTrapGlass\"\n    }), React.createElement(\"div\", {\n      id: `WACWidget${serviceManager.namespace.suffix}`,\n      className: cx(`WACWidget ${localeClassName}`, {\n        \"WACWidget--rounded\": theme.corners === CornersType.ROUND,\n        \"WACWidget--defaultElement\": !useCustomHostElement,\n        \"WACWidget--launched\": !closing,\n        \"WACWidget--closing\": closing,\n        \"WACWidget--closed\": !open,\n        \"WACWidget--maxWidth\": isWideWidth && layout.hasContentMaxWidth,\n        [WIDTH_BREAKPOINT_NARROW]: chatWidthBreakpoint === ChatWidthBreakpoint.NARROW,\n        [WIDTH_BREAKPOINT_STANDARD]: chatWidthBreakpoint === ChatWidthBreakpoint.STANDARD,\n        [WIDTH_BREAKPOINT_WIDE]: isWideWidth\n      }),\n      ref: this.containerRef\n    }, React.createElement(VisuallyHidden, null, React.createElement(\"h1\", null, languagePack.window_title)), catastrophicErrorType && this.renderCatastrophicPanel(), !catastrophicErrorType && React.createElement(\"div\", {\n      ref: this.animationContainerRef,\n      className: \"WACWidget__animationContainer\",\n      onScroll: () => {\n        if (this.animationContainerRef.current.scrollTop !== 0) {\n          this.animationContainerRef.current.scrollTop = 0;\n        }\n      }\n    }, this.renderChat()), React.createElement(\"div\", {\n      className: \"WACMainWindowModalHost\",\n      ref: this.setModalPortalHostElement\n    }))));\n  }\n  render() {\n    return React.createElement(ModalPortalRootContext.Provider, {\n      value: this.state.modalPortalHostElement\n    }, this.renderWidget());\n  }\n}\n\nvar MainWindow$1 = connect(state => state, null, null, {\n  forwardRef: true\n})(MainWindow);\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const TourContainerLazy = lazyTourComponent();\n\nfunction App({serviceManager: serviceManager, hostElement: hostElement, applicationStyles: applicationStyles, fontStyles: fontStyles}) {\n  const {store: store} = serviceManager;\n  const {config: config} = store.getState();\n  if (config.public.debug) {\n    consoleDebug(\"[render] Called render\");\n  }\n  const combinedStyles = `${fontStyles ? `${fontStyles} ` : \"\"}${applicationStyles}`;\n  return React.createElement(Provider, {\n    store: store\n  }, React.createElement(AppContainer$1, {\n    serviceManager: serviceManager,\n    hostElement: hostElement,\n    applicationStyles: combinedStyles\n  }));\n}\n\nfunction AppContainer$1({serviceManager: serviceManager, hostElement: hostElement, applicationStyles: applicationStyles}) {\n  const languagePack = useSelector(state => state.languagePack);\n  const cssVariableOverrides = useSelector(state => state.cssVariableOverrides);\n  const theme = useSelector(state => state.theme);\n  const config = useSelector(state => state.config);\n  const layout = useSelector(state => state.layout);\n  const {namespace: namespace} = serviceManager;\n  const {originalName: originalName} = namespace;\n  const dispatch = useDispatch();\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const cssVariableOverrideString = useMemo(() => convertCSSVariablesToString(cssVariableOverrides), [ cssVariableOverrides ]);\n  const dir = document.dir || \"auto\";\n  useOnMount(() => {\n    const windowListener = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener(\"resize\", windowListener);\n    const visibilityListener = () => {\n      dispatch(actions.setIsBrowserPageVisible(document.visibilityState === \"visible\"));\n    };\n    document.addEventListener(\"visibilitychange\", visibilityListener);\n    return () => {\n      window.removeEventListener(\"resize\", windowListener);\n      document.removeEventListener(\"visibilitychange\", visibilityListener);\n    };\n  });\n  return React.createElement(\"div\", {\n    className: \"WACContainer\",\n    \"data-namespace\": originalName,\n    ref: node => {\n      if (node && hostElement) {\n        node.style.setProperty(\"height\", \"100%\", \"important\");\n        node.style.setProperty(\"width\", \"100%\", \"important\");\n      }\n    }\n  }, React.createElement(\"div\", {\n    className: \"WACContainer--styles\"\n  }, React.createElement(\"style\", {\n    \"data-base-styles\": \"true\",\n    nonce: config.public.cspNonce\n  }, applicationStyles || `.WACContainer { visibility: hidden; }`), React.createElement(\"style\", {\n    \"data-variables-custom\": \"true\",\n    nonce: config.public.cspNonce\n  }, cssVariableOverrideString)), React.createElement(\"div\", {\n    className: cx(`WACContainer--render`, getThemeClassNames(theme), {\n      \"WACContainer-disableMobileEnhancements\": hostElement && config.public.disableCustomElementMobileEnhancements,\n      \"WAC-isPhone\": IS_PHONE && !config.public.disableCustomElementMobileEnhancements,\n      \"WAC-isPhonePortraitMode\": IS_PHONE_IN_PORTRAIT_MODE && !config.public.disableCustomElementMobileEnhancements,\n      \"WAC--frameless\": !layout?.showFrame\n    }),\n    dir: dir\n  }, React.createElement(WindowSizeContext.Provider, {\n    value: windowSize\n  }, React.createElement(ServiceManagerContext.Provider, {\n    value: serviceManager\n  }, React.createElement(RawIntlProvider, {\n    value: serviceManager.intl\n  }, React.createElement(LanguagePackContext.Provider, {\n    value: languagePack\n  }, React.createElement(AriaAnnouncerProvider, null, React.createElement(MainContainer, {\n    serviceManager: serviceManager,\n    hostElement: hostElement\n  }))))))));\n}\n\nfunction MainContainer(props) {\n  const {hostElement: hostElement, serviceManager: serviceManager} = props;\n  const showLauncher = useSelector(state => state.launcher.config.is_on);\n  const {viewState: viewState} = useSelector(state => state.persistedToBrowserStorage.launcherState);\n  const tourContainerRef = useRef();\n  const mainWindowRef = useRef();\n  const showTour = viewState.tour;\n  const showedTourOnce = useRef(showTour);\n  showedTourOnce.current = showTour || showedTourOnce.current;\n  const intl = useIntl();\n  const namespace = serviceManager.namespace.originalName;\n  const languageKey = namespace ? \"window_ariaChatRegionNamespace\" : \"window_ariaChatRegion\";\n  const regionLabel = intl.formatMessage({\n    id: languageKey\n  }, {\n    namespace: namespace\n  });\n  useOnMount(() => {\n    function requestFocus() {\n      try {\n        const {persistedToBrowserStorage: persistedToBrowserStorage} = serviceManager.store.getState();\n        const {viewState: viewState} = persistedToBrowserStorage.launcherState;\n        if (viewState.tour) {\n          tourContainerRef.current?.requestFocus();\n        } else if (viewState.mainWindow) {\n          mainWindowRef.current?.requestFocus();\n        }\n      } catch (error) {\n        consoleError(\"An error occurred in App.requestFocus\", error);\n      }\n    }\n    serviceManager.appWindow = {\n      requestFocus: requestFocus\n    };\n  });\n  return React.createElement(\"div\", {\n    className: \"WACWidget__regionContainer\",\n    role: \"region\",\n    \"aria-label\": regionLabel\n  }, React.createElement(MainWindow$1, {\n    mainWindowRef: mainWindowRef,\n    useCustomHostElement: Boolean(hostElement),\n    serviceManager: serviceManager\n  }), showedTourOnce.current && React.createElement(Suspense, {\n    fallback: null\n  }, React.createElement(TourContainerLazy, {\n    ref: tourContainerRef\n  })), showLauncher && React.createElement(LauncherContainer, null));\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function UserDefinedResponsePortalsContainer({chatInstance: chatInstance, renderUserDefinedResponse: renderUserDefinedResponse, userDefinedResponseEventsBySlot: userDefinedResponseEventsBySlot}) {\n  return renderUserDefinedResponse ? Object.entries(userDefinedResponseEventsBySlot).map(([slot, slotState]) => {\n    const {element: element} = slotState;\n    if (!element) {\n      return null;\n    }\n    return React.createElement(UserDefinedResponseComponentPortal, {\n      key: slot,\n      hostElement: element\n    }, renderUserDefinedResponse(slotState, chatInstance));\n  }) : null;\n}\n\nfunction UserDefinedResponseComponentPortal({hostElement: hostElement, children: children}) {\n  return ReactDOM.createPortal(children, hostElement);\n}\n\nconst UserDefinedResponsePortalsContainerExport = React.memo(UserDefinedResponsePortalsContainer);\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function WriteableElementsPortalsContainer({chatInstance: chatInstance, renderResponseMap: renderResponseMap}) {\n  return React.createElement(React.Fragment, null, Object.keys(chatInstance.writeableElements).map(key => {\n    const responseItem = renderResponseMap[key];\n    return responseItem ? React.createElement(WriteableElementsComponentPortal, {\n      key: key,\n      hostElement: chatInstance.writeableElements[key]\n    }, responseItem) : null;\n  }));\n}\n\nfunction WriteableElementsComponentPortal({hostElement: hostElement, children: children}) {\n  return ReactDOM.createPortal(children, hostElement);\n}\n\nconst WriteableElementsPortalsContainerExport = React.memo(WriteableElementsPortalsContainer);\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function AppContainer({config: config, onBeforeRender: onBeforeRender, onAfterRender: onAfterRender, renderUserDefinedResponse: renderUserDefinedResponse, renderWriteableElements: renderWriteableElements, container: container, setParentInstance: setParentInstance, element: element}) {\n  const [instance, setInstance] = useState(null);\n  const [renderProps, setRenderProps] = useState(null);\n  const [applicationStyles, setApplicationStyles] = useState(null);\n  const setInstances = instance => {\n    setInstance(instance);\n    setParentInstance?.(instance);\n  };\n  const [userDefinedResponseEventsBySlot, setUserDefinedResponseEventsBySlot] = useState({});\n  const managedWebChatRef = useRef(null);\n  const previousConfigRef = useRef(null);\n  useEffect(() => {\n    const previousConfig = previousConfigRef.current;\n    previousConfigRef.current = config;\n    async function render({serviceManager: serviceManager}) {\n      const applicationStyles = await loadStyles();\n      serviceManager.container = container;\n      if (serviceManager.customHostElement) {\n        container.style.setProperty(\"width\", \"100%\", \"important\");\n        container.style.setProperty(\"height\", \"100%\", \"important\");\n      } else {\n        container.style.setProperty(\"width\", \"0\", \"important\");\n        container.style.setProperty(\"height\", \"0\", \"important\");\n      }\n      setApplicationStyles(applicationStyles);\n      setRenderProps({\n        serviceManager: serviceManager\n      });\n      await sleep(0);\n    }\n    if (!isEqual(previousConfig, config)) {\n      const managedWebChat = {\n        instance: null,\n        shouldDestroy: false,\n        config: config\n      };\n      if (config) {\n        loadChat({\n          managedWebChatRef: managedWebChatRef,\n          managedWebChat: managedWebChat,\n          render: render,\n          setInstance: setInstances,\n          onBeforeRender: onBeforeRender,\n          onAfterRender: onAfterRender,\n          setUserDefinedResponseEventsBySlot: setUserDefinedResponseEventsBySlot,\n          element: element\n        });\n      }\n      return () => {\n        destroyWebChat(managedWebChat, setInstances);\n        previousConfigRef.current = null;\n      };\n    }\n    return undefined;\n  }, [ config, container ]);\n  if (renderProps && instance) {\n    return React.createElement(React.Fragment, null, React.createElement(App, {\n      serviceManager: renderProps.serviceManager,\n      hostElement: renderProps.serviceManager.customHostElement,\n      applicationStyles: applicationStyles\n    }), renderUserDefinedResponse && React.createElement(UserDefinedResponsePortalsContainerExport, {\n      chatInstance: instance,\n      renderUserDefinedResponse: renderUserDefinedResponse,\n      userDefinedResponseEventsBySlot: userDefinedResponseEventsBySlot\n    }), renderWriteableElements && React.createElement(WriteableElementsPortalsContainerExport, {\n      chatInstance: instance,\n      renderResponseMap: renderWriteableElements\n    }));\n  }\n  return null;\n}\n\nasync function destroyWebChat(managedWebChat, setInstance) {\n  if (managedWebChat) {\n    if (managedWebChat.instance) {\n      managedWebChat.instance.destroy();\n      await sleep(0);\n    }\n    managedWebChat.shouldDestroy = true;\n    managedWebChat.instance = null;\n  }\n  setInstance(null);\n  await sleep(0);\n}\n\nfunction addUserDefinedResponseHandler(webChatInstance, setUserDefinedResponseEventsBySlot) {\n  function userDefinedResponseHandler(event) {\n    setUserDefinedResponseEventsBySlot(userDefinedEventsBySlot => ({\n      ...userDefinedEventsBySlot,\n      [event.data.slot]: {\n        fullMessage: event.data.fullMessage,\n        messageItem: event.data.message,\n        element: event.data.element\n      }\n    }));\n  }\n  function userDefinedChunkHandler(event) {\n    if (\"complete_item\" in event.data.chunk) {\n      const messageItem = event.data.chunk.complete_item;\n      setUserDefinedResponseEventsBySlot(userDefinedEventsBySlot => ({\n        ...userDefinedEventsBySlot,\n        [event.data.slot]: {\n          messageItem: messageItem,\n          element: event.data.element\n        }\n      }));\n    } else if (\"partial_item\" in event.data.chunk) {\n      const itemChunk = event.data.chunk.partial_item;\n      setUserDefinedResponseEventsBySlot(userDefinedEventsBySlot => ({\n        ...userDefinedEventsBySlot,\n        [event.data.slot]: {\n          partialItems: [ ...userDefinedEventsBySlot[event.data.slot]?.partialItems || [], itemChunk ],\n          element: event.data.element\n        }\n      }));\n    }\n  }\n  function restartHandler() {\n    setUserDefinedResponseEventsBySlot({});\n  }\n  webChatInstance.on({\n    type: BusEventType.CHUNK_USER_DEFINED_RESPONSE,\n    handler: userDefinedChunkHandler\n  });\n  webChatInstance.on({\n    type: BusEventType.USER_DEFINED_RESPONSE,\n    handler: userDefinedResponseHandler\n  });\n  webChatInstance.on({\n    type: BusEventType.RESTART_CONVERSATION,\n    handler: restartHandler\n  });\n}\n\nasync function loadChat({managedWebChatRef: managedWebChatRef, managedWebChat: managedWebChat, render: render, setInstance: setInstance, onBeforeRender: onBeforeRender, onAfterRender: onAfterRender, setUserDefinedResponseEventsBySlot: setUserDefinedResponseEventsBySlot, element: element}) {\n  await destroyWebChat(managedWebChatRef.current, setInstance);\n  managedWebChatRef.current = managedWebChat;\n  if (managedWebChat.shouldDestroy) {\n    await destroyWebChat(managedWebChat, setInstance);\n    return;\n  }\n  const widget = await instantiateWidget(managedWebChat.config, () => Promise.resolve(Chat$1), Promise.resolve(render), element);\n  const instance = await widget.start();\n  addUserDefinedResponseHandler(instance, setUserDefinedResponseEventsBySlot);\n  onBeforeRender?.(instance);\n  await instance.render();\n  onAfterRender?.(instance);\n  setInstance(instance);\n  managedWebChat.instance = instance;\n  if (managedWebChat.shouldDestroy) {\n    await destroyWebChat(managedWebChat, setInstance);\n  }\n}\n\nconst AppContainerExport = React.memo(AppContainer);\n\nconst loadBaseStyles = async () => {\n  const {default: styles} = await import(\"./chat.export.js\");\n  return styles;\n};\n\nconst loadCarbon = async () => {\n  const {default: carbon} = await import(\"./chat.export.carbon.js\");\n  return carbon;\n};\n\nasync function loadStyles() {\n  const [styles, carbonStyles] = await Promise.all([ loadBaseStyles(), loadCarbon() ]);\n  return carbonStyles + styles;\n}\n\nexport { AppContainerExport as AppContainer };\n"],"names":["inputItemToLocalItem","message","originalUserText","id","uuid","UUIDType","LOCAL_MESSAGE","item","response_type","MessageResponseTypes","TEXT","input","ui_state","needsAnnouncement","fullMessageID","outputItemToLocalItem","messageItem","fullMessage","isLatestWelcomeNode","disableFadeAnimation","localMessage","streamItemID","history","from_history","isWelcomeResponse","createLocalMessageForInlineError","text","originalMessage","createMessageResponseForItem","createLocalMessageForItem","INLINE_ERROR","createLocalMessageItemsForNestedMessageItems","localMessageItem","fromHistory","nestedLocalMessageItems","allowFooter","isGridResponseType","gridLocalMessageItemIDs","rows","map","row","cells","cell","cellLocalMessageItemIDs","createLocalMessageItemsForNestedType","items","nestedMessageItem","isSupportedMessageItemInBody","isCarouselResponseType","itemsLocalMessageItemIDs","bodyItems","body","panel","bodyLocalMessageItemIDs","isShowPanelButtonType","footerItems","footer","footerLocalMessageItemIDs","rootMessageItem","isButtonResponseType","isSupportedMessageItemInFooter","type","nestedMessageItemIDs","isSupported","forEach","nestedLocalMessageItem","push","isResponseWithNestedItems","consoleError","CARD","isCardResponseType","isItemSupportedInResponseBody","CAROUSEL","BUTTON","button_type","ButtonItemType","SHOW_PANEL","GRID","HA_SET_AGENT_AVAILABILITY","HA_SET_IS_CONNECTING","HA_SET_IS_RECONNECTING","HA_SET_AGENT_JOINED","HA_SET_AGENT_LEFT_CHAT","HA_END_CHAT","HA_UPDATE_CAPABILITIES","HA_UPDATE_FILE_UPLOAD_IN_PROGRESS","HA_SET_SHOW_SCREEN_SHARE_REQUEST","HA_SET_IS_SCREEN_SHARING","HA_SET_PERSISTED_STATE","HA_UPDATE_IS_SUSPENDED","HA_UPDATE_IS_TYPING","setIsConnecting","isConnecting","localMessageID","setIsReconnecting","isReconnecting","setAgentLeftChat","endChat","setAgentAvailability","availability","setAgentJoined","agentProfile","updateCapabilities","capabilities","updateFilesUploadInProgress","fileUploadInProgress","setShowScreenShareRequest","showRequest","setIsScreenSharing","isSharing","setPersistedServiceDeskState","state","agentUpdateIsSuspended","isSuspended","agentUpdateIsTyping","isTyping","deepFreeze","object","Object","freeze","getOwnPropertyNames","prop","prototype","hasOwnProperty","call","isFrozen","resolvablePromise","resolveFunction","rejectFunction","promise","Promise","resolve","reject","doResolve","resolveValue","isResolved","isComplete","doReject","rejectValue","isRejected","HomeScreenHeader","props","ref","brandColor","onClose","onRestart","onCloseAndRestart","showRestartButton","useSelector","config","public","headerConfig","showBackButton","persistedToBrowserStorage","chatState","homeScreenState","showBackToBot","displayName","headerDisplayName","customMenuOptions","useAITheme","theme","headerRef","useRef","useImperativeHandle","current","hideCloseAndRestartButton","overflowClicked","useCallback","index","handler","overflowItems","option","React","className","HeaderExport","showCenter","onClickRestart","onClickClose","testIdPrefix","OverlayPanelName","HOME_SCREEN","HomeScreenHeaderExport","forwardRef","BasePanelComponent","children","isOpen","hidePanelHeader","labelBackButton","title","hideBackButton","onClickCloseAndRestart","headerProps","FocusTrap","active","focusTrapOptions","clickOutsideDeactivates","returnFocusOnDeactivate","IS_MOBILE","preventScroll","BasePanelComponentExport","withoutEmptyStarters","newConfig","starters","buttons","length","allow_return","filter","button","Boolean","label","trim","is_on","setIntl","serviceManager","locale","messages","intl","createIntl","store","dispatch","actions","setAppStateValue","createWriteableElementsProxy","elementSet","Set","get","target","element","has","add","Proxy","writeableElements","VERSION","NotificationType","BOUNCING_ANIMATION_TIMEOUTS","DEFAULT_LAUNCHER","mobile","time_to_expand","new_expand_time","time_to_reduce","notification_type","TEXT_NOTIFICATION","desktop","DEFAULT_CUSTOM_PANEL_CONFIG_OPTIONS","disableAnimation","DEFAULT_CUSTOM_PANEL_STATE","panelID","DEFAULT_CUSTOM_PANEL_ID","options","DEFAULT_IFRAME_PANEL_STATE","DEFAULT_CITATION_PANEL_STATE","citationItem","DEFAULT_TOUR_STATE","activeTourStepItems","DEFAULT_MESSAGE_PANEL_STATE","isMessageForInput","VIEW_STATE_ALL_CLOSED","launcher","mainWindow","tour","VIEW_STATE_LAUNCHER_OPEN","VIEW_STATE_MAIN_WINDOW_OPEN","DEFAULT_PERSISTED_TO_BROWSER","version","disclaimersAccepted","isHomeScreenOpen","hasSentNonWelcomeMessage","persistedTourState","activeTourID","activeTourCurrentStepIndex","agentState","isConnected","agentProfiles","launcherState","wasLoadedFromBrowser","viewState","activeTour","showUnreadIndicator","mobileLauncherIsExtended","mobileLauncherWasReduced","mobileLauncherDisableBounce","desktopLauncherIsExpanded","desktopLauncherWasMinimized","bounceTurn","DEFAULT_CHAT_MESSAGES_STATE","localMessageIDs","messageIDs","isTypingCounter","isLoadingCounter","isHydratingCounter","isScrollAnchored","DEFAULT_MESSAGE_STATE","allMessageItemsByID","allMessagesByID","botMessageState","DEFAULT_AGENT_STATE","numUnreadMessages","showScreenShareRequest","isScreenSharing","isAgentTyping","inputState","fieldVisible","isReadonly","files","allowFileUploads","allowMultipleFileUploads","allowedFileUploadTypes","stopStreamingButtonState","currentStreamID","isVisible","isDisabled","DEFAULT_THEME_STATE","carbonTheme","CarbonTheme","G10","corners","CornersType","ROUND","DEFAULT_LAYOUT_STATE","showFrame","hasContentMaxWidth","applyBotMessageState","newState","setHomeScreenOpenState","undefined","applyLocalMessageUIState","propertyName","propertyValue","oldMessage","applyFullMessage","white","gray100","MIN_CONTRAST","hexCodeToRGB","color","red","substring","blue","green","parseInt","calculateContrast","color1","color2","rgb1","rgb2","luminance1","calculateRelativeLuminance","luminance2","contrast","r8","g8","b8","rRGB","gRGB","bRGB","whiteOrBlackText","background","adjustLightness","token","shift","original","Color","hsl","l","round","hex","toLowerCase","CSS_VAR_PREFIX","HEXADECIMAL_REGEX","INTERNAL_OVERRIDES_LIGHT_THEME_MAP","INTERNAL_OVERRIDES_DARK_THEME_MAP","ACCENT_COLOR_MAPS","blue20","blue60","blue60Hover","blue80","g10","g90","g100","fillValues","styles","propertyNames","value","mergeCSSVariables","publicVars","whiteLabelVariables","internalOverrides","internalOverridesMap","WHITE","includes","G90","G100","createInternalCSSOverridesMap","result","entries","key","startsWith","match","console","warn","WA_CONSOLE_PREFIX","remoteVars","cssOverrides","primaryColor","secondaryColor","accentColor","useAccentColor","tryFocusColor","useFocusColor","colorMap","accentBlue20","accentBlue60Hover","accentBlue80","accentColorRGB","toString","accentColorBW","remoteStylesToCSSVars","getThemeClassNames","themeState","themeClassnames","CarbonThemeClassNames","validateViewState","appState","VALID_PUBLIC_VARS_IN_AI_THEME_SET","values","CSSVariable","UPDATE_CSS_VARS_AI_THEME_WARNING_MESSAGE","join","ChatActionsImpl","constructor","this","hydrating","restarting","alreadyHydrated","chunkQueue","hydrateChat","alternateWelcomeRequest","alternateWelcomeRequestSource","alternateOptions","fireReady","hydrationPromise","doHydrateChat","fire","BusEventType","CHAT_READY","debugLog","addIsHydratingCounter","historyService","loadHistory","humanAgentService","initialize","getState","hydrateMessageHistory","messageHistory","createElementsForUserDefinedResponses","latestPanelLocalMessageItem","openResponsePanel","homeScreenConfig","setHomeScreenIsOpen","messaging","skipWelcome","send","createWelcomeRequest","MessageSendSource","WELCOME_REQUEST","returnBeforeStreaming","chatWasHydrated","lastMessageID","arrayLastValue","lastMessage","lastOriginalMessage","isLiveAgentMessage","isRequest","messageService","resendMessage","allowReconnect","serviceDesk","handleHydration","getPublicWebChatState","isConnectedWithHumanAgent","isWebChatOpen","isConnectingWithHumanAgent","isDebugEnabled","isEnableDebugLog","hasUserSentMessage","isTourActive","sendWithCatch","source","ignoreHydration","error","messageRequest","createMessageRequestForText","responsePanelState","setResponsePanelIsOpen","doSend","addDefaultsToMessage","silent","addMessage","addLocalMessageItem","setValueSelectedForMessageID","messageSetOptionSelected","cloneDeep","receive","requestMessage","requestOptions","restartCount","initialRestartCount","MESSAGE","preReceiveEvent","PRE_RECEIVE","data","updateHasSentNonWelcomeMessage","languagePack","isResponse","processMessageResponse","catch","inlineError","createMessageResponseForText","errors_singleMessage","thread_id","RECEIVE","removeMessages","insertHistory","scrollBottom","getMessagesScrollBottom","notes","currentAppStateMessages","newAppStateMessages","merge","doAutoScroll","scrollToBottom","receiveChunk","chunk","messageID","chunkPromise","processChunkQueue","isCompleteItem","isStreamCompleteItem","isPartialItem","isStreamPartialItem","isStopGeneratingVisible","botInputState","partial_item","streaming_metadata","cancellable","setStopStreamingButtonVisible","response_id","streamingStart","complete_item","streamingAddChunk","partial_response","keys","Error","streamingMergeHistory","handleUserDefinedResponseItemsChunk","isStreamFinalResponse","final_response","setStopStreamingButtonDisabled","getOrCreateUserDefinedElement","messageItemID","userDefinedItem","userDefinedElementRegistry","document","createElement","slotName","setAttribute","set","handleUserDefinedResponseItems","renderAsUserDefinedMessage","user_defined","userDefinedResponseEvent","USER_DEFINED_RESPONSE","slot","fullWidth","setMessageUIProperty","createElementForNestedUserDefinedResponse","localMessageItemID","nestedLocalMessage","asyncForEach","itemID","CHUNK_USER_DEFINED_RESPONSE","output","generic","request_id","previousItemID","pause","isPause","agent","isConnectToAgent","hasTourUserDefinedType","skipTourCard","skip_card","startTourReason","TourStartReason","START_TOUR_METHOD","SKIP_CARD","mainWindowCloseReason","MainWindowCloseReason","CALLED_START_TOUR","TOUR_SKIP_CARD","startTour","viewChangeReason","ViewChangeReason","addNestedMessages","addIsTypingCounter","hasServiceDesk","errorOccurred","errorType","OnErrorType","INTEGRATION_ERROR","setMessageHistoryProperty","agentAvailability","checkAreAnyAgentsOnline","shouldAutoRequestAgent","skipConnectAgentCard","AgentsOnlineStatus","ONLINE","startChat","showIsTyping","sleep","time","setResponsePanelContent","insertLocalMessageResponse","updateLanguagePack","changes","addNotification","notification","removeNotification","groupID","removeNotifications","removeAllNotifications","updateCSSVariables","usePublicVars","variable","consoleWarn","allVariables","updateBotName","name","updateMainHeaderTitle","updateBotAvatarURL","url","updateHomeScreenConfig","updateLauncherConfig","launcherConfig","changeView","newView","reason","tryHydrating","forceViewChange","newViewState","constructViewState","isEqual","fireViewChangeEventsAndChangeView","isHydrated","viewChanging","setViewChanging","oldViewState","preViewChangeEvent","VIEW_PRE_CHANGE","cancelViewChange","setViewState","viewChangeEvent","VIEW_CHANGE","changeViewReason","setTourData","ViewType","TOUR","TOUR_START","TOUR_STEP","step","tourState","endTour","LAUNCHER","clearTourData","goToSpecificTourStep","stepId","newStepIndex","findIndex","stepItem","step_id","changeStepInTour","changeStepOptions","nextStep","previousStep","actualNewStepIndex","catastrophicErrorType","callOnError","additionalChatParameters","onError","restartConversation","skipHydration","endAgentConversation","fireEvents","PRE_RESTART_CONVERSATION","currentState","MAIN_WINDOW","mainWindowOpenReason","MainWindowOpenReason","CALLED_RESTART_CONVERSATION","instance","updateAssistantInputFieldVisibility","cancelAllMessageRequests","RESTART_CONVERSATION","destroySession","keepOpenState","originalViewState","newPersistedToBrowserStorage","userSessionStorageService","clearLauncherSession","clearChatSession","agentEndConversation","endedByUser","HANDLER_NOT_FUNCTION","EventBus","handlersByType","Map","eventsTypesRunning","eventsRunningCount","busEvent","logEvent","JSON","stringify","handlersForType","handlersCopy","slice","delete","waitForEmptyPromise","fireSync","waitForEmpty","on","handlers","asArray","debugStackTrace","off","indexOf","removed","splice","once","onceHandler","event","logListeners","listeners","group","listener","consoleLog","groupEnd","clear","eventCopy","createCustomPanelInstance","customPanelInstance","open","setCustomPanelConfigOptions","setCustomPanelOpen","close","HistoryService","useHistory","publicConfig","resultData","customLoadHistory","historyNotes","async","allLocalMessagesByID","loadingState","allMessages","threadMessagesByThreadID","responsesByRequestID","relatedMessageByID","localMessagesByOriginalMessageID","lastThreadID","loadedHistory","latestTransferToAgentResponse","note","historyItem","isEventRequest","timestamp","Date","getTime","THREAD_ID_MAIN","file_upload_status","FileStatusValue","UPLOADING","COMPLETE","error_state","MessageErrorState","FAILED","related_message_id","beginEvent","HISTORY_BEGIN","eventBus","HISTORY_END","notesToMessages","getResponseItems","thread","addMessageToThread","createLocalMessages","localMessagesByFullMessageID","toChatMessageState","createChatStates","mainThreadMessages","welcomeRequest","findLast","is_welcome_request","welcomeResponse","markIsLatestWelcomeNode","isOptionItem","relatedRequest","optionSelected","isDateResponseType","markSelectedOptions","notesToLoadedHistory","SESSION_HISTORY","MessageLoadingManager","start","onExceededMaxSilentLoading","onEnd","onTimeout","msMaxSilentLoading","msMaxAttempt","hasExceededMaxSilentLoading","onSilentLoading","setTimeout","onMaxAttempt","end","clearTimeout","MS_BETWEEN_RETRIES","RetryType","MessageService","pendingLocale","localeIsExplicit","messageLoadingManager","queue","waiting","timeoutOverride","messageTimeoutSecs","timeoutMS","processSuccess","received","isProcessed","isWelcomeNode","setMessageErrorState","NONE","message_type","MessageInputType","EVENT","now","trackData","lastRequestTime","timeLastRequest","totalRequestTime","timeFirstRequest","sendMessagePromise","moveToNextQueueItem","addErrorMessage","errorMessage","HYDRATE_RESEND","skipQueue","sendToAssistantAndUpdateErrorState","sendToAssistant","SILENT","VISIBLE","RETRYING","waitingMessage","WAITING","processError","pendingRequest","resultText","allowRetry","tryCount","isWelcome","msSinceStarted","isInAttemptWindow","numErrors","retryDelay","MESSAGE_COMMUNICATION","otherData","rejectFinalErrorOnMessage","customSendMessage","updateMessage","controller","AbortController","sendMessageController","signal","runQueueIfReady","clearCurrentQueueItem","getLastBotResponseWithContext","LOADING_INDICATOR_TIMER","messageLoadingIndicatorTimeoutSecs","addIsLoadingCounter","didExceedMaxLoading","cancelMessageRequestByID","PRE_SEND","updateLocalMessageItem","SEND","addToMessageQueue","newPendingMessage","errorState","messageToUpdate","announceMessageID","announceMessage","logError","lastResponse","abort","safeFetchTextWithTimeout","NamespaceService","namespace","originalName","attributeSafe","suffix","computedName","computeNamespaceName","getSuffix","ServiceManager","innerStorage","storage$1","getItem","setItem","removeItem","storage","IS_SESSION_STORAGE","window","sessionStorage","UserSessionStorageService","prefix","loadChatSession","chatSessionString","getChatSessionKey","chatSession","parse","loadLauncherSession","launcherSessionString","getLauncherSessionKey","launcherSession","persistChatSession","session","persistLauncherSession","replaceCurrentArrayValue","currentValue","newValue","Array","isArray","agentReducers","action","activeLocalMessageID","serviceDeskState","newInputState","populateTourStepItems","tourMessageItem","find","steps","clearTourState","EXCLUDE_AGENT_UNREAD","AgentMessageType","USER_ENDED_CHAT","CHAT_WAS_ENDED","RELOAD_WARNING","reducers","CHANGE_STATE","partialState","HYDRATE_CHAT","iFramePanelState","viewSourcePanelState","customPanelState","HYDRATE_MESSAGE_HISTORY","ADD_LOCAL_MESSAGE_ITEM","addAfterID","isSilent","currentIndex","existingID","newLocalMessageIDs","insertAtIndex","afterIDIndex","isBotMessage","agent_message_type","isMainWindowOpen","isBrowserPageVisible","REMOVE_MESSAGES","idsSet","newAllMessages","newAllMessageItems","newMessageIDs","newMessageItemsIDs","UPDATE_LOCAL_MESSAGE_ITEM","UPDATE_MESSAGE","ADD_MESSAGE","itemIDsInNewMessage","newAllMessageItemsByID","existingItemIDs","firstFoundIndex","isItemInMessage","itemIDsToInsert","MESSAGE_SET_OPTION_SELECTED","newMessagesByID","sentMessage","ADD_IS_TYPING_COUNTER","Math","max","addToIsTyping","ADD_IS_LOADING_COUNTER","addToIsLoading","ADD_IS_HYDRATING_COUNTER","addToIsHydrating","SET_APP_STATE_VALUE","UPDATE_PERSISTED_CHAT_STATE","UPDATE_HAS_SENT_NON_WELCOME_MESSAGE","SET_VIEW_STATE","previousState","handleViewStateChange","SET_VIEW_CHANGING","SET_INITIAL_VIEW_CHANGE_COMPLETE","initialViewChangeComplete","changeComplete","UPDATE_BOT_NAME","botName","UPDATE_BOT_AVATAR_URL","botAvatarURL","UPDATE_LAUNCHER_AVATAR_URL","avatar_url_override","UPDATE_MAIN_HEADER_TITLE","UPDATE_CSS_VARIABLES","variables","cssVariableOverrides","UPDATE_HOME_SCREEN_CONFIG","newHomeScreenConfig","mergeWith","SET_MESSAGE_UI_PROPERTY","SET_MESSAGE_HISTORY_PROPERTY","MERGE_HISTORY","ANNOUNCE_MESSAGE","ACCEPTED_DISCLAIMER","location","hostname","SET_HOME_SCREEN_IS_OPEN","TOGGLE_HOME_SCREEN","UPDATE_LAUNCHER_CONFIG","SET_LAUNCHER_PROPERTY","SET_LAUNCHER_CONFIG_PROPERTY","launcherType","LauncherType","DESKTOP","MOBILE","SET_CHAT_MESSAGES_PROPERTY","SET_LAUNCHER_MINIMIZED","OPEN_IFRAME_CONTENT","CLOSE_IFRAME_PANEL","SET_CONVERSATIONAL_SEARCH_CITATION_PANEL_IS_OPEN","relatedSearchResult","SET_CUSTOM_PANEL_OPEN","SET_CUSTOM_PANEL_OPTIONS","SET_TOUR_DATA","newActiveTourMessageID","CLEAR_TOUR_DATA","CHANGE_STEP_IN_TOUR","min","newStepNumber","UPDATE_INPUT_STATE","applyInputState","getInputState","isInputToAgent","SET_IS_BROWSER_PAGE_VISIBLE","ADD_INPUT_FILE","file","currentInputState","REMOVE_INPUT_FILE","fileID","newUploads","REMOVE_LOCAL_MESSAGE_ITEM","ADD_NOTIFICATION","notificationID","notifications","concat","REMOVE_NOTIFICATIONS","REMOVE_ALL_NOTIFICATIONS","CLEAR_INPUT_FILES","FILE_UPLOAD_INPUT_ERROR","currentInputSate","isError","status","ADD_NESTED_MESSAGES","localMessageItems","SET_RESPONSE_PANEL_IS_OPEN","SET_RESPONSE_PANEL_CONTENT","STREAMING_START","STREAMING_MERGE_HISTORY","existingMessage","newMessage","STREAMING_ADD_CHUNK","chunkItem","localItemID","existingLocalMessageItem","newItem","streamingState","chunks","isDone","isIntermediateStreaming","UPDATE_CHAT_HEADER_CONFIG","chatHeaderConfig","chatHeaderState","UPDATE_MAX_VISIBLE_HEADER_OBJECTS","maxTotal","maxVisibleHeaderObjects","SET_STOP_STREAMING_BUTTON_VISIBLE","SET_STOP_STREAMING_BUTTON_DISABLED","SET_STREAM_ID","UPDATE_MAIN_HEADER_AVATAR","headerAvatarConfig","getThemeCornersType","getLayoutState","IS_PHONE","themeConfig","SQUARE","layout","reducerFunction","assign","DEFAULT_PUBLIC_CONFIG","openChatByDefault","showLauncher","shouldTakeFocusIfOpensAutomatically","dayjs","LocalizedFormat","Chat$1","publicConfigProvided","customHostElement","additionalChatParametersProvided","debug","consoleDebug","appConfig","startInternal","doesHaveServiceDesk","getBotName","initialState","chatWidthBreakpoint","chatWidth","chatHeight","enLanguagePack","originalConfig","suspendScrollDetection","isDestroyed","targetViewState","showNonHeaderBackgroundCover","sessionStorageLauncherState","enhancer","__REDUX_DEVTOOLS_EXTENSION__","instanceId","createStore","doCreateStore","subscribe","previousPersistedToBrowserStorage","copyToSessionStorage","disableWindowTitleChanges","originalTitle","changeTitleTimer","agent_newMessage","createHandleWindowTitle","customPanelManager","serviceManger","panels","getPanel","createCustomPanelManager","WriteableElementName","AI_TOOLTIP_AFTER_DESCRIPTION_ELEMENT","WELCOME_NODE_BEFORE_ELEMENT","HEADER_BOTTOM_ELEMENT","BEFORE_INPUT_ELEMENT","HOME_SCREEN_HEADER_BOTTOM_ELEMENT","HOME_SCREEN_AFTER_STARTERS_ELEMENT","HOME_SCREEN_BEFORE_INPUT_ELEMENT","CUSTOM_PANEL_ELEMENT","setEnableDebugLog","debugStackTraces","setEnableDebugStackTracesLog","createServiceManager","localePack","render","createHumanAgentService","all","loadLanguagePack","loadLocale","loadHAA","reallyRenderAndReturnInstance","OPEN_BY_DEFAULT","WEB_CHAT_LOADED","setInitialViewChangeComplete","callRender","wasRendered","newPack","updateLocale","newLocale","localePromise","languagePackPromise","then","selectInputState","INSTANCE_SEND","destroy","container","remove","updateInputState","updateInputIsDisabled","updateBotUnreadIndicatorVisibility","setLauncherProperty","issueWithNewView","viewTypeValues","CALLED_CHANGE_VIEW","homeScreenConfigClone","scrollToMessage","animate","doScrollToMessage","customPanels","updateCustomMenuOptions","updateIsTypingCounter","direction","updateIsLoadingCounter","updateIsChatLoadingCounter","updateHeaderConfig","configCopy","updateChatHeaderConfig","updateMainHeaderAvatar","elements","getMainWindow","addClassName","removeClassName","getMessageInput","getHTMLElement","setValue","setEnableEnterKey","addChangeListener","removeChangeListener","getHomeScreenInput","tours","CALLED_END_TOUR","goToNextStep","goToStep","addMessageChunk","clearConversation","requestFocus","appWindow","endConversation","updateIsSuspended","createChatInstance","renderAndReturnInstance","renderPromise","AriaAnnouncerProvider","useIntl","useServiceManager","announcerRef","announcerFunction","announceValue","previousAnnounceMessageRef","useEffect","currentAnnounceMessage","AriaAnnouncerContext","Provider","AriaAnnouncerComponent","getLauncherButtonAriaLabel","isLauncherHidden","launcher_isTourOpen","launcher_isTourClosed","launcher_isOpen","launcher_isClosed","Launcher","onToggleOpen","unreadAgentCount","tabIndex","launcherHidden","launcherAvatarURL","buttonRef","doFocusRef","ariaLabel","formatMessage","count","launcherAvatar","AiLaunch","size","ChatLaunch","src","alt","cx","Button","WACLauncher__TourButton","PageObjectId","kind","ButtonKindEnum","PRIMARY","onClick","ArrowUpLeft","LauncherExport","LauncherComplex","launcherComplexRef","launcherRef","onOpen","onMinimize","launcher_desktopGreeting","launcher_closeButton","launcher_ariaIsExpanded","disabled","WACLauncherComplex__Text","Tag","Close","LauncherDesktopContainer","onDoToggle","useLanguagePack","browserLauncherState","isExpandedLauncherEnabled","smallLauncherClassName","setSmallLauncherClassName","useState","complexLauncherClassName","setComplexLauncherClassName","launcherHiddenRef","animateOnceVisible","bounceTurnRef","animationStartTimerRef","animationFinishedTimerRef","firstBounceAnimationStartTimerRef","firstBounceAnimationFinishedTimerRef","secondBounceAnimationStartTimerRef","secondBounceAnimationFinishedTimerRef","determineLauncherHeight","expandedLauncherHeight","offsetHeight","style","setProperty","startExpandLauncher","setExpandAnimationTimers","clearExpandAnimationTimers","startBounceAnimation","finishBounceAnimation","setBounceAnimationTimers","clearBounceAnimationTimers","setDefaultLauncherState","setLauncherMinimized","useOnMount","setLauncherConfigProperty","prevLauncherTitle","usePrevious","animateWithClass","endAnimationNameOrDelay","endAnimationCallback","classList","animationName","removeEventListener","addEventListener","LauncherExtended","isExtended","playExtendAnimation","onSwipeRight","onReduceEnd","ariaAnnouncer","useAriaAnnouncer","animateExtendedState","setAnimateExtendedState","showGreetingMessage","setShowGreetingMessage","prevIsExtended","extendedContainerRef","greetingMessageRef","textHolderRef","touchStartRef","touchStartX","touchStartY","shouldReduceExtendedLauncher","extendWithAnimation","extendWithoutAnimation","launcherGreetingMessage","launcher_mobileGreeting","launcherContainerElement","textHolderEl","greetingMessageEl","extendedContainerEl","maxTextHolderWidth","launcherPosition","width","height","screen","extendedWidth","getMaxLauncherExtendedWidth","clientWidth","querySelector","launcherExtendedWidth","removeAttribute","calculateAndSetMaxExtendedLauncherWidth","doFadeAnimationForElements","fadeInElement","fadeInTime","buttonEl","handleTouchMove","touchList","touchStartCoordinates","callback","clientX","touchEndX","clientY","touchEndY","differenceX","differenceY","abs","checkIfUserSwipedRight","touches","handleTouchStart","touchStart","reduceAnimationEndListener","fadeOutElement","GHOST","LauncherExtendedExport","LauncherMobileContainer","wasReduced","disableBounce","isStartingBounceAnimation","setIsStartingBounceAnimation","prevWasReduced","initialBounceTurn","previouslyPlayedExtendAnimation","extendLauncherTimeoutIDRef","reduceLauncherTimeoutIDRef","endBounceAnimationRef","shouldBounceRef","isExtending","disableIntroAnimation","setLauncherStateAsReduced","reduceLauncher","extendLauncherTimeoutID","reduceLauncherTimeoutID","clearTimeouts","setExpandAnimationTimeout","endBounceAnimation","startRecurringBounceAnimation","turnCounter","animation","timeouts","startingIndex","beforeAll","afterAll","beforeEach","afterEach","terminate","timeoutID","playAnimation","setAnimationListener","replayAnimation","setAnimationTimeouts","handleToggleOpen","handleSwipeRight","LauncherContainer","LAUNCHER_CLICKED","launcherContainer","effect","deps","hasRunRef","useEffectDidUpdate","HydrationPanel","useHomeScreenVersion","isHidden","useContext","HideComponentContext","header","BotHeaderExport","onToggleHomeScreen","includeWriteableElement","HYDRATING","MountChildrenOnDelay","delay","AnnounceOnMountComponentExport","announceOnce","window_ariaWindowLoading","Loading","withOverlay","CustomPanel","onPanelOpenEnd","onPanelCloseEnd","onPanelOpenStart","onPanelCloseStart","disableDefaultCloseAction","onClickBack","prevIsOpen","openAnimation","AnimationInType","SLIDE_IN_FROM_BOTTOM","closeAnimation","AnimationOutType","SLIDE_OUT_TO_BOTTOM","onClickBackLocal","onClickCloseLocal","checkAllowClose","onCloseAndRestartLocal","OverlayPanel","onOpenStart","CUSTOM_PANEL_PRE_OPEN","onOpenEnd","CUSTOM_PANEL_OPEN","onCloseStart","CUSTOM_PANEL_PRE_CLOSE","onCloseEnd","CUSTOM_PANEL_CLOSE","animationOnOpen","animationOnClose","shouldOpen","overlayPanelName","CUSTOM","eventName","eventDescription","general_returnToAssistant","hideCloseButton","WriteableElement","CustomPanelExport","Chat","lazyChat","CatastrophicError","lazyCatastrophicError","Disclaimer","lazyDisclaimer","HomeScreenContainer","lazyHomeScreenContainer","IFramePanel","lazyIFramePanel","ViewSourcePanel","lazyViewSourcePanel","BodyAndFooterPanelComponent","lazyBodyAndFooterPanelComponent","WIDTH_BREAKPOINT_STANDARD","WIDTH_BREAKPOINT_NARROW","WIDTH_BREAKPOINT_WIDE","MainWindow","Component","super","arguments","closing","modalPortalHostElement","numPanelsOpen","numPanelsAnimating","numPanelsCovering","isHydrationAnimationComplete","shouldAutoFocus","extraClassNames","areModulesLoaded","mainWindowRef","containerRef","botChatRef","homeScreenInputRef","disclaimerRef","brandingRef","animationContainerRef","iframePanelRef","viewSourcePanelRef","previousBodyVisibility","previousBodyPosition","onResize","appChatWidthBreakpoint","offsetWidth","ChatWidthBreakpoint","WIDE","STANDARD","NARROW","onVisualViewportResize","updateFromVisualViewport","visualViewport","offsetTop","offsetLeft","setModalPortalHostElement","setState","onSendInput","selectIsInputToAgent","sendMessageToAgent","clearInputFiles","onSendHomeButtonInput","createMessageRequestForChoice","HOME_SCREEN_STARTER","removeChatFromDom","doClose","toggleHomeScreen","getShowDisclaimer","getShowHomeScreen","takeFocus","requestInputFocus","onUserTyping","userTyping","onAcceptDisclaimer","acceptDisclaimer","coverBackground","prevState","onHydrationPanelClose","componentDidMount","mainWindowObserver","ResizeObserver","observe","disableCustomElementMobileEnhancements","updateBody","SCROLLBAR_WIDTH","loadPanels","componentWillUnmount","unobserve","componentDidUpdate","oldProps","oldState","newProps","useCustomHostElement","prevViewState","requestAnimationFrame","newLastItemID","lastMessageItem","componentDidCatch","errorInfo","createDidCatchErrorData","preload","unmounting","IS_IOS","getPropertyValue","fromCloseAndRestart","MAIN_WINDOW_CLOSED_AND_RESTARTED","DEFAULT_MINIMIZE","disclaimer","addClassNameToState","removeClassNameFromState","renderChat","showCovering","renderCustomPanel","renderHydrationPanel","renderDisclaimerPanel","renderResponsePanel","renderHomeScreenPanel","renderIFramePanel","renderViewSourcePanel","renderBotChat","headerAvatar","agentDisplayState","selectAgentDisplayState","showDisclaimer","hideBotContainer","HideComponent","hidden","Suspense","fallback","messageState","MESSAGE_INPUT","renderInnerHydrationPanel","shouldHide","renderCatastrophicPanel","CATASTROPHIC","showHeader","FADE_IN","FADE_OUT","DISCLAIMER","disclaimerHTML","disclaimerAcceptButtonRef","showHomeScreen","onSendBotInput","HOME_SCREEN_INPUT","onSendButtonInput","IFRAME","CONVERSATIONAL_SEARCH_CITATION","panelOptions","PANEL_RESPONSE","showAnimations","show_animations","renderMessageComponent","childProps","MessageTypeComponent","renderWidget","localeClassName","showGlass","enableFocusTrap","hideMinimizeButton","trapActive","isWideWidth","VisuallyHidden","window_title","onScroll","scrollTop","ModalPortalRootContext","MainWindow$1","connect","TourContainerLazy","lazyTourComponent","App","hostElement","applicationStyles","fontStyles","combinedStyles","AppContainer$1","useDispatch","windowSize","setWindowSize","innerWidth","innerHeight","cssVariableOverrideString","useMemo","cssVariables","cssVariablesString","allValues","replace","convertCSSVariablesToString","dir","windowListener","visibilityListener","setIsBrowserPageVisible","visibilityState","node","nonce","cspNonce","IS_PHONE_IN_PORTRAIT_MODE","WindowSizeContext","ServiceManagerContext","RawIntlProvider","LanguagePackContext","MainContainer","tourContainerRef","showTour","showedTourOnce","languageKey","regionLabel","role","UserDefinedResponsePortalsContainer","chatInstance","renderUserDefinedResponse","userDefinedResponseEventsBySlot","slotState","UserDefinedResponseComponentPortal","ReactDOM","UserDefinedResponsePortalsContainerExport","WriteableElementsPortalsContainer","renderResponseMap","responseItem","WriteableElementsComponentPortal","WriteableElementsPortalsContainerExport","AppContainer","onBeforeRender","onAfterRender","renderWriteableElements","setParentInstance","setInstance","renderProps","setRenderProps","setApplicationStyles","setInstances","setUserDefinedResponseEventsBySlot","managedWebChatRef","previousConfigRef","previousConfig","managedWebChat","shouldDestroy","destroyWebChat","widget","pagePublicConfig","chatConstructorPromise","protocol","compatMode","instantiateWidget","webChatInstance","userDefinedEventsBySlot","itemChunk","partialItems","addUserDefinedResponseHandler","loadChat","carbonStyles","loadBaseStyles","loadCarbon","loadStyles","AppContainerExport","default","carbon"],"sourceRoot":""}