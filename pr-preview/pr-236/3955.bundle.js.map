{"version":3,"file":"3955.bundle.js","mappings":";mTAqBA,SAASA,EAA4BC,GACjC,MAAM,OAAEC,EAAM,kBAAEC,EAAiB,iBAAEC,EAAgB,UAAEC,EAAS,iBAAEC,EAAgB,iBAAEC,EAAgB,UAAEC,EAAS,MAAEC,EAAK,WAAEC,EAAU,aAAEC,EAAY,YAAEC,EAAW,QAAEC,EAAO,eAAEC,EAAc,kBAAEC,EAAiB,eAAEC,EAAc,gBAAEC,EAAe,iBAAEC,EAAgB,kBAAEC,GAAuBlB,EAC7QmB,GAAeC,EAAAA,EAAAA,KACfC,GAAiBC,EAAAA,EAAAA,KACjBC,GAAkBC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,gBAAgBvB,GAAkBwB,gBAEjFC,IADiB5B,EAAM6B,gBAAkB,GAEzCC,EAAgBF,EAChBG,EAAAA,EAAgBC,KAChBD,EAAAA,EAAgBE,qBAChBC,EAAiBN,EACjBO,EAAAA,EAAiBH,KACjBG,EAAAA,EAAiBC,oBACvB,OAAQC,EAAAA,cAAoBC,EAAAA,EAAc,CAAE/B,UAAW,yBAA0BgC,YAAatB,EAAkBuB,UAAWzB,EAAgB0B,aAAcvB,EAAmBwB,WAAY1B,EAAiB2B,gBAAiBb,EAAec,iBAAkBV,EAAgBW,WAAY5C,EAAQoB,eAAgBA,EAAgBf,iBAAkBA,GAC7U+B,EAAAA,cAAoBS,EAAAA,EAA0B,CAAEvC,UAAWwC,EAAG,4BAA6BxC,GAAYH,UAAWA,EAAWC,iBAAkBA,EAAkBJ,OAAQA,EAAQO,MAAOA,EAAOoB,iBAAkBA,EAAkBnB,WAAYA,EAAYuC,gBAAiB7B,EAAa8B,0BAA2BtC,YAAaA,EAAauC,aAActC,EAASC,eAAgBA,EAAgBsC,uBAAwBrC,GAAqBS,GAAoBc,EAAAA,cAAoBe,EAAAA,EAAyB,CAAEjD,iBAAkBA,EAAkBkD,YAAa9B,EAAiBrB,kBAAmBA,EAAmBQ,aAAcA,KACnnB,C","sources":["webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/panels/BodyAndFooterPanelComponent.js"],"sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLanguagePack } from '../../hooks/useLanguagePack.js';\nimport { useServiceManager } from '../../hooks/useServiceManager.js';\nimport { AnimationInType, AnimationOutType } from '../../../../types/utilities/Animation.js';\nimport { BasePanelComponent as BasePanelComponentExport } from '../BasePanelComponent.js';\nimport { BodyWithFooterComponent } from '../BodyWithFooterComponent.js';\nimport { OverlayPanel } from '../OverlayPanel.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component handles rendering a panel with body/footer content.\n */\nfunction BodyAndFooterPanelComponent(props) {\n    const { isOpen, isMessageForInput, localMessageItem, eventName, eventDescription, overlayPanelName, className, title, useAITheme, requestFocus, onClickBack, onClose, onClickRestart, onCloseAndRestart, onPanelOpenEnd, onPanelCloseEnd, onPanelOpenStart, onPanelCloseStart, } = props;\n    const languagePack = useLanguagePack();\n    const serviceManager = useServiceManager();\n    const originalMessage = useSelector((state) => state.allMessagesByID[localMessageItem?.fullMessageID]);\n    const showAnimations = props.showAnimations ?? true;\n    const disableAnimation = !showAnimations;\n    const openAnimation = disableAnimation\n        ? AnimationInType.NONE\n        : AnimationInType.SLIDE_IN_FROM_BOTTOM;\n    const closeAnimation = disableAnimation\n        ? AnimationOutType.NONE\n        : AnimationOutType.SLIDE_OUT_TO_BOTTOM;\n    return (React.createElement(OverlayPanel, { className: \"WAC__overlay--covering\", onOpenStart: onPanelOpenStart, onOpenEnd: onPanelOpenEnd, onCloseStart: onPanelCloseStart, onCloseEnd: onPanelCloseEnd, animationOnOpen: openAnimation, animationOnClose: closeAnimation, shouldOpen: isOpen, serviceManager: serviceManager, overlayPanelName: overlayPanelName },\n        React.createElement(BasePanelComponentExport, { className: cx(\"WACBodyAndFooterComponent\", className), eventName: eventName, eventDescription: eventDescription, isOpen: isOpen, title: title, disableAnimation: disableAnimation, useAITheme: useAITheme, labelBackButton: languagePack.general_returnToAssistant, onClickBack: onClickBack, onClickClose: onClose, onClickRestart: onClickRestart, onClickCloseAndRestart: onCloseAndRestart }, originalMessage && (React.createElement(BodyWithFooterComponent, { localMessageItem: localMessageItem, fullMessage: originalMessage, isMessageForInput: isMessageForInput, requestFocus: requestFocus })))));\n}\n\nexport { BodyAndFooterPanelComponent };\n"],"names":["BodyAndFooterPanelComponent","props","isOpen","isMessageForInput","localMessageItem","eventName","eventDescription","overlayPanelName","className","title","useAITheme","requestFocus","onClickBack","onClose","onClickRestart","onCloseAndRestart","onPanelOpenEnd","onPanelCloseEnd","onPanelOpenStart","onPanelCloseStart","languagePack","useLanguagePack","serviceManager","useServiceManager","originalMessage","useSelector","state","allMessagesByID","fullMessageID","disableAnimation","showAnimations","openAnimation","AnimationInType","NONE","SLIDE_IN_FROM_BOTTOM","closeAnimation","AnimationOutType","SLIDE_OUT_TO_BOTTOM","React","OverlayPanel","onOpenStart","onOpenEnd","onCloseStart","onCloseEnd","animationOnOpen","animationOnClose","shouldOpen","BasePanelComponentExport","cx","labelBackButton","general_returnToAssistant","onClickClose","onClickCloseAndRestart","BodyWithFooterComponent","fullMessage"],"sourceRoot":""}