{"version":3,"file":"2868.bundle.js","mappings":";gTA6BI,MAAMA,EAAiB,CAAEC,EAAAA,GAAMC,EAAAA,IAE7BC,EAA6C,CACjD,CAACC,EAAAA,EAAoBC,QAAS,GAC9B,CAACD,EAAAA,EAAoBE,UAAW,GAChC,CAACF,EAAAA,EAAoBG,MAAO,IAG9B,SAASC,GAAUC,SAAUA,EAAUC,UAAWA,EAAWC,aAAcA,EAAcC,cAAeA,IACtG,MAAMC,GAAOC,EAAAA,EAAAA,MACNC,uBAAwBA,EAAwBC,uBAAwBA,IAA0BC,EAAAA,EAAAA,KACnGC,GAAsBC,EAAAA,EAAAA,IAAYC,GAASA,EAAMF,sBAChDG,EAAYC,IAAiBC,EAAAA,EAAAA,aAC7BC,EAAgBC,IAAqBF,EAAAA,EAAAA,aACrCG,EAAoBC,IAAyBJ,EAAAA,EAAAA,UAAS,GAKvDK,EAAkBC,EAAAA,SAAeC,MAAMrB,GACvCsB,EAAelB,EAAKmB,cAAc,CACtCC,GAAI,kCACH,CACDP,mBAAoBA,EACpBE,gBAAiBA,IAEnB,OAAIA,GAAmB,EACdC,EAAAA,cAAoB,MAAO,CAChCK,UAAW,uDACVzB,GAEEoB,EAAAA,cAAoB,MAAO,CAChCK,UAAW,wBACVb,GAAcQ,EAAAA,cAAoBM,EAAAA,GAAQ,CAC3CC,IAAK1B,EACLC,aAAcA,EACd0B,QAASrC,EACTsC,WAAY,CACVC,OAAQf,EACRgB,OAAQnB,GAEVoB,cAAe,OACfC,aAAcvC,EAA2Ce,GACzDN,cA5BF,UAAgC+B,YAAaA,IAC3ChB,EAAsBgB,EAAc,GACpC/B,IAAgB+B,EAClB,EA0BEC,mBAAoBzC,EAA2Ce,GAC/D2B,kBAAmB,GACnBC,QAAQ,GACPjB,EAAAA,SAAekB,IAAItC,EAAUuC,GAASnB,EAAAA,cAAoBoB,EAAAA,GAAa,CACxEC,IAAKF,EAAME,IACXhB,UAAW,gCAAgChB,KAC1C8B,KAAUnB,EAAAA,cAAoB,MAAO,CACtCK,UAAW,mCAAmChB,KAC7CW,EAAAA,cAAoB,MAAO,CAC5BK,UAAW,oCACVL,EAAAA,cAAoBsB,EAAAA,IAAQ,CAC7Bf,IAAKX,EACLS,UAAW,sEACXkB,KAAMC,EAAAA,GAAeC,MACrB,aAAcvC,GACbc,EAAAA,cAAoB0B,EAAAA,EAAa,OAAQ1B,EAAAA,cAAoB,MAAO,CACrEK,UAAW,sCACVH,GAAeF,EAAAA,cAAoBsB,EAAAA,IAAQ,CAC5Cf,IAAKd,EACLY,UAAW,sEACXkB,KAAMC,EAAAA,GAAeC,MACrB,aAActC,GACba,EAAAA,cAAoB2B,EAAAA,EAAc,SACvC,C","sources":["webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/carousel/Carousel.js"],"sourcesContent":["import ChevronLeft from \"@carbon/icons-react/es/ChevronLeft.js\";\n\nimport ChevronRight from \"@carbon/icons-react/es/ChevronRight.js\";\n\nimport { Button } from \"@carbon/react\";\n\nimport React, { useState } from \"react\";\n\nimport { useIntl } from \"react-intl\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { A11y, Navigation } from \"swiper/modules\";\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\nimport { useLanguagePack } from \"../../../hooks/useLanguagePack.js\";\n\nimport { ChatWidthBreakpoint } from \"../../../../../types/state/AppState.js\";\n\nimport { ButtonKindEnum } from \"../../../../../types/utilities/carbonTypes.js\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const SWIPER_MODULES = [ A11y, Navigation ];\n\nconst MESSAGE_RECEIVED_LEFT_MARGIN_BY_BREAKPOINT = {\n  [ChatWidthBreakpoint.NARROW]: 16,\n  [ChatWidthBreakpoint.STANDARD]: 56,\n  [ChatWidthBreakpoint.WIDE]: 56\n};\n\nfunction Carousel({children: children, swiperRef: swiperRef, initialSlide: initialSlide, onSlideChange: onSlideChange}) {\n  const intl = useIntl();\n  const {carousel_prevNavButton: carousel_prevNavButton, carousel_nextNavButton: carousel_nextNavButton} = useLanguagePack();\n  const chatWidthBreakpoint = useSelector(state => state.chatWidthBreakpoint);\n  const [nextButton, setNextButton] = useState();\n  const [previousButton, setPreviousButton] = useState();\n  const [currentSlideNumber, setCurrentSlideNumber] = useState(1);\n  function onSlideChangeInternal({activeIndex: activeIndex}) {\n    setCurrentSlideNumber(activeIndex + 1);\n    onSlideChange?.(activeIndex);\n  }\n  const totalSlideCount = React.Children.count(children);\n  const currentLabel = intl.formatMessage({\n    id: \"components_swiper_currentLabel\"\n  }, {\n    currentSlideNumber: currentSlideNumber,\n    totalSlideCount: totalSlideCount\n  });\n  if (totalSlideCount <= 1) {\n    return React.createElement(\"div\", {\n      className: \"WACCarouselContainer WACCarouselContainer--oneSlide\"\n    }, children);\n  }\n  return React.createElement(\"div\", {\n    className: \"WACCarouselContainer\"\n  }, nextButton && React.createElement(Swiper, {\n    ref: swiperRef,\n    initialSlide: initialSlide,\n    modules: SWIPER_MODULES,\n    navigation: {\n      prevEl: previousButton,\n      nextEl: nextButton\n    },\n    slidesPerView: \"auto\",\n    spaceBetween: MESSAGE_RECEIVED_LEFT_MARGIN_BY_BREAKPOINT[chatWidthBreakpoint],\n    onSlideChange: onSlideChangeInternal,\n    slidesOffsetBefore: MESSAGE_RECEIVED_LEFT_MARGIN_BY_BREAKPOINT[chatWidthBreakpoint],\n    slidesOffsetAfter: 16,\n    rewind: true\n  }, React.Children.map(children, child => React.createElement(SwiperSlide, {\n    key: child.key,\n    className: `WACCarouselContainer__Slide--${chatWidthBreakpoint}`\n  }, child))), React.createElement(\"div\", {\n    className: `WACCarouselContainer__Controls--${chatWidthBreakpoint}`\n  }, React.createElement(\"div\", {\n    className: \"WACCarouselContainer__Navigation\"\n  }, React.createElement(Button, {\n    ref: setPreviousButton,\n    className: \"WACCarouselContainer__NavigationButton WACDirectionHasReversibleSVG\",\n    kind: ButtonKindEnum.GHOST,\n    \"aria-label\": carousel_prevNavButton\n  }, React.createElement(ChevronLeft, null)), React.createElement(\"div\", {\n    className: \"WACCarouselContainer__CurrentLabel\"\n  }, currentLabel), React.createElement(Button, {\n    ref: setNextButton,\n    className: \"WACCarouselContainer__NavigationButton WACDirectionHasReversibleSVG\",\n    kind: ButtonKindEnum.GHOST,\n    \"aria-label\": carousel_nextNavButton\n  }, React.createElement(ChevronRight, null)))));\n}\n\nexport { Carousel as default };\n"],"names":["SWIPER_MODULES","A11y","Navigation","MESSAGE_RECEIVED_LEFT_MARGIN_BY_BREAKPOINT","ChatWidthBreakpoint","NARROW","STANDARD","WIDE","Carousel","children","swiperRef","initialSlide","onSlideChange","intl","useIntl","carousel_prevNavButton","carousel_nextNavButton","useLanguagePack","chatWidthBreakpoint","useSelector","state","nextButton","setNextButton","useState","previousButton","setPreviousButton","currentSlideNumber","setCurrentSlideNumber","totalSlideCount","React","count","currentLabel","formatMessage","id","className","Swiper","ref","modules","navigation","prevEl","nextEl","slidesPerView","spaceBetween","activeIndex","slidesOffsetBefore","slidesOffsetAfter","rewind","map","child","SwiperSlide","key","Button","kind","ButtonKindEnum","GHOST","ChevronLeft","ChevronRight"],"sourceRoot":""}