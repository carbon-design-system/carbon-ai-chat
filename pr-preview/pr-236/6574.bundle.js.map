{"version":3,"file":"6574.bundle.js","mappings":"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","sources":["webpack://@carbon/ai-chat-examples-demo/../node_modules/@carbon/icons-react/es/SendFilled.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/stopStreamingButton/src/stopStreamingButton.template.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/@carbon/icons/es/stop--filled/16.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/stopStreamingButton/src/StopStreamingButtonElement.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/stopStreamingButton/src/stopStreamingButton.scss.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/stopStreamingButton/cds-aichat-stop-streaming-button.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/react/components/stopStreamingButton/StopStreamingButton.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/utils/ListenerList.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/text/TextArea.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/input/Input.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Code generated by @carbon/icon-build-helpers. DO NOT EDIT.\n */\nimport React from 'react';\nimport Icon from './Icon.js';\nimport { i as iconPropTypes } from './iconPropTypes-4cbeb95d.js';\nimport '@carbon/icon-helpers';\nimport 'prop-types';\n\nvar _path;\nconst SendFilled = /*#__PURE__*/React.forwardRef(function SendFilled({\n  children,\n  size = 16,\n  ...rest\n}, ref) {\n  return /*#__PURE__*/React.createElement(Icon, {\n    width: size,\n    height: size,\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    fill: \"currentColor\",\n    ...rest\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.45,15.11l-22-11a1,1,0,0,0-1.08.12,1,1,0,0,0-.33,1L6.69,15H18v2H6.69L4,26.74A1,1,0,0,0,5,28a1,1,0,0,0,.45-.11l22-11a1,1,0,0,0,0-1.78Z\"\n  })), children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  SendFilled.propTypes = iconPropTypes;\n}\n\nexport { SendFilled as default };\n","import '@carbon/web-components/es-custom/components/icon-button/index.js';\nimport { toString } from '@carbon/icon-helpers';\nimport StopFilled16 from '@carbon/icons/es/stop--filled/16.js';\nimport { html } from 'lit';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\nimport { CSS_CLASS_PREFIX } from '../../../settings.js';\nimport { ButtonKindEnum, ButtonSizeEnum } from '../../../../../types/utilities/carbonTypes.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst StopFilled16svg = toString(StopFilled16);\nfunction stopStreamingButtonTemplate({ label, disabled, tooltipAlignment, onClick, }) {\n    return html `\n    <cds-custom-icon-button\n      class=\"${CSS_CLASS_PREFIX}-stop-streaming-button\"\n      align=\"${tooltipAlignment}\"\n      kind=\"${ButtonKindEnum.GHOST}\"\n      size=\"${ButtonSizeEnum.SMALL}\"\n      ?disabled=${disabled}\n      @click=\"${onClick}\"\n    >\n      <span\n        class=\"${disabled ? `${CSS_CLASS_PREFIX}-stop-icon` : \"\"}\"\n        slot=\"icon\"\n        >${unsafeSVG(StopFilled16svg)}</span\n      >\n      <span slot=\"tooltip-content\">${label}</span>\n    </cds-custom-icon-button>\n  `;\n}\n\nexport { stopStreamingButtonTemplate };\n","/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Code generated by @carbon/icon-build-helpers. DO NOT EDIT.\n */\nvar _16 = {\n  \"elem\": \"svg\",\n  \"attrs\": {\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"viewBox\": \"0 0 16 16\",\n    \"fill\": \"currentColor\",\n    \"width\": 16,\n    \"height\": 16\n  },\n  \"content\": [{\n    \"elem\": \"path\",\n    \"attrs\": {\n      \"d\": \"M8,1C4.1,1,1,4.1,1,8s3.1,7,7,7s7-3.1,7-7S11.9,1,8,1z M11,10c0,0.6-0.4,1-1,1H6c-0.6,0-1-0.4-1-1V6c0-0.6,0.4-1,1-1h4\\tc0.6,0,1,0.4,1,1V10z\"\n    }\n  }],\n  \"name\": \"stop--filled\",\n  \"size\": 16\n};\n\nexport { _16 as default };\n","import { __decorate } from 'tslib';\nimport { bind } from 'bind-decorator';\nimport { LitElement, unsafeCSS, css } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport css_248z from './stopStreamingButton.scss.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nclass StopStreamingButtonElement extends LitElement {\n    /**\n     * Called when the user clicks the stop streaming button.\n     */\n    _handleOnClick() {\n        this.onClick();\n    }\n}\nStopStreamingButtonElement.styles = css `\n    ${unsafeCSS(css_248z)}\n  `;\n__decorate([\n    property({ type: String, attribute: \"label\" })\n], StopStreamingButtonElement.prototype, \"label\", void 0);\n__decorate([\n    property({ type: String, attribute: \"tooltip-alignment\" })\n], StopStreamingButtonElement.prototype, \"tooltipAlignment\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"disabled\" })\n], StopStreamingButtonElement.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Object })\n], StopStreamingButtonElement.prototype, \"onClick\", void 0);\n__decorate([\n    bind\n], StopStreamingButtonElement.prototype, \"_handleOnClick\", null);\n\nexport { StopStreamingButtonElement };\n","var css_248z = \".cds--aichat-stop-icon svg{\\n  fill:var(--cds-icon-disabled, rgba(22, 22, 22, 0.25));\\n}\";\n\nexport { css_248z as default };\n","import { __decorate } from 'tslib';\nimport { carbonElement } from '../../decorators/customElement.js';\nimport { stopStreamingButtonTemplate } from './src/stopStreamingButton.template.js';\nimport { StopStreamingButtonElement } from './src/StopStreamingButtonElement.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst STOP_STREAMING_BUTTON_TAG_NAME = \"cds-aichat-stop-streaming-button\";\n/**\n * Constructed class functionality for the stop streaming button.\n */\nlet CDSChatStopStreamingButtonElement = class CDSChatStopStreamingButtonElement extends StopStreamingButtonElement {\n    render() {\n        return stopStreamingButtonTemplate(this);\n    }\n};\nCDSChatStopStreamingButtonElement = __decorate([\n    carbonElement(STOP_STREAMING_BUTTON_TAG_NAME)\n], CDSChatStopStreamingButtonElement);\n\nexport { CDSChatStopStreamingButtonElement as default };\n","import { createComponent } from '@lit/react';\nimport React from 'react';\nimport CDSChatStopStreamingButtonElement from '../../../web-components/components/stopStreamingButton/cds-aichat-stop-streaming-button.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst StopStreamingButton = createComponent({\n    tagName: \"cds-aichat-stop-streaming-button\",\n    elementClass: CDSChatStopStreamingButtonElement,\n    react: React,\n});\n\nexport { StopStreamingButton };\n","/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * A simple class that can track a set of listeners and then fire them when needed.\n */\nclass ListenerList {\n    constructor() {\n        /**\n         * The current set of listeners.\n         */\n        this.listeners = [];\n    }\n    /**\n     * Adds the given listener to the list.\n     */\n    addListener(listenerToAdd) {\n        this.listeners = [...this.listeners, listenerToAdd];\n    }\n    /**\n     * Removes all occurrences of the given listener from the list.\n     */\n    removeListener(listenerToRemove) {\n        this.listeners = this.listeners.filter((listener) => listener !== listenerToRemove);\n    }\n    /**\n     * Calls all the listeners in the list passing each the given arguments.\n     */\n    fireListeners(...args) {\n        if (this.listeners.length) {\n            this.listeners.forEach((listener) => listener(...args));\n        }\n    }\n}\n\nexport { ListenerList };\n","import cx from 'classnames';\nimport React, { PureComponent } from 'react';\nimport { doFocusRef } from '../../../utils/domUtils.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This file contains a text area component which, if specified, will resize its height to match its content.\n *\n * To perform the auto-size functionality, this component will render a second hidden element that is underneath the\n * text area that has the same text content as the text area. This hidden component will set the size of the container\n * element. The textarea itself is set to width/height of 100% which means it will size automatically to the container.\n *\n * This works without needed any javascript to maintain the textarea but the downside is that the styling of the\n * textarea must match the hidden area. If you find your textarea is either too big or too small, then check to make\n * sure the styling for the two components matches.\n */\nclass TextArea extends PureComponent {\n    constructor() {\n        super(...arguments);\n        /**\n         * A React ref to the TextArea component.\n         */\n        this.textAreaRef = React.createRef();\n    }\n    /**\n     * Returns the HTML element.\n     */\n    getHTMLElement() {\n        return this.textAreaRef.current;\n    }\n    /**\n     * Instructs this component to put focus into the input text area.\n     */\n    takeFocus() {\n        doFocusRef(this.textAreaRef, false, true);\n    }\n    /**\n     * Causes the text area to blur.\n     */\n    doBlur() {\n        this.textAreaRef.current.blur();\n    }\n    render() {\n        const { isRequired, name, id, onFocus, onBlur, onClick, onChange, onKeyDown, rows, value, autoSize, maxLength, disabled, placeholder, ariaLabel, testId, onSelect, } = this.props;\n        // The extra ' ' in the sizer div below makes sure there's at least a space in the area to ensure that we get a\n        // min-height of one line of text.\n        return (React.createElement(\"div\", { className: cx(\"WAC__TextArea\", {\n                \"WAC__TextArea--autoSize\": autoSize,\n                \"WAC__TextArea--disabled\": disabled,\n            }) },\n            React.createElement(\"textarea\", { ref: this.textAreaRef, \"aria-label\": ariaLabel, \"aria-required\": isRequired, className: \"WAC__TextArea-textarea\", disabled: disabled, id: id, maxLength: maxLength, name: name, onFocus: onFocus, onBlur: onBlur, onClick: onClick, onChange: onChange, onKeyDown: onKeyDown, onSelect: onSelect, placeholder: placeholder, rows: rows, value: value || \"\", \"data-enable-grammarly\": false, \"data-test-id\": testId }),\n            autoSize && (React.createElement(\"div\", { className: \"WAC__TextArea-sizer\" }, value || placeholder || \" \"))));\n    }\n}\nTextArea.defaultProps = {\n    // Default value for whether input in the text area is required before form submission.\n    isRequired: false,\n    // Default max character length for a text area is 10,000 characters.\n    maxLength: 10000,\n};\n\nexport { TextArea as default };\n","import Attachment from '@carbon/icons-react/es/Attachment.js';\nimport Send from '@carbon/icons-react/es/Send.js';\nimport SendFilled from '@carbon/icons-react/es/SendFilled.js';\nimport { FileUploaderItem, Button } from '@carbon/react';\nimport cx from 'classnames';\nimport React, { forwardRef, useState, useRef, useImperativeHandle } from 'react';\nimport { StopStreamingButton } from '../../../react/components/stopStreamingButton/StopStreamingButton.js';\nimport { useCounter } from '../../hooks/useCounter.js';\nimport actions from '../../store/actions.js';\nimport { selectIsInputToAgent } from '../../store/selectors.js';\nimport { IS_MOBILE } from '../../utils/browserUtils.js';\nimport '../../utils/constants.js';\nimport { isEnterKey } from '../../utils/domUtils.js';\nimport { uuid } from '../../utils/lang/uuid.js';\nimport { ListenerList } from '../../utils/ListenerList.js';\nimport { isValidForUpload } from '../../utils/miscUtils.js';\nimport TextArea from '../responseTypes/text/TextArea.js';\nimport { ButtonSizeEnum, ButtonKindEnum } from '../../../../types/utilities/carbonTypes.js';\nimport { BusEventType } from '../../../../types/events/eventBusTypes.js';\nimport { FileStatusValue } from '../../../../types/instance/apiTypes.js';\nimport { UUIDType } from '../../utils/lang/UUIDType.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * The size of the gap between input changes before we indicate that the user has stopped typing.\n */\nconst STOP_TYPING_PERIOD = 5000;\n/**\n * The maximum number of characters to all the user to enter into the input field. The number was chosen to match\n * the limit imposed by the API.\n */\nconst INPUT_MAX_CHARS = 2048;\nfunction Input(props, ref) {\n    const { inputType, isInputVisible, placeholder, disableInput, disableSend, disableUploadButton, pendingUploads, allowedFileUploadTypes, allowMultipleFileUploads, showUploadButton, onFilesSelectedForUpload, onSendInput, blurOnSend, serviceManager, onUserTyping, languagePack, isStopStreamingButtonVisible, isStopStreamingButtonDisabled, } = props;\n    const inputID = `${serviceManager.namespace.suffix}-${useCounter()}`;\n    // Indicates if the text area currently has focus.\n    const [textAreaHasFocus, setTextAreaHasFocus] = useState(false);\n    // The current controlled value of the text area.\n    const [inputValue, setInputValue] = useState(\"\");\n    // Indicates if handling of the enter key is enabled or not. If it's enabled, this component will call the\n    // onSendInput prop when a press of the enter key is detected.\n    const enterKeyEnabled = useRef(true);\n    // Indicates the user is currently typing.\n    const isTypingTimeout = useRef(null);\n    // A React ref to the TextArea component.\n    const textAreaRef = useRef();\n    // A React ref to the file Input element.\n    const fileInputRef = useRef();\n    // An array of functions that will be called when the text value changes.\n    const changeListeners = useRef(new ListenerList());\n    // The last text value that was sent to the change listeners.\n    const lastValue = useRef(\"\");\n    // The reusable {@link InstanceInputElement} object that allows access and control over the input.\n    const instanceInputElement = useRef(createInstanceInputElement());\n    /**\n     * This is called when we have detected that the user has stopped typing.\n     */\n    function doTypingStopped() {\n        if (isTypingTimeout.current) {\n            clearTimeout(isTypingTimeout.current);\n            isTypingTimeout.current = null;\n            onUserTyping?.(false);\n        }\n    }\n    /**\n     * This is a callback which is called on each keydown event that occurs on the text area. This is used to capture\n     * the enter key, so we can send the entered text to the server.\n     */\n    function onKeyDown(event) {\n        if (isEnterKey(event)) {\n            if (disableSend || !enterKeyEnabled.current) {\n                // If sending is disabled, stop the field from inserting a newline into the field.\n                event.preventDefault();\n            }\n            else {\n                send(event);\n            }\n        }\n    }\n    /**\n     * This is a callback which is called when a change event occurs on the textarea inside this input.\n     */\n    function onChange(event) {\n        const inputText = event.target.value;\n        if (onUserTyping) {\n            if (!isTypingTimeout.current) {\n                onUserTyping(true);\n            }\n            else {\n                clearTimeout(isTypingTimeout.current);\n            }\n            isTypingTimeout.current = setTimeout(doTypingStopped, STOP_TYPING_PERIOD);\n        }\n        setInputValue(inputText);\n    }\n    function send(event) {\n        if (doHasValidInput()) {\n            event.preventDefault();\n            doTypingStopped();\n            const text = inputValue.trim();\n            onSendInput(text);\n            // Reset the value of the field.\n            setInputValue(\"\");\n            if (blurOnSend) {\n                textAreaRef.current.doBlur();\n            }\n            else {\n                textAreaRef.current.takeFocus();\n            }\n        }\n    }\n    /**\n     * Called when the input field gets focus.\n     */\n    function onInputFocus() {\n        setTextAreaHasFocus(true);\n    }\n    /**\n     * Called when the input field loses focus.\n     */\n    function onInputBlur() {\n        setTextAreaHasFocus(false);\n    }\n    /**\n     * Instructs this component to put focus into the input text area. This only applies to desktop devices.\n     */\n    function takeFocus() {\n        if (!IS_MOBILE && isInputVisible) {\n            textAreaRef.current.takeFocus();\n        }\n    }\n    /**\n     * Creates an instance of {@link InstanceInputElement}.\n     */\n    function createInstanceInputElement() {\n        return {\n            getHTMLElement: () => textAreaRef?.current?.getHTMLElement(),\n            setValue: (value) => setInputValue(value),\n            setEnableEnterKey: (isEnabled) => {\n                enterKeyEnabled.current = isEnabled;\n            },\n            addChangeListener: (listener) => changeListeners.current.addListener(listener),\n            removeChangeListener: (listener) => changeListeners.current.removeListener(listener),\n        };\n    }\n    /**\n     * Given a base string, add modifiers to an element id to ensure it is unique based off of context.\n     */\n    function getElementId(baseId, isTestingId) {\n        const elementID = baseId;\n        const withInputType = inputType ? `--${inputType}` : \"\";\n        const withNamespace = isTestingId ? \"\" : serviceManager.namespace.suffix;\n        return `${elementID}${withInputType}${withNamespace}`;\n    }\n    /**\n     * The callback that is called when the user removes a file from the upload area.\n     */\n    function onRemoveFile(fileID) {\n        const isInputToAgent = selectIsInputToAgent(serviceManager.store.getState());\n        serviceManager.store.dispatch(actions.removeFileUpload(fileID, isInputToAgent));\n        // After we remove the file, we need to move focus back to the input field.\n        textAreaRef.current.takeFocus();\n    }\n    /**\n     * The callback that is called when the user selects a file using the file input.\n     */\n    function onFileChange(event) {\n        const isInputToAgent = selectIsInputToAgent(serviceManager.store.getState());\n        const { dispatch } = serviceManager.store;\n        const { files } = event.target;\n        const newFiles = [];\n        for (let index = 0; index < files.length; index++) {\n            const newFile = {\n                id: uuid(UUIDType.FILE),\n                status: FileStatusValue.EDIT,\n                file: files[index],\n            };\n            newFiles.push(newFile);\n            dispatch(actions.addInputFile(newFile, isInputToAgent));\n        }\n        onFilesSelectedForUpload?.(newFiles);\n        // Clear the file input. We're controlling the file list.\n        fileInputRef.current.value = null;\n    }\n    /**\n     * Determines if there is anything valid that the user could send.\n     */\n    function doHasValidInput() {\n        const hasUploads = Boolean(pendingUploads?.length);\n        if (hasUploads) {\n            if (pendingUploads.find((upload) => !isValidForUpload(upload))) {\n                // If there are any files that are in error, the user cannot send the message.\n                return false;\n            }\n        }\n        return Boolean(inputValue.trim()) || hasUploads;\n    }\n    // If the input field becomes disabled, we don't get a blur event so make sure to remove the focus indicator.\n    if (textAreaHasFocus && disableInput) {\n        setTextAreaHasFocus(false);\n    }\n    useImperativeHandle(ref, () => ({\n        takeFocus,\n        getMessageInput: () => instanceInputElement.current,\n    }));\n    const { input_buttonLabel, input_placeholder, input_ariaLabel, input_uploadButtonLabel, input_stopResponse, } = languagePack;\n    const useInputValue = disableInput ? \"\" : inputValue;\n    const hasValidInput = doHasValidInput();\n    const showDisabledSend = !hasValidInput || disableInput || disableSend;\n    const showUploadButtonDisabled = disableUploadButton || disableInput;\n    const uploadButtonID = `WACInputContainer__UploadInput-${inputID}`;\n    const isRTL = document.dir === \"rtl\";\n    // If the input field is disabled, don't show a placeholder (unless one is provided).\n    const usePlaceHolder = placeholder || (disableInput ? undefined : input_placeholder);\n    if (lastValue.current !== inputValue) {\n        lastValue.current = inputValue;\n        changeListeners.current.fireListeners(inputValue);\n    }\n    return (isInputVisible && (React.createElement(\"div\", { className: \"WACInputAndCompletions\" },\n        React.createElement(\"div\", { className: cx(\"WACInputContainer\", {\n                \"WACInputContainer--hasFocus\": textAreaHasFocus,\n                \"WACInputContainer--showUploadButton\": showUploadButton,\n            }) },\n            React.createElement(\"div\", { className: \"WACInputContainer__LeftContainer\" },\n                React.createElement(\"div\", { className: \"WACInputContainer__TextAndUpload\" },\n                    showUploadButton && (React.createElement(\"div\", { className: \"WACInputContainer__UploadButtonContainer\" },\n                        React.createElement(\"input\", { ref: fileInputRef, accept: allowedFileUploadTypes, id: uploadButtonID, className: \"WACVisuallyHidden WACInputContainer__UploadInput\", type: \"file\", \"aria-label\": input_uploadButtonLabel, onChange: onFileChange, multiple: allowMultipleFileUploads, disabled: showUploadButtonDisabled }),\n                        React.createElement(\"label\", { className: cx(\"WACInputContainer__UploadButton\", {\n                                \"WACInputContainer__UploadButton--disabled\": showUploadButtonDisabled,\n                            }), htmlFor: uploadButtonID },\n                            React.createElement(Attachment, null)))),\n                    React.createElement(TextArea, { autoSize: true, ariaLabel: input_ariaLabel, disabled: disableInput, maxLength: INPUT_MAX_CHARS, onChange: onChange, onKeyDown: onKeyDown, placeholder: usePlaceHolder, value: useInputValue, ref: textAreaRef, onFocus: onInputFocus, onBlur: onInputBlur, id: getElementId(\"WACInputContainer-TextArea\"), testId: getElementId(\"WACInputContainer-TextArea\", true) })),\n                Boolean(pendingUploads?.length) && (React.createElement(\"div\", { className: \"WACInputContainer__FilesContainer\" }, pendingUploads.map((fileUpload, index) => {\n                    return (React.createElement(FileUploaderItem\n                    // eslint-disable-next-line react/no-array-index-key\n                    , { \n                        // eslint-disable-next-line react/no-array-index-key\n                        key: index, iconDescription: languagePack.fileSharing_removeButtonTitle, name: fileUpload.file.name, status: FileStatusValue.EDIT, errorSubject: fileUpload.errorMessage, invalid: fileUpload.isError, size: ButtonSizeEnum.SMALL, onDelete: () => onRemoveFile(fileUpload.id) }));\n                })))),\n            React.createElement(\"div\", { className: \"WACInputContainer__SendButtonContainer\" },\n                isStopStreamingButtonVisible && (React.createElement(StopStreamingButton, { label: input_stopResponse, disabled: isStopStreamingButtonDisabled, tooltipAlignment: \"top\", onClick: () => {\n                        const { store } = serviceManager;\n                        store.dispatch(actions.setStopStreamingButtonDisabled(true));\n                        serviceManager.fire({ type: BusEventType.STOP_STREAMING });\n                    } })),\n                React.createElement(Button, { className: \"WACInputContainer__SendButton\", kind: ButtonKindEnum.GHOST, size: ButtonSizeEnum.SMALL, id: getElementId(\"WACInputContainer__SendButton\"), type: \"button\", onClick: send, \"aria-label\": input_buttonLabel, disabled: showDisabledSend, renderIcon: hasValidInput ? SendFilled : Send, iconDescription: input_buttonLabel, tooltipAlignment: isRTL ? \"start\" : \"end\", tooltipPosition: \"top\", hasIconOnly: true }))))));\n}\nconst InputExport = React.memo(forwardRef(Input));\n\nexport { InputExport as Input };\n"],"names":["_path","SendFilled","children","size","rest","ref","Icon","width","height","xmlns","viewBox","fill","d","StopFilled16svg","toString","StopStreamingButtonElement","LitElement","_handleOnClick","this","onClick","styles","css","unsafeCSS","__decorate","property","type","String","attribute","prototype","Boolean","Object","bind","CDSChatStopStreamingButtonElement","render","label","disabled","tooltipAlignment","html","CSS_CLASS_PREFIX","ButtonKindEnum","GHOST","ButtonSizeEnum","SMALL","unsafeSVG","stopStreamingButtonTemplate","carbonElement","StopStreamingButton","createComponent","tagName","elementClass","react","React","ListenerList","constructor","listeners","addListener","listenerToAdd","removeListener","listenerToRemove","filter","listener","fireListeners","args","length","forEach","TextArea","PureComponent","super","arguments","textAreaRef","getHTMLElement","current","takeFocus","doFocusRef","doBlur","blur","isRequired","name","id","onFocus","onBlur","onChange","onKeyDown","rows","value","autoSize","maxLength","placeholder","ariaLabel","testId","onSelect","props","className","cx","defaultProps","Input","inputType","isInputVisible","disableInput","disableSend","disableUploadButton","pendingUploads","allowedFileUploadTypes","allowMultipleFileUploads","showUploadButton","onFilesSelectedForUpload","onSendInput","blurOnSend","serviceManager","onUserTyping","languagePack","isStopStreamingButtonVisible","isStopStreamingButtonDisabled","inputID","namespace","suffix","useCounter","textAreaHasFocus","setTextAreaHasFocus","useState","inputValue","setInputValue","enterKeyEnabled","useRef","isTypingTimeout","fileInputRef","changeListeners","lastValue","instanceInputElement","setValue","setEnableEnterKey","isEnabled","addChangeListener","removeChangeListener","doTypingStopped","clearTimeout","send","event","doHasValidInput","preventDefault","text","trim","IS_MOBILE","getElementId","baseId","isTestingId","hasUploads","find","upload","isValidForUpload","useImperativeHandle","getMessageInput","input_buttonLabel","input_placeholder","input_ariaLabel","input_uploadButtonLabel","input_stopResponse","useInputValue","hasValidInput","showDisabledSend","showUploadButtonDisabled","uploadButtonID","isRTL","document","dir","usePlaceHolder","undefined","accept","isInputToAgent","selectIsInputToAgent","store","getState","dispatch","files","target","newFiles","index","newFile","uuid","UUIDType","FILE","status","FileStatusValue","EDIT","file","push","actions","addInputFile","multiple","htmlFor","Attachment","inputText","setTimeout","isEnterKey","map","fileUpload","FileUploaderItem","key","iconDescription","fileSharing_removeButtonTitle","errorSubject","errorMessage","invalid","isError","onDelete","fileID","removeFileUpload","onRemoveFile","setStopStreamingButtonDisabled","fire","BusEventType","STOP_STREAMING","Button","kind","renderIcon","Send","tooltipPosition","hasIconOnly","InputExport","forwardRef"],"sourceRoot":""}