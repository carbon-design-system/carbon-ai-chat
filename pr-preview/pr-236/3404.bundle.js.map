{"version":3,"file":"3404.bundle.js","mappings":";mJAcA,SAASA,EAAMC,GACX,OAAOA,OACX,CAIA,SAASC,EAAMD,GACX,OAAIA,EAAQ,GAAM,CAItB,C,kKCRA,SAASE,GAAoB,aAAEC,EAAY,aAAEC,IACzC,IAAIC,EACAC,EACAC,EAeJ,OAdKR,EAAAA,EAAAA,GAAMI,GAAcK,sBAIfT,EAAAA,EAAAA,GAAMI,GAAcM,mBAK1BF,EADKJ,GAAcO,QACAP,EAAaO,QAGbN,GAPnBC,EAAkB,wBAClBC,EAAqB,CAAEK,SAAUR,EAAaM,qBAL9CJ,EAAkB,0BAClBC,EAAqB,CAAEM,KAAMT,EAAaK,sBAY1CD,EACOM,EAAAA,cAAoBC,EAAAA,EAAgB,CAAEC,kBAAkB,EAAMC,KAAMT,IAEvEM,EAAAA,cAAoBI,EAAAA,EAAkB,CAAEC,GAAIb,EAAiBc,QAAQC,EAAAA,EAAAA,IAAed,IAChG,C,mGC3BA,SAASe,EAAUC,GACf,OAAOT,EAAAA,cAAoBU,EAAAA,EAAa,CAAEC,UAAWC,EAAG,eAAgBH,EAAME,YAClF,C,cCDA,SAASE,GAAY,KAAEV,IACnB,MAAMW,GAAeC,EAAAA,EAAAA,KACrB,OAAQf,EAAAA,cAAoB,MAAO,CAAEW,UAAW,oBAC5CX,EAAAA,cAAoB,MAAO,CAAEW,UAAW,gCACpCX,EAAAA,cAAoBQ,EAAW,CAAEG,UAAW,4BAChDX,EAAAA,cAAoB,MAAO,CAAEW,UAAW,0BACpCX,EAAAA,cAAoBC,EAAAA,EAAgB,CAAEe,0CAA0C,EAAMb,KAAMA,GAAQW,EAAaG,yBAC7H,C,6GCFA,SAASC,EAAkBT,GACvB,MAAM,UAAEU,EAAS,SAAEC,EAAQ,MAAEC,EAAK,QAAExB,GAAYY,EAC1CK,GAAeC,EAAAA,EAAAA,KACfO,GAAiBC,EAAAA,EAAAA,MACjB,YAAEC,EAAW,YAAEC,IAAgBC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,0BAA0BC,UAAUC,YAChGC,EAAWV,IACZG,EACKV,EAAakB,cACblB,EAAamB,iCACjBC,EAAarC,IACd2B,EACKV,EAAaqB,qBACbrB,EAAasB,mCACjBC,EAAoBvB,EAAawB,uBACvC,IAAIC,EAUJ,OARIA,EADAd,EACqBX,EAAa0B,6BAE7BhB,EACgBV,EAAa2B,wBAGb3B,EAAa4B,8BAE9B1C,EAAAA,cAAoB2C,EAAAA,EAAc,CAAEtB,MAAOU,EAAUlC,QAASqC,EAAYf,UAAWA,EAAWC,SAAUA,EAAUiB,kBAAmBA,EAAmBE,mBAAoBA,EAAoBK,qBAAsBV,EAAYZ,eAAgBA,GAChQ,C,2IC1BA,SAASuB,EAAMpC,GACX,MAAM,WAAEqC,EAAU,MAAEzB,EAAK,YAAE0B,EAAW,WAAEC,EAAU,iBAAEC,EAAgB,kBAAEC,EAAiB,WAAEC,EAAU,OAAEC,GAAY3C,EAC3G4C,GAAgBC,EAAAA,EAAAA,MACfC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GACjCG,GAAUC,EAAAA,EAAAA,UAEVC,GAAuBD,EAAAA,EAAAA,QAAOX,GAC9Ba,EAAUC,QAAQ3C,GAAS0B,GAAeC,GAC1CiB,EAAOd,EAOb,OALAe,EAAAA,EAAAA,WAAU,KACFX,GAAYO,EAAqBK,SACjCd,EAAcO,EAAQO,UAE3B,CAACd,EAAeE,IACfG,EACO1D,EAAAA,cAAoBa,EAAAA,EAAa,CAAEV,KAAM2C,IAEhDM,EACQpD,EAAAA,cAAoBoE,EAAW,IAAK3D,EAAOkD,WAAYA,EAAYH,YAAaA,EAAaE,QAASA,EAASH,SAAUA,IAE7HvD,EAAAA,cAAoBqE,EAAAA,IAAM,CAAEC,IAAKV,EAASjD,UAAWC,EAAG,WAAY,CACpE2D,sBAAuBR,GAAWC,QAAQb,GAC1CqB,oBAAqBvB,IAAqB5B,IAAU0B,GAAeiB,QAAQb,MAE/EnD,EAAAA,cAAoB,MAAO,CAAEW,UAAW,0BACpCX,EAAAA,cAAoBoE,EAAW,IAAK3D,EAAOkD,WAAYA,EAAYH,YAAaA,EAAaE,QAASA,EAASH,SAAUA,KAC7HQ,GAAY/D,EAAAA,cAAoByE,EAAAA,EAAgB,CAAEpD,MAAOA,EAAO0B,YAAaA,EAAaC,WAAYA,EAAY0B,YAAa1B,IAAc2B,EAAAA,EAAAA,IAAe3B,GAAa4B,UAAW3B,IACpLe,QAAQC,IAAUjE,EAAAA,cAAoBiE,EAAM,CAAEtD,UAAWC,EAAG,iBAAkB,+BAAgC,CACtG,uBAAwBoC,MAExC,CACA,SAASoB,GAAU,OAAES,EAAM,MAAExD,EAAK,YAAE0B,EAAW,QAAE+B,EAAO,WAAE9B,EAAU,mBAAE+B,EAAkB,YAAEC,EAAW,WAAEC,EAAU,SAAE1B,EAAQ,QAAEG,EAAO,YAAEF,EAAW,WAAEG,EAAU,UAAEhD,EAAS,OAAEyC,IACtK,MAAO8B,EAAeC,IAAoB1B,EAAAA,EAAAA,WAAS,GAC7C2B,EAAWN,GAAWzD,GAAS0B,GAAe,GAC9CgB,EAAUC,QAAQ3C,GAAS0B,GAAeC,GAI1CqC,GAAcC,EAAAA,EAAAA,aAAY,KACxBP,GAAsBhB,EACtBoB,GAAiB,GAGjBxB,GAAW,IAEhB,CAACoB,EAAoBhB,EAASJ,IAYjC,OATAO,EAAAA,EAAAA,WAAU,KACN,IAAIqB,EAAe,KAInB,OAHKhC,IACDgC,EAAeC,WAAWH,EAAaI,EAAAA,IAEpC,KACHC,aAAaH,KAElB,CAAChC,EAAU8B,IACNrF,EAAAA,cAAoBA,EAAAA,SAAgB,MACvCuD,IACI2B,IACA9B,GACDyB,IACCI,EAAcjF,EAAAA,cAAoB2F,EAAAA,IAAiC,CAAEhF,UAAW,uBAA4BX,EAAAA,cAAoB4F,EAAAA,IAAqB,CAAEjF,UAAW,yBACtK+C,IAAYwB,GAAiBL,GAAW7E,EAAAA,cAAoB,MAAO,CAAEW,UAAWC,EAAG,kBAAmB,CAC/F,CAACD,GAAYA,EACb,0BAA2B4C,IAC3BsC,IAAKhB,EAAQiB,IAAKV,EAAUW,OAAQA,KACpCf,MACAxB,GAAY,IACbwC,QAASX,IACxB,CACA,MAAMY,EAAcjG,EAAAA,KAAW6C,E,6GClD/B,SAASqD,GAAiB,aAAEC,IACxB,OAAIA,GAAgB,cAAeA,GAC3BA,EAAaC,WAAWC,OAAO,GA1B3C,SAA+BC,GAC3B,MAAMC,EAAWD,EAAIE,MAAM,IAAIC,OAAO,aAAc,MAEpD,OAAIrH,EAAAA,EAAAA,GAAMmH,EAASG,QACR,CAACH,EAASI,KAAK,KAEnBJ,EAASK,IAAI,CAACC,EAAYC,KACzB1H,EAAAA,EAAAA,GAAM0H,GACCD,EAIX7G,EAAAA,cAAoB,KAAM,CAAE+G,IAAKD,EAAOnG,UAAW,kBAAoBkG,GAE/E,CAamBG,EAAsBC,EAAAA,EAAAA,IAAsCd,EAAaC,UAAUC,KAAK,KAGnGF,GAAgB,SAAUA,GAAgBA,EAAaE,MAChDa,EAAAA,EAAAA,KAA6CD,EAAAA,EAAAA,IAAsCd,EAAaE,OAEpG,IACX,CACA,MAAMc,EAAyBnH,EAAAA,KAAWkG,GAQ1C,SAASkB,GAAwC,oBAAEC,EAAmB,aAAEC,IACpE,MAAMC,EAAgB,GACtB,IAAIC,EACAC,EAYJ,GAXIJ,GAAqBhB,OAIrBmB,GAH6BN,EAAAA,EAAAA,KAA6CD,EAAAA,EAAAA,IAAsCI,EAAoBhB,OAI/HqB,QAAQ,OAAQ,IAChBA,QAAQ,QAAS,KAEtBJ,GAAcnH,OACdsH,GAAiBP,EAAAA,EAAAA,KAA6CD,EAAAA,EAAAA,IAAsCK,EAAanH,QAEjHqH,GAAgBC,EAAgB,CAChC,MAAME,EAAkBH,EAAaI,QAAQH,IAGpB,IAArBE,IAEAJ,EAAcM,KAAK7H,EAAAA,cAAoB,OAAQ,CAAE+G,IAAK,GAAKS,EAAaM,UAAU,EAAGH,KAErFJ,EAAcM,KAAK7H,EAAAA,cAAoB,KAAM,CAAE+G,IAAK,EAAGpG,UAAW,kBAAoB6G,EAAaM,UAAUH,EAAiBA,EAAkBF,EAAef,UAE/Ja,EAAcM,KAAK7H,EAAAA,cAAoB,OAAQ,CAAE+G,IAAK,GAAKS,EAAaM,UAAUH,EAAkBF,EAAef,UAE3H,CACA,OAAIa,EAAcb,OAGPa,EAEPC,EAAad,OAGN,CAAC1G,EAAAA,cAAoB,OAAQ,CAAE+G,IAAK,iBAAmBS,IAG3D,CAACxH,EAAAA,cAAoB,OAAQ,CAAE+G,IAAK,mBAAqBU,GACpE,CACA,MAAMM,EAAgD/H,EAAAA,KAAWoH,E,gNC3EjE,MAAMY,GAAuBC,EAAAA,EAAAA,MAS7B,SAASC,GAAqB,KAAEC,EAAI,OAAEtD,EAAM,MAAExD,EAAK,YAAE0B,EAAW,UAAEqF,EAAS,WAAEC,EAAU,WAAEC,EAAU,aAAEC,EAAY,QAAEC,EAAO,OAAEC,EAAM,QAAEC,EAAO,iBAAEzF,EAAgB,kBAAEC,IAC3J,MAAOyF,EAAgBC,IAAqBnF,EAAAA,EAAAA,WAAS,IAC9CoF,EAAcC,IAAmBrF,EAAAA,EAAAA,WAAS,IAC3C,mBAAEsF,EAAkB,mBAAEC,IAAuBjI,EAAAA,EAAAA,KAC7CsC,GAAgBC,EAAAA,EAAAA,KAChB2F,GAAiBpF,EAAAA,EAAAA,UACjBqF,EAAab,EACb,SACAc,EAAAA,EAAAA,IAAiCb,GACjCc,GAAeC,EAAAA,EAAAA,GAAwB,CAAEH,eACzCI,EAAUnB,IAASoB,EAAAA,GAAqBC,MACxCC,EAAeH,EAAUP,EAAqBC,EAC9CU,GAAaC,EAAAA,EAAAA,GAAY9E,GAEzB+E,GAAoB/F,EAAAA,EAAAA,QAAOX,GAI3BmC,GAAcC,EAAAA,EAAAA,aAAY,KAC5BwD,GAAgB,GAChBF,GAAkB,IACnB,KACH1E,EAAAA,EAAAA,WAAU,KACFW,IAAW6E,GAAcf,GACzBC,GAAkB,IAEvB,CAACc,EAAYf,EAAgB9D,KAGhCX,EAAAA,EAAAA,WAAU,KACN,IAAIqB,EAAe,KAInB,OAHKoD,IACDpD,EAAeC,WAAWH,EAAaI,EAAAA,IAEpC,KACHC,aAAaH,KAElB,CAACoD,EAAgBtD,KACpBnB,EAAAA,EAAAA,WAAU,KACFyE,GAAkBiB,EAAkBzF,SACpCd,EAAc4F,EAAe9E,UAElC,CAACd,EAAesF,IAInB,MAAMkB,GAAcvE,EAAAA,EAAAA,aAAY,KACvBqD,IACDC,GAAkB,GAClBL,QAEL,CAACA,EAAcI,IA+BlB,OAAQ3I,EAAAA,cAAoBA,EAAAA,SAAgB,MACvC2I,GA3BO3I,EAAAA,cAAoBqE,EAAAA,IAAM,CAAE1D,UAAW,4BAC3CX,EAAAA,cAAoB,MAAO,CAAEW,UAAW,oCAEpCmJ,MAAOV,GACPpJ,EAAAA,cAAoB4F,EAAAA,EAAqB,CAAEjF,UAAW,qCACzDU,GAAS0B,IAAiB/C,EAAAA,cAAoB,MAAO,CAAEW,UAAW,yCAC/DX,EAAAA,cAAoB+J,EAAAA,EAAc,CAAEC,WAAW,EAAMC,UAAW,MAsBxEjK,EAAAA,cAAoB,MAAO,CAAEW,UAAW,uBAAwB2D,IAAK2E,GACjEJ,GAAgB7I,EAAAA,cAAoBa,EAAAA,EAAa,CAAEV,KAAMsJ,KACxDZ,GAAiB7I,EAAAA,cAAoBqE,EAAAA,IAAM,CAAE1D,UAAWC,EAAG,iBAAkB,CAAEsJ,aAAcvB,KAC1F3I,EAAAA,cAAoB,MAAO,CAAEW,UAAW,0BAA2BmJ,MAAOV,GAjB1EpJ,EAAAA,cAAoB,MAAO,CAAEW,UAAWC,EAAG,6BAA8B,CACzE,oCAAqC0I,KACnCA,GAAWtJ,EAAAA,cAAoBmK,EAAAA,EAAO,CAAEC,KAAM,GAAIzJ,UAAW,+BAiB3DX,EAAAA,cAAoBqK,EAAAA,SAAU,CAAEC,SATrCtK,EAAAA,cAAoB,MAAO,OAUlBA,EAAAA,cAAoBgI,EAAsB,CAAErH,UAAW,yBAA0B4J,IAAK1F,EAAQ2F,UAAU,EAAMC,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,CAC7IC,KAAM,CACFC,YAAY,EACZC,WAAY,CACRC,aAAc,aACd,aAAc3C,GAAarF,GAAe1B,KAGnD2J,aAAa,EAAMxC,QAASA,EAASC,OAAQA,EAAQC,QAASA,EAASuC,QAASpB,EAAa7D,QAASX,EAAa6F,KAAK,OACtI7J,GAAS0B,IAAiB/C,EAAAA,cAAoByE,EAAAA,EAAgB,CAAEpD,MAAOA,EAAO0B,YAAaA,EAAa6B,UAAW3B,MACpI,CACA,MAAMkI,EAAoBnL,EAAAA,KAAWkI,E,yFCtHrC,SAASzD,GAAe,MAAEpD,EAAK,YAAE0B,EAAW,WAAEC,EAAU,YAAE0B,EAAW,UAAEE,IACnE,OAAQ5E,EAAAA,cAAoB,MAAO,CAAEW,UAAW,qBAC5CX,EAAAA,cAAoB,MAAO,CAAEW,UAAWC,EAAG,6BAA8B,0BAA2B,CAC5FwK,+BAAgCpI,MAEnC4B,GAAavD,GAAUrB,EAAAA,cAAoB,MAAO,CAAEW,UAAW,4BAA8BU,GAC9F0B,GAAgB/C,EAAAA,cAAoB,MAAO,CAAEW,UAAWC,EAAG,iCAAkC,CACrFyK,qCAAsChK,KACpC0B,GACVC,GAAehD,EAAAA,cAAoBA,EAAAA,SAAgB,KAC/CA,EAAAA,cAAoBsL,EAAAA,EAAgB,KAAM5G,GAC1C1E,EAAAA,cAAoB,MAAO,CAAEW,UAAWC,EAAG,yBAA0B,0BAA2B,CACxF2K,6BAA8BlK,GAAS0B,IACvC,eAAe,GAAQC,KAC/C,C,qJCdA,SAASwI,EAAsB/K,GAC3B,MAAM,wBAAEgL,GAA4BhL,EAAMZ,QAAQ6L,SAC5CC,GAAsBjK,EAAAA,EAAAA,IAAaC,GAAUA,EAAMgK,qBAEnDC,EAAoBH,GAAyB7E,IAAI,CAACiF,EAAiB/E,KACrE,MAAMgF,EAAqBH,EAAoBE,GACzCE,EAAqBC,EAAwBF,EAAmBG,KAAKC,eAGrEC,EAAqBV,EAAwB3E,EAAQ,GACrDsF,EAAmBT,EAAoBQ,GACvCE,EAAyBL,EAAwBI,GAAkBH,KAAKC,eAExEI,IADgBxF,IAAU2E,EAAwB/E,OAAS,GACfqF,GAAuBM,GACzE,OAAQrM,EAAAA,cAAoB,MAAO,CAAE+G,IAAK8E,EAAiBlL,UAAWC,EAAG,2CAA4C,CAC7G,sDAAuDmL,EACvD,+DAAgEO,KAEpEtM,EAAAA,cAAoBuM,EAAAA,EAAsB,IAAK9L,EAAOZ,QAASiM,EAAoBU,qBAAqB,OAEhH,OAAKZ,GAAmBlF,OAGjB1G,EAAAA,cAAoB,MAAO,CAAEW,UAAW,4BAA8BiL,GAFlE,IAGf,CAIA,SAASI,EAAwBS,GAC7B,OAAQA,GACJ,KAAKlD,EAAAA,GAAqBmD,MAC1B,KAAKnD,EAAAA,GAAqBoD,OAC1B,KAAKpD,EAAAA,GAAqBqD,MAC1B,KAAKrD,EAAAA,GAAqBC,MAC1B,KAAKD,EAAAA,GAAqBsD,aACtB,OAAO,EACX,QACI,OAAO,EAEnB,CACA,MAAMC,EAAkC9M,EAAAA,KAAWwL,GCxCnD,SAASuB,EAAuBtM,GAC5B,MAAMkL,GAAsBjK,EAAAA,EAAAA,IAAaC,GAAUA,EAAMgK,qBACnDqB,EAAmBvM,EAAMZ,QAAQ6L,SAASuB,2BAA2BrG,IAAKiF,IAC5E,MAAMC,EAAqBH,EAAoBE,GAC/C,OAAQ7L,EAAAA,cAAoBuM,EAAAA,EAAsB,CAAExF,IAAK8E,KAAoBpL,EAAOZ,QAASiM,EAAoBU,qBAAqB,MAEpIU,EAAeF,GAAkBtG,QAAU,EAC3CyG,EAAeD,EAAe,EACpC,OAAOA,EAAgBlN,EAAAA,cAAoB,MAAO,CAAEW,UAAWC,EAAG,4BAA6B,CACvF,oCAAqCuM,KACnCH,GAAqB,IACnC,CCRA,SAASI,GAAwB,iBAAEC,EAAgB,YAAEC,EAAW,kBAAEC,EAAiB,aAAEC,IACjF,MAAMlM,GAAiBC,EAAAA,EAAAA,KACjBT,GAAeC,EAAAA,EAAAA,KACf0M,GAAY/L,EAAAA,EAAAA,IAAaC,GAAUA,EAAMgJ,QACzC+C,GAAahM,EAAAA,EAAAA,IAAYiM,EAAAA,IAC/B,OAAQ3N,EAAAA,cAAoBA,EAAAA,SAAgB,KACxCA,EAAAA,cAAoB8M,EAAiC,CAAEjN,QAASwN,EAAkBO,gBAAiBN,EAAaxM,aAAcA,EAAc+M,kBAAmBL,EAAcM,kBAAmBJ,EAAWK,WAAYpD,OAAQ8C,EAAWF,kBAAmBA,EAAmBS,sBAAuBC,EAAAA,GAAa3M,eAAgBA,EAAgB4M,cAAc,EAAMC,kBAAkB,IAC1XnO,EAAAA,cAAoB+M,EAAwB,CAAElN,QAASwN,EAAkBO,gBAAiBN,EAAaxM,aAAcA,EAAc+M,kBAAmBL,EAAcM,kBAAmBJ,EAAWK,WAAYpD,OAAQ8C,EAAWF,kBAAmBA,EAAmBS,sBAAuBC,EAAAA,GAAa3M,eAAgBA,EAAgB4M,cAAc,EAAMC,kBAAkB,IACzX,C,yFChBA,SAASC,MAAoB3N,IACzB,OAAOT,EAAAA,cAAoBmL,EAAAA,EAAmB,CAAEhD,KAAMoB,EAAAA,GAAqBqD,SAAUnM,GACzF,CACA,MAAM4N,EAAuBrO,EAAAA,KAAWoO,E,qECGxC,MAAM/E,EAA2BiF,IACtBC,EAAAA,EAAAA,SAAQ,KACX,MAAMC,EAAmB,CAAC,EAQ1B,OAPAC,OAAOC,QAAQJ,GAAQK,QAAQ,EAAE5H,EAAK5H,MAClC,GAAIA,QAAuC,CAEvC,MAAMyP,EAAW7H,EAAIW,QAAQ,SAAWmH,GAAW,IAAIA,EAAOC,iBAC9DN,EAAiB,KAAKI,KAAczP,CACxC,IAEGqP,GACR,CAACF,G,+JChBR,MAAMS,UAA+BC,EAAAA,IAErCD,EAAuBT,OAASW,EAAAA,EAAI;OAC9BC,EAAAA,EAAAA,IChBS;KDkBfC,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,mBAAoBC,SAAS,KACnEP,EAAuBQ,UAAW,sBAAkB,IACvDJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,mBAAoBC,SAAS,KACnEP,EAAuBQ,UAAW,sBAAkB,IACvDJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,uBAAwBC,SAAS,KACvEP,EAAuBQ,UAAW,0BAAsB,IAC3DJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,uBAAwBC,SAAS,KACvEP,EAAuBQ,UAAW,0BAAsB,IAC3DJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,uBAAwBC,SAAS,KACvEP,EAAuBQ,UAAW,0BAAsB,IAC3DJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,uBAAwBC,SAAS,KACvEP,EAAuBQ,UAAW,0BAAsB,IAC3DJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,uBAAwBC,SAAS,KACvEP,EAAuBQ,UAAW,0BAAsB,IAC3DJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,uBAAwBC,SAAS,KACvEP,EAAuBQ,UAAW,0BAAsB,IAC3DJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,iBAAkBC,SAAS,KAChEP,EAAuBQ,UAAW,qBAAiB,IACtDJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,iBAAkBC,SAAS,KAChEP,EAAuBQ,UAAW,qBAAiB,IACtDJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,WAAYC,SAAS,KAC1DP,EAAuBQ,UAAW,eAAW,IAChDJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMsG,OAAQY,UAAW,cACrCN,EAAuBQ,UAAW,eAAW,G,mGEhChD,MAAME,GAAkBC,EAAAA,EAAAA,IAASC,EAAAA,GAC3BC,GAAwBF,EAAAA,EAAAA,IAASG,EAAAA,GACjCC,GAAgBJ,EAAAA,EAAAA,IAASK,EAAAA,GACzBC,GAAsBN,EAAAA,EAAAA,IAASO,EAAAA,GCX/BC,EAAsC,8BAI5C,IAAIC,EAAgC,cAA4CpB,EAI5EqB,MAAAA,GACI,ODGR,SAAwCC,GACpC,MAAM,eAAEC,EAAc,eAAEC,EAAc,mBAAEC,EAAkB,mBAAEC,EAAkB,mBAAEC,EAAkB,mBAAEC,EAAkB,mBAAEC,EAAkB,mBAAEC,EAAkB,cAAEC,EAAa,cAAEC,EAAa,QAAEC,EAAO,QAAEC,GAAaZ,EACpN,OAAOa,EAAAA,EAAK,eAAeC,EAAAA;;eAEhBA,EAAAA;;;;;kBAKGP,GAAsBQ,EAAAA;uBACjBR,IAAuBF,EACpCU,EAAAA,GACAd;sBACYE,GAAsBY,EAAAA;uBACrBJ;gBACP,IAAMC,GAAQ;;;YAGnBI,EAAAA,EAAAA,GAAUb,EAAqBR,EAAsBF;;;WAGrDgB,GAAiBQ,EAAAA,IAAAA;;;;eAIbH,EAAAA;;;;;kBAKGN,GAAsBO,EAAAA;uBACjBP,IAAuBF,EACpCS,EAAAA,GACAb;sBACYE,GAAsBW,EAAAA;uBACrBJ;gBACP,IAAMC,GAAQ;;;YAGnBI,EAAAA,EAAAA,GAAUZ,EAAqBb,EAAwBH;;;WAGvDsB,GAAiBO,EAAAA,IAAAA;;;SAI5B,CCjDeC,CAA+BC,KAC1C,GAEJrB,GAAgChB,EAAAA,EAAAA,IAAW,EACvCsC,EAAAA,EAAAA,GAAcvB,IACfC,GCfH,MAAMuB,GAA2BC,EAAAA,EAAAA,GAAgB,CAC7CC,QAAS1B,EACT2B,aAAc1B,EACd2B,MAAO9R,ICFX,MAAM+R,UAAuB/C,EAAAA,GACzBgD,WAAAA,GACIC,SAASC,WAITV,KAAKW,aAAe,IAAIC,GAC5B,CAIAC,OAAAA,CAAQC,GACAA,EAAkBC,IAAI,wBACtBf,KAAKgB,kBAAkBhB,KAAKiB,oBAEpC,CAIAD,iBAAAA,CAAkBlS,GACVA,IACAkR,KAAKW,aAAe,IAAIC,IAAIZ,KAAKiB,qBAEzC,CAIAC,eAAAA,CAAgBC,GACZ,MAAMC,EAAWD,EAAME,OAAOC,aAAa,gBACxBtB,KAAKW,aAAaI,IAAIK,GAErCpB,KAAKW,aAAaY,OAAOH,GAGzBpB,KAAKW,aAAaa,IAAIJ,GAE1BpB,KAAKyB,gBAAgBC,MAAMC,KAAK3B,KAAKW,eAErCX,KAAK4B,eACT,EAEJrB,EAAezD,OAASW,EAAAA,EAAI;OACtBC,EAAAA,EAAAA,ICvDS;KDyDfC,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAM+K,MAAO7D,UAAW,UACpC0C,EAAexC,UAAW,YAAQ,IACrCJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAM+K,MAAO7D,UAAW,2BACpC0C,EAAexC,UAAW,2BAAuB,IACpDJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,kBACtC0C,EAAexC,UAAW,mBAAe,IAC5CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMsG,OAAQY,UAAW,qBACrC0C,EAAexC,UAAW,qBAAiB,IAC9CJ,EAAAA,EAAAA,IAAW,EACPxN,EAAAA,EAAAA,OACDoQ,EAAexC,UAAW,oBAAgB,G,gBEzD7C,MAAM8D,EAAoB,GAAGC,EAAAA,aAI7B,IAAIC,EAAoB,cAAgCxB,EAIpD3B,MAAAA,GACI,OCPR,SAAgCC,GAC5B,MAAM,aAAE8B,EAAY,KAAEqB,EAAMd,gBAAiBe,GAAoBpD,EACjE,OAAOa,EAAAA,EAAK,eAAeC,EAAAA;MACzBD,EAAAA,EAAK,cAAcC,EAAAA;QACjBqC,EAAK5M,IAAKzH,GAAU+R,EAAAA,EAAK,cAAcC,EAAAA;;uBAExBA,EAAAA;;;;;;8BAMOgB,EAAaI,IAAIpT;8BACjBgT,EAAaI,IAAIpT;8BACjBA;wBACNsU;;gBAERtU;;;;SAKhB,CDfeuU,CAAuBlC,KAClC,GAEJ+B,GAAoBpE,EAAAA,EAAAA,IAAW,EAC3BsC,EAAAA,EAAAA,GAAc4B,IACfE,G,cEfH,MAAMI,EAA0B,4BAC1BrF,EAAS,gEAEwBqF,oDACFA,qDACAA,qDACFA,sCAChBA,mCACIA,qBAKvB,IAAIC,EAA0B,cAAsCC,EAAAA,KAEpED,EAAwBtF,OAASW,EAAAA,EAAI;MAC/B4E,EAAAA,GAAUvF;OACVY,EAAAA,EAAAA,IAAUZ;IAEhBsF,GAA0BzE,EAAAA,EAAAA,IAAW,EACjCsC,EAAAA,EAAAA,GAAckC,IACfC,G,cCjBH,MAAME,UAAwB9E,EAAAA,GAC1BgD,WAAAA,GACIC,SAASC,WAITV,KAAKuC,cAAe,EAIpBvC,KAAKwC,YAAa,CACtB,CAIA3B,OAAAA,CAAQC,GACAA,EAAkBC,IAAI,kBACtBf,KAAKgB,kBAAkBhB,KAAKyC,cAEpC,CAIAzB,iBAAAA,CAAkBlS,GACVA,IACAkR,KAAK0C,WAAa5T,EAAOH,KACzBqR,KAAK2C,2BAA6B7T,EAAO8T,mBAEjD,CAIAC,gBAAAA,CAAiB1B,GACbnB,KAAK0C,WAAavB,EAAM2B,cAAcnV,KAC1C,CAIAoV,aAAAA,GACI/C,KAAKgD,WAAW,CACZrU,KAAMqR,KAAK0C,WACXE,mBAAoB5C,KAAKiD,qBAEjC,CAIAC,aAAAA,GACIlD,KAAKmD,WACT,CAIAC,qBAAAA,CAAsBR,GAClB5C,KAAKiD,oBAAsBL,CAC/B,EAEJN,EAAgBxF,OAASW,EAAAA,EAAI;OACvBC,EAAAA,EAAAA,IC3ES;KD6EfC,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,QAASC,SAAS,KACvDwE,EAAgBvE,UAAW,aAAS,IACvCJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQF,SAAS,KACnCwE,EAAgBvE,UAAW,UAAM,IACpCJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,UAAWC,SAAS,KAC1DwE,EAAgBvE,UAAW,cAAU,IACxCJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,cAAeC,SAAS,KAC9DwE,EAAgBvE,UAAW,kBAAc,IAC5CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMsG,OAAQY,UAAW,cACrCyE,EAAgBvE,UAAW,eAAW,IACzCJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMsG,OAAQY,UAAW,eACrCyE,EAAgBvE,UAAW,gBAAY,IAC1CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMsG,OAAQY,UAAW,iBAAkBC,SAAS,KAChEwE,EAAgBvE,UAAW,qBAAiB,IAC/CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,QAASC,SAAS,KACvDwE,EAAgBvE,UAAW,aAAS,IACvCJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,SAAUC,SAAS,KACxDwE,EAAgBvE,UAAW,cAAU,IACxCJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMsG,OAAQY,UAAW,aAAcC,SAAS,KAC5DwE,EAAgBvE,UAAW,kBAAc,IAC5CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,aAAcC,SAAS,KAC5DwE,EAAgBvE,UAAW,kBAAc,IAC5CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,wBAAyBC,SAAS,KACvEwE,EAAgBvE,UAAW,mBAAe,IAC7CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,eAAgBC,SAAS,KAC9DwE,EAAgBvE,UAAW,mBAAe,IAC7CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,eAAgBC,SAAS,KAC9DwE,EAAgBvE,UAAW,mBAAe,IAC7CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,iBAAkBC,SAAS,KACjEwE,EAAgBvE,UAAW,oBAAgB,IAC9CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,cAAeC,SAAS,KAC9DwE,EAAgBvE,UAAW,kBAAc,IAC5CJ,EAAAA,EAAAA,IAAW,EACPxN,EAAAA,EAAAA,OACDmS,EAAgBvE,UAAW,kBAAc,IAC5CJ,EAAAA,EAAAA,IAAW,EACPxN,EAAAA,EAAAA,OACDmS,EAAgBvE,UAAW,kCAA8B,IAC5DJ,EAAAA,EAAAA,IAAW,EACPxN,EAAAA,EAAAA,OACDmS,EAAgBvE,UAAW,2BAAuB,IACrDJ,EAAAA,EAAAA,IAAW,CACP0F,EAAAA,IACDf,EAAgBvE,UAAW,wBAAyB,M,6BEzHvD,MAAMuF,EAA8B,sBAIpC,IAAIC,EAAyB,cAAqCjB,EAI9D1D,MAAAA,GACI,OCAR,SAAiCC,GAC7B,MAAQqE,cAAeM,EAAcT,cAAeU,EAAcZ,iBAAkBa,EAAiBf,2BAA4BgB,EAA2BjB,WAAYkB,EAAWR,sBAAuBS,EAAoB,GAAEhV,EAAE,WAAE0N,EAAU,OAAEuH,EAAM,MAAEjU,EAAK,OAAEkU,EAAM,YAAEC,EAAW,WAAEC,EAAU,WAAEC,EAAU,aAAE3B,EAAY,WAAEC,EAAU,YAAE2B,EAAW,YAAEC,GAAiBvF,EACpW,OAAOa,EAAAA,EAAK;aACHtQ,EAAG,GAAGuQ,EAAAA,cAA8B,CACzC,CAAC,GAAGA,EAAAA,gBAAgCmE;;kBAG1BnE,EAAAA;oBACEA,EAAAA;UACV9P,GAASiQ,EAAAA,IAAAA;;;MAGb0C,EACI9C,EAAAA,EAAK,eAAeC,EAAAA;YAClBoE,GAAUjE,EAAAA,IAAAA;gBAEZ;MACJmE,GAAY/O,OACRwK,EAAAA,EAAK,eAAeC,EAAAA;;oBAEVsE;mCACeN;6BACNE;;;gBAInB;MACJtB,EACI7C,EAAAA,EAAK,eAAeC,EAAAA;;;oBAGV9Q;uBACG+U;uBACAjE,EAAAA;2BACIpD;6BACEyH,GACjBlE,EAAAA,IAAAA;;2BAxCW;uBA2CA4D;;;gBAIb;MACJQ,EACIxE,EAAAA,EAAK,eAAeC,EAAAA;;wBAENuE;;gBAGd;kBACQvE,EAAAA;;iBAEDA,EAAAA;mBACEpD,GAAcqD,EAAAA;;;iBAGhB4D;;UAEPY,GAAetE,EAAAA,IAAAA;;;iBAGRH,EAAAA;mBACEpD,GAAcqD,EAAAA;;iBAEhB6D;;UAEPU,GAAerE,EAAAA,IAAAA;;;SAIzB,CDvEeuE,CAAwBrE,KACnC,GAEJuD,GAAyB5F,EAAAA,EAAAA,IAAW,EAChCsC,EAAAA,EAAAA,GAAcqD,IACfC,GEjBH,MAAMe,GAAoBnE,EAAAA,EAAAA,GAAgB,CACtCC,QAASkD,EACTjD,aAAckD,EACdjD,MAAO9R,I,cCDX,SAAS+V,IACL,MAAM,yBAAEC,IAA6BjV,EAAAA,EAAAA,KACrC,OAAOf,EAAAA,cAAoB,MAAO,CAAEW,UAAW,sBAAwBqV,EAC3E,C,8FCSA,SAASC,EAAmBxV,GACxB,MAAM,aAAEK,EAAY,aAAEoV,EAAY,gBAAEtI,EAAe,kBAAEE,EAAiB,eAAExM,EAAc,WAAEQ,EAAU,aAAE0L,EAAY,kBAAE2I,EAAiB,oBAAEC,GAAyB3V,GACxJ,qBAAE4V,EAAoB,aAAE/W,EAAY,aAAEgX,GAAiBxU,GACvD,YAAEL,GAAgB2U,GACjBG,EAAsBC,IAA2B/S,EAAAA,EAAAA,WAAS,GAKjE,SAASgT,IACDhV,IAAgB8U,EAGhBC,GAAwB,IAGxBA,GAAwB,GACxBlV,EAAeoV,kBAAkBC,UAAUT,EAActI,GAGzDpI,WAAWgI,GAEnB,CAEA,IAnBK/L,GAAe8U,GAEhBC,GAAwB,GAgBD5I,EAAgBgJ,QAAQC,qBAAuBC,EAAAA,GAAmBC,QACrE,CAGpB,MAAMC,EAA0Bd,EAAajK,KAAKgL,mBAAmBpX,SACjEiB,EAAaoW,iCACjB,OAAOlX,EAAAA,cAAoB,MAAO,KAAMgX,EAC5C,CACA,MAAMG,EAAkBjB,EAAajK,KAAKmL,iBAAiBvX,SACvDiB,EAAauW,+BACjB,IAAIC,EACAC,EACAC,EAAe1J,GAAqBqI,EAAkBsB,wBACtDC,EAAgBP,EAgCpB,OA/BIjB,EAAaxK,SAASrL,KAAOgW,GAE7BmB,GAAe,EACXlB,GAGAgB,EAAaK,EAAAA,EACbJ,EAAazW,EAAa8W,8BAC1BF,EAAiB1X,EAAAA,cAAoBX,EAAAA,EAAqB,CAAEC,aAAcA,EAAcC,aAAcuB,EAAa+W,yBAGnHP,EAAaQ,EAAAA,EACbP,EAAazW,EAAaiX,0BAC1BL,EAAgB5W,EAAakX,6BAG5BlK,EACDoI,EAAaxK,SAASuM,mBACtBX,EAAaY,EAAAA,EACbX,EAAazW,EAAaqX,0BAC1BT,EAAgB5W,EAAasX,6BAG7Bd,EAAaQ,EAAAA,EACbP,EAAazW,EAAauX,kBAI9Bf,EAAagB,EAAAA,EACbf,EAAazW,EAAauX,iBAEtBrY,EAAAA,cAAoBqE,EAAAA,IAAM,CAAE1D,UAAW,qBAC3CX,EAAAA,cAAoB,MAAO,CAAEW,UAAW,4BACpCX,EAAAA,cAAoB,OAAQ,KAAMc,EAAayX,kBACnDvY,EAAAA,cAAoB,MAAO,CAAEW,UAAW,2BAA6B+W,GACrE1X,EAAAA,cAAoBwY,EAAAA,IAAQ,CAAE7X,UAAW,mCAAoCyJ,KAAM,KAAMqO,SAAUjB,EAAcvG,QAASwF,EAAatT,WAAYmU,GAAcC,IAChKC,GAAgB/V,GAAgBzB,EAAAA,cAAoB,MAAO,CAAEW,UAAW,uCAAyCG,EAAa4X,wBAC/HnC,GAAyBvW,EAAAA,cAAoBkB,EAAAA,EAAmB,CAAEG,MAAOP,EAAa6X,mCAAoC9Y,QAASiB,EAAa8X,qCAAsCzX,UAAWsV,EAAarV,SAAUA,IAAMoV,GAAwB,KAC9P,CClFA,SAASqC,GAAepY,GACpB,MAAM,aAAEK,EAAY,aAAEoV,EAAY,gBAAEtI,EAAe,OAAEjD,EAAM,eAAErJ,EAAc,kBAAEwM,EAAiB,WAAEhM,EAAU,aAAE0L,EAAY,kBAAE2I,EAAiB,oBAAEC,GAAyB3V,EAEhKqY,EAAyBhL,KAAsBiL,EAAAA,EAAAA,IAAepO,GAEpE,OAAQ3K,EAAAA,cAAoB,MAAO,KAC/BA,EAAAA,cAAoBiW,EAAoB,CAAEC,aAAcA,EAActI,gBAAiBA,EAAiB9M,aAAcA,EAAcQ,eAAgBA,EAAgBwM,kBAAmBgL,EAAwBhX,WAAYA,EAAYsU,oBAAqBA,EAAqBD,kBAAmBA,EAAmB3I,aAAcA,IAC7U,C,0BCdA,SAASwL,IAAe,OAAEnU,KAAWpE,IAEjC,MAAMwY,EAAapU,GAAQqU,WAAW,4BACtC,OAAQlZ,EAAAA,cAAoBmL,GAAAA,EAAmB,CAAEhD,KAAMoB,GAAAA,GAAqBC,MAAO3E,OAAQA,EAAQwD,WAAY4Q,KAAexY,GAClI,CACA,MAAM0Y,GAAuBnZ,EAAAA,KAAWgZ,I,gDCDxC,SAASI,IAAe,cAAEC,EAAa,OAAEC,EAAM,OAAEzG,EAAM,SAAE4F,EAAQ,QAAExH,KAAYsI,IAC3E,OAAID,EACQtZ,EAAAA,cAAoB,IAAK,CAAEW,UAAW,oBAAqB6Y,KAAMD,EAAWvW,WAAYyW,IAAK,sBAAuB5G,OAAQA,EAAQ5B,QAASA,GACjJjR,EAAAA,cAAoBiG,GAAAA,EAAa,IAAKsT,IACtCF,GAAiBrZ,EAAAA,cAAoBsL,GAAAA,EAAgB,KAAM+N,IAE3DrZ,EAAAA,cAAoB,SAAU,CAAEW,UAAW,oBAAqBwH,KAAM,SAAU8I,QAASA,EAASwH,SAAUA,GAChHzY,EAAAA,cAAoBiG,GAAAA,EAAa,IAAKsT,IACtCF,GAAiBrZ,EAAAA,cAAoBsL,GAAAA,EAAgB,KAAM+N,GACnE,CCNA,SAASK,IAAwB,UAAE/Y,EAAS,MAAEgZ,EAAK,KAAEC,EAAI,IAAErP,EAAG,OAAEsI,EAAS,SAAQ,SAAE4F,EAAQ,WAAEtV,EAAU,SAAE0W,EAAQ,QAAE/U,EAAO,QAAEmM,IACxH,MAAM,mBAAE6I,IAAuB/Y,EAAAA,EAAAA,KACzBkE,GAAavD,EAAAA,EAAAA,IAAaC,GAAUA,EAAMoY,MAAM9U,YAChD9E,EAAOwZ,GAASpP,EAChByP,EAAazP,EAAMsI,OAASoH,EAClC,OAAIJ,EACQ7Z,EAAAA,cAAoBoZ,GAAgB,CAAEtW,WAAYgX,EAAoBjV,OAAQgV,EAAUhH,OAAQA,EAAQxR,MAAOsY,EAAO3W,WAAYuH,EAAKzF,QAASA,EAAS3B,WAAYA,EAAY8N,QAASA,EAASwH,SAAUA,EAAUa,OAAQtV,QAAQuG,GAAMtF,WAAYA,IAE7PjF,EAAAA,cAAoBwY,EAAAA,IAAQ,CAAE7X,UAAWC,EAAG,gBAAiBD,GAAYuZ,GAAI3P,EAAM,SAAM0P,EAAWL,KAAMO,GAAcP,GAAOJ,KAAMjP,EAAKsI,OAAQmH,EAAYP,IAAKlP,EAAM,2BAAwB0P,EAAWxB,SAAUA,EAAUtV,WAAYA,EAAY8N,QAASA,GAAW9Q,EACxR,CACA,SAASga,GAAcrQ,GACnB,OAAQA,GACJ,KAAKsQ,GAAAA,GAAeC,KACpB,KAAKD,GAAAA,GAAeE,SAChB,MAAO,QACX,KAAKF,GAAAA,GAAeG,QAChB,MAAO,UACX,QACI,OAAOzQ,EAEnB,CCrBA,SAAS0Q,IAA+B,iBAAEnN,EAAgB,YAAEC,IACxD,MAAMhM,GAAiBC,EAAAA,GAAAA,KACjBkZ,EAAcpN,EAAiBpB,MAC/B,SAAEP,GAAa2B,GACf,UAAEqN,EAAS,SAAEC,EAAQ,MAAEhB,EAAK,KAAEC,EAAI,MAAEza,GAAUsb,EAC9CG,EAAa5W,QAAQ7E,GAASuM,EAASmP,gBACvCC,GAAiBxV,EAAAA,EAAAA,aAAYyV,gBACzBzZ,EAAe0Z,KAAK,CACtB7S,KAAM8S,EAAAA,GAAaC,oBACnBT,cACAnN,iBAEL,CAACmN,EAAanZ,EAAgBgM,IACjC,OAAQtN,EAAAA,cAAoB0Z,GAAyB,CAAEG,SAAUa,EAAW5V,QAAS6V,EAAUhB,MAAOA,EAAOC,KAAMA,EAAMnB,SAAUmC,EAAYzX,WAAauX,GAAaS,GAAAA,QAAqBlB,EAAWhJ,QAAS6J,GACtN,C,gDCVA,SAASM,IAA4B,iBAAE/N,EAAgB,aAAEG,EAAY,kBAAED,IACnE,MAAMjM,GAAiBC,EAAAA,GAAAA,KACjBkZ,EAAcpN,EAAiBpB,MAC/B,SAAEP,EAAQ,cAAE2P,GAAkBhO,GAC9B,UAAEqN,EAAS,SAAEC,EAAQ,MAAEhB,EAAK,KAAEC,GAASa,EACvCG,GAAcrN,GAAqBvJ,QAAQ0H,EAASmP,gBACpDC,GAAiBxV,EAAAA,EAAAA,aAAY,KAE/B,GADyBtB,QAAQyW,EAAYtb,OAAOmc,OAAOnb,MAAQwZ,GAC7C,CAClB,MAAM4B,GAAiBC,EAAAA,EAAAA,IAAwCf,EAAaY,GAC5E7N,IACAlM,EAAema,MAAMC,SAASC,GAAAA,GAAQC,yBAAyBlQ,EAASrL,GAAIkb,IAC5Eja,EAAeqa,QAAQE,cAAcN,EAAgBO,EAAAA,GAAkBC,iBAC3E,MAEIC,EAAAA,GAAAA,IAAa,GAAGC,GAAAA,mCAAkDxB,EAAYd,yCAEnF,CACCc,EACAd,EACA0B,EACA7N,EACAlM,EAAema,MACfna,EAAeqa,QACfjQ,EAASrL,KAEb,OAAQL,EAAAA,cAAoB0Z,GAAyB,CAAEG,SAAUa,EAAW5V,QAAS6V,EAAUhB,MAAOA,EAAOC,KAAMA,EAAM3I,QAAS6J,EAAgB3X,WAAauX,GAAawB,GAAAA,QAASjC,EAAWxB,SAAUmC,GAC9M,C,eC9BA,SAASuB,IAA6B,iBAAE9O,EAAgB,kBAAEE,IACtD,MAAMjM,GAAiBC,EAAAA,GAAAA,MACjB,UAAEmZ,EAAS,SAAEC,EAAQ,MAAEhB,EAAK,KAAEC,GAASvM,EAAiBpB,KAIxD6O,GAAiBxV,EAAAA,EAAAA,aAAYyV,UAC/BzZ,EAAema,MAAMC,SAASC,GAAAA,GAAQS,wBAAuB,IAC7D9a,EAAema,MAAMC,SAASC,GAAAA,GAAQU,wBAAwBhP,EAAkBE,KACjF,CAACF,EAAkBE,EAAmBjM,IACzC,OAAQtB,EAAAA,cAAoB0Z,GAAyB,CAAE/Y,UAAW,qCAAsCkZ,SAAUa,EAAW5V,QAAS6V,EAAUhB,MAAOA,EAAOC,KAAMA,EAAMzW,WAAauX,GAAa4B,GAAAA,QAAerC,EAAWhJ,QAAS6J,GAC3O,C,oCClBA,MAAMyB,IAAO5K,EAAAA,EAAAA,GAAgB,CACzBC,QAAS,kBACTC,aAAc2K,GAAAA,EACd1K,MAAO9R,ICCLyc,ICKqBC,GDLUC,GAAAA,ECM1B,SAAuBlc,EAAQ,CAAC,GACnC,OAAOmc,EAAAA,EAAAA,eAAc,MAAO,IACrBF,GAAKG,MACRpS,MAAOiS,GAAKG,MAAMpS,OAAS,GAC3BC,OAAQgS,GAAKG,MAAMnS,QAAU,GAC7BoS,KAAMJ,GAAKG,MAAMC,MAAQ,kBACtBrc,GACJic,GAAKK,QAAQnW,IAAI,CAACoW,EAAOC,KAAML,EAAAA,EAAAA,eAAcI,EAAME,KAAM,CACxDnW,IAAKkW,KACFD,EAAMH,SAEjB,GAZJ,IAA2BH,GDA3B,SAASS,IAAuB,iBAAE9P,IAC9B,MAAM,UAAEqN,EAAS,SAAEC,EAAQ,IAAEpQ,EAAG,OAAEsI,EAAM,MAAE8G,EAAK,KAAEC,GAASvM,EAAiBpB,KAE3E,OAAKyO,GAAad,IAASQ,GAAAA,GAAeC,KAMlCra,EAAAA,cAAoB0Z,GAAyB,CAAEG,SAAUa,EAAW5V,QAAS6V,EAAUhB,MAAOA,EAAOC,KAAMA,EAAMrP,IAAKA,EAAKsI,OAAQA,EAAQ1P,WAAYia,GAAAA,IALnJpd,EAAAA,cAAoB,MAAO,CAAEW,UAAW,4CAC5CX,EAAAA,cAAoBuc,GAAM,CAAE5b,UAAW,uBAAwB6Y,KAAMjP,EAAKsI,OAAQA,EAAQ4G,IAAK,uBAC3FzZ,EAAAA,cAAoByc,GAAY,CAAEY,KAAM,OAAQ1c,UAAW,OAAQ,aAAc,WACjFgZ,GAASpP,GAGzB,CEbA,SAAS+S,GAAoB7c,GACzB,OAAQA,EAAM4M,iBAAiBpB,KAAKsR,aAChC,KAAKC,GAAAA,GAAeC,IAChB,OAAQzd,EAAAA,cAAoBmd,GAAwB,CAAE9P,iBAAkB5M,EAAM4M,mBAClF,KAAKmQ,GAAAA,GAAeE,WAChB,OAAQ1d,EAAAA,cAAoBmc,GAA8B,CAAE9O,iBAAkB5M,EAAM4M,iBAAkBE,kBAAmB9M,EAAM8M,oBACnI,KAAKiQ,GAAAA,GAAeG,aAChB,OAAQ3d,EAAAA,cAAoBwa,GAAgC,CAAEnN,iBAAkB5M,EAAM4M,iBAAkBC,YAAa7M,EAAM6M,cAC/H,QACI,OAAQtN,EAAAA,cAAoBob,GAA6B,CAAE/N,iBAAkB5M,EAAM4M,iBAAkBG,aAAc/M,EAAM+M,aAAcD,kBAAmB9M,EAAM8M,oBAE5K,C,eCXA,SAASqQ,GAAkBnd,GACvB,MAAM,eAAEod,GAAmBpd,EACrBwL,EAAOxL,EAAM4M,iBAAiBpB,KACpC,OAAQjM,EAAAA,cAAoBqE,EAAAA,IAAM,CAAE1D,UAAWC,EAAG,0BAA2B,CACrEkd,kBAAmBD,GAAkB5R,EAAK8R,YAAcC,GAAAA,GAAaC,MACrEC,mBAAoBL,GAAkB5R,EAAK8R,YAAcC,GAAAA,GAAaG,OACtEC,kBAAmBP,GAAkB5R,EAAK8R,YAAcC,GAAAA,GAAaK,SAEzEre,EAAAA,cAAoBoN,GAAAA,EAAyB,IAAK3M,IAC1D,CACA,MAAM6d,GAAsBte,EAAAA,KAAW4d,I,0BCdvC,MAAMW,IAAWC,EAAAA,GAAAA,MACjB,SAASC,GAAsBhe,GAC3B,MAAM,iBAAE4M,EAAgB,YAAEC,EAAW,kBAAEC,EAAiB,aAAEC,GAAiB/M,EACrEkL,GAAsBjK,EAAAA,EAAAA,IAAaC,GAAUA,EAAMgK,sBACnD,yBAAE+S,GAA6BrR,EAAiB3B,SACtD,OAAQ1L,EAAAA,cAAoBqK,EAAAA,SAAU,CAAEC,SAAUtK,EAAAA,cAAoB4F,GAAAA,EAAqB,OACvF5F,EAAAA,cAAoBue,GAAU,KAAMG,EAAyB9X,IAAK+X,IAC9D,MAAMtR,EAAmB1B,EAAoBgT,GAC7C,OAAQ3e,EAAAA,cAAoBse,GAAqB,CAAEvX,IAAK4X,EAA0BtR,iBAAkBA,EAAkBC,YAAaA,EAAaC,kBAAmBA,EAAmBsQ,gBAAgB,EAAMrQ,aAAcA,OAEtO,C,0BCTA,SAASoR,GAAoBzf,EAAO0f,GAChC,MAAMC,GAAcvQ,EAAAA,EAAAA,SAAQ,IACjBsQ,IAAYE,EAAAA,GAAAA,GAASF,EAAU,IAAK,CAAEG,QAAS,IAAKC,SAAS,IACrE,CAACJ,KACAlV,EAAAA,GAAAA,GAAYxK,KAAWA,GAAS0f,GAChCrZ,WAAWsZ,EAEnB,C,2DCNA,SAASI,IAAoB,SAAEC,EAAQ,KAAEhX,EAAI,gBAAEiX,EAAe,aAAEC,IAC5D,MAAMve,GAAeC,EAAAA,EAAAA,MACf,MAAE0J,ICHD6U,EAAAA,EAAAA,YAAWC,GAAAA,IDIZ,wCAAEC,GAA4C1e,EAC9CwD,GAAMT,EAAAA,EAAAA,QAAO,MAGb4b,EAAc,SAAUN,GAAYA,EAAShf,KAC7C4c,EAAU0C,GAAezf,EAAAA,cAAoBmH,GAAAA,EAAwB,CAAEhB,aAAcgZ,IAW3F,IAAIxF,EACA+C,EASJ,OAlBAgD,EAAAA,EAAAA,iBAAgB,KAERpb,EAAIH,UAAYkb,GAAgBD,GAC5B9a,EAAIH,QAAQwb,cAAgBrb,EAAIH,QAAQyb,cACxCR,EAAgB9a,EAAIH,QAAQwb,aAAerb,EAAIH,QAAQyb,eAGhE,CAACH,EAAaJ,EAAcD,EAAiB3U,IAG5CtC,IAAS0X,GAAapC,KAAO0B,EAAS5U,KACtCoP,EAAQ,IAAI8D,IAAI0B,EAAS5U,KAAKuV,SAC9BpD,EAAO1c,EAAAA,cAAoBuc,GAAAA,EAAM,CAAEnS,KAAM,MAEpCiV,IACL3C,EAAO1c,EAAAA,cAAoB+f,GAAAA,EAAU,CAAE3V,KAAM,KAC7CuP,EAAQ6F,GAEJxf,EAAAA,cAAoBA,EAAAA,SAAgB,KACxCA,EAAAA,cAAoB,MAAO,CAAEW,UAAW,0BACpCX,EAAAA,cAAoB,MAAO,CAAEW,UAAW,iDAAmDwe,EAAS9d,OACpGrB,EAAAA,cAAoB,MAAO,CAAEsE,IAAKA,EAAK3D,UAAW,wBAA0Boc,IAChF/c,EAAAA,cAAoB,MAAO,CAAEW,UAAW,2BAA6BgZ,GAAS+C,IAAU1c,EAAAA,cAAoBA,EAAAA,SAAgB,KACxHA,EAAAA,cAAoB,MAAO,CAAEW,UAAW,iDAAmDgZ,GAC3F3Z,EAAAA,cAAoB,MAAO,CAAEW,UAAW,wBAA0B+b,KAC9E,CE1CA,SAASsD,IAAsB,MAAE3e,EAAK,QAAE4P,EAAO,iBAAEgP,EAAgB,SAAEC,EAAQ,UAAEvf,IACzE,OAAQX,EAAAA,cAAoB,SAAU,CAAEmI,KAAM,SAAUxH,UAAW,GAAGA,+BAAwC,aAAcU,EAAO4P,QAASA,KACpIA,IACAgP,OACDE,QAASF,GAAoBC,EACxC,C,ICIIL,G,oBCCJ,SAASO,GAAwBja,GAK7B,IAAI9E,EAAQ8E,EAAaC,WAAW/E,QAAQ,IAyCbiF,GAxCCW,EAAAA,GAAAA,IAAsCd,EAAaC,UAAU/E,MAAM,KAyCtFiF,EAAIoB,QAAQ,IAAIjB,OAAO,aAAc,KAAM,IAAM,KAxCxDS,IAA6CD,EAAAA,GAAAA,IAAsCd,EAAa9E,QAuC1G,IAAmCiF,EAtC/B,MAAM,IAAEiE,EAAG,WAAE8V,GAjBjB,SAAoCla,GAChC,IAAI,IAAEoE,GAAQpE,EAGd,OAFAoE,EAAMA,EAAMrD,GAA6CqD,QAAO0P,EAEzD,CACH1P,MACA8V,WAHe9V,IAAO+V,EAAAA,GAAAA,IAAW/V,GAKzC,CASgCgW,CAA2Bpa,GAGvD,IAKIqa,EALAC,GAAa,EAUjB,OATKpf,GAASgf,IACVhf,EAAQkJ,EACRkW,GAAa,GAIbta,EAAaua,SAASha,OAAS,IAC/B8Z,EAASra,EAAaua,UAAU,GAAGvgB,MAEhC,CAAEkB,QAAOof,aAAYlW,MAAK8V,aAAYG,SACjD,CAOA,SAAStZ,GAA6CZ,GAClD,GAAmB,iBAARA,GAAoBA,EAAI4S,WAAW,OAAS5S,EAAIqa,SAAS,MAChE,KACKra,GAAOsa,KAAKC,MAAMva,EACvB,CACA,MAAOwa,GACH,CAGR,OAAOxa,CACX,CC1CA,SAASya,IAAkB,UAAEpgB,EAAS,SAAEwe,EAAQ,iBAAEc,EAAgB,oBAAE5Y,IAChE,MAAM/F,GAAiBC,EAAAA,GAAAA,MACjB,MAAEF,GAAU+e,GAAwBjB,IAKnCE,EAAcD,IAAmB3b,EAAAA,EAAAA,UAASO,QAAQqD,GAAqBhB,OAM9E,SAAS2a,EAAWrgB,GAChB,OAAQX,EAAAA,cAAoBqE,EAAAA,IAAM,CAAE1D,UAAWA,GAC3CX,EAAAA,cAAoBkf,GAAqB,CAAEC,SAAUA,EAAUhX,KAAM0X,GAAaoB,iBAAkB7B,gBAAiBA,EAAiBC,aAAcA,IAC5J,CACA,OAAIA,EACQrf,EAAAA,cAAoBggB,GAAuB,CAAErf,UAAWA,EAAWU,MAAOA,EAAO4P,QAV7F,WAGI3P,EAAema,MAAMC,SAASC,GAAAA,GAAQuF,0BAAyB,EAAM/B,EAAU9X,GACnF,EAMoI4Y,iBAAkBA,GAAoBe,KAEnKA,EAAWrgB,EACtB,CFRA,SAASwgB,IAAa,SAAEhC,EAAQ,WAAEiC,EAAU,iBAAEnB,EAAgB,oBAAE5Y,IAC5D,MAAM,IAAEkD,EAAG,WAAE8V,GAAeD,GAAwBjB,GAO9ChX,EALEoC,GAAO8V,EACAR,GAAapC,IAEjBoC,GAAaoB,iBAGlBtgB,EAAYC,EAAG,kBAAmB,CACpC,4BAA6BwgB,EAC7B,6BAA8BjZ,IAAS0X,GAAapC,IACpD,uBAAwBtV,IAAS0X,GAAapC,IAC9C,0BAA2BtV,IAAS0X,GAAapC,KAClD,2BACH,OAAItV,IAAS0X,GAAapC,IAGtBzd,EAAAA,cAAoB,IAAK,CAAEW,UAAWA,EAAW6Y,KAAMjP,EAAKsI,OAAQ,SAAU4G,IAAK,sBAAuBxI,QAASgP,EAAkBE,QAASF,GAC1IjgB,EAAAA,cAAoBqE,EAAAA,IAAM,KACtBrE,EAAAA,cAAoBkf,GAAqB,CAAEC,SAAUA,EAAUhX,KAAMA,MAEzEnI,EAAAA,cAAoB+gB,GAAmB,CAAE5B,SAAUA,EAAUxe,UAAWA,EAAWsf,iBAAkBA,EAAkB5Y,oBAAqBA,GACxJ,EAjCA,SAAWwY,GAIPA,EAAkB,IAAI,MAItBA,EAA+B,iBAAI,QACtC,CATD,CASGA,KAAiBA,GAAe,CAAC,IAyBpC,MAAMwB,GAAqBrhB,EAAAA,KAAWmhB,I,+CGzCtC,SAASG,IAAgB,YAAEC,EAAW,SAAErB,IACpC,OAAOqB,EAAcC,GAAAA,aAAsBtB,EAAUqB,GAAe,IACxE,C,qCCMA,MAAME,GAA6B,wDACnC,SAASC,GAAyBjhB,EAAO6D,GACrC,MAAM,kBAAEqd,EAAiB,kBAAEC,EAAiB,cAAEC,EAAa,WAAEC,EAAU,oBAAEC,GAAyBthB,EAC5FK,GAAeC,EAAAA,EAAAA,KACfO,GAAiBC,EAAAA,GAAAA,MACjB,eAAEygB,GAAmBF,EAAWpW,SAChCuW,EAAW,gCAA+BC,EAAAA,GAAAA,OAAe5gB,EAAe6gB,UAAUC,UACjFC,EAAiBC,IAAsB7e,EAAAA,EAAAA,YACxCG,GAAUC,EAAAA,EAAAA,WACTqN,EAAMqR,IAAW9e,EAAAA,EAAAA,UAAS,IACjC,IAAItD,EAyBJ,OAvBIA,EADA6hB,IAAmBA,EAAeQ,OAC3BR,EAAeS,OAAO7b,IAAK8b,GAAUA,EAAMviB,MAAMwG,KAAK,IAGtDmb,EAAW7V,KAAK9L,MAE3B+D,EAAAA,EAAAA,WAAU,MACN6W,iBACI,MAAM4H,QAuClB5H,eAAwC5a,EAAMwhB,EAAmBI,GAgB7D,MAAMa,EAASjB,GAAmBiB,OAClC,GAAIA,GAAQlc,OAAQ,CAEhB,MAAMmc,EAAS,GACf,IAAIC,EAAa,EACjBF,EAAOjU,QAASoU,IACZ,MAAMC,EAAkB7iB,EAAK2H,UAAUgb,EAAYC,EAAME,OACnD7c,EAAYjG,EAAK2H,UAAUib,EAAME,MAAOF,EAAMG,KACpDL,EAAOhb,KAAKmb,GACZH,EAAOhb,KAAKsb,IACZN,EAAOhb,KAAKzB,GACZyc,EAAOhb,KAAKub,IACZN,EAAaC,EAAMG,MAEvB,MAAMG,EAAYljB,EAAK2H,UAAUgb,EAAY3iB,EAAKuG,QAClDmc,EAAOhb,KAAKwb,GACZljB,EAAO0iB,EAAOlc,KAAK,GACvB,CACA,MAAM2c,QCpFVvI,eAA+B5b,EAAOokB,GAAc,GAChD,MAAMC,QAAkBC,EAAAA,GAAAA,GAAkBtkB,OAAO8a,GAEjD,OApBJ,SAA0ByJ,GAEtB,MAAMC,EAAYC,SAAShH,cAAc,QAEzCxM,EAAAA,EAAAA,IAAOsT,EAAQC,GAEf,MAAME,EAAaF,EAAUG,UAG7B,OADA1T,EAAAA,EAAAA,IAAOc,EAAAA,EAAK,GAAIyS,GACTE,CACX,CASiBE,EAAiBC,EAAAA,GAAAA,GAAgBR,EAAWD,GAE7D,CDgFqBU,CAAgB9jB,GAC3B+jB,GAAoBC,EAAAA,GAAAA,IAAab,GACvC,GAAIV,GAAUb,EACV,IAEI,MAAMqC,EAAcR,SAAShH,cAAc,OAM3C,GALAwH,EAAYN,UAAYI,EACpBtB,GAEAyB,GAAiBD,GAAa,GAE9BrC,EAAqB,CAErB,MAAMM,EAAkBuB,SAAShH,cAAc,QAC/CyF,EAAgB1hB,UAAY8gB,GAE5B,MAAM6C,EAAcF,EAAYG,iBAC1BC,EAAUF,GAAa1S,QACb,MAAZ4S,GAEAF,EAAYG,YAAYb,SAASc,eAAe,MAChDJ,EAAYG,YAAYpC,KAIxB+B,EAAYK,YAAYpC,GACxBA,EAAgB1hB,WAAa,IAAI8gB,YAEzC,CACA,OAAO2C,EAAYN,SACvB,CACA,MAAOhD,IACH9E,EAAAA,GAAAA,IAAa,kDAAmD7b,EAAMwhB,EAAmBb,EAC7F,CAEJ,OAAOoD,CACX,CA7GkCS,CAAyBxkB,EAAMwhB,EAAmBI,GACxEQ,EAAQI,EACZ,CACAiC,IACD,CAACzkB,EAAMwhB,EAAmBI,KAC7B8C,EAAAA,EAAAA,qBAAoBvgB,EAAK,KAAM,CAK3BwgB,0BAA2BA,IAAMlhB,EAAQO,SAAS4gB,cAAc,8BAEpErF,EAAAA,EAAAA,iBAAgB,KACZ,MAAMiE,EAAY/f,EAAQO,SAAS4gB,cAAc,IAAItD,MACrDa,EAAmBqB,IACpB,CAACzS,IACIlR,EAAAA,cAAoB,MAAO,CAAEW,UAAW,8BAA+B2D,IAAKV,GAChF5D,EAAAA,cAAoBglB,GAAAA,EAAoC,CAAE9T,KAAMA,EAAMhR,kBAAkB,IACxFmiB,GAEAriB,EAAAA,cAAoBshB,GAAiB,CAAEC,YAAac,GAChDriB,EAAAA,cAAoBA,EAAAA,SAAgB,KAChCA,EAAAA,cAAoB,OAAQ,CAAEW,UAAW,gDACrCX,EAAAA,cAAoBilB,EAAAA,IAAgB,CAAE5kB,GAAI4hB,EAAUhR,QAAS2Q,EAAmB,gBAAiBC,EAAe1hB,KAAMW,EAAaokB,oCAAqC/hB,WAAY0e,EAAgBsD,GAAAA,EAAYC,GAAAA,EAAa,aAActkB,EAAaukB,wCAC5PrlB,EAAAA,cAAoB,OAAQ,KAAM,OAClD,CACA,MAAMmjB,GAAwB,kBACxBC,GAAsB,mBACtBkC,GAAyB,sBAyF/B,SAASjB,GAAiBkB,EAAQC,GAwC9B,OAvCmBtS,MAAMC,KAAKoS,EAAOE,YAC1B9W,QAASqO,IAChB,GAAIA,aAAiB0I,KAAM,CACvB,MAAMvlB,EAAO6c,EAAMyC,YACbkG,EAAezS,MAAMC,KAAKhT,EAAKylB,SAASN,KAC9C,GAAKK,EAAajf,QAAW8e,EACxB,CAGD,IAAI1C,EAAa,EACjB6C,EAAahX,QAASkX,IAElB,MAAMC,EAAoBD,EAAM,KAAOzC,GACjC3D,EAActf,EAAK2H,UAAUgb,EAAY+C,EAAM/e,OACrDgc,EAAa+C,EAAM/e,MAAQ+e,EAAM,GAAGnf,OAEpCqf,GAAetG,EAAaqG,EAAmBP,EAAQvI,GAEvDwI,GAAiBM,IAIrBC,GADiB5lB,EAAK2H,UAAUgb,EAAY3iB,EAAKuG,QACxB8e,EAAeD,EAAQvI,GAEhDA,EAAMgJ,QACV,CACJ,MACShJ,aAAiBiJ,SAEtBjJ,EAAMkJ,oBAAoBvX,QAASwX,IAC/B,MAAMhnB,EAAQ6d,EAAMlK,aAAaqT,GAC7BhnB,GACA6d,EAAMoJ,aAAaD,EAAMhnB,EAAMknB,WAAWf,GAAwB,OAK9EE,EAAgBnB,GAAiBrH,EAAOwI,KAErCA,CACX,CASA,SAASO,GAAe5lB,EAAMmmB,EAAaf,EAAQgB,GAC/C,GAAIpmB,EAAM,CACN,MAAMqmB,EAAW5C,SAASc,eAAevkB,GAIzC,GAAImmB,GAAenmB,EAAKsmB,OAAQ,CAE5B,MAAMC,EAAgB9C,SAAShH,cAAc,QAC7C8J,EAAc/lB,UAAY,2CAC1B+lB,EAAcjC,YAAY+B,GAC1BjB,EAAOoB,aAAaD,EAAeH,EACvC,MAEIhB,EAAOoB,aAAaH,EAAUD,EAEtC,CACJ,CACA,MAAMK,GAAiC5mB,EAAAA,KAAWA,EAAAA,WAAiB0hB,KEhN7DnD,IAAWC,EAAAA,GAAAA,MACjB,SAASqI,IAAqB,iBAAExZ,EAAgB,sBAAEW,EAAqB,iBAAE8Y,EAAgB,aAAEve,IACvF,MAAOwe,EAAuBC,IAA4BvjB,EAAAA,EAAAA,UAAS,IAC5Doe,EAAeoF,IAAoBxjB,EAAAA,EAAAA,WAAS,GAC7CyjB,GAAqBrjB,EAAAA,EAAAA,UACrBsjB,GAAYtjB,EAAAA,EAAAA,UACZ/C,GAAeC,EAAAA,EAAAA,KACfqmB,GAAuCvjB,EAAAA,EAAAA,UACvC4W,EAAcpN,EAAiBpB,KAC/Bob,GAAkB9Y,EAAAA,EAAAA,SAAQ,IA+CpC,SAAuB+Y,GACnB,IAAKA,EACD,OAAO,KAEX,MAAMC,EAAaD,EAAUE,OAAQrI,GAAaA,EAASyD,QAAQlc,QAC7D+gB,EAAgBH,EAAUE,OAAQrI,IAAcA,EAASyD,QAAQlc,QACvE,OAAO6gB,EAAWG,OAAOD,EAC7B,CAtD0CE,CAAclN,EAAY6M,WAAY,CAAC7M,EAAY6M,YACzF,SAASM,IAILpiB,WAAW,IAAMwI,EAAsBkZ,EAAmB/iB,QAAS,GAAI,IAC3E,CAiCA,OA1BAya,GAAoBvR,EAAiB3B,SAASsW,gBAAgBS,OAAQla,GA0B9DvI,EAAAA,cAAoB,MAAO,CAAEW,UAAW,2BAC5CX,EAAAA,cAAoB4mB,GAAgC,CAAEtiB,IAAK8iB,EAAsCtF,WAAYzU,EAAkB0U,oBAAqB/d,QAAQqjB,GAAiB3gB,QAASib,kBAAmBE,EAAgBwF,IAAkBN,GAAyB,KAAMnF,kBAlB9Q,WACIqF,GAAkBpF,GACbA,IACD+F,IAjBJpiB,WAAW,IAAM4hB,EAAqCjjB,QACjD2gB,6BACC+C,SAkBV,EAYoThG,cAAeA,IAC/TiF,GAAqB9mB,EAAAA,cAAoBa,GAAAA,EAAa,CAAEV,KAAMW,EAAagnB,2CAC3E9nB,EAAAA,cAAoB,MAAO,CAAEsE,IAAK4iB,GAAsBrF,GAb5D,WACI,MAAMkG,EAAQV,GAAiBzgB,IAAI,CAACuY,EAAUrY,IAAW9G,EAAAA,cAAoBqhB,GAE3E,CAEEta,IAAKD,EAAOqY,SAAUA,EAAUiC,WAAYta,IAAUigB,EAAuB9G,iBAAkBA,IAlBvG,SAA0BnZ,GACtBmgB,GAAiB,GACjBD,EAAyBlgB,GACzBtB,WAAW,IAAM2hB,EAAUhjB,SAAS6jB,OAAOC,QAAQnhB,IACnD8gB,GACJ,CAa6G3H,CAAiBnZ,MAC1H,OAAQ9G,EAAAA,cAAoB,MAAO,CAAEW,UAAW,qCAC5CX,EAAAA,cAAoBqK,EAAAA,SAAU,CAAEC,SAAUtK,EAAAA,cAAoB4F,GAAAA,EAAqB,OAC/E5F,EAAAA,cAAoBue,GAAU,CAAE4I,UAAWA,EAAWe,aAAcnB,EAAuBoB,cAAenB,GAA4Be,IAClJ,CAI6EK,IACjF,CClDA,SAASC,GAAoB5nB,GACzB,MAAM,aAAE8H,EAAY,iBAAEue,EAAgB,eAAE9E,EAAc,eAAE1gB,GAAmBb,EACrEK,GAAeC,EAAAA,EAAAA,KAGfunB,EAA0BhnB,EAAeqa,QAAQ4M,8BAA8B9nB,EAAM+nB,gBAE3F,OADA5J,GAAoBoD,GAAgBS,OAAQla,GACpCvI,EAAAA,cAAoB,MAAO,CAAEW,UAAW,mCAAoC,gCAAgC,GAChHX,EAAAA,cAAoB,OAAQ,CAAEmmB,KAAMmC,EAAwBG,WAC5D3B,GAAqB9mB,EAAAA,cAAoBa,GAAAA,EAAa,CAAEV,KAAMW,EAAagnB,2CACnF,CACA,IAAIY,GAAwB1oB,EAAAA,KAAWqoB,I,sBClBvC,MAAMM,GAA4B,IAAIliB,OAAO,KAAKmiB,GAAAA,WAA4B,K,oCCiB9E,SAASC,GAAoBpoB,GACzB,MAAM,aAAEyV,EAAY,SAAEuC,EAAQ,sBAAEzK,GAA0BvN,EACpDa,GAAiBC,EAAAA,GAAAA,KACjBunB,GAAOC,EAAAA,EAAAA,KACPC,GAAgBtnB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMsnB,QAC7Crb,GAAkBlM,EAAAA,EAAAA,IAAaC,GAAUA,EAAMunB,gBAAgBhT,EAAamF,gBAC5E8N,GAAUtlB,EAAAA,EAAAA,SAAOulB,EAAAA,GAAAA,GAAKC,GAAAA,EAASC,iBAC9BC,EAAgBC,IAAqB/lB,EAAAA,EAAAA,WAAS,IAC9CgmB,EAAkBC,IAAuBjmB,EAAAA,EAAAA,aACzCkmB,EAAiBC,IAAsBnmB,EAAAA,EAAAA,aACvComB,EAAmBC,IAAwBrmB,EAAAA,EAAAA,aAC3CsmB,EAAiBC,IAAsBvmB,EAAAA,EAAAA,aACvCwmB,EAAaC,IAAkBzmB,EAAAA,EAAAA,aAC/B0mB,EAAuBC,IAA4B3mB,EAAAA,EAAAA,YACpD4mB,GAAuBxmB,EAAAA,EAAAA,UAMvBymB,GAAkCzmB,EAAAA,EAAAA,SAAO,GACzC0mB,EAAazB,EAAK0B,cAAc,CAAEnqB,GAAI,yBAA2B,CAAEoqB,OAAQZ,IAC3EtnB,EAAqBumB,EAAK0B,cAAc,CAC1CnqB,GAAI,2BAEFqqB,EAAkB1mB,QAAQ2lB,GAAmBE,GAAqBE,GAAmBE,GAK3F,SAASU,EAAqB1B,GAE1B,MAEM2B,ED5Cd,SAA4BzrB,GACxB,IAAIsrB,EAAStrB,EAAMuI,QAAQihB,GAA2B,IAStD,OAPK8B,EAAOI,SAAS,QACjBJ,EAASA,EAAO/iB,QAAQ,IAAK,OAG5B+iB,EAAOI,SAAS,QACjBJ,EAASA,EAAO/iB,QAAQ,IAAK,OAE1B+iB,CACX,CCiC2BK,CAFJC,GAAAA,GAAS9B,IAAS+B,SAASC,GAAGC,qBACzCC,GAAAA,IAkGZ,IAA6BC,EAhGrBlB,EAAejB,GACfe,EAiGgB,WAFKoB,EA/FkBnC,GAkGhC,QAMHmC,EAAYP,SAAS,KAAOO,EAAY5kB,MAAM,KAAK,GAAK4kB,GAvG5DtB,EAAqBc,GACrBhB,EA2GR,SAAgCa,GAC5B,MAAMY,EAAOZ,EAAOI,SAAS,KAAO,IAAM,IACpCS,EAAYb,EAAOS,oBAAoBzE,OAAO,GACpD,GAAkB,MAAd6E,EACA,MAAO,IAAID,KAAQA,KAEvB,GAAkB,MAAdC,EACA,MAAO,IAAID,KAAQA,KAEvB,GAAkB,MAAdC,EACA,MAAO,IAAID,KAAQA,KAEvB,MAAME,MAAM,uBAAuBd,gBACvC,CAxH2Be,CAAuBZ,GAC9C,CAIA,MAAMa,GAAkBnmB,EAAAA,EAAAA,aAAY,KAChC,MAAM,SAAEoG,EAAU2P,cAAeqQ,GAAexV,EAC1CsS,EAAiB9c,EAASrL,GAC1BsrB,GAAUC,EAAAA,EAAAA,IAA4BvB,EAAqBlmB,QAASslB,EAAkBiC,GAC5FpqB,EAAeqa,QAAQE,cAAc8P,EAAS7P,EAAAA,GAAkB+P,YAAa,CACzEC,6BAA8BtD,KAEnC,CAACtS,EAAc5U,EAAgBmoB,IAI5BsC,GAA0BzmB,EAAAA,EAAAA,aAAY,KACxC0I,EAAsBmc,EAAuB,EAAG,KACjD,CAACA,EAAuBnc,IAyB3B,OAxBAge,EAAAA,GAAAA,GAAW,KACP,MAAMC,EAAoBjD,GACpB,iBAAEkD,GAAqBhW,EAAaxK,SACtBkC,EAAgBgJ,QAAQuV,cAEzBD,GACfxC,EAAoBwC,GAExB,IAEQnB,GAAAA,GAASkB,GACTtB,EAAqBsB,IAGrBG,EAAAA,GAAAA,IAAgBH,GAAmBI,KAAMpD,IACrC0B,EAAqB1B,IAGjC,CACA,OACIjN,EAAAA,GAAAA,IAAa,UAAUiO,qEACvBU,EAAqB,KACzB,IAEI3qB,EAAAA,cAAoB,MAAO,CAAEW,UAAW,iBAC5C+pB,GAAmBP,GAA0BnqB,EAAAA,cAAoBssB,EAAAA,IAAO,KACpEtsB,EAAAA,cAAoBusB,EAAAA,IAAY,CAAE5rB,UAAW,0BAA2B6rB,eAAgB,SAAUC,YAAY,EAAOxD,OAAQc,EAAiB2C,SAAUvC,EAAuBwC,SAAWC,IAClL,GAAIA,EAAMlmB,OAAQ,CACd,MAAMmmB,EAAOD,EAAM,GAEnBvC,EAAqBlmB,QDpE7C,SAA+B0oB,GAC3B,MAAMC,EAAMtd,OAAOqd,EAAKE,WAAWC,SAAS,EAAG,KACzCC,EAAQzd,OAAOqd,EAAKK,WAAa,GAAGF,SAAS,EAAG,KAEtD,MAAO,GADMxd,OAAOqd,EAAKM,kBACPF,KAASH,GAC/B,CC+DuDM,CAAsBP,GAErDnD,EDhFxB,SAA0BmD,EAAMpC,GAC5B,MAAMqC,EAAMtd,OAAOqd,EAAKE,WAAWC,SAAS,EAAG,KACzCC,EAAQzd,OAAOqd,EAAKK,WAAa,GAAGF,SAAS,EAAG,KAChDK,EAAO7d,OAAOqd,EAAKM,eACzB,OAAO1C,EAAO/iB,QAAQ,KAAMolB,GAAKplB,QAAQ,KAAMulB,GAAOvlB,QAAQ,OAAQ2lB,EAC1E,CC2E4CC,CAAiBT,EAAMhD,GAC/C,GACDe,WAAYjB,EAAiB4D,OAAQA,KACpC/D,GAAkB,GAYdc,EAAgCnmB,QAChCmmB,EAAgCnmB,SAAU,EAG1C4nB,KAELpX,QAASA,IAAM6U,GAAkB,IACpCxpB,EAAAA,cAAoBwtB,EAAAA,IAAiB,CAAEntB,GAAI8oB,EAAQhlB,QAASspB,UAAWlD,EAAY/U,YAAaqU,EAAmBpR,SAAUA,EAGzHpX,MAAO,GAIPqsB,cAAeA,KACXpD,EAAgCnmB,SAAU,GAI9C8M,QAASA,IAAM8a,QAC3B/rB,EAAAA,cAAoB,MAAO,CAAEW,UAAW,mCAAoC2D,IAAK8lB,KAChF3R,IAAa8Q,GAAkBE,GAAqBzpB,EAAAA,cAAoBwY,EAAAA,IAAQ,CAAE7X,UAAW,+BAAgCsQ,QAASwa,EAAiBtoB,WAAa1C,GAAUT,EAAAA,cAAoB2X,EAAAA,EAAW,CAAEvN,KAAM,MAAO3J,KAAY8B,GACjP,CAiCA,MAAMorB,GAA4B3tB,EAAAA,KAAW6oB,I,eCzK7C,MAAM+E,GAA2B,gBAMjC,SAASC,IAAkB,iBAAExgB,EAAgB,gBAAEO,IAC3C,MAAMtM,GAAiBC,EAAAA,GAAAA,KACjBT,GAAeC,EAAAA,EAAAA,KACf0M,GAAY/L,EAAAA,EAAAA,IAAaC,GAAUA,EAAMgJ,QACzC+C,GAAahM,EAAAA,EAAAA,IAAYiM,GAAAA,IACzBhC,GAAsBjK,EAAAA,EAAAA,IAAaC,GAAUA,EAAMgK,sBACnD,QAAEmiB,EAAO,qBAAEC,EAAoB,mBAAEC,EAAkB,UAAEjQ,GAAc1Q,EAAiBpB,KACpFgiB,EAAsBH,GAASlnB,IAAKsnB,GAAWA,EAAOzjB,OAAO9D,KAAK,MAZ/C,IAazB,OAAQ3G,EAAAA,cAAoB,MAAO,CAAEW,UAAWC,EAAG,UAAW,CACtDkd,iBAAkBC,IAAcC,GAAAA,GAAaC,MAC7CC,kBAAmBH,IAAcC,GAAAA,GAAaG,OAC9CC,iBAAkBL,IAAcC,GAAAA,GAAaK,QAGjDvU,MAAO,CAAEmkB,wBAAyB5gB,EAAiB3B,SAASyiB,wBAAwBvnB,IAAI,CAACwnB,EAAKC,IAElGruB,EAAAA,cAAoB,MAAO,CAAE+G,IAAK,OAAOsnB,IAAY1tB,UAAW,gBAAkBytB,EAAIxnB,IAAI,CAAC0nB,EAAMC,KAC7F,MAAMC,EAAWnhB,EAAiBpB,KAAKwiB,KAAKJ,IAAWK,MAAMH,GAC7D,IACII,EADAC,EAAoBd,IAAUS,IAAc9jB,OAvB3B,IAgCrB,OAPImkB,EAAkB/I,MAAM+H,IACxBe,EAAeC,EAAkBjO,SAAS,OAG1CiO,EA7BiB,IA8BjBD,GAAe,GAEX3uB,EAAAA,cAAoB,MAAO,CAAEW,UAAW,gBAE5CmJ,MAAO,CACHW,MAAOkkB,EAAeC,OAAoB3U,EAC1C4U,KAAMF,OAAe1U,EAAY6U,OAAOF,GACxCG,WAAYC,GAAiBR,GAAUT,sBAAwBA,GAC/DkB,eAAgBD,GAAiBR,GAAUR,oBAAsBA,IAGrEjnB,IAAK,QAAQsnB,KAAYE,KAAiBD,EAAK1nB,IAAI,CAACsoB,EAAoBC,KACxE,MAAMtvB,EAAU8L,EAAoBujB,GACpC,OAAQlvB,EAAAA,cAAoBuM,GAE1B,CAEExF,IAAK,QAAQsnB,KAAYE,KAAeY,IAAatvB,QAASA,EAAS+N,gBAAiBA,EAAiB9M,aAAcA,EAAc+M,kBAAmBI,GAAAA,GAAaH,kBAAmBJ,EAAWK,WAAYpD,OAAQ8C,EAAWF,mBAAmB,EAAOS,sBAAuBC,GAAAA,GAAa3M,eAAgBA,EAAgBkL,qBAAqB,EAAM0B,cAAc,EAAMC,kBAAkB,WAGjZ,CAIA,SAAS6gB,GAAiB7vB,GACtB,OAAQA,GACJ,IAAK,SACL,IAAK,QACD,MAAO,WACX,IAAK,SACD,MAAO,SAGX,QACI,MAAO,aAEnB,CACA,MAAMiwB,GAA0BpvB,EAAAA,KAAW6tB,I,eCjE3C,SAASwB,IAA2B,YAAE5U,EAAW,aAAElS,IAC/C,MAAM,OAAE1D,EAAM,UAAE6V,EAAS,MAAErZ,EAAK,YAAE0B,GAAgB0X,EAC5CxV,GAAavD,EAAAA,EAAAA,IAAaC,GAAUA,EAAMoY,MAAM9U,YAChDP,GAAcC,EAAAA,GAAAA,IAAeE,IAC7B,MAAE4W,IAAUla,EAAAA,GAAAA,MACZ,wBAAE+tB,IAA4BvuB,EAAAA,EAAAA,KAE9BwuB,GADOxG,EAAAA,EAAAA,KACkCyB,cAAc,CAAEnqB,GAAI,+BAAiC,CAAEwE,OAAQH,IAkB9G,OAAQ1E,EAAAA,cAAoB,MAAO,KAC/BA,EAAAA,cAAoBoZ,GAAgB,CAAE/X,MAAOA,EAAO0B,YAAaA,EAAa8B,OAAQ6V,EAAW1X,WAAY6B,EAAQC,QAASwqB,EAAyBtqB,YAL3J,WAEIuD,KACJ,EAE2LpF,WAAYmZ,GAAAA,EAAYrL,QAfnN,WAGQpM,GACA4W,EAAMC,SAASC,GAAAA,GAAQ6T,iBAAiB/U,GAEhD,EAS6O1V,oBAAoB,EAAME,WAAYA,IAC/QjF,EAAAA,cAAoBsL,GAAAA,EAAgB,KAAMikB,GAClD,CACA,MAAME,GAA0BzvB,EAAAA,KAAWqvB,I,qCC/B3C,SAASK,IAAa,YAAEjV,EAAW,aAAElS,IACjC,MAAMlF,GAAgBC,EAAAA,GAAAA,MAChB,oBAAEqsB,IAAwB5uB,EAAAA,EAAAA,MACzB2C,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IACjC,OAAEoB,EAAM,MAAExD,GAAUoZ,EACpBnS,GAAasnB,EAAAA,EAAAA,IAAmBnV,IAAcoV,YAC9C3mB,GAAaC,EAAAA,GAAAA,IAAiCb,GAC9Cc,GAAeC,EAAAA,GAAAA,GAAwB,CAAEH,eACzC4mB,EAAczuB,GAASwD,EAIvBkrB,GAAoBzqB,EAAAA,EAAAA,aAAY,KAClC3B,GAAW,GACXN,EAAcssB,IACf,CAACtsB,EAAessB,IACnB,OAAIjsB,EACO1D,EAAAA,cAAoBa,GAAAA,EAAa,CAAEV,KAAMwvB,IAIpD3vB,EAAAA,cAAoB,MAAO,CAAEW,UAAW,kBAAmBmJ,MAAOV,GAC9DpJ,EAAAA,cAAoBgwB,GAAAA,EAAiB,CAAEnrB,OAAQA,EAAQxD,MAAOyuB,EAAaC,kBAAmBA,EAAmBhqB,OAAQA,IAAMwC,QACvI,CC9BA,SAAS0nB,IAAc,aAAE1nB,EAAY,aAAE2N,EAAY,gBAAEga,IACjD,MAAM,KAAEjkB,GAASiK,EAGjB,OAFoBjK,EAAKkkB,UAELC,GAAAA,GAAwBC,QACxCH,IAAoBE,GAAAA,GAAwBC,OAEpCrwB,EAAAA,cAAoB0vB,GAAc,CAAE3oB,IAAKkF,EAAKpH,OAAQ0D,aAAcA,EAAckS,YAAaxO,IAEpGjM,EAAAA,cAAoByvB,GAAyB,CAAElnB,aAAcA,EAAckS,YAAaxO,GACnG,C,eCZA,SAASqkB,IAAY,UAAE3vB,EAAS,KAAER,EAAI,yCAAEa,GAA2C,IAC/E,OAAQhB,EAAAA,cAAoB,MAAO,CAAEW,UAAW,oBAAoBA,KAChEX,EAAAA,cAAoBC,GAAAA,EAAgB,CAAEE,KAAMA,EAAMa,yCAA0CA,IACpG,CCHA,SAASuvB,IAAU,MAAElvB,EAAQ,KAAI,YAAE0B,EAAc,KAAI,GAAE1C,EAAK,KAAI,yCAAEW,GAA2C,IACzG,OAAOK,GAAS0B,EAAe/C,EAAAA,cAAoB,MAAO,CAAEW,UAAW,2BAA4BN,GAAIA,GACnGgB,GAAUrB,EAAAA,cAAoBswB,GAAa,CAAE3vB,UAAW,uDAAwDR,KAAMkB,EAAOL,yCAA0CA,IACvK+B,GAAgB/C,EAAAA,cAAoBswB,GAAa,CAAE3vB,UAAW,6DAA8DR,KAAM4C,EAAa/B,yCAA0CA,KAAiD,IAClP,C,eCcA,SAASwvB,GAAgB/vB,GACrB,MAAM,MAAEY,EAAK,YAAE0B,EAAW,QAAE0tB,EAAO,SAAE9D,EAAQ,aAAE7rB,EAAY,kBAAEgN,EAAiB,eAAExM,EAAc,yCAAEN,GAA8CP,GACvIiwB,EAAeC,IAAoBltB,EAAAA,EAAAA,WAAS,GAC7CG,GAAUC,EAAAA,EAAAA,UAGVxD,EAAK,IADK6hB,EAAAA,GAAAA,OACQ5gB,EAAe6gB,UAAUC,SAC3CwO,EAAchtB,EAAQO,SAAS0sB,YAlBzC,SAAgCC,GAC5B,MAAMC,EAAa,CACfnN,SAAUkN,EAAWE,cACrBC,iBAAkBH,EAAWE,cAAcC,iBAAiBpc,KAAKic,GACjEI,oBAAqBJ,EAAWE,cAAcE,oBAAoBrc,KAAKic,GACvEK,WAEJ,OAAO,IAAIC,MAAMN,EAAY,CACzBO,IAAKA,CAACC,EAAGC,IAASR,EAAWQ,IAErC,CASUC,CAAuB5tB,EAAQO,QAAQ0sB,oBACvC5W,EA4BN,OAAQja,EAAAA,cAAoB,MAAO,CAAEsE,IAAKV,GACtC5D,EAAAA,cAAoBuwB,GAAW,CAAElvB,MAAOA,EAAO0B,YAAaA,EAAa1C,GAAI,mBAAmBA,UAAYW,yCAA0CA,IACtJhB,EAAAA,cAAoB,MAAO,CAAEW,UAAWC,EAAG,oBAAqB,CACxD6wB,kCAAmCf,KAEvC1wB,EAAAA,cAAoBssB,EAAAA,IAAO,KACvBtsB,EAAAA,cAAoB0xB,EAAAA,IAAU,CAAErxB,GAAI,mBAAmBA,IAAMsxB,MAAOlB,EAAS9W,MAAO7Y,EAAa8wB,eAAgBC,UAAW/wB,EAAa8wB,eAAgBE,WAAW,EAAM,aAAchkB,EAC9KhN,EAAaixB,4BACb1wB,EAAOoX,SAAU3K,EAAmB6e,SAAUA,EAAUqF,aAnC9E,WACI,MAAM,MAAE7yB,EAAK,QAAEsxB,GAAYhwB,EAI3B,OAHqBgwB,EAAQwB,KAAMhmB,GACxBA,EAAK9M,QAAUA,EAG9B,CA6B4F+yB,GAAsBC,eAAgB,CAC9GvB,cACAwB,eA9BpB,SAAwBC,GAKhBA,EAAQ/c,QAAU1R,EAAQO,SAI1BqB,WAAW,KACH5B,GAASO,UACTwsB,GAAiB,IACjB5E,EAAAA,GAAAA,IAAwBnoB,EAAQO,SAAS,GACzCwsB,GAAiB,KAEtB,IAIX,EAYoBtwB,GAAI,iCAAiCA,SAE7D,C,eC/DA,MAAMiyB,WAAwBC,EAAAA,UAC1BvgB,WAAAA,GACIC,SAASC,WAOTV,KAAKghB,iBAAmB,CAACC,EAAgBtqB,KACrC,MAAM,aAAE+N,EAAY,eAAE5U,EAAc,gBAAEsM,GAAoB4D,KAAK/Q,OACvDJ,GAAIqrB,GAAe9d,EACrB2N,GAAiBmX,EAAAA,EAAAA,IAA8BD,EAAgB/G,GAC/DlD,EAAiBtS,EAAaxK,SAASrL,GAEvCwE,EAAkB,WAATsD,EACT2T,EAAAA,GAAkB6W,cAClB7W,EAAAA,GAAkB8W,iBACxBtxB,EAAeqa,QAAQE,cAAcN,EAAgB1W,EAAQ,CACzDinB,6BAA8BtD,IAGlChX,KAAK/Q,MAAMoN,qBAMf2D,KAAKqhB,cAAgB,CAAClgB,EAAO1G,KACzBuF,KAAKghB,iBAAiBvmB,EAAM,WAMhCuF,KAAKshB,eAAkBC,IACnBvhB,KAAKghB,iBAAiBO,EAAKf,aAAc,YAEjD,CACA5hB,MAAAA,GACI,MAAM,aAAE8F,EAAY,aAAEpV,EAAY,kBAAEgN,EAAiB,eAAExM,EAAc,yCAAEN,GAA8CwQ,KAAK/Q,OACpH,QAAEgwB,EAAO,MAAEpvB,EAAK,YAAE0B,EAAW,WAAEiwB,GAAe9c,EAAajK,MAC3D,eAAE4O,GAAmB3E,EAAaxK,SAExC,MAAgB,YADHunB,EAAAA,EAAAA,IAAcD,EAAYvC,EAAQ/pB,QACnB1G,EAAAA,cAAoBA,EAAAA,SAAgB,KAC5DA,EAAAA,cAAoBuwB,GAAW,CAAElvB,MAAOA,EAAO0B,YAAaA,EAAa/B,yCAA0CA,IACnHhB,EAAAA,cAAoB,MAAO,CAAEW,UAAW,sBACpCX,EAAAA,cAAoB,KAAM,KAAMywB,EAAQ7pB,IAAI,CAACqF,EAAMnF,KAC/C,MAAMsa,IAAavG,GACb5O,EAAK9M,MAAMmc,MAAMnb,OAAS0a,EAAeS,MAAMnb,KAErD,OAAQH,EAAAA,cAAoB,KAAM,CAAE+G,IAAKkF,EAAK0N,OAC1C3Z,EAAAA,cAAoBkzB,EAAAA,IAAsB,CAAEtZ,KAAMuZ,GAAAA,GAAe7Y,SAAU8Y,eAAe,EAAMhpB,KAAMipB,GAAAA,GAAepV,MAAOtd,UAAW,eAAemG,IAAS2R,SAAU3K,EAAmBsT,WAAYA,EAAYnQ,QAAU0B,IACtNnB,KAAKqhB,cAAclgB,EAAO1G,KACzBA,EAAK0N,aACZ3Z,EAAAA,cAAoBwwB,GAAiB,CAAElvB,eAAgBA,EAAgBR,aAAcA,EAAcO,MAAOA,EAAO0B,YAAaA,EAAa0tB,QAASA,EAAS3iB,kBAAmBA,EAAmB6e,SAAUnb,KAAKshB,eAAgB3zB,MAAO0b,EAAgB7Z,yCAA0CA,GACzT,E,uDCvDJ,MAAMsyB,IAAgB5jB,EAAAA,EAAAA,IAAS,IACxB6jB,GAAAA,EACH1W,MAAO,IACA0W,GAAAA,EAAW1W,MACdQ,KAAM,UAMd,SAASmW,GAAcC,GACnB,MAAM,WAAEC,EAAU,iBAAEC,EAAgB,QAAEC,EAAO,eAAEC,EAAc,sBAAEC,EAAqB,OAAE7K,EAAQ8K,gBAAiBC,EAAgBC,aAAcC,EAAkBC,gBAAiBC,EAAqBC,mBAAoBC,GAAuBb,EAoDhP,OAAOviB,EAAAA,EAAK;oCACoB2iB;;aAEvB5K;kBACKmL;uBACI;iCACWE;;MAE3BZ,GACExiB,EAAAA,EAAK;SACJwiB;;MAEHC,GACEziB,EAAAA,EAAK;SACJyiB;;MAhEMziB,EAAAA,EAAK;;UAEVkjB,EACIljB,EAAAA,EAAK;;4BAES4iB;iDAEd;oCACsBE;cACvB3iB,EAAAA,EAAAA,GAAUiiB;;;oCAMRpiB,EAAAA,EAAK;;UAEV0iB,EAAQhtB,IAAK2tB,GAAWrjB,EAAAA,EAAK;iBACtBqjB;;;iCAMFrjB,EAAAA,EAAK;SACZsjB,EAAAA,GAAAA,GAAON,EAAmB9F,GAAQA,EAAI/tB,GAAK+tB,GAO3Cld,EAAAA,EAAK,4BAA4Bkd,EAAI/tB;eAC9B+tB,EAAIM,MAAM9nB,IAAK0nB,GAASpd,EAAAA,EAAK,0BAA0Bod;;;sBAmCtE,C,sBC/EA,MAGMmG,GAAsB,CAHI,EACU,GAKtC,GACA,GACA,IAKEC,GAA2B,mBAIjC,IAAIC,GAAe,cAA2B3lB,EAAAA,GAC1CgD,WAAAA,GACIC,SAASC,WAITV,KAAKojB,UAAW,EAIhBpjB,KAAKqjB,mBAAqB,EAQ1BrjB,KAAKsjB,qBAAsB,EAI3BtjB,KAAKyiB,aAAe,EACxB,CAQA5hB,OAAAA,CAAQC,IAICA,EAAkBC,IAAI,YAAcD,EAAkBC,IAAI,eAC1C0H,IAAjBzI,KAAKoiB,cACS3Z,IAAdzI,KAAKid,MACLjd,KAAKujB,oBAGLziB,EAAkBC,IAAI,cAAyB0H,IAAdzI,KAAKid,MACtCjd,KAAKwjB,6BAIqB/a,IAA1BzI,KAAKyjB,kBACL3iB,EAAkBC,IAAI,eACtBf,KAAK0jB,aAAe5iB,EAAkB+e,IAAI,eAC1C7f,KAAK2jB,qBAEb,CAKAJ,iBAAAA,GACI,MAAMK,EAAc5jB,KAAKoiB,QAAQltB,OAGjC8K,KAAKojB,UAAYpjB,KAAKid,KAAK4G,KAAMjH,GAAQA,EAAIM,MAAMhoB,SAAW0uB,EAOlE,CAKAJ,qBAAAA,GAEIxjB,KAAKyiB,aAAe,GACpBziB,KAAK8jB,qBAAuB,IAAIljB,IAChCZ,KAAKid,KAAK9f,QAAQ,CAACyf,EAAKtnB,KACpB,MAAMzG,EAAKyG,EAAM4I,WACjB8B,KAAKyiB,aAAapsB,KAAK,IAAKumB,EAAK/tB,OACjCmR,KAAK8jB,qBAAqBtiB,IAAI3S,IAEtC,CAIA80B,mBAAAA,GAEQ3jB,KAAK0jB,WA9FQ,IA+Fb1jB,KAAKyjB,iBAxGyB,GA2G9BzjB,KAAKyjB,iBA5Ge,EA+GxBzjB,KAAK2iB,gBAAkB3iB,KAAKid,KAAK/nB,OAAS8K,KAAKyjB,iBAG/CzjB,KAAK+jB,oBACT,CAOAC,sBAAAA,CAAuB7iB,GACnBnB,KAAK+jB,mBAAmB5iB,EAAM8iB,QAAQC,KAAM/iB,EAAM8iB,QAAQE,UAC1DhjB,EAAMijB,iBACV,CAIAC,0BAAAA,CAA2BljB,GACvBnB,KAAKsjB,qBAAsB,EAC3BtjB,KAAKyjB,iBAAmBtiB,EAAM8iB,QAAQE,SACtCnkB,KAAK+jB,qBACL5iB,EAAMijB,iBACV,CAMAvB,kBAAAA,CAAmB1hB,GAEfnB,KAAK8jB,qBAAuB,IAAIljB,IAAIO,GAAO8iB,QAAQK,eAAelvB,IAAKwnB,GAAQA,EAAI/tB,KAEnFmR,KAAKqjB,mBAAqB,EAE1BrjB,KAAK+jB,qBACL5iB,EAAMijB,iBACV,CAKAL,kBAAAA,CAAmBG,EAAOlkB,KAAKqjB,mBAAoBc,EAAWnkB,KAAKyjB,kBAE/DzjB,KAAKqjB,mBAAqBa,EAG1B,MAAMjH,EAAOvb,MAAMC,KAAK3B,KAAKukB,WAAWC,iBAAiB,yBASzDvH,EAAK9f,QAASyf,GAAQA,EAAItkB,MAAMmsB,YAAY,UAAW,SAEvD,MAAMC,EAAoBzH,EAAKjH,OAAQ4G,GAAQ5c,KAAK8jB,qBAAqB/iB,IAAI6b,EAAI/tB,KAG3E81B,EAAUT,EAAOC,EAAW,EAClC,IAAK,IAAI7uB,GAFU4uB,EAAO,GAAKC,EAEH7uB,GAASqvB,EAASrvB,IAG1CovB,EAAkBpvB,IAAQsvB,gBAAgB,QAElD,CAMArC,eAAAA,GAGI,MAAMsC,EAAa,CACf7kB,KAAKoiB,WACFpiB,KAAKid,KAAK7nB,IAAKwnB,GAAQA,EAAIM,QAG5B4H,GAAmBC,EAAAA,GAAAA,GAAUF,GAC7BG,EAAO,IAAIC,KAAK,CAACH,GAAmB,CACtCnuB,KAAM,4BAIJuuB,EAAO9S,SAAShH,cAAc,KAC9BrS,EAAMkT,IAAIkZ,gBAAgBH,GAChCE,EAAKtQ,aAAa,OAAQ7b,GAC1BmsB,EAAKtQ,aAAa,WAAY,kBAC9BsQ,EAAK5sB,MAAM8sB,WAAa,SACxBhT,SAASvd,KAAKoe,YAAYiS,GAE1BA,EAAKG,QACLjT,SAASvd,KAAKywB,YAAYJ,EAC9B,CAKAtmB,MAAAA,GAII,OAAIoB,KAAKulB,QC1NN7lB,EAAAA,EAAK;gCDgOJM,KAAKid,KAAK/nB,OAAS8K,KAAKyjB,kBAAoBzjB,KAAKsjB,oBAC1C5jB,EAAAA,EAAK,GAAGsiB,GAAchiB,SElOzC,SAAiCiiB,GAC7B,MAAQwB,iBAAkB+B,EAAiBnC,mBAAoBoC,EAAmB3B,qBAAsB4B,EAAmB,KAAEzI,EAAI,iBAAE0I,EAAgB,aAAEC,EAAY,iBAAEC,EAAgB,8BAAEC,EAA6B,wBAAEC,EAAyB/B,uBAAwBgC,EAAuB3B,2BAA4B4B,GAA+BhE,EACjViE,EAAmBR,EAAoB9sB,KACvCutB,EAAYlJ,EAAK/nB,OAEjBkxB,EAAqBnD,GAAoBjN,OAAQmO,GAAaA,EAAWgC,GAU/E,OAAOzmB,EAAAA,EAAK;gBACA8lB;WACLC;kBACOS;iBACDG,KAAKC,KAAKJ,EAAmBV;oBAC1BG;mBACDC;0BACOC;8BACIC;wCACUC;6CACKC;4CACDC;;MAEtCG,EAAmBhxB,IAAK+uB,GAAazkB,EAAAA,EAAK,kCAAkCykB;aACrEA;;qCAEwBgC;SAC5BA;;2BAGT,CF+LkDI,CAAwBvmB,QAG3DN,EAAAA,EAAK,GAAGsiB,GAAchiB,OACjC,GAEJmjB,GAAarmB,OAASW,EAAAA,EAAI;OACpBC,EAAAA,EAAAA,IGzPS;KH2PfC,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,iBACrCslB,GAAaplB,UAAW,kBAAc,IACzCJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,uBACrCslB,GAAaplB,UAAW,wBAAoB,IAC/CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAM+K,SAClByhB,GAAaplB,UAAW,eAAW,IACtCJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAM+K,SAClByhB,GAAaplB,UAAW,YAAQ,IACnCJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAM2mB,OAAQzf,UAAW,qBACrCslB,GAAaplB,UAAW,sBAAkB,IAC7CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAM2mB,OAAQzf,UAAW,iBACrCslB,GAAaplB,UAAW,kBAAc,IACzCJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,aACtCslB,GAAaplB,UAAW,eAAW,IACtCJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,6BACrCslB,GAAaplB,UAAW,6BAAyB,IACpDJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,wBACrCslB,GAAaplB,UAAW,wBAAoB,IAC/CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,oBACrCslB,GAAaplB,UAAW,oBAAgB,IAC3CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,yBACrCslB,GAAaplB,UAAW,wBAAoB,IAC/CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,YACrCslB,GAAaplB,UAAW,cAAU,IACrCJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAM6vB,SAAU3oB,WAAW,KACvCslB,GAAaplB,UAAW,qCAAiC,IAC5DJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAM6vB,SAAU3oB,WAAW,KACvCslB,GAAaplB,UAAW,+BAA2B,IACtDJ,EAAAA,EAAAA,IAAW,EACPxN,EAAAA,EAAAA,OACDgzB,GAAaplB,UAAW,gBAAY,IACvCJ,EAAAA,EAAAA,IAAW,EACPxN,EAAAA,EAAAA,OACDgzB,GAAaplB,UAAW,0BAAsB,IACjDJ,EAAAA,EAAAA,IAAW,EACPxN,EAAAA,EAAAA,OACDgzB,GAAaplB,UAAW,wBAAoB,IAC/CJ,EAAAA,EAAAA,IAAW,EACPxN,EAAAA,EAAAA,OACDgzB,GAAaplB,UAAW,2BAAuB,IAClDJ,EAAAA,EAAAA,IAAW,EACPxN,EAAAA,EAAAA,OACDgzB,GAAaplB,UAAW,4BAAwB,IACnDJ,EAAAA,EAAAA,IAAW,EACPxN,EAAAA,EAAAA,OACDgzB,GAAaplB,UAAW,oBAAgB,IAC3CJ,EAAAA,EAAAA,IAAW,EACPxN,EAAAA,EAAAA,OACDgzB,GAAaplB,UAAW,uBAAmB,IAC9CJ,EAAAA,EAAAA,IAAW,CACP0F,EAAAA,IACD8f,GAAaplB,UAAW,yBAA0B,OACrDJ,EAAAA,EAAAA,IAAW,CACP0F,EAAAA,IACD8f,GAAaplB,UAAW,6BAA8B,OACzDJ,EAAAA,EAAAA,IAAW,CACP0F,EAAAA,IACD8f,GAAaplB,UAAW,qBAAsB,MACjDolB,IAAexlB,EAAAA,EAAAA,IAAW,EACtBsC,EAAAA,EAAAA,GAAcijB,KACfC,IItTH,MAAMsD,IAAQtmB,EAAAA,EAAAA,GAAgB,CAC1BC,QAAS8iB,GACT7iB,aAAc8iB,GACd7iB,MAAO9R,ICGX,SAASk4B,GAAez3B,GACpB,MAAM,UAAE03B,GAAc13B,GAChB,MAAEY,EAAK,YAAE0B,EAAW,QAAE6wB,EAAO,KAAEnF,GAAS0J,EACxCC,GAAc12B,EAAAA,EAAAA,IAAaC,GAAUA,EAAMoY,MAAMqe,aACjDlD,GAAaxzB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMuzB,YAC1CjM,GAASvnB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMsnB,QACtCnoB,GAAeC,EAAAA,EAAAA,KACf+nB,GAAOC,EAAAA,EAAAA,KACPsP,GAAoBx0B,EAAAA,EAAAA,QAAO,OAC1By0B,EAAqBC,IAA0B90B,EAAAA,EAAAA,YACtD,SAAS+0B,IACLD,EAAuBF,EAAkBl0B,SAASs0B,YACtD,CAqBA,OApBA/Y,EAAAA,EAAAA,iBAAgB,KACgB,IAAIgZ,eAAeF,GAC3BG,QAAQN,EAAkBl0B,YAE7BoK,EAAAA,EAAAA,SAAQ,KACzB,MAAM6mB,EAAcxB,EAAQltB,OAGtBkyB,GAAWnK,EAAK4G,KAAMjH,GAAQA,EAAIM,MAAMhoB,SAAW0uB,GAIzD,OAHKwD,IACD5c,EAAAA,GAAAA,IAAa,mOAEV4c,GACR,CAACnK,EAAMmF,IAYE5zB,EAAAA,cAAoB64B,EAAAA,IAAO,CAAE9e,MAAO+e,GAAAA,GAAajO,SAASuN,GAAe,QAAU,OACvFp4B,EAAAA,cAAoB,MAAO,CAAEW,UAAW,oBAAqB2D,IAAK+zB,GAC9Dr4B,EAAAA,cAAoBqK,EAAAA,SAAU,CAAEC,SAAU,MACtCtK,EAAAA,cAAoBi4B,GAAO,CAAEvE,WAAYryB,EAAOsyB,iBAAkB5wB,EAAa6wB,QAASA,EAASnF,KAAMA,EAAMoF,eAAgByE,EAAqBpD,WAAYA,EAAYpB,sBAAuBhzB,EAAai4B,wBAAyB5B,iBAAkBr2B,EAAak4B,mBAAoB5B,aAAct2B,EAAam4B,eAAgB5B,iBAAkBv2B,EAAao4B,mBAAoB5B,8BAdxY,UAA4C,MAAE6B,IAC1C,OAAOrQ,EAAK0B,cAAc,CAAEnqB,GAAI,oCAAsC,CAAE+4B,WAAYD,GACxF,EAY2c5B,wBAX3c,UAAsC,MAAEtU,EAAK,IAAEC,EAAG,MAAEiW,IAChD,OAAOrQ,EAAK0B,cAAc,CAAEnqB,GAAI,0BAA4B,CAAE4iB,QAAOC,MAAKiW,SAC9E,EASkgBlQ,OAAQA,OAK1gBjpB,EAAAA,cAAoBa,GAAAA,EAAa,KACrC,CACA,MAAMw4B,GAAuBr5B,EAAAA,KAAWk4B,I,0BC/CxC,SAASoB,IAAS,QAAEz5B,EAAO,eAAEyB,IACzB,MAAM,kBAAEi4B,EAAiB,mBAAEC,EAAkB,iBAAEC,IAAqB14B,EAAAA,EAAAA,MAC9D,aAAE24B,IAAiBh4B,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,0BAA0BC,UAAU83B,oBAGpFC,EAAgB/5B,EAAQwb,gBAAkBqe,EAK1CG,EAAYh6B,EAAQoM,KAAK6tB,cAAcC,YACzC,iBACEC,EAAkBn6B,EAAQoM,KAAK6tB,cAAcG,kBAC/C,oEAuBJ,OAAQj6B,EAAAA,cAAoBqE,EAAAA,IAAM,CAAE1D,UAAW,eAC3CX,EAAAA,cAAoB,MAAO,CAAEW,UAAW,sBAAwBk5B,GAChE75B,EAAAA,cAAoB,MAAO,CAAEW,UAAW,4BAA8Bq5B,GACtEJ,GAAkB55B,EAAAA,cAAoB,MAAO,KACzCA,EAAAA,cAAoBwY,EAAAA,IAAQ,CAAE7X,UAAW,4BAA6BwC,WAAYmZ,GAAAA,EAAYrL,QAvBtG8J,uBAEUzZ,EAAeqa,QAAQue,WAAWC,GAAAA,GAASC,KAAM,CACnDC,sBAAuBC,EAAAA,GAAsBC,wBAErD,GAkBgIhB,GACxHv5B,EAAAA,cAAoBwY,EAAAA,IAAQ,CAAE7X,UAAW,6BAA8BiZ,KAAM,QAASzW,WAAYq3B,GAAAA,EAASvpB,QAfnH8J,wBAE+BzZ,EAAeqa,QAAQue,WAAWC,GAAAA,GAASC,KAAM,CACxEC,sBAAuBC,EAAAA,GAAsBG,4BAEhCC,MAEbp5B,EAAeqa,QAAQgf,iBAAiB,CAAEC,aAAc,GAEhE,GAM8IpB,KACzII,GAAkB55B,EAAAA,cAAoBwY,EAAAA,IAAQ,CAAE7X,UAAW,2BAA4BwC,WAAYmZ,GAAAA,EAAYrL,QAASA,IAAM3P,EAAeqa,QAAQkf,UAAUh7B,EAASi7B,EAAAA,GAAgBC,mBAAoB,CACrMV,sBAAuBC,EAAAA,GAAsBU,0BAC3CvB,GAClB,CACA,MAAMwB,GAAiBj7B,EAAAA,KAAWs5B,IClDlC,SAAS4B,GAAkBz6B,GACvB,MAAM,KAAEN,EAAI,eAAE6hB,EAAc,WAAEmZ,EAAU,iBAAErU,EAAgB,aAAEve,GAAiB9H,EACvEK,GAAeC,EAAAA,EAAAA,KAGrB,IAAIq6B,EAQJ,OATAxc,GAAoBoD,GAAgBS,OAAQla,GAIxC6yB,EAFApZ,IAAmBA,EAAeQ,OAEtBR,EAAeS,OAAO7b,IAAK8b,GAAUA,EAAMviB,MAAMwG,KAAK,IAGtDxG,EAERH,EAAAA,cAAoB,MAAO,CAAEW,UAAW,wBAC5CX,EAAAA,cAAoBC,GAAAA,EAAgB,CAAEE,KAAMi7B,EAAWp6B,yCAA0Cm6B,IACjGrU,GAAqB9mB,EAAAA,cAAoBa,GAAAA,EAAa,CAAEV,KAAMW,EAAagnB,2CACnF,C,wBChBA,MAAMuT,IAAqBC,EAAAA,GAAAA,IAAoB,4BAC/C,MAAMC,WAA8BvsB,EAAAA,GAChCgD,WAAAA,GACIC,SAASC,WAITV,KAAKgqB,MAAO,EAIZhqB,KAAKiqB,oBAAsB,EAAGC,aAAYC,eAAgBN,GAAmB5Q,OAAO,CAChFiR,aACAC,UAAWA,GAAa,KAK5BnqB,KAAKoqB,eAAiBtqB,EAAAA,IAAAA,0BAItBE,KAAKqqB,gBAAkBvqB,EAAAA,IAAAA,2BAIvBE,KAAKsqB,cAAgBxqB,EAAAA,IAAAA,yBAIrBE,KAAKuqB,mBAAqBzqB,EAAAA,IAAAA,mCAI1BE,KAAKwqB,yBAA2B1qB,EAAAA,IAAAA,oCAIhCE,KAAKyqB,sBAAwB3qB,EAAAA,IAAAA,iCAI7BE,KAAK0qB,0BAA4B5qB,EAAAA,IAAAA,qCAIjCE,KAAK2qB,uBAAyB,GAAGhrB,EAAAA,gCAA8CiY,EAAAA,GAAAA,MACnF,CACAgT,YAAAA,CAAaC,GAET7qB,KAAK8qB,OAAS9qB,KAAK+qB,MAAM31B,IAAKqF,IAAI,IAAWA,EAAMuvB,MAAM,IAC7D,EAEJD,GAAsBjtB,OAASW,EAAAA,EAAI;OAC7BC,EAAAA,EAAAA,ICxES;KD0EfC,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMnE,QAASqL,UAAW,OAAQC,SAAS,KACvDisB,GAAsBhsB,UAAW,YAAQ,IAC5CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAM+K,MAAO7D,UAAW,QAASC,SAAS,KACtDisB,GAAsBhsB,UAAW,aAAS,IAC7CJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAM6vB,SAAU3oB,WAAW,KACvCksB,GAAsBhsB,UAAW,2BAAuB,IAC3DJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,mBAAoBC,SAAS,KAClEisB,GAAsBhsB,UAAW,sBAAkB,IACtDJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,oBAAqBC,SAAS,KACnEisB,GAAsBhsB,UAAW,uBAAmB,IACvDJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,kBAAmBC,SAAS,KACjEisB,GAAsBhsB,UAAW,qBAAiB,IACrDJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAMqH,OAAQH,UAAW,sBAAuBC,SAAS,KACrEisB,GAAsBhsB,UAAW,0BAAsB,IAC1DJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAM6vB,SAAU3oB,WAAW,KACvCksB,GAAsBhsB,UAAW,gBAAY,IAChDJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CAAEjH,KAAM6vB,SAAU3oB,WAAW,KACvCksB,GAAsBhsB,UAAW,oBAAgB,IACpDJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CACLjH,KAAMqH,OACNH,UAAW,8BACXC,SAAS,KAEdisB,GAAsBhsB,UAAW,gCAA4B,IAChEJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CACLjH,KAAMqH,OACNH,UAAW,2BACXC,SAAS,KAEdisB,GAAsBhsB,UAAW,6BAAyB,IAC7DJ,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAS,CACLjH,KAAMqH,OACNH,UAAW,+BACXC,SAAS,KAEdisB,GAAsBhsB,UAAW,iCAA6B,IACjEJ,EAAAA,EAAAA,IAAW,EACPxN,EAAAA,EAAAA,OACD45B,GAAsBhsB,UAAW,cAAU,IAC9CJ,EAAAA,EAAAA,IAAW,EACPxN,EAAAA,EAAAA,OACD45B,GAAsBhsB,UAAW,8BAA0B,G,mDE3G9D,MAAMitB,GAAwB,GAAGrrB,EAAAA,0BAC3BsrB,GAA0B,GAAGtrB,EAAAA,kDAC7BurB,IAAoBhtB,EAAAA,EAAAA,IAASitB,GAAAA,GAC7BC,IAAuBltB,EAAAA,EAAAA,IAASmtB,GAAAA,GAChCC,IAAmBptB,EAAAA,EAAAA,IAASqtB,GAAAA,GA4BlC,SAASC,GAAejK,EAAMpZ,EAAOsjB,GAEjC,MAAMlgB,GAAUmgB,EAAAA,GAAAA,IAA2BnK,GAC3C,OAAIhW,EAKR,SAAkCA,EAASpD,EAAOsjB,GAC9C,OAAO/rB,EAAAA,EAAK;aACHsrB,MAAyBA,MAAyBS;;kBAE7CT,aAAgC7iB;;;iBAGjCoD;;SAGjB,CAdeogB,CAAyBpgB,EAASpD,EAAOsjB,GAE7C/rB,EAAAA,EAAK,EAChB,CC9CA,MAAMksB,GAAsC,8BAI5C,IAAIC,GAA+B,cAA2C9B,GAI1EnrB,MAAAA,GACI,OD4HR,SAAuCC,GACnC,MAAM,uBAAE8rB,EAAsB,mBAAEJ,EAAkB,KAAEP,GAASnrB,EAQ7D,OAAOa,EAAAA,EAAK,eAAeC,EAAAA;;eAEhBA,EAAAA;eANX,WACId,EAAmBmrB,MAAQnrB,EAAmBmrB,KAC9CnrB,EAAmBitB,WAAWjtB,EAAmBmrB,KAAMnrB,EAC3D;sBAKkBmrB;sBACAW;;qBAEDhrB,EAAAA;YACVE,EAAAA,EAAAA,GAAUqrB;;QAEbX;;;WAGGI;eACIhrB,EAAAA;iBACEqqB;;oBAEGrqB,EAAAA;UA3EpB,SAA0Bd,GACtB,MAAM,OAAEisB,EAAM,KAAEd,EAAI,uBAAEW,EAAsB,aAAEoB,EAAY,oBAAE9B,EAAmB,yBAAEO,EAAwB,sBAAEC,EAAqB,0BAAEC,GAA+B7rB,EACjK,OAAImrB,EACOtqB,EAAAA,EAAK,GAAGorB,EAAO11B,IAAI,CAACqF,EAAMnF,KAC7B,MAAM40B,EAAa50B,EAAQ,EACrB02B,EAAa,GAAGrB,UAA+BT,YACrD,OAAOxqB,EAAAA,EAAK;iBACPC,EAAAA;;;mBAGEA,EAAAA;mBACA,KACHlF,EAAKuvB,MAAQvvB,EAAKuvB,KAClBnrB,EAAmB+C,gBAKnB,MAAMqqB,EAAUptB,EAAmBygB,WAAW/L,cAAc,IAAIyY,KAChED,IAAetxB,EAAKuvB,KAAMiC;0BAEhBxxB,EAAKuvB;0BACLgC;;;qBAGLrsB,EAAAA;yBACIlF,EAAKuvB;gBACfnqB,EAAAA,EAAAA,GAAUqrB;;;qBAGJvrB,EAAAA;eACNsqB,EAAoB,CAAEC,aAAYC,UAAW1vB,EAAK5K;;yBAExCo7B;eAtGzB,SAAoBiB,EAAQ1B,EAA0BC,EAAuBC,GACzE,OAAQwB,GACJ,KAAKC,GAAAA,GAAyBC,WAC1B,OAAO1sB,EAAAA,EAAK;;sBAEFgrB;qCAEd,KAAKyB,GAAAA,GAAyBE,QAC1B,OAAO3sB,EAAAA,EAAK;iBACPurB,OAA4BkB,GAAAA,GAAyBE;sBAChD5B;YACX5qB,EAAAA,EAAAA,GAAUyrB;SAEb,QACI,OAAO5rB,EAAAA,EAAK;iBACPurB,OAA4BkB,GAAAA,GAAyBG;sBAChD9B;YACX3qB,EAAAA,EAAAA,GAAUurB;SAGrB,CAmFemB,CAAW9xB,EAAKyxB,OAAQ1B,EAA0BC,EAAuBC;;;;mBAIrE/qB,EAAAA;eACJqsB;qBACMvxB,EAAKuvB;;YAlE1B,SAA8BnrB,EAAoBpE,GAC9C,MAAM,eAAE2vB,EAAc,gBAAEC,EAAe,cAAEC,GAAkBzrB,EAC3D,OAAIpE,EAAKuvB,KACEtqB,EAAAA,EAAK,IAAIjF,EAAKlJ,YACfmO,EAAAA,EAAK;mBACAsrB,MAAyBA;;;;uBAIrBvwB,EAAKlJ;;gBAGd;MACRkJ,EAAK+xB,UACG9sB,EAAAA,EAAK;mBACAsrB,MAAyBA;;wBAEpBA,aAAgCV;YAC5C7vB,EAAK+xB;gBAEH;MACRhB,GAAe/wB,EAAK0f,SAASsS,KAAMrC,EAAgB;MACnDoB,GAAe/wB,EAAKiyB,UAAUnhB,QAAS8e,EAAiB,YAEnD3qB,EAAAA,EAAK,EAChB,CA2CYitB,CAAqB9tB,EAAoBpE;;kBAK1CiF,EAAAA,EAAK,EAChB,CA4BUktB,CAAiB/tB;;;SAI3B,CC3JeguB,CAA8B7sB,KACzC,GAEJ6rB,IAA+BluB,EAAAA,EAAAA,IAAW,EACtCsC,EAAAA,EAAAA,GAAc2rB,KACfC,ICfH,MAAMiB,IAAiB3sB,EAAAA,EAAAA,GAAgB,CACnCC,QAASwrB,GACTvrB,aAAcwrB,GACdvrB,MAAO9R,IC+BX,SAASuM,GAAqB9L,GAC1B,MAAM,iBAAE0N,EAAgB,aAAED,EAAY,eAAE5M,EAAc,gBAAEsM,EAAe,QAAE/N,GAAaY,EAChFqoB,GAAOC,EAAAA,EAAAA,KACPjoB,GAAeC,EAAAA,EAAAA,KACfw9B,GAAqB16B,EAAAA,EAAAA,UACrBsS,GAAoBzU,EAAAA,EAAAA,IAAY88B,GAAAA,GAAyBC,EAAAA,IACzD38B,GAAaJ,EAAAA,EAAAA,IAAaC,GAAUA,EAAMG,YAC1CsU,GAAsB1U,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,0BAA0BC,UAAUC,YACvF48B,EAAa7+B,EAAQoM,KAAK0yB,iBAAiBC,UAAUv+B,GACrDw+B,GAAkBC,EAAAA,GAAAA,KAClBC,EAAkBnxB,EAAgBgJ,SAASgoB,WAAWF,GACtDM,GAAwBzwB,EAAAA,EAAAA,SAAQ,IAC7BwwB,EAGE,CACH5+B,KAAM4+B,EAAgB5+B,KACtBiU,mBAAoB2qB,EAAgBtpB,YAJ7B,KAMZ,CAACspB,KAEGE,EAAgBC,IAAqBz7B,EAAAA,EAAAA,WAAS,IAE9C07B,EAA4BC,IAAiC37B,EAAAA,EAAAA,UAASs7B,GAAmBA,EAAgBM,cACzGC,EAA4BC,IAAiC97B,EAAAA,EAAAA,UAASs7B,IAAoBA,EAAgBM,cAE1GG,EAAqBC,IAA0Bh8B,EAAAA,EAAAA,UAASO,QAAQ+6B,IA4FvE,SAASW,EAAeryB,EAAkB8tB,EAAYvtB,GAClD,OAAQ5N,EAAAA,cAAoBk7B,GAAmB,CAAE/6B,KAAMkN,EAAiBpB,KAAK9L,KAAM6hB,eAAgB3U,EAAiB3B,SAASsW,eAAgB8E,iBAAkBlZ,GAAiBgJ,SAAS+oB,mBAAoBxE,WAAYA,EAAY5yB,aAAc9H,EAAM8H,cAC7P,CAmCA,SAASq3B,EAA0B//B,EAAS+N,GACxC,MAAM,eAAEtM,GAAmBb,EAC3B,OAAQT,EAAAA,cAAoBqoB,GAAqB,CAAErG,eAAgBniB,EAAQ6L,SAASsW,eAAgB8E,iBAAkBlZ,GAAiBgJ,SAAS+oB,mBAAoBp3B,aAAc9H,EAAM8H,aAAcigB,eAAgB3oB,EAAQ6L,SAASrL,GAAIiB,eAAgBA,GAC/P,CA+BA,SAASu+B,EAAqBrE,EAAMiC,GAC5BjC,GACAh2B,WAAW,KACP/E,EAAMuN,sBAAsByvB,EAAS,GAAI,KAGrD,CACA,SAAShC,GAAoB,WAAEC,EAAU,UAAEC,IACvC,OAAO7S,EAAK0B,cAAc,CAAEnqB,GAAI,4BAA8B,CAAEq7B,aAAYC,aAChF,CAuHA,OA/RA,SAA+BtuB,EAAkBxN,GAC7C,IAAIigC,EAAAA,EAAAA,IAAUjgC,GACV,OAgBR,SAAuBwN,EAAkBO,GACrC,MAAM6M,EAAcpN,EAAiBpB,KACrC,IAAI8zB,EAAAA,EAAAA,IAAWtlB,GAAc,CACzB,MAAMta,EAAOyN,EAAgBgJ,SAAS+C,OAASc,EAAYta,KAGrD6/B,EAAW3yB,EAAiB3B,SAASwgB,kBAAoB/rB,EAC/D,OAAQH,EAAAA,cAAoB,MAAO,CAAEW,UAAW,mBAC5CiN,EAAgB0N,MAAM2kB,eAClBC,GAAAA,GAA2BC,MAASngC,EAAAA,cAAoBogC,EAAAA,EAAY,CAAEz/B,UAAW,qBAAsB,aAAcF,EAAMK,aAAau/B,uBAC5IrgC,EAAAA,cAAoB,OAAQ,CAAEsgC,KAAM,UAAW,aAAc,GAAKN,GAC1E,CACA,OAAO,IACX,CA7BeO,CAAclzB,EAAkBxN,GAE3C,IAAI2gC,EAAAA,EAAAA,IAAW3gC,GAAU,CACrB,MAAMq+B,EA8Bd,SAAwB7wB,EAAkBxN,GACtC,IAAI4gC,EAAAA,EAAAA,IAAapzB,EAAiBpB,MAE9B,OA2FR,SAAoBpM,GAChB,MAAM,eAAEyB,GAAmBb,EAC3B,OAAOT,EAAAA,cAAoBi7B,GAAgB,CAAEp7B,QAASA,EAASyB,eAAgBA,GACnF,CA9Feo/B,CAAWrzB,GAEtB,IAAIszB,EAAAA,EAAAA,IAA2BtzB,EAAiBpB,MAE5C,OAAO2zB,EAA0BvyB,EAAkBxN,GAEvD,MAAM4M,EAAeY,EAAiBpB,KAAKC,cACrC00B,EAAiB58B,QAAQqJ,EAAiBpB,KAAK40B,oBACrD,OAAQp0B,GACJ,KAAKlD,GAAAA,GAAqBu3B,KACtB,OAiCZ,SAAoBjhC,EAAS+N,EAAiButB,GAC1C,OAAI16B,EAAM+L,oBACCkzB,EAAe7/B,EAASs7B,EAAYvtB,GAGvC5N,EAAAA,cAAoB,MAAO,CAAEW,UAAW,8BAAgC++B,EAAe7/B,EAASs7B,EAAYvtB,GACxH,CAvCmBmzB,CAAW1zB,EAAkBxN,EAAS+gC,GACjD,KAAKr3B,GAAAA,GAAqBmD,MACtB,OA8CZ,SAAqB7M,GACjB,MAAM,aAAEiB,EAAY,eAAEQ,GAAmBb,GACnC,WAAEwE,GAAe3D,EAAema,MAAMulB,WAAWjnB,MACvD,OAAQ/Z,EAAAA,cAAoBiG,GAAAA,EAAa,CAAEnD,WAAYhC,EAAagZ,mBAAoBjV,OAAQhF,EAAQoM,KAAKpH,OAAQxD,MAAOxB,EAAQoM,KAAK5K,MAAO0B,YAAalD,EAAQoM,KAAKlJ,YAAa+B,QAASjF,EAAQoM,KAAK0O,SAAUzX,kBAAmBrD,EAAQ6L,SAASxI,kBAAmB+B,WAAYA,GAC9R,CAlDmBg8B,CAAY5zB,GACvB,KAAK9D,GAAAA,GAAqB23B,OACtB,OAuCZ,SAAsBrhC,EAAS+N,GAC3B,MAAM,aAAE9M,EAAY,kBAAE+M,EAAiB,eAAEvM,EAAc,kBAAEwM,EAAiB,kBAAEP,GAAuB9M,EAC7FmgC,EAAiB58B,QAAQnE,EAAQoM,KAAK40B,oBAC5C,OAAQ7gC,EAAAA,cAAoBsyB,GAAiB,CAAEpc,aAAcrW,EAAS+N,gBAAiBA,EAAiB9M,aAAcA,EAAcgN,kBAAmBA,IAAsBP,EAAmBM,kBAAmBA,EAAmBvM,eAAgBA,EAAgBN,yCAA0C4/B,GACpT,CA3CmBO,CAAa9zB,EAAkBxN,GAC1C,KAAK0J,GAAAA,GAAqB63B,iBACtB,OA+EZ,SAA8BvhC,EAAS+N,GACnC,MAAM,aAAE9M,EAAY,OAAE6J,EAAM,eAAErJ,EAAc,kBAAEwM,EAAiB,kBAAEP,GAAuB9M,EACxF,OAAQT,EAAAA,cAAoB6Y,GAAgB,CAAE3C,aAAcrW,EAAS+N,gBAAiBA,EAAiB9M,aAAcA,EAAc6J,OAAQA,EAAQrJ,eAAgBA,EAAgBQ,WAAYA,EAAYqU,kBAAmBA,EAAmBC,oBAAqBA,EAAqBtI,kBAAmBA,IAAsBP,EAAmBC,aAAc/M,EAAMoN,mBAC/W,CAlFmBwzB,CAAqBh0B,EAAkBxN,GAClD,KAAK0J,GAAAA,GAAqB+3B,aACtB,OA6CZ,SAA2BzhC,GACvB,OAAOG,EAAAA,cAAoBa,GAAAA,EAAa,CAAEV,KAAMN,EAAQoM,KAAK9L,MACjE,CA/CmBohC,CAAkBl0B,GAC7B,KAAK9D,GAAAA,GAAqBoD,OACtB,OA8CZ,SAA6B9M,GACzB,MAAM,aAAE0I,EAAY,oBAAEiE,GAAwB/L,EACxC0vB,EAAU3jB,EACV4jB,GAAAA,GAAwBC,YACxBpW,EACN,OAAQja,EAAAA,cAAoBiwB,GAAe,CAAE/Z,aAAcrW,EAAS0I,aAAcA,EAAc2nB,gBAAiBC,GACrH,CApDmBqR,CAAoBn0B,GAC/B,KAAK9D,GAAAA,GAAqBqD,MACtB,OAmDZ,SAA4B/M,GACxB,MAAM,aAAE0I,GAAiB9H,GACnB,KAAEwL,GAASpM,GACX,OAAEgF,EAAM,MAAExD,EAAK,YAAE0B,EAAW,SAAE4X,GAAa1O,EACjD,OAAQjM,EAAAA,cAAoBqO,GAAAA,EAAsB,CAAExJ,OAAQA,EAAQxD,MAAOA,EAAO0B,YAAaA,EAAauF,YAAYsnB,EAAAA,EAAAA,IAAmB3jB,IAAO4jB,YAAaznB,UAAWuS,EAAUpS,aAAcA,EAAcrF,kBAAmBrD,EAAQ6L,SAASxI,mBACxP,CAxDmBu+B,CAAmBp0B,GAC9B,KAAK9D,GAAAA,GAAqBC,MACtB,OAuDZ,SAA4B3J,GACxB,MAAM,aAAE0I,GAAiB9H,GACnB,OAAEoE,EAAM,MAAExD,EAAK,YAAE0B,EAAW,SAAE4X,GAAa9a,EAAQoM,KACzD,OAAQjM,EAAAA,cAAoBmZ,GAAsB,CAAEtU,OAAQA,EAAQxD,MAAOA,EAAO0B,YAAaA,EAAaqF,UAAWuS,EAAUpS,aAAcA,EAAcrF,kBAAmBrD,EAAQ6L,SAASxI,mBACrM,CA3DmBw+B,CAAmBr0B,GAC9B,KAAK9D,GAAAA,GAAqBo4B,KACtB,OA0DZ,SAA2B9hC,GACvB,OAAQG,EAAAA,cAAoB2tB,GAA2B,CAAEzX,aAAcrW,EAAS4Y,UAAWhY,EAAM8M,kBAAmBS,sBAAuBvN,EAAMuN,uBACrJ,CA5DmB4zB,CAAkBv0B,GAC7B,KAAK9D,GAAAA,GAAqBs4B,sBACtB,OA2EZ,SAA2Cx0B,EAAkBC,GACzD,MAAM,sBAAEU,EAAqB,aAAEzF,GAAiB9H,EAChD,OAAQT,EAAAA,cAAoB6mB,GAAsB,CAAExZ,iBAAkBA,EAAkBW,sBAAuBA,EAAuB8Y,iBAAkBxZ,EAAYsJ,SAAS+oB,mBAAoBp3B,aAAcA,GACnN,CA9EmBu5B,CAAkCz0B,EAAkBxN,GAC/D,KAAK0J,GAAAA,GAAqBw4B,MACtB,OAwFZ,SAAqBliC,GACjB,OAAOG,EAAAA,cAAoBq5B,GAAsB,CAAElB,UAAWt4B,EAAQoM,MAC1E,CA1FmB+1B,CAAY30B,GACvB,KAAK9D,GAAAA,GAAqB04B,KACtB,OAmEZ,SAAoBpiC,EAAS+N,GACzB,MAAM,kBAAEL,EAAiB,kBAAEM,GAAsBpN,EACjD,OAAQT,EAAAA,cAAoBse,GAAqB,CAAEjR,iBAAkBxN,EAASyN,YAAaM,EAAiBL,kBAAmBA,EAAmBC,aAAcK,GACpK,CAtEmBq0B,CAAW70B,EAAkBxN,GACxC,KAAK0J,GAAAA,GAAqB44B,SACtB,OA6EZ,SAA+BtiC,EAAS+N,GACpC,MAAM,kBAAEL,EAAiB,kBAAEM,GAAsBpN,EACjD,OAAQT,EAAAA,cAAoBye,GAAuB,CAAEpR,iBAAkBxN,EAASyN,YAAaM,EAAiBL,kBAAmBA,EAAmBC,aAAcK,GACtK,CAhFmBu0B,CAAsB/0B,EAAkBxN,GACnD,KAAK0J,GAAAA,GAAqB84B,OACtB,OAuEZ,SAA0BxiC,EAAS+N,GAC/B,MAAM,kBAAEL,EAAiB,kBAAEM,GAAsBpN,EACjD,OAAQT,EAAAA,cAAoBsd,GAAqB,CAAEjQ,iBAAkBxN,EAASyN,YAAaM,EAAiBL,kBAAmBA,EAAmBC,aAAcK,GACpK,CA1EmBy0B,CAAiBj1B,EAAkBxN,GAC9C,KAAK0J,GAAAA,GAAqBg5B,KACtB,OA6EZ,SAAoB1iC,EAAS+N,GACzB,OAAQ5N,EAAAA,cAAoBovB,GAAyB,CAAE/hB,iBAAkBxN,EAAS+N,gBAAiBA,GACvG,CA/EmB40B,CAAWn1B,EAAkBxN,GACxC,QACI,OAAO+/B,EAA0BvyB,EAAkBxN,GAE/D,CA3EyB4iC,CAAep1B,EAAkBxN,GAC5C6iC,EAAoBr1B,EAAiBpB,KAAK02B,oBAAoBC,eACpE,OAAQ5iC,EAAAA,cAAoBA,EAAAA,SAAgB,KACxCk+B,EACAwE,GAAqB1iC,EAAAA,cAAoB+V,EAAiB,MAmKtE,SAA8B1I,GAC1B,MAAMw1B,EAAiBx1B,EAAiBpB,KAAK0yB,iBAAiBmE,iBAC9D,SAAKD,GAAkBpiC,EAAM+L,sBAGrBxM,EAAAA,cAAoBs+B,GAAgB,CAAE/B,MAAOsG,EAAgBvF,SAAUuC,EAAsBtC,aAAcsC,EAAsBpE,oBAAqBA,EAAqBM,mBAAoBj7B,EAAaiiC,mCAAoCnH,eAAgB96B,EAAakiC,0BAA2BnH,gBAAiB/6B,EAAamiC,2BAA4BnH,cAAeh7B,EAAaoiC,0BAC1Y,CAxKYC,CAAqB91B,GA4KjC,SAAwBA,EAAkBxN,GACtC,MAAMujC,EAAkB/1B,EAAiBpB,KAAK0yB,iBAAiBC,UAAY,CAAC,GACpEv+B,GAAIq+B,EAAU,MAAE2E,EAAK,sBAAEC,GAAwB,EAAI,sBAAEC,GAAwB,EAAI,eAAEC,GAAiB,EAAI,YAAEC,GAAc,EAAI,MAAEpiC,EAAK,OAAEkU,EAAM,WAAEE,EAAU,YAAED,EAAW,WAAEE,GAAgB0tB,EAC9L,GAAI3iC,EAAM+L,qBACN0B,IACEC,IAAqB4wB,IACtBsE,EACD,OAAO,EAKX,SAASK,EAAc3Q,GACnB,GAAI2L,EAAY,CACZ,MAAM9nB,EAAU,CACZgoB,SAAU,CACN,CAACF,GAAa3L,IAGtBzxB,EAAema,MAAMC,SAASC,GAAAA,GAAQgoB,oBAAoBt2B,EAAiBgO,cAAezE,GAC9F,CACJ,CAKA,SAASgtB,EAAkBC,GACvB,MAAMC,EAAmBD,GAClB1E,GACAG,EACDyE,GAAeF,EAAaP,EAAwBC,IACtDO,EACAA,IAAqBC,GAGrBL,EAAc,CAAErE,YAAawE,IAC7BpE,GAAuB,GACvBn+B,EAAe0Z,KAAK,CAChB7S,KAAM8S,EAAAA,GAAa+oB,SACnBvpB,YAAapN,EAAiBpB,KAC9BpM,UACAokC,gBAAiBC,EAAAA,GAAwBC,UACzCN,iBAIJ3E,EAAkB6E,GACdA,GACAv+B,WAAW,KACP/E,EAAMuN,sBAAsBuwB,EAAmBp6B,QAAS,GAAI,MAGpE7C,EAAe0Z,KAAK,CAChB7S,KAAM8S,EAAAA,GAAa+oB,SACnBvpB,YAAapN,EAAiBpB,KAC9BpM,UACAokC,gBAAiBF,EACXG,EAAAA,GAAwBE,eACxBF,EAAAA,GAAwBG,eAC9BR,gBAGRzE,IAA8ByE,GAAaC,GAC3CvE,GAA8BsE,GAAqBC,EACvD,CA2BA,SAASQ,EAAoBT,GAEzB,MAAMvuB,EAAS2pB,IACV4E,EAAa1E,EAA6BG,GAC/C,OAAQt/B,EAAAA,cAAoB8V,EAAmB,CAAEyuB,MAAO,GAAGpzB,EAAAA,qBAAoC0yB,EAAa,WAAa,aAAcxjC,GAAI,GAAGw+B,cAA4BgF,EAAa,WAAa,aAAcvuB,OAAQA,EAAQvH,WAAYyxB,EAAqB7qB,QAASA,IAAMivB,EAAkBC,GAAarvB,SAAWgwB,GA3BhU,SAAkBX,EAAYW,GAC1B/E,GAAuB,GACvBP,GAAkB,GAClB,MAAMvsB,EAAQ,CACVxK,KAAM8S,EAAAA,GAAa+oB,SACnBvpB,YAAapN,EAAiBpB,KAC9BpM,UACAokC,gBAAiBC,EAAAA,GAAwBC,UACzCN,aACA1jC,KAAMqkC,EAAQrkC,KACdsV,WAAY+uB,EAAQpwB,oBAExB9S,EAAe0Z,KAAKrI,GAEpB+wB,EAAc,CACVrE,YAAa1sB,EAAMkxB,WACnB1jC,KAAMwS,EAAMxS,KACZsV,WAAY9C,EAAM8C,YAE1B,CAQ4UjB,CAASqvB,EAAYW,GAAUvwB,cAAe8qB,GAAmBA,GAAiBM,cAAgBwE,EACha7E,EACA,KAAMjrB,aAAcyvB,EAAgBxvB,WAAYyvB,EAAapiC,MAAOA,GAASP,EAAa2jC,sBAAuBlvB,OAAQA,GAAUzU,EAAa4jC,uBAAwBjvB,WAAYA,EAAYD,YAAaA,GAAe1U,EAAa6jC,4BAA6BjvB,WAAYA,EAAYC,YAAa7U,EAAa8jC,qBAAsBhvB,YAAa9U,EAAa+jC,sBACtX,CACA,OAAQ7kC,EAAAA,cAAoB,MAAO,CAAEW,UAAW,2BAC5CX,EAAAA,cAAoB0R,EAA0B,CAAEpB,eAAgB2uB,GAAkBE,EAA4B5uB,eAAgB0uB,GAAkBK,EAA4B9uB,mBAAoB2uB,EAA4B1uB,mBAAoB6uB,EAA4B5uB,mBAAoB4yB,EAAuB3yB,mBAAoB4yB,EAAuB3yB,mBAAoB0uB,GAA8BE,EAAqB3uB,mBAAoBsuB,GAA8BK,EAAqB1uB,cAAehQ,EAAagkC,uBAAwB/zB,cAAejQ,EAAaikC,uBAAwB/zB,QAAS6tB,EAAiB5tB,QAAS2yB,IAC3nB5jC,EAAAA,cAAoB,MAAO,CAAEsE,IAAKi6B,GAC9B+F,GAAoB,GACpBA,GAAoB,IAChC,CAnRYU,CAAe33B,EAAkBxN,GACzC,CACA,OAAO,CACX,CAiROolC,CAAsBxkC,EAAMZ,QAASY,EAAMmN,gBACtD,C,gHChWA,SAAS7D,EAAatJ,GAElB,OADmBiB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMoY,MAAM9U,YACjCjF,EAAAA,cAAoBklC,EAAAA,IAAgB,IAAKzkC,IAAaT,EAAAA,cAAoBmlC,EAAAA,IAAgB,IAAK1kC,GACxH,CACA,SAASmF,EAAoBnF,GAEzB,OADmBiB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMoY,MAAM9U,YACjCjF,EAAAA,cAAoBolC,EAAAA,IAAuB,IAAK3kC,IAAaT,EAAAA,cAAoBqlC,EAAAA,IAAuB,IAAK5kC,GACtI,C,qECTA,IAAI6kC,EAAa,EAIjB,SAASpjB,IACL,MAAMqjB,GAAa1hC,EAAAA,EAAAA,UAInB,YAH2BoW,IAAvBsrB,EAAWphC,UACXohC,EAAWphC,QAAUmhC,KAElBC,EAAWphC,OACtB,C,yFCAA,SAASqhC,GAA6B,KAAEt0B,EAAI,iBAAEhR,EAAgB,UAAES,EAAS,GAAEN,EAAE,OAAEolC,IAC3E,IAAIC,GAAaC,EAAAA,EAAAA,KAOjB,YANyB1rB,IAArB/Z,IACAwlC,EAAaxlC,GAEbwlC,IACAx0B,GAAOiT,EAAAA,EAAAA,IAAajT,IAEpBu0B,EAEQzlC,EAAAA,cAAoB,OAAQ,CAAEK,GAAIA,EAAIM,UAAWA,EAAWilC,wBAAyB,CAAEC,OAAQ30B,KAGnGlR,EAAAA,cAAoB,MAAO,CAAEK,GAAIA,EAAIM,UAAWA,EAAWilC,wBAAyB,CAAEC,OAAQ30B,IAC1G,CACA,MAAM8T,EAAqChlB,EAAAA,KAAWwlC,E,gICJtD,SAASxV,GAAgB,MAAE3uB,EAAK,OAAEwD,EAAM,kBAAEkrB,EAAiB,OAAEhqB,IACzD,MAAM,oBAAE4pB,EAAmB,wBAAEmW,IAA4B/kC,EAAAA,EAAAA,KACnDsC,GAAgBC,EAAAA,EAAAA,MACfyiC,EAAaC,IAAkBviC,EAAAA,EAAAA,WAAS,IACxCwiC,EAAWC,IAAgBziC,EAAAA,EAAAA,WAAS,GAIrC0iC,GAAsB7gC,EAAAA,EAAAA,aAAY,KACpC0gC,GAAe,GACfE,GAAa,GACb7iC,EAAcssB,IACf,CAACtsB,EAAessB,IAIbyW,GAAqB9gC,EAAAA,EAAAA,aAAY,KACnC0gC,GAAe,GACf3iC,EAAcyiC,GACd//B,OACD,CAAC1C,EAAeyiC,EAAyB//B,IAa5C,OAVA7B,EAAAA,EAAAA,WAAU,KACN,IAAIqB,EAAe,KAKnB,OAJIwgC,IAEAxgC,EAAeC,WADQuqB,GAAqBoW,EACF1gC,EAAAA,IAEvC,KACHC,aAAaH,KAElB,CAACwgC,EAAaI,EAAqBpW,IAC9B/vB,EAAAA,cAAoB,MAAO,CAAEW,UAAW,+BAC5CslC,IASoBI,EATY1W,EAU5B3vB,EAAAA,cAAoB,MAAO,CAAEW,UAAW,uCAC5CX,EAAAA,cAAoBa,EAAAA,EAAa,CAAEV,KAAMkmC,OAVxCJ,GAAcjmC,EAAAA,cAAoB,SAAU,CAAEW,UAAW,6BAA8BU,MAAOA,EAAOwE,IAAKhB,EAAQyhC,QAAS,2EAA4EC,eAAgB,SAAUxgC,OAAQqgC,IAC1OL,GAGI/lC,EAAAA,cAAoBwmC,EAAAA,EAAsB,CAAEC,MAAO,MACvDzmC,EAAAA,cAAoB,MAAO,CAAEW,UAAW,uCACpCX,EAAAA,cAAoB0mC,EAAAA,EAAS,CAAEC,QAAQ,EAAMC,SAAS,OAElE,IAA4BP,CAN5B,C","sources":["webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/utils/lang/langUtils.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/agent/AvailabilityMessage.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/ErrorIcon.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/error/InlineError.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/modals/EndAgentChatModal.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/image/Image.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/SearchResultBody.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/MediaPlayer.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/TextHolderTile.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/BodyMessageComponents.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/FooterButtonComponents.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/BodyWithFooterComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/video/VideoComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/hooks/useCSSCustomProperties.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackButtonsElement/src/FeedbackButtonsElement.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackButtonsElement/src/feedbackButtonsElement.scss.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackButtonsElement/src/feedbackButtonsElement.template.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackButtonsElement/cds-aichat-feedback-buttons.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/react/components/feedback/FeedbackButtonsComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/tagListElement/src/TagListElement.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/tagListElement/src/tagListElement.scss.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/tagListElement/cds-aichat-tag-list.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/tagListElement/src/tagListElement.template.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/roundedButton/cds-aichat-rounded-button.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackElement/src/FeedbackElement.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackElement/src/feedbackElement.scss.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackElement/cds-aichat-feedback.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackElement/src/feedbackElement.template.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/react/components/feedback/FeedbackComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/ResponseStopped.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/agent/RealConnectToAgent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/agent/ConnectToAgent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/audio/AudioComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/ClickableImage.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/buttonItem/BaseButtonItemComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/buttonItem/ButtonItemCustomEventComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/buttonItem/ButtonItemPostBackComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/buttonItem/ButtonItemShowPanelComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/react/carbon/Link.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/buttonItem/ButtonItemURLComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/utils/carbonIcon.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/buttonItem/ButtonItemComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/card/CardItemComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/carousel/CarouselItemComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/hooks/useCallbackOnChange.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/citations/CitationCardContent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/hooks/useWindowSize.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/citations/CitationClickableCard.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/citations/CitationCard.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/utils/searchUtils.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/citations/ExpandToPanelCard.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/PortalComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/conversationalSearch/ConversationalSearchText.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/markdownText/markdown/markdownToHTML.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/conversationalSearch/ConversationalSearch.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/custom/UserDefinedResponse.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/utils/dateUtils.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/datePicker/DatePickerComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/grid/GridItemComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/iframe/IFramePreviewCard.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/iframe/InlineIFrame.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/iframe/IFrameMessage.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/Description.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/Metablock.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/options/SelectComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/options/OptionComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/table/src/table.template.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/table/cds-aichat-table.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/table/src/tableSkeleton.template.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/table/src/tablePagination.template.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/table/src/table.scss.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/react/components/table/Table.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/table/TableContainer.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/tour/TourCard.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/StreamingRichText.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/chainOfThought/src/ChainOfThoughtElement.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/chainOfThought/src/chainOfThoughtElement.scss.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/chainOfThought/src/chainOfThoughtElement.template.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/chainOfThought/cds-aichat-chain-of-thought.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/react/components/chainOfThought/ChainOfThought.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/containers/MessageTypeComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/SkeletonPicker.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/hooks/useCounter.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/util/MaybeDangerouslySetInnerHTML.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/iframe/IFrameComponent.js"],"sourcesContent":["/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Miscellaneous JavaScript utilities.\n */\n/**\n * Determines if the given value is null or undefined.\n */\nfunction isNil(value) {\n    return value === undefined || value === null;\n}\n/**\n * Determines if a given number is odd.\n */\nfunction isOdd(value) {\n    if (value % 2 !== 1) {\n        return true;\n    }\n    return false;\n}\n\nexport { isNil, isOdd };\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { isNil } from '../../utils/lang/langUtils.js';\nimport { addHTMLSupport } from '../../utils/languages.js';\nimport { RichText as RichTextExport } from '../responseTypes/util/RichText.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Returns the details necessary for building the message to display the current agent availability.\n */\nfunction AvailabilityMessage({ availability, fallbackText, }) {\n    let availabilityKey;\n    let availabilityValues;\n    let availabilityText;\n    if (!isNil(availability?.estimated_wait_time)) {\n        availabilityKey = \"agent_connectingMinutes\";\n        availabilityValues = { time: availability.estimated_wait_time };\n    }\n    else if (!isNil(availability?.position_in_queue)) {\n        availabilityKey = \"agent_connectingQueue\";\n        availabilityValues = { position: availability.position_in_queue };\n    }\n    else if (availability?.message) {\n        availabilityText = availability.message;\n    }\n    else {\n        availabilityText = fallbackText;\n    }\n    if (availabilityText) {\n        return React.createElement(RichTextExport, { overrideSanitize: true, text: availabilityText });\n    }\n    return (React.createElement(FormattedMessage, { id: availabilityKey, values: addHTMLSupport(availabilityValues) }));\n}\n\nexport { AvailabilityMessage };\n","import ErrorFilled from '@carbon/icons-react/es/ErrorFilled.js';\nimport cx from 'classnames';\nimport React from 'react';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction ErrorIcon(props) {\n    return React.createElement(ErrorFilled, { className: cx(\"WACErrorIcon\", props.className) });\n}\n\nexport { ErrorIcon };\n","import React from 'react';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { ErrorIcon } from '../../ErrorIcon.js';\nimport { RichText as RichTextExport } from '../util/RichText.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction InlineError({ text }) {\n    const languagePack = useLanguagePack();\n    return (React.createElement(\"div\", { className: \"WAC__inlineError\" },\n        React.createElement(\"div\", { className: \"WAC__inlineError--iconHolder\" },\n            React.createElement(ErrorIcon, { className: \"WAC__inlineError--icon\" })),\n        React.createElement(\"div\", { className: \"WAC__inlineError--text\" },\n            React.createElement(RichTextExport, { shouldRemoveHTMLBeforeMarkdownConversion: true, text: text || languagePack.errors_generalContent }))));\n}\n\nexport { InlineError, InlineError as default };\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLanguagePack } from '../../hooks/useLanguagePack.js';\nimport { useServiceManager } from '../../hooks/useServiceManager.js';\nimport { ConfirmModal } from './ConfirmModal.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Displays a modal asking if the user wants to end a chat with an agent. This also covers the case where the user\n * cancels a request for an agent before an agent has joined.\n */\nfunction EndAgentChatModal(props) {\n    const { onConfirm, onCancel, title, message } = props;\n    const languagePack = useLanguagePack();\n    const serviceManager = useServiceManager();\n    const { isConnected, isSuspended } = useSelector((state) => state.persistedToBrowserStorage.chatState.agentState);\n    const useTitle = title ||\n        (isConnected\n            ? languagePack.agent_endChat\n            : languagePack.agent_confirmCancelRequestTitle);\n    const useMessage = message ||\n        (isConnected\n            ? languagePack.agent_confirmEndChat\n            : languagePack.agent_confirmCancelRequestMessage);\n    const cancelButtonLabel = languagePack.agent_confirmEndChatNo;\n    let confirmButtonLabel;\n    if (isSuspended) {\n        confirmButtonLabel = languagePack.agent_confirmEndSuspendedYes;\n    }\n    else if (isConnected) {\n        confirmButtonLabel = languagePack.agent_confirmEndChatYes;\n    }\n    else {\n        confirmButtonLabel = languagePack.agent_confirmCancelRequestYes;\n    }\n    return (React.createElement(ConfirmModal, { title: useTitle, message: useMessage, onConfirm: onConfirm, onCancel: onCancel, cancelButtonLabel: cancelButtonLabel, confirmButtonLabel: confirmButtonLabel, modalAnnounceMessage: useMessage, serviceManager: serviceManager }));\n}\n\nexport { EndAgentChatModal };\n","import { Tile, unstable__AiSkeletonPlaceholder, SkeletonPlaceholder } from '@carbon/react';\nimport cx from 'classnames';\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useAriaAnnouncer } from '../../../hooks/useAriaAnnouncer.js';\nimport { getURLHostName } from '../../../utils/browserUtils.js';\nimport { RESPONSE_TYPE_TIMEOUT_MS } from '../../../utils/constants.js';\nimport { InlineError } from '../error/InlineError.js';\nimport { TextHolderTile } from '../util/TextHolderTile.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction Image(props) {\n    const { imageError, title, description, displayURL, hideIconAndTitle, needsAnnouncement, renderIcon, inline, } = props;\n    const ariaAnnouncer = useAriaAnnouncer();\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const rootRef = useRef();\n    // This ref is for merely saving the initial value of shouldAnnounce prop.\n    const needsAnnouncementRef = useRef(needsAnnouncement);\n    const hasText = Boolean(title || description || displayURL);\n    const Icon = renderIcon;\n    // This effect announces the contents of this response type once the image has loaded.\n    useEffect(() => {\n        if (isLoaded && needsAnnouncementRef.current) {\n            ariaAnnouncer(rootRef.current);\n        }\n    }, [ariaAnnouncer, isLoaded]);\n    if (isError) {\n        return React.createElement(InlineError, { text: imageError });\n    }\n    if (inline) {\n        return (React.createElement(ImageOnly, { ...props, setIsError: setIsError, setIsLoaded: setIsLoaded, isError: isError, isLoaded: isLoaded }));\n    }\n    return (React.createElement(Tile, { ref: rootRef, className: cx(\"WACImage\", {\n            WACImage__TextAndIcon: hasText && Boolean(renderIcon),\n            WACImage__IconOnly: !hideIconAndTitle && !title && !description && Boolean(renderIcon),\n        }) },\n        React.createElement(\"div\", { className: \"WACImage__ImageWrapper\" },\n            React.createElement(ImageOnly, { ...props, setIsError: setIsError, setIsLoaded: setIsLoaded, isError: isError, isLoaded: isLoaded })),\n        hasText && (React.createElement(TextHolderTile, { title: title, description: description, displayURL: displayURL, urlHostName: displayURL && getURLHostName(displayURL), hideTitle: hideIconAndTitle })),\n        Boolean(Icon) && (React.createElement(Icon, { className: cx(\"WACImage__Icon\", \"WACDirectionHasReversibleSVG\", {\n                \"WACImage__Icon--link\": displayURL,\n            }) }))));\n}\nfunction ImageOnly({ source, title, description, altText, displayURL, preventInlineError, onImageLoad, useAITheme, isLoaded, isError, setIsLoaded, setIsError, className, inline, }) {\n    const [isImageHidden, setIsImageHidden] = useState(false);\n    const imageAlt = altText || title || description || \"\";\n    const hasText = Boolean(title || description || displayURL);\n    /**\n     * Upon an error, update the error loading flag in order to render an inline error.\n     */\n    const handleError = useCallback(() => {\n        if (preventInlineError && hasText) {\n            setIsImageHidden(true);\n        }\n        else {\n            setIsError(true);\n        }\n    }, [preventInlineError, hasText, setIsError]);\n    // This effect sets a timeout that auto error handles after 10 seconds of waiting for the image to load. Once the\n    // image has loaded, the skeleton will be hidden, and we can clear the timeout.\n    useEffect(() => {\n        let errorTimeout = null;\n        if (!isLoaded) {\n            errorTimeout = setTimeout(handleError, RESPONSE_TYPE_TIMEOUT_MS);\n        }\n        return () => {\n            clearTimeout(errorTimeout);\n        };\n    }, [isLoaded, handleError]);\n    return (React.createElement(React.Fragment, null,\n        !isLoaded &&\n            !isImageHidden &&\n            !inline &&\n            source &&\n            (useAITheme ? (React.createElement(unstable__AiSkeletonPlaceholder, { className: \"WACImage__Skeleton\" })) : (React.createElement(SkeletonPlaceholder, { className: \"WACImage__Skeleton\" }))),\n        !isError && !isImageHidden && source && (React.createElement(\"img\", { className: cx(\"WACImage__Image\", {\n                [className]: className,\n                \"WACImage__Image--loaded\": isLoaded,\n            }), src: source, alt: imageAlt, onLoad: () => {\n                onImageLoad?.();\n                setIsLoaded(true);\n            }, onError: handleError }))));\n}\nconst ImageExport = React.memo(Image);\n\nexport { ImageExport as Image };\n","import React from 'react';\nimport { isOdd } from '../../../utils/lang/langUtils.js';\nimport { convertPossibleStringifiedArrayToFirstString, convertToEmptyStringIfStringifiedNull } from '../../../utils/lang/stringUtils.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Returns a {@link ReactNode} that represents the given text with `<em>` tags in the string replaced with actual\n * JSX elements to form highlighted portions.\n */\nfunction formatHighlightFields(str) {\n    const strArray = str.split(new RegExp(\"<em>|</em>\", \"g\"));\n    // If there is an odd number of '<em>' separators, then just return the whole string, minus the '<em>' elements.\n    if (isOdd(strArray.length)) {\n        return [strArray.join(\"\")];\n    }\n    return strArray.map((strSegment, index) => {\n        if (isOdd(index)) {\n            return strSegment;\n        }\n        return (\n        // eslint-disable-next-line react/no-array-index-key\n        React.createElement(\"em\", { key: index, className: \"WAC__highlight\" }, strSegment));\n    });\n}\n/**\n * Determine which element to render as the body and the amount of text that will be displayed in it.\n * Always use highlight.body, Use body as a fallback based on certain conditions\n * This was driven by https://github.ibm.com/Watson-Discovery/customer-care/issues/660\n * We check the searchResults.highlight.body which should be an array. If that is not set, we fall back to\n * searchResult.body which is either a string OR a stringified array. If it is the latter, we only want the first\n * item in the stringified array. https://github.ibm.com/watson-engagement-advisor/wea-backlog/issues/31262 has an\n * explanation.\n */\nfunction SearchResultBody({ searchResult }) {\n    if (searchResult && \"highlight\" in searchResult) {\n        if (searchResult.highlight?.body?.[0]) {\n            return formatHighlightFields(convertToEmptyStringIfStringifiedNull(searchResult.highlight.body[0]));\n        }\n    }\n    if (searchResult && \"body\" in searchResult && searchResult.body) {\n        return convertPossibleStringifiedArrayToFirstString(convertToEmptyStringIfStringifiedNull(searchResult.body));\n    }\n    return null;\n}\nconst SearchResultBodyExport = React.memo(SearchResultBody);\n/**\n * In conversational search citation panels we show the search result body instead of the citation text or highlight\n * body because it will contain the most context for the user. This will only be used if there is no url or\n * pdf attached to the source, so the assumption is that the data will be nicely formatted from document ingestion\n * instead of a web crawler. We also make sure to highlight the citation text within the search result body to help the\n * user find the citation.\n */\nfunction SearchResultBodyWithCitationHighlighted({ relatedSearchResult, citationItem, }) {\n    const elementsArray = [];\n    let searchString;\n    let citationString;\n    if (relatedSearchResult?.body) {\n        const searchStringFromBody = convertPossibleStringifiedArrayToFirstString(convertToEmptyStringIfStringifiedNull(relatedSearchResult.body));\n        // Search result body's can contain <em> and </em> tags which need to be removed. After remove the em tags, it\n        // should be safe to assume that the citation text is a direct substring of either the search_result body or title.\n        searchString = searchStringFromBody\n            .replace(\"<em>\", \"\")\n            .replace(\"</em>\", \"\");\n    }\n    if (citationItem?.text) {\n        citationString = convertPossibleStringifiedArrayToFirstString(convertToEmptyStringIfStringifiedNull(citationItem.text));\n    }\n    if (searchString && citationString) {\n        const startOfCitation = searchString.indexOf(citationString);\n        // If the citation string is not within the search string from the search_result body than the citation was from the\n        // search_result title which doesn't get this highlight treatment.\n        if (startOfCitation !== -1) {\n            // Add the text prior to the citation to the array.\n            elementsArray.push(React.createElement(\"span\", { key: 1 }, searchString.substring(0, startOfCitation)));\n            // Add the highlighted citation text to the array.\n            elementsArray.push(React.createElement(\"em\", { key: 2, className: \"WAC__highlight\" }, searchString.substring(startOfCitation, startOfCitation + citationString.length)));\n            // Add the text after the citation to the array.\n            elementsArray.push(React.createElement(\"span\", { key: 3 }, searchString.substring(startOfCitation + citationString.length)));\n        }\n    }\n    if (elementsArray.length) {\n        // If we had a search string and a citation string then we were able to form a highlighted search body which should\n        // be used.\n        return elementsArray;\n    }\n    if (searchString.length) {\n        // If we couldn't form a highlighted search body then just use the search string. This could happen if the citation\n        // string was in the title of the search_result instead of in the body.\n        return [React.createElement(\"span\", { key: \"search-string\" }, searchString)];\n    }\n    // If for some reason we couldn't create a search string then use the citation string.\n    return [React.createElement(\"span\", { key: \"citation-string\" }, citationString)];\n}\nconst SearchResultBodyWithCitationHighlightedExport = React.memo(SearchResultBodyWithCitationHighlighted);\n\nexport { SearchResultBodyExport as SearchResultBody, SearchResultBodyWithCitationHighlightedExport as SearchResultBodyWithCitationHighlighted };\n","import Music from '@carbon/icons-react/es/Music.js';\nimport { Tile } from '@carbon/react';\nimport cx from 'classnames';\nimport React, { useState, useRef, useCallback, useEffect, Suspense } from 'react';\nimport { useAriaAnnouncer } from '../../../hooks/useAriaAnnouncer.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { usePrevious } from '../../../hooks/usePrevious.js';\nimport { RESPONSE_TYPE_TIMEOUT_MS } from '../../../utils/constants.js';\nimport { getResponsiveElementPaddingValue } from '../../../utils/miscUtils.js';\nimport { SkeletonPlaceholder, SkeletonText } from '../../SkeletonPicker.js';\nimport { InlineError } from '../error/InlineError.js';\nimport { TextHolderTile } from './TextHolderTile.js';\nimport { MessageResponseTypes } from '../../../../../types/messaging/Messages.js';\nimport { lazyMediaPlayer } from '../../../../dynamic-imports/dynamic-imports.js';\nimport { useDynamicCSSProperties } from '../../../hooks/useCSSCustomProperties.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n// https://reactjs.org/docs/code-splitting.html#reactlazy\nconst ReactPlayerComponent = lazyMediaPlayer();\n/**\n * This component uses the React player library to handle rendering video/audio files, as well as handling third-party\n * embeddable video/audio services. Learn more: https://github.com/cookpete/react-player\n *\n * Note: We force media files to render using a video element for accessibility purposes since the audio element doesn't\n * support WebVTT for captioning/transcripts, but the video element does.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio#accessibility_concerns\n */\nfunction MediaPlayerComponent({ type, source, title, description, ariaLabel, isMixcloud, baseHeight, doAutoScroll, playing, onPlay, onPause, hideIconAndTitle, needsAnnouncement, }) {\n    const [skeletonHidden, setSkeletonHidden] = useState(false);\n    const [errorLoading, setErrorLoading] = useState(false);\n    const { errors_audioSource, errors_videoSource } = useLanguagePack();\n    const ariaAnnouncer = useAriaAnnouncer();\n    const rootElementRef = useRef();\n    const paddingTop = isMixcloud\n        ? \"120px\"\n        : getResponsiveElementPaddingValue(baseHeight);\n    const inlineStyles = useDynamicCSSProperties({ paddingTop });\n    const isAudio = type === MessageResponseTypes.AUDIO;\n    const errorMessage = isAudio ? errors_audioSource : errors_videoSource;\n    const prevSource = usePrevious(source);\n    // This ref is for merely saving the initial value of shouldAnnounce prop.\n    const shouldAnnounceRef = useRef(needsAnnouncement);\n    /**\n     * Upon an error, update the error loading flag in order to render an inline error.\n     */\n    const handleError = useCallback(() => {\n        setErrorLoading(true);\n        setSkeletonHidden(true);\n    }, []);\n    useEffect(() => {\n        if (source !== prevSource && skeletonHidden) {\n            setSkeletonHidden(false);\n        }\n    }, [prevSource, skeletonHidden, source]);\n    // This effect sets a timeout that auto error handles after 10 seconds of waiting for the React player to ready.\n    // Once the player has loaded, the skeleton will be hidden, and we can clear the timeout.\n    useEffect(() => {\n        let errorTimeout = null;\n        if (!skeletonHidden) {\n            errorTimeout = setTimeout(handleError, RESPONSE_TYPE_TIMEOUT_MS);\n        }\n        return () => {\n            clearTimeout(errorTimeout);\n        };\n    }, [skeletonHidden, handleError]);\n    useEffect(() => {\n        if (skeletonHidden && shouldAnnounceRef.current) {\n            ariaAnnouncer(rootElementRef.current);\n        }\n    }, [ariaAnnouncer, skeletonHidden]);\n    /**\n     * Once the video player is finished loading, remove the skeleton.\n     */\n    const handleReady = useCallback(() => {\n        if (!skeletonHidden) {\n            setSkeletonHidden(true);\n            doAutoScroll?.();\n        }\n    }, [doAutoScroll, skeletonHidden]);\n    /**\n     * Renders a media player skeleton. This is rendered until the react-player has loaded the provided url.\n     */\n    function renderMediaPlayerSkeleton() {\n        return (React.createElement(Tile, { className: \"WACMediaPlayer__Skeleton\" },\n            React.createElement(\"div\", { className: \"WACMediaPlayer__SkeletonContainer\", \n                // eslint-disable-next-line react/forbid-dom-props\n                style: inlineStyles },\n                React.createElement(SkeletonPlaceholder, { className: \"WACMediaPlayer__SkeletonPlayer\" })),\n            (title || description) && (React.createElement(\"div\", { className: \"WACMediaPlayer__SkeletonTextContainer\" },\n                React.createElement(SkeletonText, { paragraph: true, lineCount: 2 })))));\n    }\n    /**\n     * Render a media player background that adds letterboxes to urls utilizing iframes that may not have them included\n     * already. If an audio file is being played, we should display a music icon in the center since audio files will be\n     * loaded using a video element and a 16:9 blank video element with controls playing audio would look weird.\n     */\n    function renderMediaPlayerBackground() {\n        return (React.createElement(\"div\", { className: cx(\"WACMediaPlayer__Background\", {\n                \"WACMediaPlayer__Background--audio\": isAudio,\n            }) }, isAudio && React.createElement(Music, { size: 32, className: \"WACMediaPlayer__MusicIcon\" })));\n    }\n    /**\n     * If the dynamically imported react-player component is in suspense, we don't need to display some loading indicator\n     * since the media player skeleton handles that for us and the media player is hidden with `display: none` until the\n     * react-player has loaded the url.\n     */\n    function renderSuspenseFallback() {\n        return React.createElement(\"div\", null);\n    }\n    return (React.createElement(React.Fragment, null,\n        !skeletonHidden && renderMediaPlayerSkeleton(),\n        React.createElement(\"div\", { className: \"WACMediaPlayer__Root\", ref: rootElementRef },\n            errorLoading && React.createElement(InlineError, { text: errorMessage }),\n            !errorLoading && (React.createElement(Tile, { className: cx(\"WACMediaPlayer\", { WAC__hidden: !skeletonHidden }) },\n                React.createElement(\"div\", { className: \"WACMediaPlayer__Wrapper\", style: inlineStyles },\n                    renderMediaPlayerBackground(),\n                    React.createElement(Suspense, { fallback: renderSuspenseFallback() },\n                        React.createElement(ReactPlayerComponent, { className: \"WACMediaPlayer__Player\", url: source, controls: true, width: \"100%\", height: \"100%\", config: {\n                                file: {\n                                    forceVideo: true,\n                                    attributes: {\n                                        controlsList: \"nodownload\",\n                                        \"aria-label\": ariaLabel || description || title,\n                                    },\n                                },\n                            }, playsinline: true, playing: playing, onPlay: onPlay, onPause: onPause, onReady: handleReady, onError: handleError, pip: true }))),\n                (title || description) && (React.createElement(TextHolderTile, { title: title, description: description, hideTitle: hideIconAndTitle })))))));\n}\nconst MediaPlayerExport = React.memo(MediaPlayerComponent);\n\nexport { MediaPlayerExport as MediaPlayer };\n","import cx from 'classnames';\nimport React from 'react';\nimport VisuallyHidden from '../../util/VisuallyHidden.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component renders the Textual part of the cards - more specifically Title, description, favicon URL\n * or default fallback icon. In the case of Iframes, this also renders the URL part. Also renders a launch icon in\n * the case of text-only cards\n */\nfunction TextHolderTile({ title, description, displayURL, urlHostName, hideTitle, }) {\n    return (React.createElement(\"div\", { className: \"WACTextHolderTile\" },\n        React.createElement(\"div\", { className: cx(\"WACTextHolderTile__Wrapper\", \"WACWidget__textEllipsis\", {\n                WACTextHolderTile__IconMargin: !displayURL,\n            }) },\n            !hideTitle && title && (React.createElement(\"div\", { className: \"WACTextHolderTile__Title\" }, title)),\n            description && (React.createElement(\"div\", { className: cx(\"WACTextHolderTile__Description\", {\n                    WACTextHolderTile__DescriptionMargin: title,\n                }) }, description)),\n            displayURL && (React.createElement(React.Fragment, null,\n                React.createElement(VisuallyHidden, null, urlHostName),\n                React.createElement(\"div\", { className: cx(\"WACTextHolderTile__Url\", \"WACWidget__textEllipsis\", {\n                        WACTextHolderTile__UrlMargin: title || description,\n                    }), \"aria-hidden\": true }, displayURL))))));\n}\n\nexport { TextHolderTile };\n","import cx from 'classnames';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { MessageTypeComponent } from '../../../containers/MessageTypeComponent.js';\nimport { MessageResponseTypes } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component handles rendering nested messages for response types that have a \"body\" property.\n */\nfunction BodyMessageComponents(props) {\n    const { bodyLocalMessageItemIDs } = props.message.ui_state;\n    const allMessageItemsByID = useSelector((state) => state.allMessageItemsByID);\n    // Loop through the list of supported local message ids and return a message component for each.\n    const messageComponents = bodyLocalMessageItemIDs?.map((nestedMessageID, index) => {\n        const nestedLocalMessage = allMessageItemsByID[nestedMessageID];\n        const isFullWidthMessage = isFullWidthResponseType(nestedLocalMessage.item.response_type);\n        // Determine if the next message is a full width message, or not. Messages next to each other that aren't full\n        // width should have small bottom padding separating them.\n        const nextLocalMessageID = bodyLocalMessageItemIDs[index + 1];\n        const nextLocalMessage = allMessageItemsByID[nextLocalMessageID];\n        const isNextMessageFullWidth = isFullWidthResponseType(nextLocalMessage?.item.response_type);\n        const isLastElement = index === bodyLocalMessageItemIDs.length - 1;\n        const withShortBottomPadding = !isLastElement && !isFullWidthMessage && !isNextMessageFullWidth;\n        return (React.createElement(\"div\", { key: nestedMessageID, className: cx(\"WACBodyMessageComponents__MessageWrapper\", {\n                \"WACBodyMessageComponents__MessageWrapper--fullWidth\": isFullWidthMessage,\n                \"WACBodyMessageComponents__MessageWrapper--shortBottomPadding\": withShortBottomPadding,\n            }) },\n            React.createElement(MessageTypeComponent, { ...props, message: nestedLocalMessage, isNestedMessageItem: true })));\n    });\n    if (!messageComponents?.length) {\n        return null;\n    }\n    return React.createElement(\"div\", { className: \"WACBodyMessageComponents\" }, messageComponents);\n}\n/**\n * Determines if the given response type should be rendered in full width.\n */\nfunction isFullWidthResponseType(responseType) {\n    switch (responseType) {\n        case MessageResponseTypes.IMAGE:\n        case MessageResponseTypes.IFRAME:\n        case MessageResponseTypes.VIDEO:\n        case MessageResponseTypes.AUDIO:\n        case MessageResponseTypes.USER_DEFINED:\n            return true;\n        default:\n            return false;\n    }\n}\nconst BodyMessageTypeComponentsExport = React.memo(BodyMessageComponents);\n\nexport { BodyMessageTypeComponentsExport as BodyMessageComponents };\n","import cx from 'classnames';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { MessageTypeComponent } from '../../../containers/MessageTypeComponent.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component handles rendering button response types in the footer of a container, under \"body\" content. See\n * {@link #BodyMessageComponents}.\n */\nfunction FooterButtonComponents(props) {\n    const allMessageItemsByID = useSelector((state) => state.allMessageItemsByID);\n    const buttonComponents = props.message.ui_state.footerLocalMessageItemIDs?.map((nestedMessageID) => {\n        const nestedLocalMessage = allMessageItemsByID[nestedMessageID];\n        return (React.createElement(MessageTypeComponent, { key: nestedMessageID, ...props, message: nestedLocalMessage, isNestedMessageItem: true }));\n    });\n    const totalButtons = buttonComponents?.length ?? 0;\n    const isColumnList = totalButtons > 2;\n    return totalButtons ? (React.createElement(\"div\", { className: cx(\"WACFooterButtonComponents\", {\n            \"WACFooterButtonComponents--column\": isColumnList,\n        }) }, buttonComponents)) : null;\n}\n\nexport { FooterButtonComponents };\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLanguagePack } from '../hooks/useLanguagePack.js';\nimport { useServiceManager } from '../hooks/useServiceManager.js';\nimport { selectInputState } from '../store/selectors.js';\nimport { THROW_ERROR } from '../utils/constants.js';\nimport { BodyMessageComponents as BodyMessageTypeComponentsExport } from './responseTypes/util/BodyMessageComponents.js';\nimport { FooterButtonComponents } from './responseTypes/util/FooterButtonComponents.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component handles rendering nested message items for response types with \"body\" and \"footer\" support.\n */\nfunction BodyWithFooterComponent({ localMessageItem, fullMessage, isMessageForInput, requestFocus, }) {\n    const serviceManager = useServiceManager();\n    const languagePack = useLanguagePack();\n    const appConfig = useSelector((state) => state.config);\n    const inputState = useSelector(selectInputState);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(BodyMessageTypeComponentsExport, { message: localMessageItem, originalMessage: fullMessage, languagePack: languagePack, requestInputFocus: requestFocus, disableUserInputs: inputState.isReadonly, config: appConfig, isMessageForInput: isMessageForInput, scrollElementIntoView: THROW_ERROR, serviceManager: serviceManager, hideFeedback: true, allowNewFeedback: false }),\n        React.createElement(FooterButtonComponents, { message: localMessageItem, originalMessage: fullMessage, languagePack: languagePack, requestInputFocus: requestFocus, disableUserInputs: inputState.isReadonly, config: appConfig, isMessageForInput: isMessageForInput, scrollElementIntoView: THROW_ERROR, serviceManager: serviceManager, hideFeedback: true, allowNewFeedback: false })));\n}\n\nexport { BodyWithFooterComponent };\n","import React from 'react';\nimport { MediaPlayer as MediaPlayerExport } from '../util/MediaPlayer.js';\nimport { MessageResponseTypes } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction VideoComponent({ ...props }) {\n    return React.createElement(MediaPlayerExport, { type: MessageResponseTypes.VIDEO, ...props });\n}\nconst VideoComponentExport = React.memo(VideoComponent);\n\nexport { VideoComponentExport as VideoComponent };\n","import { useMemo } from 'react';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Hook for generating CSS custom properties from any valid CSS properties object.\n * Converts camelCase React CSS properties to kebab-case CSS custom properties\n * that can be safely used across shadow DOM boundaries.\n *\n * @param styles - Object containing CSS properties with calculated values\n * @returns Object suitable for React's style prop containing CSS custom properties\n */\nconst useDynamicCSSProperties = (styles) => {\n    return useMemo(() => {\n        const customProperties = {};\n        Object.entries(styles).forEach(([key, value]) => {\n            if (value !== undefined && value !== null) {\n                // Convert camelCase to kebab-case for CSS custom properties\n                const kebabKey = key.replace(/[A-Z]/g, (letter) => `-${letter.toLowerCase()}`);\n                customProperties[`--${kebabKey}`] = value;\n            }\n        });\n        return customProperties;\n    }, [styles]);\n};\n\nexport { useDynamicCSSProperties };\n","import { __decorate } from 'tslib';\nimport { LitElement, unsafeCSS, css } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport css_248z from './feedbackButtonsElement.scss.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nclass FeedbackButtonsElement extends LitElement {\n}\nFeedbackButtonsElement.styles = css `\n    ${unsafeCSS(css_248z)}\n  `;\n__decorate([\n    property({ type: Boolean, attribute: \"is-positive-open\", reflect: true })\n], FeedbackButtonsElement.prototype, \"isPositiveOpen\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"is-negative-open\", reflect: true })\n], FeedbackButtonsElement.prototype, \"isNegativeOpen\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"is-positive-selected\", reflect: true })\n], FeedbackButtonsElement.prototype, \"isPositiveSelected\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"has-positive-details\", reflect: true })\n], FeedbackButtonsElement.prototype, \"hasPositiveDetails\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"has-negative-details\", reflect: true })\n], FeedbackButtonsElement.prototype, \"hasNegativeDetails\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"is-negative-selected\", reflect: true })\n], FeedbackButtonsElement.prototype, \"isNegativeSelected\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"is-positive-disabled\", reflect: true })\n], FeedbackButtonsElement.prototype, \"isPositiveDisabled\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"is-negative-disabled\", reflect: true })\n], FeedbackButtonsElement.prototype, \"isNegativeDisabled\", void 0);\n__decorate([\n    property({ type: String, attribute: \"positive-label\", reflect: true })\n], FeedbackButtonsElement.prototype, \"positiveLabel\", void 0);\n__decorate([\n    property({ type: String, attribute: \"negative-label\", reflect: true })\n], FeedbackButtonsElement.prototype, \"negativeLabel\", void 0);\n__decorate([\n    property({ type: String, attribute: \"panel-id\", reflect: true })\n], FeedbackButtonsElement.prototype, \"panelID\", void 0);\n__decorate([\n    property({ type: Object, attribute: \"on-click\" })\n], FeedbackButtonsElement.prototype, \"onClick\", void 0);\n\nexport { FeedbackButtonsElement };\n","var css_248z = \".cds--aichat-feedback-buttons{\\n  display:flex;\\n  margin-block-start:0.5rem;\\n}\";\n\nexport { css_248z as default };\n","import '@carbon/web-components/es-custom/components/textarea/index.js';\nimport '@carbon/web-components/es-custom/components/icon-button/index.js';\nimport { toString } from '@carbon/icon-helpers';\nimport ThumbsDown16 from '@carbon/icons/es/thumbs-down/16.js';\nimport ThumbsDownFilled16 from '@carbon/icons/es/thumbs-down--filled/16.js';\nimport ThumbsUp16 from '@carbon/icons/es/thumbs-up/16.js';\nimport ThumbsUpFilled16 from '@carbon/icons/es/thumbs-up--filled/16.js';\nimport { nothing, html } from 'lit';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\nimport { CSS_CLASS_PREFIX } from '../../../settings.js';\nimport '../../../../../types/instance/apiTypes.js';\nimport enLanguagePack from '../../../../languages/en.json.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst ThumbsDown16svg = toString(ThumbsDown16);\nconst ThumbsDownFilled16svg = toString(ThumbsDownFilled16);\nconst ThumbsUp16svg = toString(ThumbsUp16);\nconst ThumbsUpFilled16svg = toString(ThumbsUpFilled16);\nfunction feedbackButtonsElementTemplate(customElementClass) {\n    const { isPositiveOpen, isNegativeOpen, isPositiveSelected, isNegativeSelected, hasPositiveDetails, hasNegativeDetails, isPositiveDisabled, isNegativeDisabled, positiveLabel, negativeLabel, panelID, onClick, } = customElementClass;\n    return html `<div class=\"${CSS_CLASS_PREFIX}-feedback-buttons\">\n    <cds-custom-icon-button\n      class=\"${CSS_CLASS_PREFIX}-feedback-buttons-positive\"\n      size=\"sm\"\n      align=\"top-left\"\n      kind=\"ghost\"\n      role=\"button\"\n      disabled=\"${isPositiveDisabled || nothing}\"\n      aria-expanded=\"${isPositiveDisabled || !hasPositiveDetails\n        ? nothing\n        : isPositiveOpen}\"\n      aria-pressed=\"${isPositiveSelected || nothing}\"\n      aria-controls=\"${panelID}-feedback-positive\"\n      @click=\"${() => onClick(true)}\"\n    >\n      <span slot=\"icon\"\n        >${unsafeSVG(isPositiveSelected ? ThumbsUpFilled16svg : ThumbsUp16svg)}</span\n      >\n      <span slot=\"tooltip-content\"\n        >${positiveLabel || enLanguagePack.feedback_positiveLabel}</span\n      >\n    </cds-custom-icon-button>\n    <cds-custom-icon-button\n      class=\"${CSS_CLASS_PREFIX}-feedback-buttons-negative\"\n      size=\"sm\"\n      align=\"top-left\"\n      kind=\"ghost\"\n      role=\"button\"\n      disabled=\"${isNegativeDisabled || nothing}\"\n      aria-expanded=\"${isNegativeDisabled || !hasNegativeDetails\n        ? nothing\n        : isNegativeOpen}\"\n      aria-pressed=\"${isNegativeSelected || nothing}\"\n      aria-controls=\"${panelID}-feedback-positive\"\n      @click=\"${() => onClick(false)}\"\n    >\n      <span slot=\"icon\"\n        >${unsafeSVG(isNegativeSelected ? ThumbsDownFilled16svg : ThumbsDown16svg)}</span\n      >\n      <span slot=\"tooltip-content\"\n        >${negativeLabel || enLanguagePack.feedback_negativeLabel}</span\n      >\n    </cds-custom-icon-button>\n  </div>`;\n}\n\nexport { feedbackButtonsElementTemplate };\n","import { __decorate } from 'tslib';\nimport { carbonElement } from '../../decorators/customElement.js';\nimport { FeedbackButtonsElement } from './src/FeedbackButtonsElement.js';\nimport { feedbackButtonsElementTemplate } from './src/feedbackButtonsElement.template.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst FEEDBACK_BUTTONS_COMPONENT_TAG_NAME = `cds-aichat-feedback-buttons`;\n/**\n * This class is used to display two feedback buttons (thumbs up and thumbs down).\n */\nlet CDSChatFeedbackButtonsElement = class CDSChatFeedbackButtonsElement extends FeedbackButtonsElement {\n    /**\n     * Renders the template while passing in class functionality.\n     */\n    render() {\n        return feedbackButtonsElementTemplate(this);\n    }\n};\nCDSChatFeedbackButtonsElement = __decorate([\n    carbonElement(FEEDBACK_BUTTONS_COMPONENT_TAG_NAME)\n], CDSChatFeedbackButtonsElement);\n\nexport { FEEDBACK_BUTTONS_COMPONENT_TAG_NAME, CDSChatFeedbackButtonsElement as default };\n","import { createComponent } from '@lit/react';\nimport React from 'react';\nimport CDSChatFeedbackButtonsElement, { FEEDBACK_BUTTONS_COMPONENT_TAG_NAME } from '../../../web-components/components/feedbackButtonsElement/cds-aichat-feedback-buttons.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst FeedbackButtonsComponent = createComponent({\n    tagName: FEEDBACK_BUTTONS_COMPONENT_TAG_NAME,\n    elementClass: CDSChatFeedbackButtonsElement,\n    react: React,\n});\n\nexport { FeedbackButtonsComponent };\n","import { __decorate } from 'tslib';\nimport { unsafeCSS, css, LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport css_248z from './tagListElement.scss.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nclass TagListElement extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The set of tags that have been selected.\n         */\n        this.selectedTags = new Set();\n    }\n    /**\n     * Called when the properties of the component have changed.\n     */\n    updated(changedProperties) {\n        if (changedProperties.has(\"initialSelectedTags\")) {\n            this._setInitialValues(this.initialSelectedTags);\n        }\n    }\n    /**\n     * Updates the initial values used in the component.\n     */\n    _setInitialValues(values) {\n        if (values) {\n            this.selectedTags = new Set(this.initialSelectedTags);\n        }\n    }\n    /**\n     * Called when a tag is clicked.\n     */\n    _handleTagClick(event) {\n        const tagValue = event.target.getAttribute(\"data-content\");\n        const isSelected = this.selectedTags.has(tagValue);\n        if (isSelected) {\n            this.selectedTags.delete(tagValue);\n        }\n        else {\n            this.selectedTags.add(tagValue);\n        }\n        this.onTagsChanged?.(Array.from(this.selectedTags));\n        // Force an update because we changed selectedTags internally but the property reference itself didn't change.\n        this.requestUpdate();\n    }\n}\nTagListElement.styles = css `\n    ${unsafeCSS(css_248z)}\n  `;\n__decorate([\n    property({ type: Array, attribute: \"tags\" })\n], TagListElement.prototype, \"tags\", void 0);\n__decorate([\n    property({ type: Array, attribute: \"initial-selected-tags\" })\n], TagListElement.prototype, \"initialSelectedTags\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"multi-select\" })\n], TagListElement.prototype, \"multiSelect\", void 0);\n__decorate([\n    property({ type: Object, attribute: \"on-tags-changed\" })\n], TagListElement.prototype, \"onTagsChanged\", void 0);\n__decorate([\n    state()\n], TagListElement.prototype, \"selectedTags\", void 0);\n\nexport { TagListElement as default };\n","var css_248z = \".cds--aichat-tag-list-container{\\n  display:flex;\\n  flex-wrap:wrap;\\n  align-items:center;\\n  padding:0;\\n  margin:0;\\n  gap:0.5rem;\\n  list-style:none;\\n}\\n\\n.cds--aichat-tag-list-item{\\n  box-sizing:border-box;\\n  padding:0.125rem;\\n  animation:fade-in 600ms forwards;\\n  font-size:var(--cds-chat-BASE-font-size-small);\\n  opacity:0;\\n}\\n\\n@keyframes fade-in{\\n  from{\\n    opacity:0;\\n  }\\n  to{\\n    opacity:1;\\n  }\\n}\";\n\nexport { css_248z as default };\n","import { __decorate } from 'tslib';\nimport { carbonElement } from '../../decorators/customElement.js';\nimport { WEB_COMPONENT_PREFIX } from '../../settings.js';\nimport TagListElement from './src/TagListElement.js';\nimport { tagListElementTemplate } from './src/tagListElement.template.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst TAG_LIST_TAG_NAME = `${WEB_COMPONENT_PREFIX}-tag-list`;\n/**\n * This component is used to display a list of tags that the user can choose from.\n */\nlet CDSTagListElement = class CDSTagListElement extends TagListElement {\n    /**\n     * Renders the template while passing in class functionality.\n     */\n    render() {\n        return tagListElementTemplate(this);\n    }\n};\nCDSTagListElement = __decorate([\n    carbonElement(TAG_LIST_TAG_NAME)\n], CDSTagListElement);\n\nexport { CDSTagListElement, TAG_LIST_TAG_NAME };\n","import '@carbon/web-components/es-custom/components/tag/index.js';\nimport '@carbon/web-components/es-custom/components/chat-button/index.js';\nimport { html } from 'lit';\nimport { CSS_CLASS_PREFIX } from '../../../settings.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Lit template for code.\n */\nfunction tagListElementTemplate(customElementClass) {\n    const { selectedTags, tags, _handleTagClick: handleTagClick, } = customElementClass;\n    return html `<div class=\"${CSS_CLASS_PREFIX}-tag-list\">\n    ${html `<ul class=\"${CSS_CLASS_PREFIX}-tag-list-container\">\n      ${tags.map((value) => html `<li class=\"${CSS_CLASS_PREFIX}-tag-list-item}\">\n            <cds-custom-chat-button\n              class=\"${CSS_CLASS_PREFIX}-tag-list-button\"\n              kind=\"primary\"\n              size=\"sm\"\n              type=\"button\"\n              is-quick-action\n              role=\"option\"\n              aria-pressed=\"${selectedTags.has(value)}\"\n              ?is-selected=\"${selectedTags.has(value)}\"\n              data-content=\"${value}\"\n              @click=\"${handleTagClick}\"\n            >\n              ${value}\n            </cds-custom-chat-button>\n          </li>`)}\n    </div>`}\n  </div>`;\n}\n\nexport { tagListElementTemplate };\n","import { __decorate } from 'tslib';\nimport CDSButton from '@carbon/web-components/es-custom/components/button/button.js';\nimport { unsafeCSS, css } from 'lit';\nimport { carbonElement } from '../../decorators/customElement.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst ROUNDED_BUTTON_TAG_NAME = `cds-aichat-rounded-button`;\nconst styles = `\n  .cds-custom--btn {\n    border-start-start-radius: var(--${ROUNDED_BUTTON_TAG_NAME}-top-left);\n    border-start-end-radius: var(--${ROUNDED_BUTTON_TAG_NAME}-top-right);\n    border-end-start-radius: var(--${ROUNDED_BUTTON_TAG_NAME}-bottom-left);\n    border-end-end-radius: var(--${ROUNDED_BUTTON_TAG_NAME}-bottom-right);\n    width: var(--${ROUNDED_BUTTON_TAG_NAME}-width);\n    max-width: var(--${ROUNDED_BUTTON_TAG_NAME}-max-width);\n  }`;\n/**\n * This is an extension of the carbon button that allows us to round the corners.\n */\nlet CDSRoundedButtonElement = class CDSRoundedButtonElement extends CDSButton {\n};\nCDSRoundedButtonElement.styles = css `\n    ${CDSButton.styles}\n    ${unsafeCSS(styles)}\n  `;\nCDSRoundedButtonElement = __decorate([\n    carbonElement(ROUNDED_BUTTON_TAG_NAME)\n], CDSRoundedButtonElement);\n\nexport { CDSRoundedButtonElement, ROUNDED_BUTTON_TAG_NAME };\n","import { __decorate } from 'tslib';\nimport { bind } from 'bind-decorator';\nimport { LitElement, unsafeCSS, css } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport css_248z from './feedbackElement.scss.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * The component for displaying a panel requesting feedback from a user.\n */\nclass FeedbackElement extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Indicates whether the text area should be shown.\n         */\n        this.showTextArea = true;\n        /**\n         * Indicates whether the prompt line should be shown.\n         */\n        this.showPrompt = true;\n    }\n    /**\n     * Called when the properties of the component have changed.\n     */\n    updated(changedProperties) {\n        if (changedProperties.has(\"initialValues\")) {\n            this._setInitialValues(this.initialValues);\n        }\n    }\n    /**\n     * Updates the initial values used in the component.\n     */\n    _setInitialValues(values) {\n        if (values) {\n            this._textInput = values.text;\n            this._initialSelectedCategories = values.selectedCategories;\n        }\n    }\n    /**\n     * Stores the current value of the text area used to collect feedback.\n     */\n    _handleTextInput(event) {\n        this._textInput = event.currentTarget.value;\n    }\n    /**\n     * Called when the user clicks the submit button.\n     */\n    _handleSubmit() {\n        this.onSubmit?.({\n            text: this._textInput,\n            selectedCategories: this._selectedCategories,\n        });\n    }\n    /**\n     * Called then the user clicks the close button.\n     */\n    _handleCancel() {\n        this.onClose?.();\n    }\n    /**\n     * Called when the selected categories changes.\n     */\n    _handleCategoryChange(selectedCategories) {\n        this._selectedCategories = selectedCategories;\n    }\n}\nFeedbackElement.styles = css `\n    ${unsafeCSS(css_248z)}\n  `;\n__decorate([\n    property({ type: String, attribute: \"class\", reflect: true })\n], FeedbackElement.prototype, \"class\", void 0);\n__decorate([\n    property({ type: String, reflect: true })\n], FeedbackElement.prototype, \"id\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"is-open\", reflect: true })\n], FeedbackElement.prototype, \"isOpen\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"is-readonly\", reflect: true })\n], FeedbackElement.prototype, \"isReadonly\", void 0);\n__decorate([\n    property({ type: Object, attribute: \"on-close\" })\n], FeedbackElement.prototype, \"onClose\", void 0);\n__decorate([\n    property({ type: Object, attribute: \"on-submit\" })\n], FeedbackElement.prototype, \"onSubmit\", void 0);\n__decorate([\n    property({ type: Object, attribute: \"initial-values\", reflect: true })\n], FeedbackElement.prototype, \"initialValues\", void 0);\n__decorate([\n    property({ type: String, attribute: \"title\", reflect: true })\n], FeedbackElement.prototype, \"title\", void 0);\n__decorate([\n    property({ type: String, attribute: \"prompt\", reflect: true })\n], FeedbackElement.prototype, \"prompt\", void 0);\n__decorate([\n    property({ type: Object, attribute: \"categories\", reflect: true })\n], FeedbackElement.prototype, \"categories\", void 0);\n__decorate([\n    property({ type: String, attribute: \"disclaimer\", reflect: true })\n], FeedbackElement.prototype, \"disclaimer\", void 0);\n__decorate([\n    property({ type: String, attribute: \"text-area-placeholder\", reflect: true })\n], FeedbackElement.prototype, \"placeholder\", void 0);\n__decorate([\n    property({ type: String, attribute: \"cancel-label\", reflect: true })\n], FeedbackElement.prototype, \"cancelLabel\", void 0);\n__decorate([\n    property({ type: String, attribute: \"submit-label\", reflect: true })\n], FeedbackElement.prototype, \"submitLabel\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"show-text-area\", reflect: true })\n], FeedbackElement.prototype, \"showTextArea\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"show-prompt\", reflect: true })\n], FeedbackElement.prototype, \"showPrompt\", void 0);\n__decorate([\n    state()\n], FeedbackElement.prototype, \"_textInput\", void 0);\n__decorate([\n    state()\n], FeedbackElement.prototype, \"_initialSelectedCategories\", void 0);\n__decorate([\n    state()\n], FeedbackElement.prototype, \"_selectedCategories\", void 0);\n__decorate([\n    bind\n], FeedbackElement.prototype, \"_handleCategoryChange\", null);\n\nexport { FeedbackElement };\n","var css_248z = \".cds--aichat-container{\\n  box-sizing:border-box;\\n  border:1px solid var(--cds-chat-bubble-border, #e0e0e0);\\n  border-radius:var(--cds-chat-BASE-border-radius-med);\\n  animation:fade-in 600ms forwards;\\n  background-color:var(--cds-chat-shell-background, #ffffff);\\n  container-type:inline-size;\\n  inline-size:100%;\\n  margin-block-start:0.25rem;\\n}\\n\\n.cds--aichat-is-closed{\\n  display:none;\\n}\\n\\n.cds--aichat-title-row{\\n  display:flex;\\n  margin-block-start:0.75rem;\\n  margin-inline:1rem 0.5rem;\\n}\\n\\n.cds--aichat-title{\\n  flex:1;\\n  font-size:var(--cds-chat-BASE-font-size-xlarge);\\n  line-height:var(--cds-chat-BASE-line-height-xlarge);\\n}\\n\\n.cds--aichat-close{\\n  margin-inline-start:0.5rem;\\n}\\n\\n.cds--aichat-disclaimer,\\n.cds--aichat-prompt{\\n  color:var(--cds-text-secondary, #525252);\\n  font-size:var(--cds-chat-BASE-font-size-small);\\n  line-height:var(--cds-chat-BASE-line-height-small);\\n  margin-block-start:0.5rem;\\n  margin-inline:1rem;\\n}\\n\\n.cds--aichat-categories{\\n  margin-block-start:0.5rem;\\n  margin-inline:1rem;\\n}\\n\\n.cds--aichat-feedback-text{\\n  margin-block-start:0.5rem;\\n  margin-inline:1rem;\\n}\\n\\n.cds--aichat-buttons{\\n  display:flex;\\n  inline-size:100%;\\n  margin-block-start:1rem;\\n}\\n\\n.cds--aichat-submit{\\n  flex:1;\\n  --cds-aichat-rounded-button-bottom-right:var(\\n    --cds-chat-BASE-border-radius-med\\n  );\\n  --cds-aichat-rounded-button-width:100%;\\n  --cds-aichat-rounded-button-max-width:100%;\\n}\\n\\n.cds--aichat-cancel{\\n  flex:1;\\n  --cds-aichat-rounded-button-bottom-left:var(\\n    --cds-chat-BASE-border-radius-med\\n  );\\n  --cds-aichat-rounded-button-width:100%;\\n  --cds-aichat-rounded-button-max-width:100%;\\n}\\n\\n@keyframes fade-in{\\n  from{\\n    opacity:0;\\n  }\\n  to{\\n    opacity:1;\\n  }\\n}\";\n\nexport { css_248z as default };\n","import { __decorate } from 'tslib';\nimport '../tagListElement/cds-aichat-tag-list.js';\nimport '../roundedButton/cds-aichat-rounded-button.js';\nimport { carbonElement } from '../../decorators/customElement.js';\nimport { FeedbackElement } from './src/FeedbackElement.js';\nimport { feedbackElementTemplate } from './src/feedbackElement.template.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst FEEDBACK_COMPONENT_TAG_NAME = `cds-aichat-feedback`;\n/**\n * Constructed class functionality for the test input custom element\n */\nlet CDSChatFeedbackElement = class CDSChatFeedbackElement extends FeedbackElement {\n    /**\n     * Renders the template while passing in class functionality.\n     */\n    render() {\n        return feedbackElementTemplate(this);\n    }\n};\nCDSChatFeedbackElement = __decorate([\n    carbonElement(FEEDBACK_COMPONENT_TAG_NAME)\n], CDSChatFeedbackElement);\n\nexport { FEEDBACK_COMPONENT_TAG_NAME, CDSChatFeedbackElement as default };\n","import '@carbon/web-components/es-custom/components/button/index.js';\nimport '@carbon/web-components/es-custom/components/icon-button/index.js';\nimport '@carbon/web-components/es-custom/components/layer/index.js';\nimport '@carbon/web-components/es-custom/components/textarea/index.js';\nimport '../../tagListElement/cds-aichat-tag-list.js';\nimport cx from 'classnames';\nimport { nothing, html } from 'lit';\nimport { CSS_CLASS_PREFIX } from '../../../settings.js';\nimport '../../../../../types/instance/apiTypes.js';\nimport enLanguagePack from '../../../../languages/en.json.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n// The maximum number of characters the user is allowed to type into the text area.\nconst MAX_TEXT_COUNT = 1000;\n/**\n * Lit template for feedback.\n */\nfunction feedbackElementTemplate(customElementClass) {\n    const { _handleCancel: handleCancel, _handleSubmit: handleSubmit, _handleTextInput: handleTextInput, _initialSelectedCategories: initialSelectedCategories, _textInput: textInput, _handleCategoryChange: handleCategoryChange, id, isReadonly, isOpen, title, prompt, placeholder, categories, disclaimer, showTextArea, showPrompt, submitLabel, cancelLabel, } = customElementClass;\n    return html `<div\n    class=\"${cx(`${CSS_CLASS_PREFIX}-container`, {\n        [`${CSS_CLASS_PREFIX}-is-closed`]: !isOpen,\n    })}\"\n  >\n    <div class=\"${CSS_CLASS_PREFIX}-title-row\">\n      <div class=\"${CSS_CLASS_PREFIX}-title\">\n        ${title || enLanguagePack.feedback_defaultTitle}\n      </div>\n    </div>\n    ${showPrompt\n        ? html `<div class=\"${CSS_CLASS_PREFIX}-prompt\">\n          ${prompt || enLanguagePack.feedback_defaultPrompt}\n        </div>`\n        : \"\"}\n    ${categories?.length\n        ? html `<div class=\"${CSS_CLASS_PREFIX}-categories\">\n          <cds-aichat-tag-list\n            .tags=${categories}\n            .initialSelectedTags=${initialSelectedCategories}\n            .onTagsChanged=${handleCategoryChange}\n          >\n          </cds-aichat-tag-list>\n        </div>`\n        : \"\"}\n    ${showTextArea\n        ? html `<div class=\"${CSS_CLASS_PREFIX}-feedback-text\">\n          <cds-custom-layer level=\"1\">\n            <cds-custom-textarea\n              id=\"${id}-text-area\"\n              value=\"${textInput}\"\n              class=\"${CSS_CLASS_PREFIX}-feedback-text-area\"\n              ?disabled=\"${isReadonly}\"\n              placeholder=\"${placeholder ||\n            enLanguagePack.feedback_defaultPlaceholder}\"\n              rows=\"3\"\n              max-count=\"${MAX_TEXT_COUNT}\"\n              @input=${handleTextInput}\n            ></cds-custom-textarea>\n          </cds-custom-layer>\n        </div>`\n        : \"\"}\n    ${disclaimer\n        ? html `<div class=\"${CSS_CLASS_PREFIX}-disclaimer\">\n          <cds-aichat-markdown-text\n            markdown=\"${disclaimer}\"\n          ></cds-aichat-markdown-text>\n        </div>`\n        : \"\"}\n    <div class=\"${CSS_CLASS_PREFIX}-buttons\">\n      <cds-aichat-rounded-button\n        class=\"${CSS_CLASS_PREFIX}-cancel\"\n        disabled=${isReadonly || nothing}\n        size=\"lg\"\n        kind=\"secondary\"\n        @click=${handleCancel}\n      >\n        ${cancelLabel || enLanguagePack.feedback_cancelLabel}\n      </cds-aichat-rounded-button>\n      <cds-aichat-rounded-button\n        class=\"${CSS_CLASS_PREFIX}-submit\"\n        disabled=${isReadonly || nothing}\n        size=\"lg\"\n        @click=${handleSubmit}\n      >\n        ${submitLabel || enLanguagePack.feedback_submitLabel}\n      </cds-aichat-rounded-button>\n    </div>\n  </div>`;\n}\n\nexport { feedbackElementTemplate };\n","import { createComponent } from '@lit/react';\nimport React from 'react';\nimport CDSChatFeedbackElement, { FEEDBACK_COMPONENT_TAG_NAME } from '../../../web-components/components/feedbackElement/cds-aichat-feedback.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst FeedbackComponent = createComponent({\n    tagName: FEEDBACK_COMPONENT_TAG_NAME,\n    elementClass: CDSChatFeedbackElement,\n    react: React,\n});\n\nexport { FeedbackComponent };\n","import React from 'react';\nimport { useLanguagePack } from '../hooks/useLanguagePack.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is for displaying a message under streamed responses that were stopped.\n */\nfunction ResponseStopped() {\n    const { messages_responseStopped } = useLanguagePack();\n    return React.createElement(\"div\", { className: \"WACResponseStopped\" }, messages_responseStopped);\n}\n\nexport { ResponseStopped };\n","import Checkmark from '@carbon/icons-react/es/Checkmark.js';\nimport Headset from '@carbon/icons-react/es/Headset.js';\nimport HelpDesk from '@carbon/icons-react/es/HelpDesk.js';\nimport Logout from '@carbon/icons-react/es/Logout.js';\nimport { Tile, Button } from '@carbon/react';\nimport React, { useState } from 'react';\nimport { AgentsOnlineStatus } from '../../../../../types/config/ServiceDeskConfig.js';\nimport { AvailabilityMessage } from '../../agent/AvailabilityMessage.js';\nimport { EndAgentChatModal } from '../../modals/EndAgentChatModal.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is displayed to the user when a \"connect to agent\" response comes back from the server. This\n * informs the user that we are able to connect them to a human agent and display a confirmation asking if they do\n * want to connect.\n *\n * This is the \"real\" component that is displayed to users as opposed to the \"preview\" component that is displayed\n * for users using the preview link.\n */\nfunction RealConnectToAgent(props) {\n    const { languagePack, localMessage, originalMessage, disableUserInputs, serviceManager, agentState, requestFocus, agentDisplayState, persistedAgentState, } = props;\n    const { activeLocalMessageID, availability, isConnecting } = agentState;\n    const { isSuspended } = persistedAgentState;\n    const [showConfirmSuspended, setShowConfirmSuspended] = useState(false);\n    if (!isSuspended && showConfirmSuspended) {\n        // This can happen if the user is disconnected while waiting for the confirmation.\n        setShowConfirmSuspended(false);\n    }\n    function doStartChat() {\n        if (isSuspended && !showConfirmSuspended) {\n            // If there is already a suspended chat and we're not showing the confirmation modal, then we need to confirm\n            // first.\n            setShowConfirmSuspended(true);\n        }\n        else {\n            setShowConfirmSuspended(false);\n            serviceManager.humanAgentService.startChat(localMessage, originalMessage);\n            // The connect button will become disabled. We need to move focus to the cancel button but do so in a timeout to\n            // give it a chance to render.\n            setTimeout(requestFocus);\n        }\n    }\n    const noAgentsWereOnline = originalMessage.history.agent_availability === AgentsOnlineStatus.OFFLINE;\n    if (noAgentsWereOnline) {\n        // Display the \"agents are not available\" message that was configured in the skill or show a default value if\n        // there is none.\n        const agentUnavailableMessage = localMessage.item.agent_unavailable?.message ||\n            languagePack.default_agent_unavailableMessage;\n        return React.createElement(\"div\", null, agentUnavailableMessage);\n    }\n    const textFromMessage = localMessage.item.agent_available?.message ||\n        languagePack.default_agent_availableMessage;\n    let buttonIcon; // CarbonIconType is not exported, currently.\n    let buttonText;\n    let showDisabled = disableUserInputs || agentDisplayState.isConnectingOrConnected;\n    let messageToUser = textFromMessage;\n    if (localMessage.ui_state.id === activeLocalMessageID) {\n        // This card is the active card in a chat that has been started.\n        showDisabled = true;\n        if (isConnecting) {\n            // In the connecting state, the text on the card changes as the availability information is updated by the\n            // service desk integration.\n            buttonIcon = Checkmark;\n            buttonText = languagePack.agent_cardButtonChatRequested;\n            messageToUser = (React.createElement(AvailabilityMessage, { availability: availability, fallbackText: languagePack.agent_connectWaiting }));\n        }\n        else {\n            buttonIcon = Headset;\n            buttonText = languagePack.agent_cardButtonConnected;\n            messageToUser = languagePack.agent_cardMessageConnected;\n        }\n    }\n    else if (disableUserInputs) {\n        if (localMessage.ui_state.wasAgentChatEnded) {\n            buttonIcon = Logout;\n            buttonText = languagePack.agent_cardButtonChatEnded;\n            messageToUser = languagePack.agent_cardMessageChatEnded;\n        }\n        else {\n            buttonIcon = Headset;\n            buttonText = languagePack.agent_startChat;\n        }\n    }\n    else {\n        buttonIcon = HelpDesk;\n        buttonText = languagePack.agent_startChat;\n    }\n    return (React.createElement(Tile, { className: \"WACConnectToAgent\" },\n        React.createElement(\"div\", { className: \"WACConnectToAgent__Title\" },\n            React.createElement(\"span\", null, languagePack.agent_chatTitle)),\n        React.createElement(\"div\", { className: \"WACConnectToAgent__Text\" }, messageToUser),\n        React.createElement(Button, { className: \"WACConnectToAgent__RequestButton\", size: \"md\", disabled: showDisabled, onClick: doStartChat, renderIcon: buttonIcon }, buttonText),\n        !showDisabled && isSuspended && (React.createElement(\"div\", { className: \"WACConnectToAgent__SuspendedWarning\" }, languagePack.agent_suspendedWarning)),\n        showConfirmSuspended && (React.createElement(EndAgentChatModal, { title: languagePack.agent_confirmSuspendedEndChatTitle, message: languagePack.agent_confirmSuspendedEndChatMessage, onConfirm: doStartChat, onCancel: () => setShowConfirmSuspended(false) }))));\n}\n\nexport { RealConnectToAgent };\n","import React from 'react';\nimport { hasServiceDesk } from '../../../utils/messageUtils.js';\nimport { RealConnectToAgent } from './RealConnectToAgent.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is displayed to the user when a \"connect to agent\" response comes back from the server. This\n * informs the user that we are able to connect them to a human agent and displays a confirmation asking if they do\n * want to connect.\n *\n * This component will display the appropriate panel depending on whether the user is viewing the preview link.\n */\nfunction ConnectToAgent(props) {\n    const { languagePack, localMessage, originalMessage, config, serviceManager, disableUserInputs, agentState, requestFocus, agentDisplayState, persistedAgentState, } = props;\n    // Disable the \"start chat\" button if the widget is in a readonly mode or a preview mode with no service desk.\n    const childDisableUserInputs = disableUserInputs || !hasServiceDesk(config);\n    // The Carbon InlineNotification component doesn't allow HTML anymore, so faking it here.\n    return (React.createElement(\"div\", null,\n        React.createElement(RealConnectToAgent, { localMessage: localMessage, originalMessage: originalMessage, languagePack: languagePack, serviceManager: serviceManager, disableUserInputs: childDisableUserInputs, agentState: agentState, persistedAgentState: persistedAgentState, agentDisplayState: agentDisplayState, requestFocus: requestFocus })));\n}\n\nexport { ConnectToAgent };\n","import React from 'react';\nimport { MediaPlayer as MediaPlayerExport } from '../util/MediaPlayer.js';\nimport { MessageResponseTypes } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction AudioComponent({ source, ...props }) {\n    // Determine if the provided source is a Mixcloud link in order to set a fixed height it uses.\n    const isMixCloud = source?.startsWith(\"https://www.mixcloud.com\");\n    return (React.createElement(MediaPlayerExport, { type: MessageResponseTypes.AUDIO, source: source, isMixcloud: isMixCloud, ...props }));\n}\nconst AudioComponentExport = React.memo(AudioComponent);\n\nexport { AudioComponentExport as AudioComponent };\n","import React from 'react';\nimport VisuallyHidden from '../../util/VisuallyHidden.js';\nimport { Image as ImageExport } from '../image/Image.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is the same as the {@link Image} component, but makes it clickable. Depending on the props, it can\n * be a normal clickable tile or link.\n */\nfunction ClickableImage({ buttonAltText, isLink, target, disabled, onClick, ...imageProps }) {\n    if (isLink) {\n        return (React.createElement(\"a\", { className: \"WACClickableImage\", href: imageProps.displayURL, rel: \"noopener noreferrer\", target: target, onClick: onClick },\n            React.createElement(ImageExport, { ...imageProps }),\n            buttonAltText && React.createElement(VisuallyHidden, null, buttonAltText)));\n    }\n    return (React.createElement(\"button\", { className: \"WACClickableImage\", type: \"button\", onClick: onClick, disabled: disabled },\n        React.createElement(ImageExport, { ...imageProps }),\n        buttonAltText && React.createElement(VisuallyHidden, null, buttonAltText)));\n}\n\nexport { ClickableImage };\n","import { Button } from '@carbon/react';\nimport cx from 'classnames';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { ClickableImage } from '../util/ClickableImage.js';\nimport { ButtonItemKind } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This is the base button component for the \"button\" response type.\n */\nfunction BaseButtonItemComponent({ className, label, kind, url, target = \"_blank\", disabled, renderIcon, imageURL, altText, onClick, }) {\n    const { errors_imageSource } = useLanguagePack();\n    const useAITheme = useSelector((state) => state.theme.useAITheme);\n    const text = label || url;\n    const linkTarget = url ? target : undefined;\n    if (imageURL) {\n        return (React.createElement(ClickableImage, { imageError: errors_imageSource, source: imageURL, target: target, title: label, displayURL: url, altText: altText, renderIcon: renderIcon, onClick: onClick, disabled: disabled, isLink: Boolean(url), useAITheme: useAITheme }));\n    }\n    return (React.createElement(Button, { className: cx(\"WACButtonItem\", className), as: url ? \"a\" : undefined, kind: getButtonKind(kind), href: url, target: linkTarget, rel: url ? \"noopener noreferrer\" : undefined, disabled: disabled, renderIcon: renderIcon, onClick: onClick }, text));\n}\nfunction getButtonKind(style) {\n    switch (style) {\n        case ButtonItemKind.LINK:\n        case ButtonItemKind.TERTIARY:\n            return \"ghost\";\n        case ButtonItemKind.DEFAULT:\n            return \"primary\";\n        default:\n            return style;\n    }\n}\n\nexport { BaseButtonItemComponent };\n","import TouchInteraction from '@carbon/icons-react/es/TouchInteraction.js';\nimport React, { useCallback } from 'react';\nimport { useServiceManager } from '../../../hooks/useServiceManager.js';\nimport { BusEventType } from '../../../../../types/events/eventBusTypes.js';\nimport { BaseButtonItemComponent } from './BaseButtonItemComponent.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is for a button response type where the button_type is \"custom_event\" that fires an event when\n * clicked that developers can hook into.\n */\nfunction ButtonItemCustomEventComponent({ localMessageItem, fullMessage, }) {\n    const serviceManager = useServiceManager();\n    const messageItem = localMessageItem.item;\n    const { ui_state } = localMessageItem;\n    const { image_url, alt_text, label, kind, value } = messageItem;\n    const isDisabled = Boolean(value && ui_state.optionSelected);\n    const onClickHandler = useCallback(async () => {\n        await serviceManager.fire({\n            type: BusEventType.MESSAGE_ITEM_CUSTOM,\n            messageItem,\n            fullMessage,\n        });\n    }, [messageItem, serviceManager, fullMessage]);\n    return (React.createElement(BaseButtonItemComponent, { imageURL: image_url, altText: alt_text, label: label, kind: kind, disabled: isDisabled, renderIcon: (image_url && TouchInteraction) || undefined, onClick: onClickHandler }));\n}\n\nexport { ButtonItemCustomEventComponent };\n","import Send from '@carbon/icons-react/es/Send.js';\nimport React, { useCallback } from 'react';\nimport { useServiceManager } from '../../../hooks/useServiceManager.js';\nimport actions from '../../../store/actions.js';\nimport { WA_CONSOLE_PREFIX } from '../../../utils/constants.js';\nimport { createMessageRequestForButtonItemOption } from '../../../utils/messageUtils.js';\nimport { consoleError } from '../../../utils/miscUtils.js';\nimport { MessageSendSource } from '../../../../../types/events/eventBusTypes.js';\nimport { BaseButtonItemComponent } from './BaseButtonItemComponent.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is for a button response type where the button_type is \"post_back\" that can send a message request\n * to the assistant. When the button is clicked, it gets disabled.\n */\nfunction ButtonItemPostBackComponent({ localMessageItem, requestFocus, isMessageForInput, }) {\n    const serviceManager = useServiceManager();\n    const messageItem = localMessageItem.item;\n    const { ui_state, fullMessageID } = localMessageItem;\n    const { image_url, alt_text, label, kind } = messageItem;\n    const isDisabled = !isMessageForInput || Boolean(ui_state.optionSelected);\n    const onClickHandler = useCallback(() => {\n        const isInputAvailable = Boolean(messageItem.value?.input?.text || label);\n        if (isInputAvailable) {\n            const messageRequest = createMessageRequestForButtonItemOption(messageItem, fullMessageID);\n            requestFocus();\n            serviceManager.store.dispatch(actions.messageSetOptionSelected(ui_state.id, messageRequest));\n            serviceManager.actions.sendWithCatch(messageRequest, MessageSendSource.POST_BACK_BUTTON);\n        }\n        else {\n            consoleError(`${WA_CONSOLE_PREFIX} post_back button with label \"${messageItem.label}\" has no input message to send.`);\n        }\n    }, [\n        messageItem,\n        label,\n        fullMessageID,\n        requestFocus,\n        serviceManager.store,\n        serviceManager.actions,\n        ui_state.id,\n    ]);\n    return (React.createElement(BaseButtonItemComponent, { imageURL: image_url, altText: alt_text, label: label, kind: kind, onClick: onClickHandler, renderIcon: (image_url && Send) || undefined, disabled: isDisabled }));\n}\n\nexport { ButtonItemPostBackComponent };\n","import ArrowRight from '@carbon/icons-react/es/ArrowRight.js';\nimport React, { useCallback } from 'react';\nimport { useServiceManager } from '../../../hooks/useServiceManager.js';\nimport actions from '../../../store/actions.js';\nimport { BaseButtonItemComponent } from './BaseButtonItemComponent.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is for a button response type where the button_type is \"show_panel\". This component is a button\n * opens a panel when clicked. The panel content is authored similarly to normal response types, but instead of\n * appearing in the chat they appear in a panel under the \"panel.body\" or \"panel.footer\" property.\n */\nfunction ButtonItemShowPanelComponent({ localMessageItem, isMessageForInput, }) {\n    const serviceManager = useServiceManager();\n    const { image_url, alt_text, label, kind } = localMessageItem.item;\n    /**\n     * Once the button is clicked, render the panel content and update the message history to remember the panel being.\n     */\n    const onClickHandler = useCallback(async () => {\n        serviceManager.store.dispatch(actions.setResponsePanelIsOpen(true));\n        serviceManager.store.dispatch(actions.setResponsePanelContent(localMessageItem, isMessageForInput));\n    }, [localMessageItem, isMessageForInput, serviceManager]);\n    return (React.createElement(BaseButtonItemComponent, { className: \"BaseButtonItemComponent__ShowPanel\", imageURL: image_url, altText: alt_text, label: label, kind: kind, renderIcon: (image_url && ArrowRight) || undefined, onClick: onClickHandler }));\n}\n\nexport { ButtonItemShowPanelComponent };\n","import { createComponent } from '@lit/react';\nimport React from 'react';\nimport CarbonLinkElement from '@carbon/web-components/es-custom/components/link/link.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst Link = createComponent({\n    tagName: 'cds-custom-link',\n    elementClass: CarbonLinkElement,\n    react: React,\n});\n\nexport { Link as default };\n","import Launch from '@carbon/icons-react/es/Launch.js';\nimport Launch16 from '@carbon/icons/es/launch/16.js';\nimport Link from '../../../../react/carbon/Link.js';\nimport { carbonIconToReact } from '../../../utils/carbonIcon.js';\nimport React from 'react';\nimport { ButtonItemKind } from '../../../../../types/messaging/Messages.js';\nimport { BaseButtonItemComponent } from './BaseButtonItemComponent.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst LaunchIcon = carbonIconToReact(Launch16);\n/**\n * This component is for a button response type where the button_type is \"url\". Clicking this button will take the\n * user to the provided url. A target location can also be provided.\n */\nfunction ButtonItemURLComponent({ localMessageItem, }) {\n    const { image_url, alt_text, url, target, label, kind } = localMessageItem.item;\n    // If no image url is provided and should is a normal link, then render a carbon link.\n    if (!image_url && kind === ButtonItemKind.LINK) {\n        return (React.createElement(\"div\", { className: \"WAC__received--textContent WACButtonItem\" },\n            React.createElement(Link, { className: \"WACWidget__breakWord\", href: url, target: target, rel: \"noopener noreferrer\" },\n                React.createElement(LaunchIcon, { slot: \"icon\", className: \"icon\", \"aria-label\": \"Launch\" }),\n                label || url)));\n    }\n    return (React.createElement(BaseButtonItemComponent, { imageURL: image_url, altText: alt_text, label: label, kind: kind, url: url, target: target, renderIcon: Launch }));\n}\n\nexport { ButtonItemURLComponent };\n","import { createElement } from 'react';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Creates a React component from a Carbon icon object\n */\n/**\n * Creates a React component from a Carbon icon object.\n *\n * @example\n * import Launch16 from '@carbon/icons/es/launch/16';\n * const Icon = carbonIconToReact(Launch16);\n * <Icon aria-label=\"Launch\" className=\"icon\" />\n */\nfunction carbonIconToReact(icon) {\n    return function IconComponent(props = {}) {\n        return createElement('svg', {\n            ...icon.attrs,\n            width: icon.attrs.width || 16,\n            height: icon.attrs.height || 16,\n            fill: icon.attrs.fill || 'currentColor',\n            ...props,\n        }, icon.content.map((child, i) => createElement(child.elem, {\n            key: i,\n            ...child.attrs,\n        })));\n    };\n}\n\nexport { carbonIconToReact };\n","import React from 'react';\nimport { ButtonItemCustomEventComponent } from './ButtonItemCustomEventComponent.js';\nimport { ButtonItemPostBackComponent } from './ButtonItemPostBackComponent.js';\nimport { ButtonItemShowPanelComponent } from './ButtonItemShowPanelComponent.js';\nimport { ButtonItemURLComponent } from './ButtonItemURLComponent.js';\nimport { ButtonItemType } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component determines the button response type to render.\n */\nfunction ButtonItemComponent(props) {\n    switch (props.localMessageItem.item.button_type) {\n        case ButtonItemType.URL:\n            return (React.createElement(ButtonItemURLComponent, { localMessageItem: props.localMessageItem }));\n        case ButtonItemType.SHOW_PANEL:\n            return (React.createElement(ButtonItemShowPanelComponent, { localMessageItem: props.localMessageItem, isMessageForInput: props.isMessageForInput }));\n        case ButtonItemType.CUSTOM_EVENT:\n            return (React.createElement(ButtonItemCustomEventComponent, { localMessageItem: props.localMessageItem, fullMessage: props.fullMessage }));\n        default:\n            return (React.createElement(ButtonItemPostBackComponent, { localMessageItem: props.localMessageItem, requestFocus: props.requestFocus, isMessageForInput: props.isMessageForInput }));\n    }\n}\n\nexport { ButtonItemComponent };\n","import { Tile } from '@carbon/react';\nimport cx from 'classnames';\nimport React from 'react';\nimport { BodyWithFooterComponent } from '../../BodyWithFooterComponent.js';\nimport { WidthOptions } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component renders the card response type. A card can be used to author a custom card containing existing\n * response types.\n */\nfunction CardItemComponent(props) {\n    const { ignoreMaxWidth } = props;\n    const item = props.localMessageItem.item;\n    return (React.createElement(Tile, { className: cx(\"WACCardMessageComponent\", {\n            WACMaxWidthSmall: !ignoreMaxWidth && item.max_width === WidthOptions.SMALL,\n            WACMaxWidthMedium: !ignoreMaxWidth && item.max_width === WidthOptions.MEDIUM,\n            WACMaxWidthLarge: !ignoreMaxWidth && item.max_width === WidthOptions.LARGE,\n        }) },\n        React.createElement(BodyWithFooterComponent, { ...props })));\n}\nconst CardComponentExport = React.memo(CardItemComponent);\n\nexport { CardComponentExport as CardItemComponent };\n","import React, { Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { SkeletonPlaceholder } from '../../SkeletonPicker.js';\nimport { CardItemComponent as CardComponentExport } from '../card/CardItemComponent.js';\nimport { lazyCarousel } from '../../../../dynamic-imports/dynamic-imports.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst Carousel = lazyCarousel();\nfunction CarouselItemComponent(props) {\n    const { localMessageItem, fullMessage, isMessageForInput, requestFocus } = props;\n    const allMessageItemsByID = useSelector((state) => state.allMessageItemsByID);\n    const { itemsLocalMessageItemIDs } = localMessageItem.ui_state;\n    return (React.createElement(Suspense, { fallback: React.createElement(SkeletonPlaceholder, null) },\n        React.createElement(Carousel, null, itemsLocalMessageItemIDs.map((nestedLocalMessageItemID) => {\n            const localMessageItem = allMessageItemsByID[nestedLocalMessageItemID];\n            return (React.createElement(CardComponentExport, { key: nestedLocalMessageItemID, localMessageItem: localMessageItem, fullMessage: fullMessage, isMessageForInput: isMessageForInput, ignoreMaxWidth: true, requestFocus: requestFocus }));\n        }))));\n}\n\nexport { CarouselItemComponent };\n","import debounce from 'lodash-es/debounce.js';\nimport { useMemo } from 'react';\nimport { usePrevious } from './usePrevious.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This hooks will observe the given value and will call the given function when the chunks have changed.\n */\nfunction useCallbackOnChange(value, callback) {\n    const doDebounced = useMemo(() => {\n        return callback && debounce(callback, 100, { maxWait: 100, leading: true });\n    }, [callback]);\n    if (usePrevious(value) !== value && callback) {\n        setTimeout(doDebounced);\n    }\n}\n\nexport { useCallbackOnChange };\n","import Link from '@carbon/icons-react/es/Link.js';\nimport Maximize from '@carbon/icons-react/es/Maximize.js';\nimport React, { useRef, useLayoutEffect } from 'react';\nimport { useLanguagePack } from '../../../../hooks/useLanguagePack.js';\nimport { useWindowSize } from '../../../../hooks/useWindowSize.js';\nimport { SearchResultBody as SearchResultBodyExport } from '../SearchResultBody.js';\nimport { CitationType } from './CitationCard.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction CitationCardContent({ citation, type, setIsExpandable, isExpandable, }) {\n    const languagePack = useLanguagePack();\n    const { width } = useWindowSize();\n    const { conversationalSearch_viewSourceDocument } = languagePack;\n    const ref = useRef(null);\n    // If citation has a \"text\" property, we know its from conversational search. If not, its legacy search and needs to\n    // be processed differently.\n    const textContent = \"text\" in citation && citation.text;\n    const content = textContent || React.createElement(SearchResultBodyExport, { searchResult: citation });\n    // Checks if there is any need to allow expanding on the title. Watching window size changes as a clunky attempt to\n    // deal with re-sizes, but that isn't really perfect.\n    useLayoutEffect(() => {\n        // If the tile is not currently expandable then check if there's enough content for the tile to expand.\n        if (ref.current && !isExpandable && setIsExpandable) {\n            if (ref.current.clientHeight && ref.current.scrollHeight) {\n                setIsExpandable(ref.current.clientHeight < ref.current.scrollHeight);\n            }\n        }\n    }, [textContent, isExpandable, setIsExpandable, width]);\n    let label;\n    let icon;\n    if (type === CitationType.URL && citation.url) {\n        label = new URL(citation.url).hostname;\n        icon = React.createElement(Link, { size: 16 });\n    }\n    else if (isExpandable) {\n        icon = React.createElement(Maximize, { size: 16 });\n        label = conversationalSearch_viewSourceDocument;\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"WACCitationCard_Header\" },\n            React.createElement(\"div\", { className: \"WACCitationCard_Title WACWidget__textEllipsis\" }, citation.title),\n            React.createElement(\"div\", { ref: ref, className: \"WACCitationCard_Text\" }, content)),\n        React.createElement(\"div\", { className: \"WACCitationCard_Footer\" }, (label || icon) && (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"WACCitationCard_Label WACWidget__textEllipsis\" }, label),\n            React.createElement(\"div\", { className: \"WACCitationCard_Icon\" }, icon))))));\n}\n\nexport { CitationCardContent };\n","import { useContext } from 'react';\nimport { WindowSizeContext } from '../contexts/WindowSizeContext.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This is a React hook that will provided access to the current window size and is updated as the window size changes.\n */\nfunction useWindowSize() {\n    return useContext(WindowSizeContext);\n}\n\nexport { useWindowSize };\n","import React from 'react';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction CitationClickableCard({ title, onClick, onSelectCitation, children, className, }) {\n    return (React.createElement(\"button\", { type: \"button\", className: `${className} WACCitationCard--clickable`, \"aria-label\": title, onClick: () => {\n            onClick();\n            onSelectCitation?.();\n        }, onFocus: onSelectCitation }, children));\n}\n\nexport { CitationClickableCard };\n","import { Tile } from '@carbon/react';\nimport cx from 'classnames';\nimport React from 'react';\nimport { CitationCardContent } from './CitationCardContent.js';\nimport { ExpandToPanelCard } from './ExpandToPanelCard.js';\nimport { getSearchResultMetaData } from '../../../../utils/searchUtils.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component takes a ConversationalSearchItemCitation OR a SearchResult and decides which kind of tile to display\n * it in.\n */\nvar CitationType;\n(function (CitationType) {\n    /**\n     * If the citation has a url.\n     */\n    CitationType[\"URL\"] = \"url\";\n    /**\n     * If the citation has no url, if its full contents don't fit in the card, you can click on it to see a panel with the results.\n     */\n    CitationType[\"EXPAND_IF_NEEDED\"] = \"expand\";\n})(CitationType || (CitationType = {}));\nfunction CitationCard({ citation, isSelected, onSelectCitation, relatedSearchResult, }) {\n    const { url, urlIsValid } = getSearchResultMetaData(citation);\n    function getType() {\n        if (url && urlIsValid) {\n            return CitationType.URL;\n        }\n        return CitationType.EXPAND_IF_NEEDED;\n    }\n    const type = getType();\n    const className = cx(\"WACCitationCard\", {\n        \"WACCitationCard--selected\": isSelected,\n        \"WACCitationCard--clickable\": type === CitationType.URL,\n        \"WACCitationCard--url\": type === CitationType.URL,\n        \"WACCitationCard--no-url\": type !== CitationType.URL,\n    }, \"WACWidget__textEllipsis\");\n    if (type === CitationType.URL) {\n        return (\n        // eslint-disable-next-line jsx-a11y/control-has-associated-label\n        React.createElement(\"a\", { className: className, href: url, target: \"_blank\", rel: \"noopener noreferrer\", onClick: onSelectCitation, onFocus: onSelectCitation },\n            React.createElement(Tile, null,\n                React.createElement(CitationCardContent, { citation: citation, type: type }))));\n    }\n    return (React.createElement(ExpandToPanelCard, { citation: citation, className: className, onSelectCitation: onSelectCitation, relatedSearchResult: relatedSearchResult }));\n}\nconst CitationCardExport = React.memo(CitationCard);\n\nexport { CitationCardExport as CitationCard, CitationType };\n","import { isValidURL } from './htmlUtils.js';\nimport { convertToEmptyStringIfStringifiedNull } from './lang/stringUtils.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction getSearchResultURLMetaData(searchResult) {\n    let { url } = searchResult;\n    url = url ? convertPossibleStringifiedArrayToFirstString(url) : undefined;\n    const urlIsValid = url && isValidURL(url);\n    return {\n        url,\n        urlIsValid,\n    };\n}\nfunction getSearchResultMetaData(searchResult) {\n    // First we check the searchResults.highlight.title which should be an array. If that is not set, we fall back to\n    // searchResult.title which is either a string OR a stringified array. If it is the latter, we only want the first\n    // item in the stringified array. https://github.ibm.com/watson-engagement-advisor/wea-backlog/issues/31262 has an\n    // explanation.\n    let title = searchResult.highlight?.title?.[0]\n        ? stripHighlightsFromString(convertToEmptyStringIfStringifiedNull(searchResult.highlight.title[0]))\n        : convertPossibleStringifiedArrayToFirstString(convertToEmptyStringIfStringifiedNull(searchResult.title));\n    const { url, urlIsValid } = getSearchResultURLMetaData(searchResult);\n    // If title is null and url is valid, use the URL in place of title see bug\n    // https://github.ibm.com/Watson-Discovery/customer-care/issues/297.\n    let titleIsURL = false;\n    if (!title && urlIsValid) {\n        title = url;\n        titleIsURL = true;\n    }\n    let answer;\n    // If answers param is present, use it on header and render searchResult.highlight.body as a body.\n    if (searchResult.answers?.length > 0) {\n        answer = searchResult.answers?.[0].text;\n    }\n    return { title, titleIsURL, url, urlIsValid, answer };\n}\n/**\n * Under the covers before it gets to us, a title/body may have been a stringified array. We need to remove the [\"\"]\n * if that is the case.\n *\n * @param str A string for the title or body of the search card.\n */\nfunction convertPossibleStringifiedArrayToFirstString(str) {\n    if (typeof str === \"string\" && str.startsWith('[\"') && str.endsWith('\"]')) {\n        try {\n            [str] = JSON.parse(str);\n        }\n        catch (error) {\n            // Not an array of strings, so do nothing.\n        }\n    }\n    return str;\n}\n/**\n * Removes the highlights from the string in this case mostly from title field as it does not add any value in\n * the single line ellipses title.\n *\n * @param str A string for the title of the search card.\n */\nfunction stripHighlightsFromString(str) {\n    return str ? str.replace(new RegExp(\"<em>|</em>\", \"g\"), \"\") : null;\n}\n\nexport { getSearchResultMetaData };\n","import { Tile } from '@carbon/react';\nimport React, { useState } from 'react';\nimport { useServiceManager } from '../../../../hooks/useServiceManager.js';\nimport actions from '../../../../store/actions.js';\nimport { CitationType } from './CitationCard.js';\nimport { CitationCardContent } from './CitationCardContent.js';\nimport { CitationClickableCard } from './CitationClickableCard.js';\nimport { getSearchResultMetaData } from '../../../../utils/searchUtils.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction ExpandToPanelCard({ className, citation, onSelectCitation, relatedSearchResult, }) {\n    const serviceManager = useServiceManager();\n    const { title } = getSearchResultMetaData(citation);\n    // If there's a searchResult that isn't empty than the card is expandable. Otherwise The CitationCardContent component\n    // will measure itself with the citation text as its content and will let this component know if it can fit the\n    // contents in the tile. If it can't fit the contents then it needs to be a clickable tile that can expand into a\n    // panel.\n    const [isExpandable, setIsExpandable] = useState(Boolean(relatedSearchResult?.body));\n    function onViewSourcePanelButtonClick() {\n        // If a search result is provided we want to show that in the panel with the citation text highlighted, otherwise\n        // just show the citation.\n        serviceManager.store.dispatch(actions.setViewSourcePanelIsOpen(true, citation, relatedSearchResult));\n    }\n    function renderTile(className) {\n        return (React.createElement(Tile, { className: className },\n            React.createElement(CitationCardContent, { citation: citation, type: CitationType.EXPAND_IF_NEEDED, setIsExpandable: setIsExpandable, isExpandable: isExpandable })));\n    }\n    if (isExpandable) {\n        return (React.createElement(CitationClickableCard, { className: className, title: title, onClick: onViewSourcePanelButtonClick, onSelectCitation: onSelectCitation }, renderTile()));\n    }\n    return renderTile(className);\n}\n\nexport { ExpandToPanelCard };\n","import ReactDOM from 'react-dom';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Just a simple component that mounts to a host element.\n */\nfunction PortalComponent({ hostElement, children, }) {\n    return hostElement ? ReactDOM.createPortal(children, hostElement) : null;\n}\n\nexport { PortalComponent };\n","import ChevronDown from '@carbon/icons-react/es/ChevronDown.js';\nimport ChevronUp from '@carbon/icons-react/es/ChevronUp.js';\nimport { OperationalTag } from '@carbon/react';\nimport React, { useState, useRef, useEffect, useImperativeHandle, useLayoutEffect } from 'react';\nimport { useCounter } from '../../../hooks/useCounter.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { useServiceManager } from '../../../hooks/useServiceManager.js';\nimport { sanitizeHTML } from '../../../utils/htmlUtils.js';\nimport { consoleError } from '../../../utils/miscUtils.js';\nimport { PortalComponent } from '../../PortalComponent.js';\nimport { MaybeDangerouslySetInnerHTML as MaybeDangerouslySetInnerHTMLExport } from '../../util/MaybeDangerouslySetInnerHTML.js';\nimport { processMarkdown } from '../../../../web-components/components/markdownText/markdown/markdownToHTML.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst TOGGLE_CONTAINER_CLASSNAME = \"WACConversationalSearchText__CitationsToggleContainer\";\nfunction ConversationalSearchText(props, ref) {\n    const { highlightCitation, onToggleCitations, citationsOpen, searchItem, showCitationsToggle, } = props;\n    const languagePack = useLanguagePack();\n    const serviceManager = useServiceManager();\n    const { streamingState } = searchItem.ui_state;\n    const toggleID = `WACConversationalSearchText-${useCounter()}${serviceManager.namespace.suffix}`;\n    const [toggleContainer, setToggleContainer] = useState();\n    const rootRef = useRef();\n    const [html, setHtml] = useState(\"\");\n    let text;\n    if (streamingState && !streamingState.isDone) {\n        text = streamingState.chunks.map((chunk) => chunk.text).join(\"\");\n    }\n    else {\n        text = searchItem.item.text;\n    }\n    useEffect(() => {\n        async function getHtml() {\n            const newHtml = await createHTMLWithHighlights(text, highlightCitation, showCitationsToggle);\n            setHtml(newHtml);\n        }\n        getHtml();\n    }, [text, highlightCitation, showCitationsToggle]);\n    useImperativeHandle(ref, () => ({\n        /**\n         * Use the root element to query the citations toggle button because the OperationalTag does not use forwardRef so\n         * we have to rely on fetching the element manually.\n         */\n        getToggleCitationsElement: () => rootRef.current?.querySelector(\".cds--tag--operational\"),\n    }));\n    useLayoutEffect(() => {\n        const container = rootRef.current?.querySelector(`.${TOGGLE_CONTAINER_CLASSNAME}`);\n        setToggleContainer(container);\n    }, [html]);\n    return (React.createElement(\"div\", { className: \"WACConversationalSearchText\", ref: rootRef },\n        React.createElement(MaybeDangerouslySetInnerHTMLExport, { html: html, overrideSanitize: false /* The html is sanitized already in createHTMLWithHighlights. */ }),\n        toggleContainer && (\n        // Use a portal to attach the toggle button to its container element in the search result.\n        React.createElement(PortalComponent, { hostElement: toggleContainer },\n            React.createElement(React.Fragment, null,\n                React.createElement(\"span\", { className: \"WACConversationalSearchText__CitationsToggle\" },\n                    React.createElement(OperationalTag, { id: toggleID, onClick: onToggleCitations, \"aria-expanded\": citationsOpen, text: languagePack.conversationalSearch_citationsLabel, renderIcon: citationsOpen ? ChevronUp : ChevronDown, \"aria-label\": languagePack.conversationalSearch_toggleCitations })),\n                React.createElement(\"span\", null, \"\\u00A0\"))))));\n}\nconst HIGHLIGHT_TOKEN_START = \"@@:wc-source:@@\";\nconst HIGHLIGHT_TOKEN_END = \"@@/:wc-source:@@\";\nconst HIGHLIGHT_TOKEN_REGEXP = /@@\\/?:wc-source:@@/g;\n/**\n * Takes the given text as markdown and converts it to html with the given citation highlighted in the html. This\n * will insert span elements into the html that represent the text ranges present in the citation.\n *\n * @param text The text to convert to html and highlight.\n * @param highlightCitation The citation that indicates what should be highlighted.\n * @param showCitationsToggle Indicates if the citations toggle should be displayed. If so, this code will examine\n * the html content to determine where it should be shown and will insert an element at that location that can be\n * found later.\n */\nasync function createHTMLWithHighlights(text, highlightCitation, showCitationsToggle) {\n    // Highlighting a citation is a bit messy. The back-end provides us with text ranges in the original search result\n    // but those ranges don't pay attention to the structure of the content and thus it's possible for a range to\n    // cross boundaries of structures in the rich text. For example, it's possible for a range to start half-way\n    // through a paragraph and extend down to the middle point of a list item in a list below (although something so\n    // crazy is probably not actually going to happen). To address this, we need to process all the rich content into the\n    // entire tree of DOM nodes and then highlight every individual text (leaf) node that comes between the start of the\n    // range and the end of the range.\n    //\n    // When highlighting a citation, this code will first inject tokens into the markdown at the start and end of each\n    // highlight range. Then the markdown is converted into html and the tokens should survive the process. This will\n    // allow us to keep track of where the highlighting starts and ends. After that, the html is dropped into a DOM\n    // element so the browser will parser it into a tree. Then we walk the element tree looking for text nodes that\n    // contain the highlight tokens. We will then insert span elements as appropriate where each of those text nodes\n    // appear in order to achieve highlight and remove the tokens. The spans are inserted inside of every node that is\n    // highlighted which allows us to highlight a range that crosses block boundaries.\n    const ranges = highlightCitation?.ranges;\n    if (ranges?.length) {\n        // Inject tokens into the text at the boundaries of the text highlight.\n        const pieces = [];\n        let startIndex = 0;\n        ranges.forEach((range) => {\n            const beforeHighlight = text.substring(startIndex, range.start);\n            const highlight = text.substring(range.start, range.end);\n            pieces.push(beforeHighlight);\n            pieces.push(HIGHLIGHT_TOKEN_START);\n            pieces.push(highlight);\n            pieces.push(HIGHLIGHT_TOKEN_END);\n            startIndex = range.end;\n        });\n        const lastPiece = text.substring(startIndex, text.length);\n        pieces.push(lastPiece);\n        text = pieces.join(\"\");\n    }\n    const md = await processMarkdown(text);\n    const afterMarkdownHTML = sanitizeHTML(md);\n    if (ranges || showCitationsToggle) {\n        try {\n            // Now stuff the html into an element so we can walk through it looking for the tokens.\n            const rootElement = document.createElement(\"div\");\n            rootElement.innerHTML = afterMarkdownHTML;\n            if (ranges) {\n                // Look for the highlight tokens and add highlights as necessary.\n                insertHighlights(rootElement, false);\n            }\n            if (showCitationsToggle) {\n                // Insert the container element for the citation toggle.\n                const toggleContainer = document.createElement(\"span\");\n                toggleContainer.className = TOGGLE_CONTAINER_CLASSNAME;\n                // Figure out what the last element is.\n                const lastElement = rootElement.lastElementChild;\n                const lastTag = lastElement?.tagName;\n                if (lastTag === \"P\") {\n                    // Put the toggle inside the last paragraph so it'll be inline with that content.\n                    lastElement.appendChild(document.createTextNode(\" \"));\n                    lastElement.appendChild(toggleContainer);\n                }\n                else {\n                    // Make it a sibling of the last content. This will cause the toggle to appear below as a block element.\n                    rootElement.appendChild(toggleContainer);\n                    toggleContainer.className += ` ${TOGGLE_CONTAINER_CLASSNAME}--block`;\n                }\n            }\n            return rootElement.innerHTML;\n        }\n        catch (error) {\n            consoleError(\"An error occurred processing source highlights.\", text, highlightCitation, error);\n        }\n    }\n    return afterMarkdownHTML;\n}\n/**\n * Inserts highlights into the given Node by looking for the highlight tokens in any text nodes located inside.\n *\n * @param parent The node is insert highlights into.\n * @param isInHighlight Indicates if a \"begin highlight\" token has already been seen previously and the content of this\n * Node start off highlighted.\n */\nfunction insertHighlights(parent, isInHighlight) {\n    const childNodes = Array.from(parent.childNodes);\n    childNodes.forEach((child) => {\n        if (child instanceof Text) {\n            const text = child.textContent;\n            const tokenMatches = Array.from(text.matchAll(HIGHLIGHT_TOKEN_REGEXP));\n            if (!tokenMatches.length && !isInHighlight) ;\n            else {\n                // We need to add some highlighting, so this child needs to be replaced by nodes that have highlighting. The\n                // child may have multiple tokens so it may result in multiple nodes being added.\n                let startIndex = 0;\n                tokenMatches.forEach((match) => {\n                    // If we get an end token then all the text before is inside a highlight.\n                    const isInHighlightHere = match[0] === HIGHLIGHT_TOKEN_END;\n                    const textContent = text.substring(startIndex, match.index);\n                    startIndex = match.index + match[0].length;\n                    // Add the text for before this token.\n                    addTextSegment(textContent, isInHighlightHere, parent, child);\n                    // Highlighting will flip to the opposite value after this node until the next highlight token appears.\n                    isInHighlight = !isInHighlightHere;\n                });\n                // If there is any text after the last token, we need to include that too.\n                const lastText = text.substring(startIndex, text.length);\n                addTextSegment(lastText, isInHighlight, parent, child);\n                // Remove the child now that it was replaced.\n                child.remove();\n            }\n        }\n        else if (child instanceof Element) {\n            // If our tokens somehow found their way into an attribute, remove them.\n            child.getAttributeNames().forEach((name) => {\n                const value = child.getAttribute(name);\n                if (value) {\n                    child.setAttribute(name, value.replaceAll(HIGHLIGHT_TOKEN_REGEXP, \"\"));\n                }\n            });\n        }\n        // Recurse through the tree.\n        isInHighlight = insertHighlights(child, isInHighlight);\n    });\n    return isInHighlight;\n}\n/**\n * Adds the given text as a child node of the given parent.\n *\n * @param text The text to add.\n * @param highlighted Indicates if the text should be highlighted.\n * @param parent The parent to add the text to.\n * @param beforeChild The existing child of the parent to insert the text before.\n */\nfunction addTextSegment(text, highlighted, parent, beforeChild) {\n    if (text) {\n        const textNode = document.createTextNode(text);\n        // Don't highlight empty node. This avoids us inserting spans where they're not allowed just because there was a\n        // newline inserted into the document. This may occasionally cause the highlight to miss intended whitespace but\n        // that should be rare and not important.\n        if (highlighted && text.trim()) {\n            // We need to insert a highlighted span containing this text.\n            const highlightNode = document.createElement(\"span\");\n            highlightNode.className = `WACConversationalSearchText--hasCitation`;\n            highlightNode.appendChild(textNode);\n            parent.insertBefore(highlightNode, beforeChild);\n        }\n        else {\n            parent.insertBefore(textNode, beforeChild);\n        }\n    }\n}\nconst ConversationalSearchTextExport = React.memo(React.forwardRef(ConversationalSearchText));\n\nexport { ConversationalSearchTextExport as ConversationalSearchText };\n","import { render, html } from 'lit';\nimport { renderTokenTree } from './utils/renderTokenTree.js';\nimport { getMarkdownWorker } from './workers/workerManager.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction templateToString(result) {\n    // 1) Create a throw-away <div> (never attached to the real DOM)\n    const container = document.createElement(\"div\");\n    // 2) Let Lit fully render.\n    render(result, container);\n    // 3) Grab the HTML it produced..,\n    const htmlString = container.innerHTML;\n    // 4) (Optional) clean up: clear out the container so we don’t leak memory\n    render(html ``, container);\n    return htmlString;\n}\n/**\n * Formats the given text content into an HTML string for display in the UI. The provided content may be plain\n * text, it may already contain HTML or it may contain Markdown. Any things that \"look like\" links will be converted\n * to anchor tags to make links using the auto-linker feature of the markdown library. Existing anchor tags are left\n * unchanged.\n */\nasync function processMarkdown(value, sanitzeHTML = false) {\n    const tokenTree = await getMarkdownWorker(value, undefined);\n    const html = templateToString(renderTokenTree(tokenTree, sanitzeHTML));\n    return html;\n}\n\nexport { processMarkdown };\n","import React, { useState, useRef, useMemo, Suspense } from 'react';\nimport { useCallbackOnChange } from '../../../hooks/useCallbackOnChange.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { SkeletonPlaceholder } from '../../SkeletonPicker.js';\nimport { InlineError } from '../error/InlineError.js';\nimport { CitationCard as CitationCardExport } from '../util/citations/CitationCard.js';\nimport { ConversationalSearchText as ConversationalSearchTextExport } from './ConversationalSearchText.js';\nimport { lazyCarousel } from '../../../../dynamic-imports/dynamic-imports.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst Carousel = lazyCarousel();\nfunction ConversationalSearch({ localMessageItem, scrollElementIntoView, isStreamingError, doAutoScroll, }) {\n    const [selectedCitationIndex, setSelectedCitationIndex] = useState(0);\n    const [citationsOpen, setCitationsOpen] = useState(false);\n    const scrollIntoViewArea = useRef();\n    const swiperRef = useRef();\n    const languagePack = useLanguagePack();\n    const conversationalSearchTextFunctionsRef = useRef();\n    const messageItem = localMessageItem.item;\n    const sortedCitations = useMemo(() => sortCitations(messageItem.citations), [messageItem.citations]);\n    function scrollCitations() {\n        // The large bottom padding is to push the citations panel above the suggestions button (if it happens to be\n        // present). The larger top padding also ensures the toggle button (which is just above the carousel) is also\n        // still in view.\n        setTimeout(() => scrollElementIntoView(scrollIntoViewArea.current, 32, 64));\n    }\n    function focusToggleButton() {\n        setTimeout(() => conversationalSearchTextFunctionsRef.current\n            .getToggleCitationsElement()\n            ?.focus());\n    }\n    // If the chunks change, kick off an auto-scroll.\n    useCallbackOnChange(localMessageItem.ui_state.streamingState?.chunks, doAutoScroll);\n    // Note: the AI button below has a specific component in the latest Carbon library we could swap in after we\n    // upgrade our Carbon version.\n    function onSelectCitation(index) {\n        setCitationsOpen(true);\n        setSelectedCitationIndex(index);\n        setTimeout(() => swiperRef.current?.swiper.slideTo(index));\n        scrollCitations();\n    }\n    function onToggleCitations() {\n        setCitationsOpen(!citationsOpen);\n        if (!citationsOpen) {\n            scrollCitations();\n            focusToggleButton();\n        }\n    }\n    function renderCitations() {\n        const tiles = sortedCitations?.map((citation, index) => (React.createElement(CitationCardExport\n        // eslint-disable-next-line react/no-array-index-key\n        , { \n            // eslint-disable-next-line react/no-array-index-key\n            key: index, citation: citation, isSelected: index === selectedCitationIndex, onSelectCitation: () => onSelectCitation(index) })));\n        return (React.createElement(\"div\", { className: \"WACConversationalSearch_Citations\" },\n            React.createElement(Suspense, { fallback: React.createElement(SkeletonPlaceholder, null) },\n                React.createElement(Carousel, { swiperRef: swiperRef, initialSlide: selectedCitationIndex, onSlideChange: setSelectedCitationIndex }, tiles))));\n    }\n    return (React.createElement(\"div\", { className: \"WACConversationalSearch\" },\n        React.createElement(ConversationalSearchTextExport, { ref: conversationalSearchTextFunctionsRef, searchItem: localMessageItem, showCitationsToggle: Boolean(sortedCitations?.length), highlightCitation: citationsOpen ? sortedCitations?.[selectedCitationIndex] : null, onToggleCitations: onToggleCitations, citationsOpen: citationsOpen }),\n        isStreamingError && (React.createElement(InlineError, { text: languagePack.conversationalSearch_streamingIncomplete })),\n        React.createElement(\"div\", { ref: scrollIntoViewArea }, citationsOpen && renderCitations())));\n}\n/**\n * Sorts the given array of citations. This will move any citation without any highlight ranges to the end of the array.\n */\nfunction sortCitations(citations) {\n    if (!citations) {\n        return null;\n    }\n    const withRanges = citations.filter((citation) => citation.ranges?.length);\n    const withoutRanges = citations.filter((citation) => !citation.ranges?.length);\n    return withRanges.concat(withoutRanges);\n}\n\nexport { ConversationalSearch };\n","import React from 'react';\nimport { useCallbackOnChange } from '../../../hooks/useCallbackOnChange.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { InlineError } from '../error/InlineError.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is used to render a user defined message response. When a user defined response is initially\n * received a host element was created and a {@link BusEventType.USER_DEFINED_RESPONSE} was fired. Any custom code was\n * then able to attach any custom rendering to the provided host element. The host elements are stored in the\n * service manager. This component attaches that host element in to the React tree.\n */\nfunction UserDefinedResponse(props) {\n    const { doAutoScroll, isStreamingError, streamingState, serviceManager } = props;\n    const languagePack = useLanguagePack();\n    // The element that was previously created that we'll attach to this React component. The custom code should\n    // already have attached its own element to this element that contains the custom rendering for the message.\n    const userDefinedRegistryItem = serviceManager.actions.getOrCreateUserDefinedElement(props.localMessageID);\n    useCallbackOnChange(streamingState?.chunks, doAutoScroll);\n    return (React.createElement(\"div\", { className: \"WAC__message-userDefinedResponse\", \"data-floating-menu-container\": true },\n        React.createElement(\"slot\", { name: userDefinedRegistryItem.slotName }),\n        isStreamingError && (React.createElement(InlineError, { text: languagePack.conversationalSearch_streamingIncomplete }))));\n}\nvar UserDefinedResponse$1 = React.memo(UserDefinedResponse);\n\nexport { UserDefinedResponse$1 as default };\n","import { RIGHT_TO_LEFT_MARK } from './constants.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n// A regex object that checks for white space/right-left-mark characters in a string and a period at the end of a\n// string.\nconst UNWANTED_CHARACTERS_REGEX = new RegExp(`[ ${RIGHT_TO_LEFT_MARK}]|\\\\.$`, \"g\");\n/**\n * Returns the date format data that tells us the character separating the date values. The provided value can either\n * be a date format like \"mm/dd/yyyy\" or an actual date like \"01/01/1997\".\n *\n * @param value The value to use to get format data.\n */\nfunction sanitizeDateFormat(value) {\n    let format = value.replace(UNWANTED_CHARACTERS_REGEX, \"\");\n    // If there is no mm token, this means the month if represented with just one m.\n    if (!format.includes(\"mm\")) {\n        format = format.replace(\"m\", \"mm\");\n    }\n    // If there is no dd token, this means the month if represented with just one d.\n    if (!format.includes(\"dd\")) {\n        format = format.replace(\"d\", \"dd\");\n    }\n    return format;\n}\n/**\n * Returns a date string from the provided date format using a date object. This function assumes the format tokens\n * include mm, dd, and yyyy.\n *\n * @param date A Date object.\n * @param format The date format to reference.\n */\nfunction toUserDateFormat(date, format) {\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const year = String(date.getFullYear());\n    return format.replace(\"dd\", day).replace(\"mm\", month).replace(\"yyyy\", year);\n}\n/**\n * Returns a date string that is formatted in the manner that the assistant expects. This format is yyyy-mm-dd to\n * help avoid ambiguity with the meaning of the date.\n */\nfunction toAssistantDateFormat(date) {\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const year = String(date.getFullYear());\n    return `${year}-${month}-${day}`;\n}\n\nexport { sanitizeDateFormat, toAssistantDateFormat, toUserDateFormat };\n","import Checkmark from '@carbon/icons-react/es/Checkmark.js';\nimport { Layer, DatePicker, DatePickerInput, Button } from '@carbon/react';\nimport dayjs from 'dayjs';\nimport React, { useRef, useState, useCallback } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useOnMount } from '../../../hooks/useOnMount.js';\nimport { useServiceManager } from '../../../hooks/useServiceManager.js';\nimport { ENGLISH_US_DATE_FORMAT } from '../../../utils/constants.js';\nimport { toAssistantDateFormat, toUserDateFormat, sanitizeDateFormat } from '../../../utils/dateUtils.js';\nimport { uuid } from '../../../utils/lang/uuid.js';\nimport { loadDayjsLocale } from '../../../utils/languages.js';\nimport { createMessageRequestForDate } from '../../../utils/messageUtils.js';\nimport { consoleError } from '../../../utils/miscUtils.js';\nimport { MessageSendSource } from '../../../../../types/events/eventBusTypes.js';\nimport { UUIDType } from '../../../utils/lang/UUIDType.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component handles rendering a carbon date picker for the date response type. It handles sending the selected\n * date value as the standard ISO date format and ensuring the message request displays the user's input selection.\n */\nfunction DatePickerComponent(props) {\n    const { localMessage, disabled, scrollElementIntoView } = props;\n    const serviceManager = useServiceManager();\n    const intl = useIntl();\n    const webChatLocale = useSelector((state) => state.locale);\n    const originalMessage = useSelector((state) => state.allMessagesByID[localMessage.fullMessageID]);\n    const uuidRef = useRef(uuid(UUIDType.MISCELLANEOUS));\n    const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n    const [userDisplayValue, setUserDisplayValue] = useState();\n    const [flatpickrFormat, setFlatpickrFormat] = useState();\n    const [userDisplayFormat, setUserDisplayFormat] = useState();\n    const [flatpickrLocale, setFlatpickrLocale] = useState();\n    const [dayjsLocale, setDayjsLocale] = useState();\n    const [datePickerHostElement, setDatePickerHostElement] = useState();\n    const valueForAssistantRef = useRef();\n    // This ref is to track when the user uses the date picker input through some pointer that's not a keyboard\n    // (e.g. mouse, touch, etc.) to open the date picker. If the date picker is opened and the user's pointer is not\n    // over the date picker input, such as when the date picker is scrolled into view, the date picker will close.\n    // This is intentional behavior from the DatePicker component, so a way around this will be to scroll the calendar\n    // into view after the user has lifted their pointer from the input and not when the calendar is opened.\n    const isInputPointerDownEventFiredRef = useRef(false);\n    const inputLabel = intl.formatMessage({ id: \"datePicker_chooseDate\" }, { format: userDisplayFormat });\n    const confirmButtonLabel = intl.formatMessage({\n        id: \"datePicker_confirmDate\",\n    });\n    const isDateInfoReady = Boolean(flatpickrFormat && userDisplayFormat && flatpickrLocale && dayjsLocale);\n    /**\n     * Handles setting the necessary date info that will handle formatting the user's selected date value using the\n     * provided locale.\n     */\n    function setDateInfoForLocale(locale) {\n        // Get the date format for the given locale from dayjs, or default to the mm/dd/yyyy.\n        const format = dayjs.Ls[locale]?.formats?.L?.toLocaleLowerCase() ||\n            ENGLISH_US_DATE_FORMAT;\n        const dateFormat = sanitizeDateFormat(format);\n        setDayjsLocale(locale);\n        setFlatpickrLocale(calcFlatpickrLocale(locale));\n        setUserDisplayFormat(dateFormat);\n        setFlatpickrFormat(getFlatpickrDateFormat(dateFormat));\n    }\n    /**\n     * When the user confirms their date selection we should send that date info to the assistant.\n     */\n    const handlerSendDate = useCallback(() => {\n        const { ui_state, fullMessageID: responseID } = localMessage;\n        const localMessageID = ui_state.id;\n        const request = createMessageRequestForDate(valueForAssistantRef.current, userDisplayValue, responseID);\n        serviceManager.actions.sendWithCatch(request, MessageSendSource.DATE_PICKER, {\n            setValueSelectedForMessageID: localMessageID,\n        });\n    }, [localMessage, serviceManager, userDisplayValue]);\n    /**\n     * Scrolls the date picker host element into view.\n     */\n    const doScrollElementIntoView = useCallback(() => {\n        scrollElementIntoView(datePickerHostElement, 0, 24);\n    }, [datePickerHostElement, scrollElementIntoView]);\n    useOnMount(() => {\n        const localeFromMessage = webChatLocale;\n        const { originalUserText } = localMessage.ui_state;\n        const fromHistory = originalMessage.history.from_history;\n        // If this message is from history and a user has made a previous selection, set the value in the input.\n        if (fromHistory && originalUserText) {\n            setUserDisplayValue(originalUserText);\n        }\n        try {\n            // Load the date formats for the given locale if it was previously loaded.\n            if (dayjs.Ls[localeFromMessage]) {\n                setDateInfoForLocale(localeFromMessage);\n            }\n            else {\n                loadDayjsLocale(localeFromMessage).then((locale) => {\n                    setDateInfoForLocale(locale);\n                });\n            }\n        }\n        catch {\n            consoleError(`Locale ${dayjsLocale} is not recognized by Carbon AI chat. Defaulting to English(US).`);\n            setDateInfoForLocale(\"en\");\n        }\n    });\n    return (React.createElement(\"div\", { className: \"WACDatePicker\" },\n        isDateInfoReady && datePickerHostElement && (React.createElement(Layer, null,\n            React.createElement(DatePicker, { className: \"WACDatePicker__Calendar\", datePickerType: \"single\", allowInput: false, locale: flatpickrLocale, appendTo: datePickerHostElement, onChange: (dates) => {\n                    if (dates.length) {\n                        const date = dates[0];\n                        // The assistant should receive the date value in ISO format.\n                        valueForAssistantRef.current = toAssistantDateFormat(date);\n                        // Use the date object to get a date string in the expected format.\n                        setUserDisplayValue(toUserDateFormat(date, userDisplayFormat));\n                    }\n                }, dateFormat: flatpickrFormat, onOpen: () => {\n                    setIsCalendarOpen(true);\n                    // The carbon date picker uses a \"handleClickOutside\" functionality to detect when the user has clicked\n                    // outside of the component so that it will auto-close the calendar popup. There is a bug that occurs\n                    // when the component scrolls at the same time the popup opens. If the user clicks on the picker input\n                    // field, the mouse down part causes the field to get focus which causes the popup to open. We had code\n                    // below that would then cause the chat to scroll which moved the input field so it was no longer under\n                    // the mouse cursor. Unless the user does this very fast, the mouse up half of the click will not occur\n                    // on the input field (because it moved) and the component detects this as a \"click outside\" and closes\n                    // the popup. The popup can open either because the user clicks on the input field or when the field gets\n                    // focus from keyboard input. With keyboard input, we want continue to scroll when the popup opens.\n                    // However, if the user clicks on the input, we want to delay the scroll until the click is fully\n                    // processed (this will ensure the cursor stays on the input field until the mouse up occurs).\n                    if (isInputPointerDownEventFiredRef.current) {\n                        isInputPointerDownEventFiredRef.current = false;\n                    }\n                    else {\n                        doScrollElementIntoView();\n                    }\n                }, onClose: () => setIsCalendarOpen(false) },\n                React.createElement(DatePickerInput, { id: uuidRef.current, labelText: inputLabel, placeholder: userDisplayFormat, disabled: disabled, \n                    // Set this prop value to an empty string. The component will set a default text telling the user to match\n                    // the requests date format, which is useless since we don't allow the user to type a date.\n                    title: \"\", \n                    // This event listener is fired before the DatePicker component's onOpen listener so we'll set the flag\n                    // to prevent the onOpen listener from moving the input away from the user's pointer and close the\n                    // calendar as result.\n                    onPointerDown: () => {\n                        isInputPointerDownEventFiredRef.current = true;\n                    }, \n                    // This event listener gets fired once the user's pointer is lifted from the input which is when we\n                    // scroll the calendar into view.\n                    onClick: () => doScrollElementIntoView() })))),\n        React.createElement(\"div\", { className: \"WACDatePicker__CalendarContainer\", ref: setDatePickerHostElement }),\n        !disabled && !isCalendarOpen && userDisplayValue && (React.createElement(Button, { className: \"WACDatePicker__ConfirmButton\", onClick: handlerSendDate, renderIcon: (props) => React.createElement(Checkmark, { size: 32, ...props }) }, confirmButtonLabel))));\n}\n/**\n * Returns an object of locales that are accepted as locale values for flatpickr library used in the carbon date picker\n * component and dayjs library.\n */\nfunction calcFlatpickrLocale(localeValue) {\n    // flatpickr does support the locale zh-tw, but it won't recognize it unless it has an underscore instead of a dash.\n    if (localeValue === \"zh-tw\") {\n        return \"zh_tw\";\n    }\n    // For the flatpickr library, if the value provided contains a region in the locale, only the language will be\n    // returned since the library seems to mostly support locales without the region.\n    //\n    // flatpickr - https://github.com/flatpickr/flatpickr/tree/master/src/l10n\n    return (localeValue.includes(\"-\") ? localeValue.split(\"-\")[0] : localeValue);\n}\n/**\n * Returns a date format that would be valid for the flatpickr library used in the carbon date picker component.\n */\nfunction getFlatpickrDateFormat(format) {\n    const dash = format.includes(\"-\") ? \"-\" : \"/\";\n    const firstChar = format.toLocaleLowerCase().trim()[0];\n    if (firstChar === \"m\") {\n        return `m${dash}d${dash}Y`;\n    }\n    if (firstChar === \"d\") {\n        return `d${dash}m${dash}Y`;\n    }\n    if (firstChar === \"y\") {\n        return `Y${dash}m${dash}d`;\n    }\n    throw Error(`The provided format ${format} is invalid.`);\n}\nconst DatePickerComponentExport = React.memo(DatePickerComponent);\n\nexport { DatePickerComponentExport as DatePickerComponent };\n","import cx from 'classnames';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { MessageTypeComponent } from '../../../containers/MessageTypeComponent.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { useServiceManager } from '../../../hooks/useServiceManager.js';\nimport { selectInputState } from '../../../store/selectors.js';\nimport { THROW_ERROR } from '../../../utils/constants.js';\nimport { WidthOptions } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n// This regex is for validating a number (1) or pixel value (10px) which are the only valid width values for a column.\nconst VALID_COLUMN_WIDTH_REGEX = /^[0-9]*(px)?$/;\nconst DEFAULT_COLUMN_WIDTH = \"1\";\n/**\n * This component renders the grid response type. It will handle creating the rows/columns and renders the response\n * types within them.\n */\nfunction GridItemComponent({ localMessageItem, originalMessage, }) {\n    const serviceManager = useServiceManager();\n    const languagePack = useLanguagePack();\n    const appConfig = useSelector((state) => state.config);\n    const inputState = useSelector(selectInputState);\n    const allMessageItemsByID = useSelector((state) => state.allMessageItemsByID);\n    const { columns, horizontal_alignment, vertical_alignment, max_width } = localMessageItem.item;\n    const gridTemplateColumns = columns?.map((column) => column.width).join(\" \") || DEFAULT_COLUMN_WIDTH;\n    return (React.createElement(\"div\", { className: cx(\"WACGrid\", {\n            WACMaxWidthSmall: max_width === WidthOptions.SMALL,\n            WACMaxWidthMedium: max_width === WidthOptions.MEDIUM,\n            WACMaxWidthLarge: max_width === WidthOptions.LARGE,\n        }), \n        // eslint-disable-next-line react/forbid-dom-props\n        style: { gridTemplateColumns } }, localMessageItem.ui_state.gridLocalMessageItemIDs.map((row, rowIndex) => (\n    // eslint-disable-next-line react/no-array-index-key\n    React.createElement(\"div\", { key: `row-${rowIndex}`, className: \"WACGrid__Row\" }, row.map((cell, columnIndex) => {\n        const cellData = localMessageItem.item.rows[rowIndex]?.cells[columnIndex];\n        let columnWidthString = columns?.[columnIndex]?.width || DEFAULT_COLUMN_WIDTH;\n        let isPixelValue;\n        if (columnWidthString.match(VALID_COLUMN_WIDTH_REGEX)) {\n            isPixelValue = columnWidthString.endsWith(\"px\");\n        }\n        else {\n            columnWidthString = DEFAULT_COLUMN_WIDTH;\n            isPixelValue = false;\n        }\n        return (React.createElement(\"div\", { className: \"WACGrid__Cell\", \n            // eslint-disable-next-line react/forbid-dom-props\n            style: {\n                width: isPixelValue ? columnWidthString : undefined,\n                flex: isPixelValue ? undefined : Number(columnWidthString),\n                alignItems: getFlexAlignment(cellData?.horizontal_alignment || horizontal_alignment),\n                justifyContent: getFlexAlignment(cellData?.vertical_alignment || vertical_alignment),\n            }, \n            // eslint-disable-next-line react/no-array-index-key\n            key: `cell-${rowIndex}-${columnIndex}` }, cell.map((localMessageItemID, itemIndex) => {\n            const message = allMessageItemsByID[localMessageItemID];\n            return (React.createElement(MessageTypeComponent\n            // eslint-disable-next-line react/no-array-index-key\n            , { \n                // eslint-disable-next-line react/no-array-index-key\n                key: `item-${rowIndex}-${columnIndex}-${itemIndex}`, message: message, originalMessage: originalMessage, languagePack: languagePack, requestInputFocus: THROW_ERROR, disableUserInputs: inputState.isReadonly, config: appConfig, isMessageForInput: false, scrollElementIntoView: THROW_ERROR, serviceManager: serviceManager, isNestedMessageItem: true, hideFeedback: true, allowNewFeedback: false }));\n        })));\n    }))))));\n}\n/**\n * Returns the CSS flex alignment for the given horizontal/vertical alignment value;\n */\nfunction getFlexAlignment(value) {\n    switch (value) {\n        case \"bottom\":\n        case \"right\":\n            return \"flex-end\";\n        case \"center\":\n            return \"center\";\n        case \"top\":\n        case \"left\":\n        default:\n            return \"flex-start\";\n    }\n}\nconst GridItemComponentExport = React.memo(GridItemComponent);\n\nexport { GridItemComponentExport as GridItemComponent };\n","import ArrowRight from '@carbon/icons-react/es/ArrowRight.js';\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { useServiceManager } from '../../../hooks/useServiceManager.js';\nimport actions from '../../../store/actions.js';\nimport { getURLHostName } from '../../../utils/browserUtils.js';\nimport VisuallyHidden from '../../util/VisuallyHidden.js';\nimport { ClickableImage } from '../util/ClickableImage.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * The iframe preview card for the page source. This is a button that can be clicked in order to open the frame panel.\n */\nfunction IFramePreviewCardComponent({ messageItem, doAutoScroll, }) {\n    const { source, image_url, title, description } = messageItem;\n    const useAITheme = useSelector((state) => state.theme.useAITheme);\n    const urlHostName = getURLHostName(source);\n    const { store } = useServiceManager();\n    const { iframe_ariaImageAltText } = useLanguagePack();\n    const intl = useIntl();\n    const iframeAriaClickPreviewCardMessage = intl.formatMessage({ id: \"iframe_ariaClickPreviewCard\" }, { source: urlHostName });\n    /**\n     * Set iframe content to be loaded in the iframe panel.\n     */\n    function handleCardClick() {\n        // If tanya has authored an iframe response type and has provided no page source, we don't want the preview card to\n        // open the iframe panel.\n        if (source) {\n            store.dispatch(actions.setIFrameContent(messageItem));\n        }\n    }\n    /**\n     * Handles making the image element visible by updating the image loading flag and triggering an auto scroll.\n     */\n    function handleImageLoaded() {\n        // Call doAutoScroll to account for the image container height change after the image has loaded.\n        doAutoScroll?.();\n    }\n    return (React.createElement(\"div\", null,\n        React.createElement(ClickableImage, { title: title, description: description, source: image_url, displayURL: source, altText: iframe_ariaImageAltText, onImageLoad: handleImageLoaded, renderIcon: ArrowRight, onClick: handleCardClick, preventInlineError: true, useAITheme: useAITheme }),\n        React.createElement(VisuallyHidden, null, iframeAriaClickPreviewCardMessage)));\n}\nconst IFramePreviewCardExport = React.memo(IFramePreviewCardComponent);\n\nexport { IFramePreviewCardExport as IFramePreviewCard };\n","import React, { useState, useCallback } from 'react';\nimport { useAriaAnnouncer } from '../../../hooks/useAriaAnnouncer.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { getMediaDimensions } from '../../../utils/messageUtils.js';\nimport { getResponsiveElementPaddingValue } from '../../../utils/miscUtils.js';\nimport { InlineError } from '../error/InlineError.js';\nimport { IFrameComponent } from './IFrameComponent.js';\nimport { useDynamicCSSProperties } from '../../../hooks/useCSSCustomProperties.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component renders an inline iframe for iframe response types using the chat display \"inline\" option.\n */\nfunction InlineIFrame({ messageItem, doAutoScroll }) {\n    const ariaAnnouncer = useAriaAnnouncer();\n    const { errors_iframeSource } = useLanguagePack();\n    const [isError, setIsError] = useState(false);\n    const { source, title } = messageItem;\n    const baseHeight = getMediaDimensions(messageItem)?.base_height;\n    const paddingTop = getResponsiveElementPaddingValue(baseHeight);\n    const inlineStyles = useDynamicCSSProperties({ paddingTop });\n    const iframeTitle = title || source;\n    /**\n     * Render an error message and announce it when the iframe component times out.\n     */\n    const onTimeoutOverride = useCallback(() => {\n        setIsError(true);\n        ariaAnnouncer(errors_iframeSource);\n    }, [ariaAnnouncer, errors_iframeSource]);\n    if (isError) {\n        return React.createElement(InlineError, { text: errors_iframeSource });\n    }\n    return (\n    // eslint-disable-next-line react/forbid-dom-props\n    React.createElement(\"div\", { className: \"WACInlineIFrame\", style: inlineStyles },\n        React.createElement(IFrameComponent, { source: source, title: iframeTitle, onTimeoutOverride: onTimeoutOverride, onLoad: () => doAutoScroll?.() })));\n}\n\nexport { InlineIFrame };\n","import React from 'react';\nimport { IFramePreviewCard as IFramePreviewCardExport } from './IFramePreviewCard.js';\nimport { InlineIFrame } from './InlineIFrame.js';\nimport { IFrameItemDisplayOption } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction IFrameMessage({ doAutoScroll, localMessage, displayOverride, }) {\n    const { item } = localMessage;\n    const itemDisplay = item.display;\n    // Render an inline iframe if it was configured to do so or it's being rendered in a card.\n    if (itemDisplay === IFrameItemDisplayOption.INLINE ||\n        displayOverride === IFrameItemDisplayOption.INLINE) {\n        // The key prop is important since it causes the IFrame to re-mount when the source changes.\n        return (React.createElement(InlineIFrame, { key: item.source, doAutoScroll: doAutoScroll, messageItem: item }));\n    }\n    return React.createElement(IFramePreviewCardExport, { doAutoScroll: doAutoScroll, messageItem: item });\n}\n\nexport { IFrameMessage };\n","import React from 'react';\nimport { RichText as RichTextExport } from './RichText.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction Description({ className, text, shouldRemoveHTMLBeforeMarkdownConversion = false, }) {\n    return (React.createElement(\"div\", { className: `WAC__description ${className}` },\n        React.createElement(RichTextExport, { text: text, shouldRemoveHTMLBeforeMarkdownConversion: shouldRemoveHTMLBeforeMarkdownConversion })));\n}\n\nexport { Description as default };\n","import React from 'react';\nimport Description from './Description.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction Metablock({ title = null, description = null, id = null, shouldRemoveHTMLBeforeMarkdownConversion = false, }) {\n    return title || description ? (React.createElement(\"div\", { className: \"WAC__received--metablock\", id: id },\n        title && (React.createElement(Description, { className: \"WAC__received--metablock-content WACMetablock__Title\", text: title, shouldRemoveHTMLBeforeMarkdownConversion: shouldRemoveHTMLBeforeMarkdownConversion })),\n        description && (React.createElement(Description, { className: \"WAC__received--metablock-content WACMetablock__Description\", text: description, shouldRemoveHTMLBeforeMarkdownConversion: shouldRemoveHTMLBeforeMarkdownConversion })))) : null;\n}\n\nexport { Metablock as default };\n","import { Layer, Dropdown } from '@carbon/react';\nimport cx from 'classnames';\nimport React, { useState, useRef } from 'react';\nimport { useCounter } from '../../../hooks/useCounter.js';\nimport { doScrollElementIntoView } from '../../../utils/domUtils.js';\nimport Metablock from '../util/Metablock.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Downshift doesn't play well with shadow dom OOTB, so we need to feed it a custom environment.\n */\nfunction createProxyEnvironment(shadowRoot) {\n    const properties = {\n        document: shadowRoot.ownerDocument,\n        addEventListener: shadowRoot.ownerDocument.addEventListener.bind(shadowRoot),\n        removeEventListener: shadowRoot.ownerDocument.removeEventListener.bind(shadowRoot),\n        Node,\n    };\n    return new Proxy(shadowRoot, {\n        get: (_, prop) => properties[prop],\n    });\n}\nfunction SelectComponent(props) {\n    const { title, description, options, onChange, languagePack, disableUserInputs, serviceManager, shouldRemoveHTMLBeforeMarkdownConversion, } = props;\n    const [isBeingOpened, setIsBeingOpened] = useState(false);\n    const rootRef = useRef();\n    // Generate a unique ID that we can use for each instance of our dropdowns.\n    const counter = useCounter();\n    const id = `${counter}${serviceManager.namespace.suffix}`;\n    const environment = rootRef.current?.getRootNode\n        ? createProxyEnvironment(rootRef.current.getRootNode())\n        : undefined;\n    function findOptionForValue() {\n        const { value, options } = props;\n        const selectedItem = options.find((item) => {\n            return item.value === value;\n        });\n        return selectedItem;\n    }\n    function onIsOpenChange(changes) {\n        /**\n         * This is called when a state change occurs on the downshift component. We use this to take action when the dropdown\n         * is opened.\n         */\n        if (changes.isOpen && rootRef.current) {\n            // When the dropdown is opened, make sure it gets scrolled into view. To give a little extra padding to the\n            // scrollable area, we'll temporarily add some bottom padding to the item, let the scroll calculations run and\n            // then we'll remove it.\n            setTimeout(() => {\n                if (rootRef?.current) {\n                    setIsBeingOpened(true);\n                    doScrollElementIntoView(rootRef.current, true);\n                    setIsBeingOpened(false);\n                }\n            }, 70 * 2);\n            // Carbon animates the menu opening, so we sadly need to provide a value here (fast01 token === 70) using the\n            // value from @carbon/motion (which is not exported to JS).\n        }\n    }\n    return (React.createElement(\"div\", { ref: rootRef },\n        React.createElement(Metablock, { title: title, description: description, id: `WAC__selectUUID_${id}-label`, shouldRemoveHTMLBeforeMarkdownConversion: shouldRemoveHTMLBeforeMarkdownConversion }),\n        React.createElement(\"div\", { className: cx(\"WAC__selectHolder\", {\n                WAC__customSelectTemporaryPadding: isBeingOpened,\n            }) },\n            React.createElement(Layer, null,\n                React.createElement(Dropdown, { id: `WAC__selectUUID_${id}`, items: options, label: languagePack.options_select, titleText: languagePack.options_select, hideLabel: true, \"aria-label\": disableUserInputs\n                        ? languagePack.options_ariaOptionsDisabled\n                        : title, disabled: disableUserInputs, onChange: onChange, selectedItem: findOptionForValue(), downshiftProps: {\n                        environment,\n                        onIsOpenChange,\n                        id: `WACSelectComponent__Downshift-${id}`,\n                    } })))));\n}\n\nexport { SelectComponent as default };\n","import { unstable__ChatButton } from '@carbon/react';\nimport React, { Component } from 'react';\nimport { createMessageRequestForChoice, getOptionType } from '../../../utils/messageUtils.js';\nimport Metablock from '../util/Metablock.js';\nimport SelectComponent from './SelectComponent.js';\nimport { MessageSendSource } from '../../../../../types/events/eventBusTypes.js';\nimport { ButtonSizeEnum, ButtonKindEnum } from '../../../../../types/utilities/carbonTypes.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nclass OptionComponent extends Component {\n    constructor() {\n        super(...arguments);\n        /**\n         * This function is called when the user has selected one of the available options.\n         *\n         * @param selectedOption The option that was selected.\n         * @param type The specific type of the option response type ('button' vs 'dropdown').\n         */\n        this.onOptionSelected = (selectedOption, type) => {\n            const { localMessage, serviceManager, originalMessage } = this.props;\n            const { id: responseID } = originalMessage;\n            const messageRequest = createMessageRequestForChoice(selectedOption, responseID);\n            const localMessageID = localMessage.ui_state.id;\n            // Track when user gives a response through a button or dropdown option.\n            const source = type === \"button\"\n                ? MessageSendSource.OPTION_BUTTON\n                : MessageSendSource.OPTION_DROP_DOWN;\n            serviceManager.actions.sendWithCatch(messageRequest, source, {\n                setValueSelectedForMessageID: localMessageID,\n            });\n            // Move focus back to the input field\n            this.props.requestInputFocus();\n        };\n        /**\n         * This is called when the option displays a list of buttons and one of the buttons is clicked.\n         * It also sets the responseType to 'button'.\n         */\n        this.onButtonClick = (event, item) => {\n            this.onOptionSelected(item, \"button\");\n        };\n        /**\n         * This is called when the option displays a dropdown component of options and one options is clicked.\n         * It also sets the responseType to 'dropdown'.\n         */\n        this.onSelectChange = (data) => {\n            this.onOptionSelected(data.selectedItem, \"dropdown\");\n        };\n    }\n    render() {\n        const { localMessage, languagePack, disableUserInputs, serviceManager, shouldRemoveHTMLBeforeMarkdownConversion, } = this.props;\n        const { options, title, description, preference } = localMessage.item;\n        const { optionSelected } = localMessage.ui_state;\n        const type = getOptionType(preference, options.length);\n        return type === \"button\" ? (React.createElement(React.Fragment, null,\n            React.createElement(Metablock, { title: title, description: description, shouldRemoveHTMLBeforeMarkdownConversion: shouldRemoveHTMLBeforeMarkdownConversion }),\n            React.createElement(\"div\", { className: \"WAC__button-holder\" },\n                React.createElement(\"ul\", null, options.map((item, index) => {\n                    const isSelected = optionSelected\n                        ? item.value.input.text === optionSelected.input.text\n                        : false;\n                    return (React.createElement(\"li\", { key: item.label },\n                        React.createElement(unstable__ChatButton, { kind: ButtonKindEnum.TERTIARY, isQuickAction: true, size: ButtonSizeEnum.SMALL, className: `WAC__button-${index}`, disabled: disableUserInputs, isSelected: isSelected, onClick: (event) => {\n                                this.onButtonClick(event, item);\n                            } }, item.label)));\n                }))))) : (React.createElement(SelectComponent, { serviceManager: serviceManager, languagePack: languagePack, title: title, description: description, options: options, disableUserInputs: disableUserInputs, onChange: this.onSelectChange, value: optionSelected, shouldRemoveHTMLBeforeMarkdownConversion: shouldRemoveHTMLBeforeMarkdownConversion }));\n    }\n}\n\nexport { OptionComponent };\n","import '@carbon/web-components/es-custom/components/data-table/index.js';\nimport '@carbon/web-components/es-custom/components/checkbox/index.js';\nimport '@carbon/web-components/es-custom/components/button/index.js';\nimport { toString } from '@carbon/icon-helpers';\nimport Download16 from '@carbon/icons/es/download/16.js';\nimport { html } from 'lit';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\nimport { repeat } from 'lit-html/directives/repeat.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst Download16svg = toString({\n    ...Download16,\n    attrs: {\n        ...Download16.attrs,\n        slot: \"icon\",\n    },\n});\n/**\n * Table view logic.\n */\nfunction tableTemplate(tableElement) {\n    const { tableTitle, tableDescription, headers, containerWidth, filterPlaceholderText, locale, _handleDownload: handleDownload, _rowsWithIDs: tableRowsWithIDs, _allowFiltering: allowTableFiltering, _handleFilterEvent: handleFilterEvent, } = tableElement;\n    function toolbarElement() {\n        return html `<cds-custom-table-toolbar slot=\"toolbar\">\n      <cds-custom-table-toolbar-content>\n        ${allowTableFiltering\n            ? html `<cds-custom-table-toolbar-search\n              persistent\n              placeholder=${filterPlaceholderText}\n            ></cds-custom-table-toolbar-search>`\n            : \"\"}\n        <cds-custom-button @click=${handleDownload}\n          >${unsafeSVG(Download16svg)}</cds-custom-button\n        >\n      </cds-custom-table-toolbar-content>\n    </cds-custom-table-toolbar>`;\n    }\n    function headersElement() {\n        return html `<cds-custom-table-head>\n      <cds-custom-table-header-row>\n        ${headers.map((header) => html `<cds-custom-table-header-cell\n              >${header}</cds-custom-table-header-cell\n            >`)}\n      </cds-custom-table-header-row>\n    </cds-custom-table-head>`;\n    }\n    function rowsElement() {\n        return html `<cds-custom-table-body>\n      ${repeat(tableRowsWithIDs, (row) => row.id, (row) => \n        // TODO TABLE: The Carbon table is suppose to support mixing expandable and non-expandable rows by using the\n        // \"expandable\" prop on a row that should expand (as described towards the bottom of this section\n        // https://web-components.carbondesignsystem.com/?path=/docs/components-datatable-basic--overview#expansion).\n        // However, that functionality is currently broken. When this issue\n        // (https://github.com/carbon-design-system/carbon/issues/17612) is resolved, then we can implement dynamic\n        // expansion.\n        html `<cds-custom-table-row id=${row.id}\n            >${row.cells.map((cell) => html `<cds-custom-table-cell>${cell}</cds-custom-table-cell>`)}</cds-custom-table-row\n          >`\n        // <cds-custom-table-expanded-row\n        //   >${row.expandable_section?.map(item => html`<div>${item.response_type}</div>`)}</cds-custom-table-expanded-row\n        // >`,\n        )}\n    </cds-custom-table-body>`;\n    }\n    // TODO TABLE: Do not enable expansion for now since we can't mix expandable and non-expandable rows (and support for\n    // styling of user defined sections is not ready at this time). When we do decide to support expansion we will need to\n    // render something like <MessageTypeComponent /> within the React container, pass it down to the TableElement\n    // component, render the contents in a React portal, and have the root of the portal fill the slot of the appropriate\n    // expandable section.\n    // TODO TABLE: There is a bug with size=\"sm\" and is-sortable that prevents the header row from being the same size as\n    // the rest of the rows https://github.com/carbon-design-system/carbon/issues/17680. For now keep size=\"md\" until that\n    // bug is fixed.\n    // Enable sorting if filtering is enabled.\n    return html `<cds-custom-table\n    style=\"--cds-chat-table-width:${containerWidth}px\"\n    size=\"md\"\n    locale=${locale}\n    .isSortable=${allowTableFiltering}\n    .useZebraStyles=${true}\n    @cds-custom-table-filtered=${handleFilterEvent}\n  >\n    ${tableTitle &&\n        html `<cds-custom-table-header-title slot=\"title\"\n      >${tableTitle}</cds-custom-table-header-title\n    >`}\n    ${tableDescription &&\n        html `<cds-custom-table-header-description slot=\"description\"\n      >${tableDescription}</cds-custom-table-header-description\n    >`}\n    ${toolbarElement()} ${headersElement()} ${rowsElement()}\n  </cds-custom-table>`;\n}\n\nexport { tableTemplate };\n","import { __decorate } from 'tslib';\nimport { bind } from 'bind-decorator';\nimport { stringify } from 'csv-stringify/browser/esm/sync';\nimport { LitElement, html, unsafeCSS, css } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { carbonElement } from '../../decorators/customElement.js';\nimport css_248z from './src/table.scss.js';\nimport { tableTemplate } from './src/table.template.js';\nimport { tablePaginationTemplate } from './src/tablePagination.template.js';\nimport { tableSkeletonTemplate } from './src/tableSkeleton.template.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst DEFAULT_TABLE_PAGE_SIZE = 5;\nconst DEFAULT_TABLE_PAGE_SIZE_TALL_CHAT = 10;\n// The supported possible page sizes are 5, 10, 15, 20, 50, and all rows.\nconst POSSIBLE_PAGE_SIZES = [\n    DEFAULT_TABLE_PAGE_SIZE,\n    DEFAULT_TABLE_PAGE_SIZE_TALL_CHAT,\n    15,\n    20,\n    50,\n];\nconst TALL_CHAT_HEIGHT = 850;\n// We will have to give this component a unique ID on the name when we register it to avoid conflicts in a world where\n// multiple versions of the Carbon AI chat can be on the same page.\nconst TABLE_COMPONENT_TAG_NAME = \"cds-aichat-table\";\n/**\n * Class functionality for the Table custom element.\n */\nlet TableElement = class TableElement extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * If the table is valid or not.\n         */\n        this._isValid = true;\n        /**\n         * The current page of the table we're on.\n         */\n        this._currentPageNumber = 1;\n        /**\n         * Whether or not the number of rows per page was changed with the pagination component. If the user used the\n         * pagination controls to show all rows, the pagination component would normally hide itself because the number of is\n         * no longer greater than the page size. However the pagination component needs to persist in this case, since the\n         * user may want to change the page size again. This is used to keep track of whether the pagination controls were\n         * used to change page size, and if they have, it forces pagination component to persist.\n         */\n        this._rowsPerPageChanged = false;\n        /**\n         * All of the rows for the table with IDs.\n         */\n        this._rowsWithIDs = [];\n    }\n    /**\n     * Depending on the properties that changed validate the table or change the number of rows displayed in the table.\n     * There is also a [firstUpdated](https://lit.dev/docs/components/lifecycle/#firstupdated) function from lit that only\n     * fires after the components DOM has been updated the first time. That could potentially be used in these scenarios /\n     * similar scenarios as it seems similar to the old componentDidMount. For now use this broader function to make sure\n     * we see the prop updates we're expecting.\n     */\n    updated(changedProperties) {\n        // If the headers or rows has recently updated and both are defined than we should validate the table\n        // data. This will likely only happen on the web components first render cycle when the props go from undefined to\n        // defined.\n        if ((changedProperties.has(\"headers\") || changedProperties.has(\"rows\")) &&\n            this.headers !== undefined &&\n            this.rows !== undefined) {\n            this._calcIsTableValid();\n        }\n        // If the value of tableRows updated then initialize the internal rows arrays.\n        if (changedProperties.has(\"rows\") && this.rows !== undefined) {\n            this._initializeRowsArrays();\n        }\n        // If the page size is not currently defined, and the chatHeight has been set, then this is the first render and we\n        // need to choose the starting page size based off the chatHeight.\n        if (this._currentPageSize === undefined &&\n            changedProperties.has(\"chatHeight\") &&\n            this.chatHeight !== changedProperties.get(\"chatHeight\")) {\n            this._initializePageSize();\n        }\n    }\n    /**\n     * Check if the table content is valid. A table is valid if the number of cells in each row is the same as the number\n     * of cells in the header.\n     */\n    _calcIsTableValid() {\n        const columnCount = this.headers.length;\n        // If one of the rows has a different number of cells than the number of columns in the header then set our internal\n        // valid state to false.\n        this._isValid = !this.rows.some((row) => row.cells.length !== columnCount);\n        // In the future, once we have an inlineError web component to use, we can render that when our table is not valid\n        // (as well as throwing the below error). Until then our React container is rendering the error component and\n        // throwing the error.\n        // throw new Error(\n        //   `${WA_CONSOLE_PREFIX} Number of cells in the table header does not match the number of cells in one or more of the table rows. In order to render a table there needs to be the same number of columns in the table header and all of the table rows.`,\n        // );\n    }\n    /**\n     * Create a new array of rows that includes ids for each row. Also build an array of those same ids representing the\n     * rows that have not been filtered out.\n     */\n    _initializeRowsArrays() {\n        // Reset both arrays.\n        this._rowsWithIDs = [];\n        this._filterVisibleRowIDs = new Set();\n        this.rows.forEach((row, index) => {\n            const id = index.toString();\n            this._rowsWithIDs.push({ ...row, id });\n            this._filterVisibleRowIDs.add(id);\n        });\n    }\n    /**\n     * If the chat container is over a certain height then show more rows per page.\n     */\n    _initializePageSize() {\n        // If the chat container is above a certain height then show more rows per page.\n        if (this.chatHeight > TALL_CHAT_HEIGHT) {\n            this._currentPageSize = DEFAULT_TABLE_PAGE_SIZE_TALL_CHAT;\n        }\n        else {\n            this._currentPageSize = DEFAULT_TABLE_PAGE_SIZE;\n        }\n        // If there are more rows than the page size then enable filtering.\n        this._allowFiltering = this.rows.length > this._currentPageSize;\n        // Update the visible rows in case the page size has changed or this is the first time this web component has\n        // rendered.\n        this._updateVisibleRows();\n    }\n    /**\n     * When the page change event is fired by the pagination component, change which rows are visible. For some reason\n     * only this event is firing twice. However the page size and number is the same both times so the functionality of\n     * the pagination component works as expected. Ignore this double firing for now since it appears to be a bug on\n     * Carbon's end that will likely be fixed in a future release.\n     */\n    _handlePageChangeEvent(event) {\n        this._updateVisibleRows(event.detail?.page, event.detail?.pageSize);\n        event.stopPropagation();\n    }\n    /**\n     * When the number of rows per page is changed, update the current page size and change which rows are visible.\n     */\n    _handlePageSizeChangeEvent(event) {\n        this._rowsPerPageChanged = true;\n        this._currentPageSize = event.detail?.pageSize;\n        this._updateVisibleRows();\n        event.stopPropagation();\n    }\n    /**\n     * When the filter event is fired, record which rows have not been filtered out, and update which rows are visible.\n     * This event is fired when the columns are sorted using the header cells AND when the table is filtered using the\n     * search bar.\n     */\n    _handleFilterEvent(event) {\n        // Record the new set of unfiltered row ids.\n        this._filterVisibleRowIDs = new Set(event?.detail?.unfilteredRows.map((row) => row.id));\n        // Go back to the first page.\n        this._currentPageNumber = 1;\n        // Update which rows are visible.\n        this._updateVisibleRows();\n        event.stopPropagation();\n    }\n    /**\n     * Given the current page number, page size, and array of rows that have not been filtered out, determine which rows\n     * to show and hide using css.\n     */\n    _updateVisibleRows(page = this._currentPageNumber, pageSize = this._currentPageSize) {\n        // Set the current page number and only show the rows for that page.\n        this._currentPageNumber = page;\n        // Grab all the rows that have been rendered. It's necessary to grab them from the page because the cds-custom-table puts\n        // the rows in a specific order when sorting and we want to preserve that order.\n        const rows = Array.from(this.renderRoot.querySelectorAll(\"cds-custom-table-row\"));\n        // This is similar to the carbon example here https://stackblitz.com/edit/github-kbd9xw-s3y3s6?file=index.html. I\n        // originally tried creating and passing an array of the specific rows the template should render for the current\n        // page. Unfortunately doing that doesn't work with the combination of the is-sortable prop for the table and\n        // page-size prop for pagination. What would happen is old rows would persist if you were on the last page and there\n        // weren't enough rows to fill the page (even though the old rows weren't included in the new rows provided to the\n        // template). Using Carbon's example of hiding the rows with styling works so I'm extending that concept here even\n        // though, ideally, render controls the view and reacts to the state that would be determined here.\n        // Hide all the rows to start.\n        rows.forEach((row) => row.style.setProperty(\"display\", \"none\"));\n        // Now filter the rows down to what is visible according to the filter.\n        const filterVisibleRows = rows.filter((row) => this._filterVisibleRowIDs.has(row.id));\n        // Now show all the rows that are within the current page.\n        const pageStart = (page - 1) * pageSize;\n        const pageEnd = page * pageSize - 1;\n        for (let index = pageStart; index <= pageEnd; index++) {\n            // If there is a row at that index then show it. If there aren't enough rows to fill the page then there won't be\n            // a row at that index.\n            filterVisibleRows[index]?.removeAttribute(\"style\");\n        }\n    }\n    /**\n     * Carbon's data table component by default only downloads rows that have been selected, and only downloads json. We\n     * don't want to implement selection at this time and we want our download to be csv so we need to implement own\n     * download function.\n     */\n    _handleDownload() {\n        // Don't save content from the expandable rows at this time. This could be added in the future but it's unclear how\n        // this would look in the download.\n        const tableArray = [\n            this.headers,\n            ...this.rows.map((row) => row.cells),\n        ];\n        // stringify docs here: https://csv.js.org/stringify/api/sync/\n        const stringifiedTable = stringify(tableArray);\n        const blob = new Blob([stringifiedTable], {\n            type: \"text/csv;charset=utf-8;\",\n        });\n        // It appears the only way to control the file name of a downloaded file is through an anchor element with a\n        // download attribute. So create such an element and add our data to be downloaded.\n        const link = document.createElement(\"a\");\n        const url = URL.createObjectURL(blob);\n        link.setAttribute(\"href\", url);\n        link.setAttribute(\"download\", \"table-data.csv\");\n        link.style.visibility = \"hidden\";\n        document.body.appendChild(link);\n        // Click on the link we've created to download the blob with our stringified table data.\n        link.click();\n        document.body.removeChild(link);\n    }\n    /**\n     * Renders either the table skeleton or the table. If the table is larger than the page size then also render the\n     * pagination component to change pages.\n     */\n    render() {\n        // TODO TABLE: Once we have a web component version of the inline error state we could render that here if\n        // !this._isValid.\n        // This could be used while we wait for a md stream containing a table to complete.\n        if (this.loading) {\n            return tableSkeletonTemplate();\n        }\n        // If there are more rows than the page size then we need to add the pagination component. If the rows per page has\n        // been changed by the pagination component then we need to keep the pagination component around so the user can\n        // change the page size again, even if the current page size is the same as the number of table rows.\n        if (this.rows.length > this._currentPageSize || this._rowsPerPageChanged) {\n            return html `${tableTemplate(this)} ${tablePaginationTemplate(this)}`;\n        }\n        // Otherwise, just render the table.\n        return html `${tableTemplate(this)}`;\n    }\n};\nTableElement.styles = css `\n    ${unsafeCSS(css_248z)}\n  `;\n__decorate([\n    property({ type: String, attribute: \"table-title\" })\n], TableElement.prototype, \"tableTitle\", void 0);\n__decorate([\n    property({ type: String, attribute: \"table-description\" })\n], TableElement.prototype, \"tableDescription\", void 0);\n__decorate([\n    property({ type: Array })\n], TableElement.prototype, \"headers\", void 0);\n__decorate([\n    property({ type: Array })\n], TableElement.prototype, \"rows\", void 0);\n__decorate([\n    property({ type: Number, attribute: \"container-width\" })\n], TableElement.prototype, \"containerWidth\", void 0);\n__decorate([\n    property({ type: Number, attribute: \"chat-height\" })\n], TableElement.prototype, \"chatHeight\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"loading\" })\n], TableElement.prototype, \"loading\", void 0);\n__decorate([\n    property({ type: String, attribute: \"filter-placeholder-text\" })\n], TableElement.prototype, \"filterPlaceholderText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"previous-page-text\" })\n], TableElement.prototype, \"previousPageText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"next-page-text\" })\n], TableElement.prototype, \"nextPageText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"items-per-page-text\" })\n], TableElement.prototype, \"itemsPerPageText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"locale\" })\n], TableElement.prototype, \"locale\", void 0);\n__decorate([\n    property({ type: Function, attribute: false })\n], TableElement.prototype, \"getPaginationSupplementalText\", void 0);\n__decorate([\n    property({ type: Function, attribute: false })\n], TableElement.prototype, \"getPaginationStatusText\", void 0);\n__decorate([\n    state()\n], TableElement.prototype, \"_isValid\", void 0);\n__decorate([\n    state()\n], TableElement.prototype, \"_currentPageNumber\", void 0);\n__decorate([\n    state()\n], TableElement.prototype, \"_currentPageSize\", void 0);\n__decorate([\n    state()\n], TableElement.prototype, \"_rowsPerPageChanged\", void 0);\n__decorate([\n    state()\n], TableElement.prototype, \"_filterVisibleRowIDs\", void 0);\n__decorate([\n    state()\n], TableElement.prototype, \"_rowsWithIDs\", void 0);\n__decorate([\n    state()\n], TableElement.prototype, \"_allowFiltering\", void 0);\n__decorate([\n    bind\n], TableElement.prototype, \"_handlePageChangeEvent\", null);\n__decorate([\n    bind\n], TableElement.prototype, \"_handlePageSizeChangeEvent\", null);\n__decorate([\n    bind\n], TableElement.prototype, \"_handleFilterEvent\", null);\nTableElement = __decorate([\n    carbonElement(TABLE_COMPONENT_TAG_NAME)\n], TableElement);\n\nexport { POSSIBLE_PAGE_SIZES, TABLE_COMPONENT_TAG_NAME, TableElement };\n","import '@carbon/web-components/es-custom/components/data-table/table-skeleton.js';\nimport { html } from 'lit';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Table skeleton view logic.\n */\nfunction tableSkeletonTemplate() {\n    // Can add header names to the skeleton if we want to\n    // https://web-components.carbondesignsystem.com/?path=/docs/components-datatable-skeleton--overview#custom-headers.\n    return html `<cds-custom-table-skeleton row-count=\"3\" column-count=\"2\">\n  </cds-custom-table-skeleton>`;\n}\n\nexport { tableSkeletonTemplate };\n","import '@carbon/web-components/es-custom/components/pagination/index.js';\nimport '@carbon/web-components/es-custom/components/select/index.js';\nimport { html } from 'lit';\nimport { POSSIBLE_PAGE_SIZES } from '../cds-aichat-table.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Table pagination view logic.\n */\nfunction tablePaginationTemplate(tableElement) {\n    const { _currentPageSize: currentPageSize, _currentPageNumber: currentPageNumber, _filterVisibleRowIDs: filterVisibleRowIDs, rows, previousPageText, nextPageText, itemsPerPageText, getPaginationSupplementalText, getPaginationStatusText, _handlePageChangeEvent: handlePageChangeEvent, _handlePageSizeChangeEvent: handlePageSizeChangeEvent, } = tableElement;\n    const totalVisibleRows = filterVisibleRowIDs.size;\n    const totalRows = rows.length;\n    // Page sizes will only be included if the page size is less than the total number of rows.\n    const supportedPageSizes = POSSIBLE_PAGE_SIZES.filter((pageSize) => pageSize < totalRows);\n    // TODO TABLE: This component is quite wide. Because of the shadow dom we can't select it's contents to hide items\n    // with css, nor can we extend this class to manipulate it's styles because of Carbon's use of :host(cds-custom-pagination)\n    // within their styles. There is however a smaller variation of this component\n    // (https://carbondesignsystem.com/components/pagination/usage/#responsive-behavior) but it's only used at a specific\n    // breakpoint, when the viewport is narrow (i.e. a mobile device). A Carbon enhancement request has been made to\n    // expose a prop that can be used to enable this smaller variation\n    // (https://github.com/carbon-design-system/carbon/issues/17564). When that enhancement is done, and we can\n    // dynamically enable a narrow form factor of this pagination component, then we could use the same css trick we used\n    // for the header to make the pagination component sticky (if the carbon component doesn't already do it for us).\n    return html `<cds-custom-pagination\n    page-size=${currentPageSize}\n    page=${currentPageNumber}\n    total-items=${totalVisibleRows}\n    totalPages=${Math.ceil(totalVisibleRows / currentPageSize)}\n    backward-text=${previousPageText}\n    forward-text=${nextPageText}\n    items-per-page-text=${itemsPerPageText}\n    .formatSupplementalText=${getPaginationSupplementalText}\n    .formatStatusWithDeterminateTotal=${getPaginationStatusText}\n    @cds-custom-pagination-changed-current=${handlePageChangeEvent}\n    @cds-custom-page-sizes-select-changed=${handlePageSizeChangeEvent}\n  >\n    ${supportedPageSizes.map((pageSize) => html `<cds-custom-select-item value=\"${pageSize}\"\n          >${pageSize}</cds-custom-select-item\n        >`)}\n    <cds-custom-select-item value=\"${totalRows}\"\n      >${totalRows}</cds-custom-select-item\n    >\n  </cds-custom-pagination>`;\n}\n\nexport { tablePaginationTemplate };\n","var css_248z = \"cds-custom-table-header-title,\\ncds-custom-table-header-description,\\ncds-custom-table-toolbar{\\n  position:sticky;\\n  inline-size:var(--cds-chat-table-width, auto);\\n  inset-inline-start:0;\\n}\\n\\n:dir(rtl) cds-custom-table-header-title,\\n:dir(rtl) cds-custom-table-header-description,\\n:dir(rtl) cds-custom-table-toolbar{\\n  right:0;\\n  left:unset;\\n}\\n\\ncds-custom-table-header-title,\\ncds-custom-table-header-description{\\n  padding:0 1rem;\\n  inline-size:calc(var(--cds-chat-table-width, auto) - 1rem - 1rem);\\n  margin-inline:-1rem;\\n}\\n\\ncds-custom-table-header-description{\\n  margin-block-end:-0.5rem;\\n}\\n\\ncds-custom-pagination{\\n  inline-size:100%;\\n}\";\n\nexport { css_248z as default };\n","import { createComponent } from '@lit/react';\nimport React from 'react';\nimport { TableElement, TABLE_COMPONENT_TAG_NAME } from '../../../web-components/components/table/cds-aichat-table.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This file creates React bindings for the Table web component and registers the web component in the DOM.\n */\nconst Table = createComponent({\n    tagName: TABLE_COMPONENT_TAG_NAME,\n    elementClass: TableElement,\n    react: React,\n});\n\nexport { Table };\n","import { Theme } from '@carbon/react';\nimport React, { useRef, useState, useLayoutEffect, useMemo, Suspense } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Table } from '../../../../react/components/table/Table.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { LIGHT_THEMES } from '../../../utils/constants.js';\nimport { consoleError } from '../../../utils/miscUtils.js';\nimport { InlineError } from '../error/InlineError.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Renders a table response type. The table has a header, rows, and optionally a title and description.\n */\nfunction TableContainer(props) {\n    const { tableItem } = props;\n    const { title, description, headers, rows } = tableItem;\n    const carbonTheme = useSelector((state) => state.theme.carbonTheme);\n    const chatHeight = useSelector((state) => state.chatHeight);\n    const locale = useSelector((state) => state.locale);\n    const languagePack = useLanguagePack();\n    const intl = useIntl();\n    const tableContainerRef = useRef(null);\n    const [tableContainerWidth, setTableContainerWidth] = useState();\n    function onResize() {\n        setTableContainerWidth(tableContainerRef.current?.clientWidth);\n    }\n    useLayoutEffect(() => {\n        const tableResizeObserver = new ResizeObserver(onResize);\n        tableResizeObserver.observe(tableContainerRef.current);\n    });\n    const isValidTable = useMemo(() => {\n        const columnCount = headers.length;\n        // If the the number of cells in one of the rows is different than the number of cells in the header, then the table\n        // is not valid.\n        const isValid = !rows.some((row) => row.cells.length !== columnCount);\n        if (!isValid) {\n            consoleError(`Number of cells in the table header does not match the number of cells in one or more of the table rows. In order to render a table there needs to be the same number of columns in the table header and all of the table rows.`);\n        }\n        return isValid;\n    }, [rows, headers]);\n    function getTablePaginationSupplementalText({ count }) {\n        return intl.formatMessage({ id: \"table_paginationSupplementalText\" }, { pagesCount: count });\n    }\n    function getTablePaginationStatusText({ start, end, count, }) {\n        return intl.formatMessage({ id: \"table_paginationStatus\" }, { start, end, count });\n    }\n    if (isValidTable) {\n        // TODO TABLE: When table md is streaming from an LLM use loading prop to render skeleton state.\n        // Because of issues with our layering variables from carbon we need to force the table to be either in white or g90\n        // theme. In the other themes the table background blends into the chat background causing the table to look like\n        // it's floating.\n        return (React.createElement(Theme, { theme: LIGHT_THEMES.includes(carbonTheme) ? \"white\" : \"g90\" },\n            React.createElement(\"div\", { className: \"WACTableContainer\", ref: tableContainerRef },\n                React.createElement(Suspense, { fallback: null },\n                    React.createElement(Table, { tableTitle: title, tableDescription: description, headers: headers, rows: rows, containerWidth: tableContainerWidth, chatHeight: chatHeight, filterPlaceholderText: languagePack.table_filterPlaceholder, previousPageText: languagePack.table_previousPage, nextPageText: languagePack.table_nextPage, itemsPerPageText: languagePack.table_itemsPerPage, getPaginationSupplementalText: getTablePaginationSupplementalText, getPaginationStatusText: getTablePaginationStatusText, locale: locale })))));\n    }\n    return (\n    // Use inlineError.tsx here if the table is not valid. In the future when we have a web component version of the\n    // inlineError component the table web component can render that instead of the React container doing it here.\n    React.createElement(InlineError, null));\n}\nconst TableContainerExport = React.memo(TableContainer);\n\nexport { TableContainerExport as default };\n","import ArrowRight from '@carbon/icons-react/es/ArrowRight.js';\nimport Restart from '@carbon/icons-react/es/Restart.js';\nimport { Tile, Button } from '@carbon/react';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport '../../../../../types/state/AppState.js';\nimport { TourStartReason, MainWindowCloseReason } from '../../../../../types/events/eventBusTypes.js';\nimport { ViewType } from '../../../../../types/instance/apiTypes.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * When a message is received that has info for a tour then a tour card is shown to allow the user to start the tour. Once\n * the tour is started the tour card then changes to have a resume and restart button instead of a start button.\n */\nfunction TourCard({ message, serviceManager }) {\n    const { tour_resumeButton, tour_restartButton, tour_startButton } = useLanguagePack();\n    const { activeTourID } = useSelector((state) => state.persistedToBrowserStorage.chatState.persistedTourState);\n    // If the id of the original message that generated this card matches the active tour ID then we should show a resume\n    // and restart button instead of a start button.\n    const isCurrentTour = message.fullMessageID === activeTourID;\n    // Use the provided title and description if there is one. If there isn't one fall back to the defaults.\n    // TODO TOUR: I18N: These default values are being kept around for tours in beta. When we switch to our GA solution of\n    // using a real tour card response type the defaults will either come from tooling or will need to be moved to our\n    // en.json file in Carbon AI chat and translated.\n    const tourTitle = message.item.user_defined?.card_title ||\n        \"Guided journey\";\n    const tourDescription = message.item.user_defined?.card_description ||\n        \"Follow along as the assistant guides you to where you want to be.\";\n    /**\n     * When resume is clicked switch to the tour view.\n     */\n    async function onResumeClick() {\n        // Try to open the tour.\n        await serviceManager.actions.changeView(ViewType.TOUR, {\n            mainWindowCloseReason: MainWindowCloseReason.TOUR_CARD_RESUMED_TOUR,\n        });\n    }\n    /**\n     * When restart is clicked switch to the tour view and then change to the first step in the tour.\n     */\n    async function onRestartClick() {\n        // Try to open the tour.\n        const newViewState = await serviceManager.actions.changeView(ViewType.TOUR, {\n            mainWindowCloseReason: MainWindowCloseReason.TOUR_CARD_RESTARTED_TOUR,\n        });\n        if (newViewState.tour) {\n            // If the tour is now visible then change to the first step in the tour.\n            serviceManager.actions.changeStepInTour({ newStepIndex: 0 });\n        }\n    }\n    return (React.createElement(Tile, { className: \"WACTourCard\" },\n        React.createElement(\"div\", { className: \"WACTourCard__Title\" }, tourTitle),\n        React.createElement(\"div\", { className: \"WACTourCard__Description\" }, tourDescription),\n        isCurrentTour && (React.createElement(\"div\", null,\n            React.createElement(Button, { className: \"WACTourCard__ResumeButton\", renderIcon: ArrowRight, onClick: onResumeClick }, tour_resumeButton),\n            React.createElement(Button, { className: \"WACTourCard__RestartButton\", kind: \"ghost\", renderIcon: Restart, onClick: onRestartClick }, tour_restartButton))),\n        !isCurrentTour && (React.createElement(Button, { className: \"WACTourCard__StartButton\", renderIcon: ArrowRight, onClick: () => serviceManager.actions.startTour(message, TourStartReason.START_TOUR_CLICKED, {\n                mainWindowCloseReason: MainWindowCloseReason.TOUR_CARD_STARTED_TOUR,\n            }) }, tour_startButton))));\n}\nconst TourCardExport = React.memo(TourCard);\n\nexport { TourCardExport as TourCard };\n","import React from 'react';\nimport { useCallbackOnChange } from '../../../hooks/useCallbackOnChange.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { InlineError } from '../error/InlineError.js';\nimport { RichText as RichTextExport } from './RichText.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This item renders some text that may contain rich content. This component also supports the display of text as it\n * is streaming in chunks (currently only TextItem chunks are supported).\n */\nfunction StreamingRichText(props) {\n    const { text, streamingState, removeHTML, isStreamingError, doAutoScroll } = props;\n    const languagePack = useLanguagePack();\n    // If the chunks change, kick off an auto-scroll.\n    useCallbackOnChange(streamingState?.chunks, doAutoScroll);\n    let textToUse;\n    if (streamingState && !streamingState.isDone) {\n        // If we're streaming, then concatenate all the chunks together.\n        textToUse = streamingState.chunks.map((chunk) => chunk.text).join(\"\");\n    }\n    else {\n        textToUse = text;\n    }\n    return (React.createElement(\"div\", { className: \"WACStreamingRichText\" },\n        React.createElement(RichTextExport, { text: textToUse, shouldRemoveHTMLBeforeMarkdownConversion: removeHTML }),\n        isStreamingError && (React.createElement(InlineError, { text: languagePack.conversationalSearch_streamingIncomplete }))));\n}\n\nexport { StreamingRichText };\n","import { __decorate } from 'tslib';\nimport { LitElement, unsafeCSS, css } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { uuid } from '../../../../shared/utils/lang/uuid.js';\nimport { CSS_CLASS_PREFIX } from '../../../settings.js';\nimport css_248z from './chainOfThoughtElement.scss.js';\nimport { createEnglishFormat } from '../../../../shared/utils/languages.js';\nimport '../../../../../types/instance/apiTypes.js';\nimport enLanguagePack from '../../../../languages/en.json.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst stepTitleFormatter = createEnglishFormat(\"chainOfThought_stepTitle\");\nclass ChainOfThoughtElement extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Indicates if the details panel for the chain of thought is open.\n         */\n        this.open = false;\n        /**\n         * Formatting for label of each step item.\n         */\n        this.formatStepLabelText = ({ stepNumber, stepTitle }) => stepTitleFormatter.format({\n            stepNumber,\n            stepTitle: stepTitle || \"\",\n        });\n        /**\n         * Text string used to label step input.\n         */\n        this.inputLabelText = enLanguagePack.chainOfThought_inputLabel;\n        /**\n         * Text string used to label step output.\n         */\n        this.outputLabelText = enLanguagePack.chainOfThought_outputLabel;\n        /**\n         * Text string used to label the tool.\n         */\n        this.toolLabelText = enLanguagePack.chainOfThought_toolLabel;\n        /**\n         * Text string used to label the button to open the chain of thought panel.\n         */\n        this.explainabilityText = enLanguagePack.chainOfThought_explainabilityLabel;\n        /**\n         * Text string used to label the succeeded status icon.\n         */\n        this.statusSucceededLabelText = enLanguagePack.chainOfThought_statusSucceededLabel;\n        /**\n         * Text string used to label the failed status icon.\n         */\n        this.statusFailedLabelText = enLanguagePack.chainOfThought_statusFailedLabel;\n        /**\n         * Text string used to label the processing status icon.\n         */\n        this.statusProcessingLabelText = enLanguagePack.chainOfThought_statusProcessingLabel;\n        /**\n         * ID we use for a11y.\n         */\n        this._chainOfThoughtPanelID = `${CSS_CLASS_PREFIX}-chain-of-thought-panel-id-${uuid()}`;\n    }\n    firstUpdated(_changedProperties) {\n        // Update the steps saying they are all closed.\n        this._steps = this.steps.map((item) => ({ ...item, open: false }));\n    }\n}\nChainOfThoughtElement.styles = css `\n    ${unsafeCSS(css_248z)}\n  `;\n__decorate([\n    property({ type: Boolean, attribute: \"open\", reflect: true })\n], ChainOfThoughtElement.prototype, \"open\", void 0);\n__decorate([\n    property({ type: Array, attribute: \"steps\", reflect: true })\n], ChainOfThoughtElement.prototype, \"steps\", void 0);\n__decorate([\n    property({ type: Function, attribute: false })\n], ChainOfThoughtElement.prototype, \"formatStepLabelText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"input-label-text\", reflect: true })\n], ChainOfThoughtElement.prototype, \"inputLabelText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"output-label-text\", reflect: true })\n], ChainOfThoughtElement.prototype, \"outputLabelText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"tool-label-text\", reflect: true })\n], ChainOfThoughtElement.prototype, \"toolLabelText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"explainability-text\", reflect: true })\n], ChainOfThoughtElement.prototype, \"explainabilityText\", void 0);\n__decorate([\n    property({ type: Function, attribute: false })\n], ChainOfThoughtElement.prototype, \"onToggle\", void 0);\n__decorate([\n    property({ type: Function, attribute: false })\n], ChainOfThoughtElement.prototype, \"onStepToggle\", void 0);\n__decorate([\n    property({\n        type: String,\n        attribute: \"status-succeeded-label-text\",\n        reflect: true,\n    })\n], ChainOfThoughtElement.prototype, \"statusSucceededLabelText\", void 0);\n__decorate([\n    property({\n        type: String,\n        attribute: \"status-failed-label-text\",\n        reflect: true,\n    })\n], ChainOfThoughtElement.prototype, \"statusFailedLabelText\", void 0);\n__decorate([\n    property({\n        type: String,\n        attribute: \"status-processing-label-text\",\n        reflect: true,\n    })\n], ChainOfThoughtElement.prototype, \"statusProcessingLabelText\", void 0);\n__decorate([\n    state()\n], ChainOfThoughtElement.prototype, \"_steps\", void 0);\n__decorate([\n    state()\n], ChainOfThoughtElement.prototype, \"_chainOfThoughtPanelID\", void 0);\n\nexport { ChainOfThoughtElement };\n","var css_248z = \":host{\\n  display:block;\\n  margin-block-start:1rem;\\n}\\n\\n:host([open]) .cds--aichat-chain-of-thought-content{\\n  display:block;\\n  overflow:visible;\\n  max-block-size:-moz-fit-content;\\n  max-block-size:fit-content;\\n  opacity:1;\\n}\\n:host([open]) .cds--aichat-chain-of-thought-button-chevron svg{\\n  transform:rotate(-90deg);\\n}\\n\\n.cds--aichat-chain-of-thought-button-chevron{\\n  display:flex;\\n  flex-basis:1.5rem;\\n}\\n@media screen and (prefers-reduced-motion: reduce){\\n  .cds--aichat-chain-of-thought-button-chevron svg{\\n    transform:rotate(-270deg);\\n    transition:none;\\n  }\\n}\\n.cds--aichat-chain-of-thought-button-chevron svg{\\n  transform:rotate(-270deg);\\n  transition:all 110ms cubic-bezier(0.2, 0, 0.38, 0.9);\\n}\\n\\n.cds--aichat-chain-of-thought-content{\\n  display:none;\\n  overflow:hidden;\\n  max-block-size:0;\\n  opacity:0;\\n  transition:all 110ms cubic-bezier(0, 0, 0.38, 0.9) allow-discrete;\\n}\\n\\n.cds--aichat-chain-of-thought-inner-content{\\n  border:1px solid var(--cds-border-subtle-01, #c6c6c6);\\n  background-color:var(--cds-layer-01, #f4f4f4);\\n  margin-block-start:0.5rem;\\n}\\n\\n.cds--aichat-chain-of-thought-item:not(:last-child){\\n  padding-block-end:0.75rem;\\n}\\n\\n.cds--aichat-chain-of-thought-item cds-aichat-markdown-text:not(:first-child){\\n  padding-block-start:0.5rem;\\n}\\n\\n.cds--aichat-chain-of-thought-item-label{\\n  font-size:var(--cds-heading-01-font-size, 0.875rem);\\n  font-weight:var(--cds-heading-01-font-weight, 600);\\n  line-height:var(--cds-heading-01-line-height, 1.42857);\\n  letter-spacing:var(--cds-heading-01-letter-spacing, 0.16px);\\n}\\n\\nbutton.cds--aichat-chain-of-thought-button{\\n  box-sizing:border-box;\\n  padding:0;\\n  border:0;\\n  margin:0;\\n  font-family:inherit;\\n  font-size:100%;\\n  vertical-align:baseline;\\n  display:inline-block;\\n  padding:0;\\n  border:0;\\n  -webkit-appearance:none;\\n     -moz-appearance:none;\\n          appearance:none;\\n  background:none;\\n  cursor:pointer;\\n  text-align:start;\\n  inline-size:100%;\\n  font-size:var(--cds-heading-01-font-size, 0.875rem);\\n  font-weight:var(--cds-heading-01-font-weight, 600);\\n  line-height:var(--cds-heading-01-line-height, 1.42857);\\n  letter-spacing:var(--cds-heading-01-letter-spacing, 0.16px);\\n  display:flex;\\n  align-items:center;\\n  color:var(--cds-text-primary, #161616);\\n}\\nbutton.cds--aichat-chain-of-thought-button *,\\nbutton.cds--aichat-chain-of-thought-button *::before,\\nbutton.cds--aichat-chain-of-thought-button *::after{\\n  box-sizing:inherit;\\n}\\nbutton.cds--aichat-chain-of-thought-button::-moz-focus-inner{\\n  border:0;\\n}\\n\\nbutton.cds--aichat-chain-of-thought-button:focus,\\nbutton.cds--aichat-chain-of-thought-button:focus-visible{\\n  outline:2px solid var(--cds-focus);\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-content{\\n  display:block;\\n  overflow:visible;\\n  background:var(--cds-layer-01, #f4f4f4);\\n  color:var(--cds-text-primary, #161616);\\n  max-block-size:-moz-fit-content;\\n  max-block-size:fit-content;\\n  opacity:1;\\n  transition:all 110ms cubic-bezier(0, 0, 0.38, 0.9) allow-discrete;\\n}\\n\\n.cds--aichat-chain-of-thought-item{\\n  padding-block:1rem;\\n  padding-inline:2rem 1rem;\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-content[hidden]{\\n  display:none;\\n  overflow:hidden;\\n  max-block-size:0;\\n  opacity:0;\\n  padding-block:0;\\n  padding-inline:0;\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-header-chevron{\\n  display:flex;\\n  flex:0 1 2rem;\\n  justify-content:center;\\n  color:var(--cds-text-primary, #161616);\\n}\\n@media screen and (prefers-reduced-motion: reduce){\\n  .cds--aichat-chain-of-thought-accordion-item-header-chevron svg{\\n    fill:var(--cds-text-primary, #161616);\\n    transform:rotate(-270deg);\\n    transition:none;\\n  }\\n}\\n.cds--aichat-chain-of-thought-accordion-item-header-chevron svg{\\n  fill:var(--cds-text-primary, #161616);\\n  transform:rotate(-270deg);\\n  transition:all 110ms cubic-bezier(0.2, 0, 0.38, 0.9);\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-header-chevron[data-open] svg{\\n  transform:rotate(-90deg);\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item button.cds--aichat-chain-of-thought-accordion-item-header{\\n  box-sizing:border-box;\\n  padding:0;\\n  border:0;\\n  margin:0;\\n  font-family:inherit;\\n  font-size:100%;\\n  vertical-align:baseline;\\n  display:inline-block;\\n  padding:0;\\n  border:0;\\n  -webkit-appearance:none;\\n     -moz-appearance:none;\\n          appearance:none;\\n  background:none;\\n  cursor:pointer;\\n  text-align:start;\\n  inline-size:100%;\\n  font-size:var(--cds-body-01-font-size, 0.875rem);\\n  font-weight:var(--cds-body-01-font-weight, 400);\\n  line-height:var(--cds-body-01-line-height, 1.42857);\\n  letter-spacing:var(--cds-body-01-letter-spacing, 0.16px);\\n  display:flex;\\n  align-items:center;\\n  padding:0.5rem 0;\\n  background:var(--cds-layer-accent-02, #e0e0e0);\\n  block-size:2rem;\\n}\\n.cds--aichat-chain-of-thought-accordion-item button.cds--aichat-chain-of-thought-accordion-item-header *,\\n.cds--aichat-chain-of-thought-accordion-item button.cds--aichat-chain-of-thought-accordion-item-header *::before,\\n.cds--aichat-chain-of-thought-accordion-item button.cds--aichat-chain-of-thought-accordion-item-header *::after{\\n  box-sizing:inherit;\\n}\\n.cds--aichat-chain-of-thought-accordion-item button.cds--aichat-chain-of-thought-accordion-item-header::-moz-focus-inner{\\n  border:0;\\n}\\n.cds--aichat-chain-of-thought-accordion-item button.cds--aichat-chain-of-thought-accordion-item-header:focus,\\n.cds--aichat-chain-of-thought-accordion-item button.cds--aichat-chain-of-thought-accordion-item-header:focus-visible{\\n  position:relative;\\n  z-index:2;\\n  box-shadow:0 -1px 0 0 var(--cds-focus, #0f62fe), inset 0 1px 0 0 var(--cds-focus, #0f62fe), inset 2px 0 0 0 var(--cds-focus, #0f62fe), 0 1px 0 0 var(--cds-focus, #0f62fe), inset 0 -1px 0 0 var(--cds-focus, #0f62fe), inset -2px 0 0 0 var(--cds-focus, #0f62fe);\\n  outline:none;\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item:nth-child(odd) button.cds--aichat-chain-of-thought-accordion-item-header{\\n  background:var(--cds-layer-02, #ffffff);\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-header-title{\\n  overflow:hidden;\\n  flex:1 1;\\n  color:var(--cds-text-primary, #161616);\\n  margin-inline-end:0.5rem;\\n  text-overflow:ellipsis;\\n  white-space:nowrap;\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-header-status{\\n  display:flex;\\n  flex:0 0 1.5rem;\\n  align-items:center;\\n  justify-content:center;\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-header-status--failure{\\n  display:flex;\\n  align-items:center;\\n  justify-content:center;\\n  margin-inline-end:0.5rem;\\n}\\n.cds--aichat-chain-of-thought-accordion-item-header-status--failure svg{\\n  fill:var(--cds-support-error, #da1e28);\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-header-status--success{\\n  display:flex;\\n  align-items:center;\\n  justify-content:center;\\n  margin-inline-end:0.5rem;\\n}\\n.cds--aichat-chain-of-thought-accordion-item-header-status--success svg{\\n  fill:var(--cds-support-success, #24a148);\\n}\";\n\nexport { css_248z as default };\n","import '../../markdownText/cds-aichat-markdown-text.js';\nimport '@carbon/web-components/es-custom/components/inline-loading/index.js';\nimport { toString } from '@carbon/icon-helpers';\nimport CheckmarkFilled16 from '@carbon/icons/es/checkmark--filled/16.js';\nimport ChevronRight16 from '@carbon/icons/es/chevron--right/16.js';\nimport ErrorFilled16 from '@carbon/icons/es/error--filled/16.js';\nimport { html } from 'lit';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\nimport { parseUnknownDataToMarkdown } from '../../../../shared/utils/lang/stringUtils.js';\nimport { CSS_CLASS_PREFIX } from '../../../settings.js';\nimport { ChainOfThoughtStepStatus } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst CSS_CLASS_ITEM_PREFIX = `${CSS_CLASS_PREFIX}-chain-of-thought-item`;\nconst CSS_CLASS_STATUS_PREFIX = `${CSS_CLASS_PREFIX}-chain-of-thought-accordion-item-header-status`;\nconst ChevronRight16svg = toString(ChevronRight16);\nconst CheckmarkFilled16svg = toString(CheckmarkFilled16);\nconst ErrorFilled16svg = toString(ErrorFilled16);\n/**\n * Returns the correct icon given the status of the step. If there is no status, we assume it is successful.\n */\nfunction stepStatus(status, statusSucceededLabelText, statusFailedLabelText, statusProcessingLabelText) {\n    switch (status) {\n        case ChainOfThoughtStepStatus.PROCESSING:\n            return html `<cds-custom-inline-loading\n        status=\"active\"\n        aria-label=\"${statusProcessingLabelText}\"\n      ></cds-custom-inline-loading>`;\n        case ChainOfThoughtStepStatus.FAILURE:\n            return html `<span\n        class=\"${CSS_CLASS_STATUS_PREFIX}--${ChainOfThoughtStepStatus.FAILURE}\"\n        aria-label=\"${statusFailedLabelText}\"\n        >${unsafeSVG(ErrorFilled16svg)}</span\n      >`;\n        default:\n            return html `<span\n        class=\"${CSS_CLASS_STATUS_PREFIX}--${ChainOfThoughtStepStatus.SUCCESS}\"\n        aria-label=\"${statusSucceededLabelText}\"\n        >${unsafeSVG(CheckmarkFilled16svg)}</span\n      >`;\n    }\n}\n/**\n * Takes the input/output data that is unknown and then renders it in the correct format or returns nothing.\n */\nfunction renderToolData(data, label, classPostfix) {\n    // Once we have a Code component instead of just a markdown component, we will need to loop back here.\n    const content = parseUnknownDataToMarkdown(data);\n    if (content) {\n        return renderToolDataAsMarkdown(content, label, classPostfix);\n    }\n    return html ``;\n}\nfunction renderToolDataAsMarkdown(content, label, classPostfix) {\n    return html `<div\n    class=\"${CSS_CLASS_ITEM_PREFIX} ${CSS_CLASS_ITEM_PREFIX}-${classPostfix}\"\n  >\n    <div class=\"${CSS_CLASS_ITEM_PREFIX}-label\">${label}</div>\n    <cds-aichat-markdown-text\n      sanitize-html\n      markdown=${content}\n    ></cds-aichat-markdown-text>\n  </div>`;\n}\nfunction accordionItemContent(customElementClass, item) {\n    const { inputLabelText, outputLabelText, toolLabelText } = customElementClass;\n    if (item.open) {\n        return html ` ${item.description\n            ? html `<div\n          class=\"${CSS_CLASS_ITEM_PREFIX} ${CSS_CLASS_ITEM_PREFIX}-description\"\n        >\n          <cds-aichat-markdown-text\n            sanitize-html\n            markdown=${item.description}\n          ></cds-aichat-markdown-text>\n        </div>`\n            : null}\n    ${item.tool_name\n            ? html `<div\n          class=\"${CSS_CLASS_ITEM_PREFIX} ${CSS_CLASS_ITEM_PREFIX}-toolName\"\n        >\n          <div class=\"${CSS_CLASS_ITEM_PREFIX}-label\">${toolLabelText}</div>\n          ${item.tool_name}\n        </div>`\n            : null}\n    ${renderToolData(item.request?.args, inputLabelText, \"input\")}\n    ${renderToolData(item.response?.content, outputLabelText, \"output\")}`;\n    }\n    return html ``;\n}\nfunction accordionContent(customElementClass) {\n    const { _steps, open, _chainOfThoughtPanelID, onStepToggle, formatStepLabelText, statusSucceededLabelText, statusFailedLabelText, statusProcessingLabelText, } = customElementClass;\n    if (open) {\n        return html `${_steps.map((item, index) => {\n            const stepNumber = index + 1;\n            const content_id = `${_chainOfThoughtPanelID}-step-${stepNumber}-content`;\n            return html `<div\n        class=\"${CSS_CLASS_PREFIX}-chain-of-thought-accordion-item\"\n      >\n        <button\n          class=\"${CSS_CLASS_PREFIX}-chain-of-thought-accordion-item-header\"\n          @click=${() => {\n                item.open = !item.open;\n                customElementClass.requestUpdate();\n                // This was an unfortunate discovery after refactoring.\n                // I need to move the accordionItemContent back out into its own component for two reasons:\n                // 1. The next line and not being able to create a ref here.\n                // 2. We really should allow someone to pass in a custom template for this.\n                const element = customElementClass.shadowRoot.querySelector(`#${content_id}`);\n                onStepToggle?.(item.open, element);\n            }}\n          aria-expanded=${item.open}\n          aria-controls=${content_id}\n        >\n          <span\n            class=\"${CSS_CLASS_PREFIX}-chain-of-thought-accordion-item-header-chevron\"\n            ?data-open=${item.open}\n            >${unsafeSVG(ChevronRight16svg)}</span\n          >\n          <span\n            class=\"${CSS_CLASS_PREFIX}-chain-of-thought-accordion-item-header-title\"\n            >${formatStepLabelText({ stepNumber, stepTitle: item.title })}</span\n          >\n          <span class=\"${CSS_CLASS_STATUS_PREFIX}\"\n            >${stepStatus(item.status, statusSucceededLabelText, statusFailedLabelText, statusProcessingLabelText)}</span\n          >\n        </button>\n        <div\n          class=\"${CSS_CLASS_PREFIX}-chain-of-thought-accordion-item-content\"\n          id=${content_id}\n          ?hidden=${!item.open}\n        >\n          ${accordionItemContent(customElementClass, item)}\n        </div>\n      </div>`;\n        })}`;\n    }\n    return html ``;\n}\nfunction chainOfThoughtElementTemplate(customElementClass) {\n    const { _chainOfThoughtPanelID, explainabilityText, open } = customElementClass;\n    /**\n     * Function called when someone clicks on the button to toggle if chain of thought is open or closed.\n     */\n    function toggle() {\n        customElementClass.open = !customElementClass.open;\n        customElementClass.onToggle?.(customElementClass.open, customElementClass);\n    }\n    return html `<div class=\"${CSS_CLASS_PREFIX}-chain-of-thought\">\n    <button\n      class=\"${CSS_CLASS_PREFIX}-chain-of-thought-button\"\n      @click=${toggle}\n      aria-expanded=${open}\n      aria-controls=${_chainOfThoughtPanelID}\n    >\n      <span class=\"${CSS_CLASS_PREFIX}-chain-of-thought-button-chevron\"\n        >${unsafeSVG(ChevronRight16svg)}</span\n      >\n      ${explainabilityText}\n    </button>\n    <div\n      id=${_chainOfThoughtPanelID}\n      class=\"${CSS_CLASS_PREFIX}-chain-of-thought-content\"\n      ?hidden=${!open}\n    >\n      <div class=\"${CSS_CLASS_PREFIX}-chain-of-thought-inner-content\">\n        ${accordionContent(customElementClass)}\n      </div>\n    </div>\n  </div>`;\n}\n\nexport { chainOfThoughtElementTemplate };\n","import { __decorate } from 'tslib';\nimport { carbonElement } from '../../decorators/customElement.js';\nimport { ChainOfThoughtElement } from './src/ChainOfThoughtElement.js';\nimport { chainOfThoughtElementTemplate } from './src/chainOfThoughtElement.template.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst CHAIN_OF_THOUGHT_COMPONENT_TAG_NAME = `cds-aichat-chain-of-thought`;\n/**\n * This class is used to display two feedback buttons (thumbs up and thumbs down).\n */\nlet CDSChatChainOfThoughtElement = class CDSChatChainOfThoughtElement extends ChainOfThoughtElement {\n    /**\n     * Renders the template while passing in class functionality.\n     */\n    render() {\n        return chainOfThoughtElementTemplate(this);\n    }\n};\nCDSChatChainOfThoughtElement = __decorate([\n    carbonElement(CHAIN_OF_THOUGHT_COMPONENT_TAG_NAME)\n], CDSChatChainOfThoughtElement);\n\nexport { CHAIN_OF_THOUGHT_COMPONENT_TAG_NAME, CDSChatChainOfThoughtElement as default };\n","import { createComponent } from '@lit/react';\nimport React from 'react';\nimport CDSChatChainOfThoughtElement, { CHAIN_OF_THOUGHT_COMPONENT_TAG_NAME } from '../../../web-components/components/chainOfThought/cds-aichat-chain-of-thought.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst ChainOfThought = createComponent({\n    tagName: CHAIN_OF_THOUGHT_COMPONENT_TAG_NAME,\n    elementClass: CDSChatChainOfThoughtElement,\n    react: React,\n});\n\nexport { ChainOfThought };\n","import Attachment from '@carbon/icons-react/es/Attachment.js';\nimport React, { useRef, useMemo, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { FeedbackInteractionType, BusEventType } from '../../../types/events/eventBusTypes.js';\nimport { FeedbackButtonsComponent } from '../../react/components/feedback/FeedbackButtonsComponent.js';\nimport { FeedbackComponent } from '../../react/components/feedback/FeedbackComponent.js';\nimport { CSS_CLASS_PREFIX } from '../../web-components/settings.js';\nimport { ResponseStopped } from '../components/ResponseStopped.js';\nimport { ConnectToAgent } from '../components/responseTypes/agent/ConnectToAgent.js';\nimport { AudioComponent as AudioComponentExport } from '../components/responseTypes/audio/AudioComponent.js';\nimport { ButtonItemComponent } from '../components/responseTypes/buttonItem/ButtonItemComponent.js';\nimport { CardItemComponent as CardComponentExport } from '../components/responseTypes/card/CardItemComponent.js';\nimport { CarouselItemComponent } from '../components/responseTypes/carousel/CarouselItemComponent.js';\nimport { ConversationalSearch } from '../components/responseTypes/conversationalSearch/ConversationalSearch.js';\nimport UserDefinedResponse from '../components/responseTypes/custom/UserDefinedResponse.js';\nimport { DatePickerComponent as DatePickerComponentExport } from '../components/responseTypes/datePicker/DatePickerComponent.js';\nimport { InlineError } from '../components/responseTypes/error/InlineError.js';\nimport { GridItemComponent as GridItemComponentExport } from '../components/responseTypes/grid/GridItemComponent.js';\nimport { IFrameMessage } from '../components/responseTypes/iframe/IFrameMessage.js';\nimport { Image as ImageExport } from '../components/responseTypes/image/Image.js';\nimport { OptionComponent } from '../components/responseTypes/options/OptionComponent.js';\nimport TableContainerExport from '../components/responseTypes/table/TableContainer.js';\nimport { TourCard as TourCardExport } from '../components/responseTypes/tour/TourCard.js';\nimport { StreamingRichText } from '../components/responseTypes/util/StreamingRichText.js';\nimport { VideoComponent as VideoComponentExport } from '../components/responseTypes/video/VideoComponent.js';\nimport { useLanguagePack } from '../hooks/useLanguagePack.js';\nimport { useUUID } from '../hooks/useUUID.js';\nimport actions from '../store/actions.js';\nimport { selectAgentDisplayState } from '../store/selectors.js';\nimport { isRequest, isResponse, isTextItem, renderAsTour, renderAsUserDefinedMessage, getMediaDimensions } from '../utils/messageUtils.js';\nimport { ChainOfThought } from '../../react/components/chainOfThought/ChainOfThought.js';\nimport { InternalMessageRequestType, MessageResponseTypes, IFrameItemDisplayOption } from '../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/* eslint-disable react/no-array-index-key */\n/**\n * This component renders a specific message component based on a message's type.\n */\nfunction MessageTypeComponent(props) {\n    const { allowNewFeedback, hideFeedback, serviceManager, originalMessage, message, } = props;\n    const intl = useIntl();\n    const languagePack = useLanguagePack();\n    const feedbackDetailsRef = useRef();\n    const agentDisplayState = useSelector(selectAgentDisplayState, shallowEqual);\n    const agentState = useSelector((state) => state.agentState);\n    const persistedAgentState = useSelector((state) => state.persistedToBrowserStorage.chatState.agentState);\n    const feedbackID = message.item.message_options?.feedback?.id;\n    const feedbackPanelID = useUUID();\n    const feedbackHistory = originalMessage.history?.feedback?.[feedbackID];\n    const feedbackInitialValues = useMemo(() => {\n        if (!feedbackHistory) {\n            return null;\n        }\n        return {\n            text: feedbackHistory.text,\n            selectedCategories: feedbackHistory.categories,\n        };\n    }, [feedbackHistory]);\n    // Indicates if the one of the feedback details are open.\n    const [isFeedbackOpen, setIsFeedbackOpen] = useState(false);\n    // Indicates if the negative or positive feedback buttons are marked as selected.\n    const [isPositiveFeedbackSelected, setIsPositiveFeedbackSelected] = useState(feedbackHistory && feedbackHistory.is_positive);\n    const [isNegativeFeedbackSelected, setIsNegativeFeedbackSelected] = useState(feedbackHistory && !feedbackHistory.is_positive);\n    // Indicates if details have been submitted.\n    const [isFeedbackSubmitted, setIsFeedbackSubmitted] = useState(Boolean(feedbackHistory));\n    /**\n     * Returns the appropriate component to render the given message.\n     */\n    function renderSpecificMessage(localMessageItem, message) {\n        if (isRequest(message)) {\n            return renderRequest(localMessageItem, message);\n        }\n        if (isResponse(message)) {\n            const response = renderResponse(localMessageItem, message);\n            const isResponseStopped = localMessageItem.item.streaming_metadata?.stream_stopped;\n            return (React.createElement(React.Fragment, null,\n                response,\n                isResponseStopped && React.createElement(ResponseStopped, null),\n                renderChainOfThought(localMessageItem),\n                renderFeedback(localMessageItem, message)));\n        }\n        return false;\n    }\n    /**\n     * Returns the appropriate component to render the given message.\n     */\n    function renderRequest(localMessageItem, originalMessage) {\n        const messageItem = localMessageItem.item;\n        if (isTextItem(messageItem)) {\n            const text = originalMessage.history?.label || messageItem.text;\n            // If this was user entered text, show the user's original text before showing the text that was actually sent to\n            // the assistant.\n            const userText = localMessageItem.ui_state.originalUserText || text;\n            return (React.createElement(\"div\", { className: \"WAC__sent--text\" },\n                originalMessage.input.message_type ===\n                    InternalMessageRequestType.FILE && (React.createElement(Attachment, { className: \"WAC__sent-fileIcon\", \"aria-label\": props.languagePack.fileSharing_fileIcon })),\n                React.createElement(\"span\", { role: \"heading\", \"aria-level\": 2 }, userText)));\n        }\n        return null;\n    }\n    /**\n     * Returns the appropriate component to render the given message.\n     */\n    function renderResponse(localMessageItem, message) {\n        if (renderAsTour(localMessageItem.item)) {\n            // Render an invalid component who's user_defined_type is specifically for the tour beta feature, as a tour.\n            return renderTour(localMessageItem);\n        }\n        if (renderAsUserDefinedMessage(localMessageItem.item)) {\n            // Render all invalid components as a user defined response\n            return renderUserDefinedResponse(localMessageItem, message);\n        }\n        const responseType = localMessageItem.item.response_type;\n        const withHumanAgent = Boolean(localMessageItem.item.agent_message_type);\n        switch (responseType) {\n            case MessageResponseTypes.TEXT:\n                return renderText(localMessageItem, message, withHumanAgent);\n            case MessageResponseTypes.IMAGE:\n                return renderImage(localMessageItem);\n            case MessageResponseTypes.OPTION:\n                return renderOption(localMessageItem, message);\n            case MessageResponseTypes.CONNECT_TO_AGENT:\n                return renderConnectToAgent(localMessageItem, message);\n            case MessageResponseTypes.INLINE_ERROR:\n                return renderInlineError(localMessageItem);\n            case MessageResponseTypes.IFRAME:\n                return renderIFrameMessage(localMessageItem);\n            case MessageResponseTypes.VIDEO:\n                return renderVideoMessage(localMessageItem);\n            case MessageResponseTypes.AUDIO:\n                return renderAudioMessage(localMessageItem);\n            case MessageResponseTypes.DATE:\n                return renderDateMessage(localMessageItem);\n            case MessageResponseTypes.CONVERSATIONAL_SEARCH:\n                return renderConversationalSearchMessage(localMessageItem, message);\n            case MessageResponseTypes.TABLE:\n                return renderTable(localMessageItem);\n            case MessageResponseTypes.CARD:\n                return renderCard(localMessageItem, message);\n            case MessageResponseTypes.CAROUSEL:\n                return renderCarouselMessage(localMessageItem, message);\n            case MessageResponseTypes.BUTTON:\n                return renderButtonItem(localMessageItem, message);\n            case MessageResponseTypes.GRID:\n                return renderGrid(localMessageItem, message);\n            default:\n                return renderUserDefinedResponse(localMessageItem, message);\n        }\n    }\n    function renderText(message, originalMessage, removeHTML) {\n        if (props.isNestedMessageItem) {\n            return renderRichText(message, removeHTML, originalMessage);\n        }\n        // For text provided by the assistant, pass it through some HTML formatting before displaying it.\n        return (React.createElement(\"div\", { className: \"WAC__received--textContent\" }, renderRichText(message, removeHTML, originalMessage)));\n    }\n    function renderRichText(localMessageItem, removeHTML, originalMessage) {\n        return (React.createElement(StreamingRichText, { text: localMessageItem.item.text, streamingState: localMessageItem.ui_state.streamingState, isStreamingError: originalMessage?.history?.is_streaming_error, removeHTML: removeHTML, doAutoScroll: props.doAutoScroll }));\n    }\n    function renderOption(message, originalMessage) {\n        const { languagePack, requestInputFocus, serviceManager, disableUserInputs, isMessageForInput, } = props;\n        const withHumanAgent = Boolean(message.item.agent_message_type);\n        return (React.createElement(OptionComponent, { localMessage: message, originalMessage: originalMessage, languagePack: languagePack, disableUserInputs: disableUserInputs || !isMessageForInput, requestInputFocus: requestInputFocus, serviceManager: serviceManager, shouldRemoveHTMLBeforeMarkdownConversion: withHumanAgent }));\n    }\n    function renderImage(message) {\n        const { languagePack, serviceManager } = props;\n        const { useAITheme } = serviceManager.store.getState().theme;\n        return (React.createElement(ImageExport, { imageError: languagePack.errors_imageSource, source: message.item.source, title: message.item.title, description: message.item.description, altText: message.item.alt_text, needsAnnouncement: message.ui_state.needsAnnouncement, useAITheme: useAITheme }));\n    }\n    function renderInlineError(message) {\n        return React.createElement(InlineError, { text: message.item.text });\n    }\n    function renderIFrameMessage(message) {\n        const { doAutoScroll, isNestedMessageItem } = props;\n        const display = isNestedMessageItem\n            ? IFrameItemDisplayOption.INLINE\n            : undefined;\n        return (React.createElement(IFrameMessage, { localMessage: message, doAutoScroll: doAutoScroll, displayOverride: display }));\n    }\n    function renderVideoMessage(message) {\n        const { doAutoScroll } = props;\n        const { item } = message;\n        const { source, title, description, alt_text } = item;\n        return (React.createElement(VideoComponentExport, { source: source, title: title, description: description, baseHeight: getMediaDimensions(item)?.base_height, ariaLabel: alt_text, doAutoScroll: doAutoScroll, needsAnnouncement: message.ui_state.needsAnnouncement }));\n    }\n    function renderAudioMessage(message) {\n        const { doAutoScroll } = props;\n        const { source, title, description, alt_text } = message.item;\n        return (React.createElement(AudioComponentExport, { source: source, title: title, description: description, ariaLabel: alt_text, doAutoScroll: doAutoScroll, needsAnnouncement: message.ui_state.needsAnnouncement }));\n    }\n    function renderDateMessage(message) {\n        return (React.createElement(DatePickerComponentExport, { localMessage: message, disabled: !props.isMessageForInput, scrollElementIntoView: props.scrollElementIntoView }));\n    }\n    function renderUserDefinedResponse(message, originalMessage) {\n        const { serviceManager } = props;\n        return (React.createElement(UserDefinedResponse, { streamingState: message.ui_state.streamingState, isStreamingError: originalMessage?.history?.is_streaming_error, doAutoScroll: props.doAutoScroll, localMessageID: message.ui_state.id, serviceManager: serviceManager }));\n    }\n    function renderTour(message) {\n        const { serviceManager } = props;\n        return React.createElement(TourCardExport, { message: message, serviceManager: serviceManager });\n    }\n    function renderConnectToAgent(message, originalMessage) {\n        const { languagePack, config, serviceManager, disableUserInputs, isMessageForInput, } = props;\n        return (React.createElement(ConnectToAgent, { localMessage: message, originalMessage: originalMessage, languagePack: languagePack, config: config, serviceManager: serviceManager, agentState: agentState, agentDisplayState: agentDisplayState, persistedAgentState: persistedAgentState, disableUserInputs: disableUserInputs || !isMessageForInput, requestFocus: props.requestInputFocus }));\n    }\n    function renderCard(message, originalMessage) {\n        const { isMessageForInput, requestInputFocus } = props;\n        return (React.createElement(CardComponentExport, { localMessageItem: message, fullMessage: originalMessage, isMessageForInput: isMessageForInput, requestFocus: requestInputFocus }));\n    }\n    function renderConversationalSearchMessage(localMessageItem, fullMessage) {\n        const { scrollElementIntoView, doAutoScroll } = props;\n        return (React.createElement(ConversationalSearch, { localMessageItem: localMessageItem, scrollElementIntoView: scrollElementIntoView, isStreamingError: fullMessage.history?.is_streaming_error, doAutoScroll: doAutoScroll }));\n    }\n    function renderButtonItem(message, originalMessage) {\n        const { isMessageForInput, requestInputFocus } = props;\n        return (React.createElement(ButtonItemComponent, { localMessageItem: message, fullMessage: originalMessage, isMessageForInput: isMessageForInput, requestFocus: requestInputFocus }));\n    }\n    function renderCarouselMessage(message, originalMessage) {\n        const { isMessageForInput, requestInputFocus } = props;\n        return (React.createElement(CarouselItemComponent, { localMessageItem: message, fullMessage: originalMessage, isMessageForInput: isMessageForInput, requestFocus: requestInputFocus }));\n    }\n    function renderGrid(message, originalMessage) {\n        return (React.createElement(GridItemComponentExport, { localMessageItem: message, originalMessage: originalMessage }));\n    }\n    function renderTable(message) {\n        return React.createElement(TableContainerExport, { tableItem: message.item });\n    }\n    function scrollChainOfThought(open, element) {\n        if (open) {\n            setTimeout(() => {\n                props.scrollElementIntoView(element, 64, 64);\n            });\n        }\n    }\n    function formatStepLabelText({ stepNumber, stepTitle, }) {\n        return intl.formatMessage({ id: \"chainOfThought_stepTitle\" }, { stepNumber, stepTitle });\n    }\n    /**\n     * Renders chain of thought component for the given message item if appropriate.\n     */\n    function renderChainOfThought(localMessageItem) {\n        const chainOfThought = localMessageItem.item.message_options?.chain_of_thought;\n        if (!chainOfThought || props.isNestedMessageItem) {\n            return false;\n        }\n        return (React.createElement(ChainOfThought, { steps: chainOfThought, onToggle: scrollChainOfThought, onStepToggle: scrollChainOfThought, formatStepLabelText: formatStepLabelText, explainabilityText: languagePack.chainOfThought_explainabilityLabel, inputLabelText: languagePack.chainOfThought_inputLabel, outputLabelText: languagePack.chainOfThought_outputLabel, toolLabelText: languagePack.chainOfThought_toolLabel }));\n    }\n    /**\n     * Renders the feedback options for the given message item if appropriate.\n     */\n    function renderFeedback(localMessageItem, message) {\n        const feedbackOptions = localMessageItem.item.message_options?.feedback || {};\n        const { id: feedbackID, is_on, show_positive_details = true, show_negative_details = true, show_text_area = true, show_prompt = true, title, prompt, categories, placeholder, disclaimer, } = feedbackOptions;\n        if (props.isNestedMessageItem ||\n            hideFeedback ||\n            (!allowNewFeedback && !feedbackHistory) ||\n            !is_on) {\n            return false;\n        }\n        /**\n         * Updates the message history with the feedback data provided.\n         */\n        function updateHistory(data) {\n            if (feedbackID) {\n                const history = {\n                    feedback: {\n                        [feedbackID]: data,\n                    },\n                };\n                serviceManager.store.dispatch(actions.mergeMessageHistory(localMessageItem.fullMessageID, history));\n            }\n        }\n        /**\n         * Handles when one of the feedback buttons is clicked. We also treat clicking the cancel button the same way as\n         * clicking the feedback button.\n         */\n        function onFeedbackClicked(isPositive) {\n            const toggleToSelected = isPositive\n                ? !isPositiveFeedbackSelected\n                : !isNegativeFeedbackSelected;\n            const openDetails = (isPositive ? show_positive_details : show_negative_details) &&\n                toggleToSelected;\n            if (toggleToSelected && !openDetails) {\n                // If the button has been toggled to selected but we're not showing details, that means the option is considered\n                // immediately submitted.\n                updateHistory({ is_positive: isPositive });\n                setIsFeedbackSubmitted(true);\n                serviceManager.fire({\n                    type: BusEventType.FEEDBACK,\n                    messageItem: localMessageItem.item,\n                    message,\n                    interactionType: FeedbackInteractionType.SUBMITTED,\n                    isPositive,\n                });\n            }\n            else {\n                setIsFeedbackOpen(openDetails);\n                if (openDetails) {\n                    setTimeout(() => {\n                        props.scrollElementIntoView(feedbackDetailsRef.current, 48, 56);\n                    });\n                }\n                serviceManager.fire({\n                    type: BusEventType.FEEDBACK,\n                    messageItem: localMessageItem.item,\n                    message,\n                    interactionType: openDetails\n                        ? FeedbackInteractionType.DETAILS_OPENED\n                        : FeedbackInteractionType.DETAILS_CLOSED,\n                    isPositive,\n                });\n            }\n            setIsPositiveFeedbackSelected(isPositive ? toggleToSelected : false);\n            setIsNegativeFeedbackSelected(isPositive ? false : toggleToSelected);\n        }\n        /**\n         * Handles when the feedback submit button is clicked.\n         */\n        function onSubmit(isPositive, details) {\n            setIsFeedbackSubmitted(true);\n            setIsFeedbackOpen(false);\n            const event = {\n                type: BusEventType.FEEDBACK,\n                messageItem: localMessageItem.item,\n                message,\n                interactionType: FeedbackInteractionType.SUBMITTED,\n                isPositive,\n                text: details.text,\n                categories: details.selectedCategories,\n            };\n            serviceManager.fire(event);\n            // Submit this update to be recorded in history.\n            updateHistory({\n                is_positive: event.isPositive,\n                text: event.text,\n                categories: event.categories,\n            });\n        }\n        /**\n         * Render the feedback popup for either positive or negative feedback.\n         */\n        function renderFeedbackPopup(isPositive) {\n            // Only one popup can be open and which one is opened depends on which feedback is selected.\n            const isOpen = isFeedbackOpen &&\n                (isPositive ? isPositiveFeedbackSelected : isNegativeFeedbackSelected);\n            return (React.createElement(FeedbackComponent, { class: `${CSS_CLASS_PREFIX}-feedbackDetails-${isPositive ? \"positive\" : \"negative\"}`, id: `${feedbackPanelID}-feedback-${isPositive ? \"positive\" : \"negative\"}`, isOpen: isOpen, isReadonly: isFeedbackSubmitted, onClose: () => onFeedbackClicked(isPositive), onSubmit: (details) => onSubmit(isPositive, details), initialValues: feedbackHistory && feedbackHistory?.is_positive === isPositive\n                    ? feedbackInitialValues\n                    : null, showTextArea: show_text_area, showPrompt: show_prompt, title: title || languagePack.feedback_defaultTitle, prompt: prompt || languagePack.feedback_defaultPrompt, categories: categories, placeholder: placeholder || languagePack.feedback_defaultPlaceholder, disclaimer: disclaimer, submitLabel: languagePack.feedback_submitLabel, cancelLabel: languagePack.feedback_cancelLabel }));\n        }\n        return (React.createElement(\"div\", { className: \"WAC__received--feedback\" },\n            React.createElement(FeedbackButtonsComponent, { isPositiveOpen: isFeedbackOpen && isPositiveFeedbackSelected, isNegativeOpen: isFeedbackOpen && isNegativeFeedbackSelected, isPositiveSelected: isPositiveFeedbackSelected, isNegativeSelected: isNegativeFeedbackSelected, hasPositiveDetails: show_positive_details, hasNegativeDetails: show_negative_details, isPositiveDisabled: isNegativeFeedbackSelected || isFeedbackSubmitted, isNegativeDisabled: isPositiveFeedbackSelected || isFeedbackSubmitted, positiveLabel: languagePack.feedback_positiveLabel, negativeLabel: languagePack.feedback_negativeLabel, panelID: feedbackPanelID, onClick: onFeedbackClicked }),\n            React.createElement(\"div\", { ref: feedbackDetailsRef },\n                renderFeedbackPopup(true),\n                renderFeedbackPopup(false))));\n    }\n    return renderSpecificMessage(props.message, props.originalMessage);\n}\n\nexport { MessageTypeComponent };\n","import { AISkeletonPlaceholder, SkeletonPlaceholder as SkeletonPlaceholder$1, AISkeletonText, SkeletonText as SkeletonText$1 } from '@carbon/react';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction SkeletonText(props) {\n    const useAITheme = useSelector((state) => state.theme.useAITheme);\n    return useAITheme ? (React.createElement(AISkeletonText, { ...props })) : (React.createElement(SkeletonText$1, { ...props }));\n}\nfunction SkeletonPlaceholder(props) {\n    const useAITheme = useSelector((state) => state.theme.useAITheme);\n    return useAITheme ? (React.createElement(AISkeletonPlaceholder, { ...props })) : (React.createElement(SkeletonPlaceholder$1, { ...props }));\n}\n\nexport { SkeletonPlaceholder, SkeletonText };\n","import { useRef } from 'react';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nlet nextNumber = 1;\n/**\n * A hook that returns a counter that increases by one for each component it is used in.\n */\nfunction useCounter() {\n    const counterRef = useRef();\n    if (counterRef.current === undefined) {\n        counterRef.current = nextNumber++;\n    }\n    return counterRef.current;\n}\n\nexport { useCounter };\n","import React from 'react';\nimport { useShouldSanitizeHTML } from '../../hooks/useShouldSanitizeHTML.js';\nimport { sanitizeHTML } from '../../utils/htmlUtils.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component will render the given HTML using dangerouslySetInnerHTML, but it will sanitize the content first.\n *\n * This was added as an emergency fix to deal with the fact that the Carbon AI chat is susceptible to script injection\n * attacks from a tooling author. For the Carbon AI chat this is normally not a problem as we can trust a company's\n * employees to not attack themselves. However, in the case of the preview link which is hosted on ibm.com and\n * requires no authentication to access, all of ibm.com is vulnerable. So we need to avoid being dangerous for ibm.com.\n */\nfunction MaybeDangerouslySetInnerHTML({ html, overrideSanitize, className, id, asSpan, }) {\n    let doSanitize = useShouldSanitizeHTML();\n    if (overrideSanitize !== undefined) {\n        doSanitize = overrideSanitize;\n    }\n    if (doSanitize) {\n        html = sanitizeHTML(html);\n    }\n    if (asSpan) {\n        // eslint-disable-next-line react/no-danger\n        return (React.createElement(\"span\", { id: id, className: className, dangerouslySetInnerHTML: { __html: html } }));\n    }\n    // eslint-disable-next-line react/no-danger\n    return (React.createElement(\"div\", { id: id, className: className, dangerouslySetInnerHTML: { __html: html } }));\n}\nconst MaybeDangerouslySetInnerHTMLExport = React.memo(MaybeDangerouslySetInnerHTML);\n\nexport { MaybeDangerouslySetInnerHTMLExport as MaybeDangerouslySetInnerHTML };\n","import Loading from '../../../../react/carbon/Loading.js';\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useAriaAnnouncer } from '../../../hooks/useAriaAnnouncer.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { RESPONSE_TYPE_TIMEOUT_MS } from '../../../utils/constants.js';\nimport { MountChildrenOnDelay } from '../../util/MountChildrenOnDelay.js';\nimport { InlineError } from '../error/InlineError.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component renders an iframe element for the iframe response type with preconfigured sandbox permissions.\n *\n * Here is a list of attributes of iframe sandbox\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox\n *\n * allow-scripts: Lets the resource run scripts (but not create popup windows).\n * allow-download: Allows for downloads to occur with a gesture from the user.\n * allow-forms: Allows the resource to submit forms. If this keyword is not used, form submission is blocked.\n * allow-same-origin: Allows for the resource to access its own data storage/cookies and some JavaScript APIs\n *\n * Note: The iframe element will not fire the onerror event listener if it fails to load the source. It will still fire\n * onload, and so we aren't able to easily determine how to display an error message. We will have to rely on browsers\n * to display a native error message, which some browsers already do.\n */\nfunction IFrameComponent({ title, source, onTimeoutOverride, onLoad, }) {\n    const { errors_iframeSource, iframe_ariaSourceLoaded } = useLanguagePack();\n    const ariaAnnouncer = useAriaAnnouncer();\n    const [showSpinner, setShowSpinner] = useState(true);\n    const [showError, setShowError] = useState(false);\n    /**\n     * Hide the spinner amd show/announce the error message.\n     */\n    const handleIFrameTimeout = useCallback(() => {\n        setShowSpinner(false);\n        setShowError(true);\n        ariaAnnouncer(errors_iframeSource);\n    }, [ariaAnnouncer, errors_iframeSource]);\n    /**\n     * Hide the spinner and announce the iframe loaded once it's ready.\n     */\n    const handleIFrameLoaded = useCallback(() => {\n        setShowSpinner(false);\n        ariaAnnouncer(iframe_ariaSourceLoaded);\n        onLoad?.();\n    }, [ariaAnnouncer, iframe_ariaSourceLoaded, onLoad]);\n    // This effect sets a timeout that auto error handles after 10 seconds of waiting for the React player to ready.\n    // Once the player has loaded, the skeleton will be hidden, and we can clear the timeout.\n    useEffect(() => {\n        let errorTimeout = null;\n        if (showSpinner) {\n            const timeoutHandler = onTimeoutOverride || handleIFrameTimeout;\n            errorTimeout = setTimeout(timeoutHandler, RESPONSE_TYPE_TIMEOUT_MS);\n        }\n        return () => {\n            clearTimeout(errorTimeout);\n        };\n    }, [showSpinner, handleIFrameTimeout, onTimeoutOverride]);\n    return (React.createElement(\"div\", { className: \"WACIFrameComponent__Wrapper\" },\n        showError && renderErrorMessage(errors_iframeSource),\n        !showError && (React.createElement(\"iframe\", { className: \"WACIFrameComponent__IFrame\", title: title, src: source, sandbox: \"allow-scripts allow-downloads allow-forms allow-same-origin allow-popups\", referrerPolicy: \"origin\", onLoad: handleIFrameLoaded })),\n        showSpinner && renderLoadingSpinner()));\n}\nfunction renderLoadingSpinner() {\n    return (React.createElement(MountChildrenOnDelay, { delay: 1500 },\n        React.createElement(\"div\", { className: \"WACIFrameComponent__StatusContainer\" },\n            React.createElement(Loading, { active: true, overlay: false }))));\n}\nfunction renderErrorMessage(errorText) {\n    return (React.createElement(\"div\", { className: \"WACIFrameComponent__StatusContainer\" },\n        React.createElement(InlineError, { text: errorText })));\n}\n\nexport { IFrameComponent };\n"],"names":["isNil","value","isOdd","AvailabilityMessage","availability","fallbackText","availabilityKey","availabilityValues","availabilityText","estimated_wait_time","position_in_queue","message","position","time","React","RichTextExport","overrideSanitize","text","FormattedMessage","id","values","addHTMLSupport","ErrorIcon","props","ErrorFilled","className","cx","InlineError","languagePack","useLanguagePack","shouldRemoveHTMLBeforeMarkdownConversion","errors_generalContent","EndAgentChatModal","onConfirm","onCancel","title","serviceManager","useServiceManager","isConnected","isSuspended","useSelector","state","persistedToBrowserStorage","chatState","agentState","useTitle","agent_endChat","agent_confirmCancelRequestTitle","useMessage","agent_confirmEndChat","agent_confirmCancelRequestMessage","cancelButtonLabel","agent_confirmEndChatNo","confirmButtonLabel","agent_confirmEndSuspendedYes","agent_confirmEndChatYes","agent_confirmCancelRequestYes","ConfirmModal","modalAnnounceMessage","Image","imageError","description","displayURL","hideIconAndTitle","needsAnnouncement","renderIcon","inline","ariaAnnouncer","useAriaAnnouncer","isLoaded","setIsLoaded","useState","isError","setIsError","rootRef","useRef","needsAnnouncementRef","hasText","Boolean","Icon","useEffect","current","ImageOnly","Tile","ref","WACImage__TextAndIcon","WACImage__IconOnly","TextHolderTile","urlHostName","getURLHostName","hideTitle","source","altText","preventInlineError","onImageLoad","useAITheme","isImageHidden","setIsImageHidden","imageAlt","handleError","useCallback","errorTimeout","setTimeout","RESPONSE_TYPE_TIMEOUT_MS","clearTimeout","unstable__AiSkeletonPlaceholder","SkeletonPlaceholder","src","alt","onLoad","onError","ImageExport","SearchResultBody","searchResult","highlight","body","str","strArray","split","RegExp","length","join","map","strSegment","index","key","formatHighlightFields","convertToEmptyStringIfStringifiedNull","convertPossibleStringifiedArrayToFirstString","SearchResultBodyExport","SearchResultBodyWithCitationHighlighted","relatedSearchResult","citationItem","elementsArray","searchString","citationString","replace","startOfCitation","indexOf","push","substring","SearchResultBodyWithCitationHighlightedExport","ReactPlayerComponent","lazyMediaPlayer","MediaPlayerComponent","type","ariaLabel","isMixcloud","baseHeight","doAutoScroll","playing","onPlay","onPause","skeletonHidden","setSkeletonHidden","errorLoading","setErrorLoading","errors_audioSource","errors_videoSource","rootElementRef","paddingTop","getResponsiveElementPaddingValue","inlineStyles","useDynamicCSSProperties","isAudio","MessageResponseTypes","AUDIO","errorMessage","prevSource","usePrevious","shouldAnnounceRef","handleReady","style","SkeletonText","paragraph","lineCount","WAC__hidden","Music","size","Suspense","fallback","url","controls","width","height","config","file","forceVideo","attributes","controlsList","playsinline","onReady","pip","MediaPlayerExport","WACTextHolderTile__IconMargin","WACTextHolderTile__DescriptionMargin","VisuallyHidden","WACTextHolderTile__UrlMargin","BodyMessageComponents","bodyLocalMessageItemIDs","ui_state","allMessageItemsByID","messageComponents","nestedMessageID","nestedLocalMessage","isFullWidthMessage","isFullWidthResponseType","item","response_type","nextLocalMessageID","nextLocalMessage","isNextMessageFullWidth","withShortBottomPadding","MessageTypeComponent","isNestedMessageItem","responseType","IMAGE","IFRAME","VIDEO","USER_DEFINED","BodyMessageTypeComponentsExport","FooterButtonComponents","buttonComponents","footerLocalMessageItemIDs","totalButtons","isColumnList","BodyWithFooterComponent","localMessageItem","fullMessage","isMessageForInput","requestFocus","appConfig","inputState","selectInputState","originalMessage","requestInputFocus","disableUserInputs","isReadonly","scrollElementIntoView","THROW_ERROR","hideFeedback","allowNewFeedback","VideoComponent","VideoComponentExport","styles","useMemo","customProperties","Object","entries","forEach","kebabKey","letter","toLowerCase","FeedbackButtonsElement","LitElement","css","unsafeCSS","__decorate","property","attribute","reflect","prototype","String","ThumbsDown16svg","toString","ThumbsDown16","ThumbsDownFilled16svg","ThumbsDownFilled16","ThumbsUp16svg","ThumbsUp16","ThumbsUpFilled16svg","ThumbsUpFilled16","FEEDBACK_BUTTONS_COMPONENT_TAG_NAME","CDSChatFeedbackButtonsElement","render","customElementClass","isPositiveOpen","isNegativeOpen","isPositiveSelected","isNegativeSelected","hasPositiveDetails","hasNegativeDetails","isPositiveDisabled","isNegativeDisabled","positiveLabel","negativeLabel","panelID","onClick","html","CSS_CLASS_PREFIX","nothing","unsafeSVG","enLanguagePack","feedbackButtonsElementTemplate","this","carbonElement","FeedbackButtonsComponent","createComponent","tagName","elementClass","react","TagListElement","constructor","super","arguments","selectedTags","Set","updated","changedProperties","has","_setInitialValues","initialSelectedTags","_handleTagClick","event","tagValue","target","getAttribute","delete","add","onTagsChanged","Array","from","requestUpdate","TAG_LIST_TAG_NAME","WEB_COMPONENT_PREFIX","CDSTagListElement","tags","handleTagClick","tagListElementTemplate","ROUNDED_BUTTON_TAG_NAME","CDSRoundedButtonElement","CDSButton","FeedbackElement","showTextArea","showPrompt","initialValues","_textInput","_initialSelectedCategories","selectedCategories","_handleTextInput","currentTarget","_handleSubmit","onSubmit","_selectedCategories","_handleCancel","onClose","_handleCategoryChange","bind","FEEDBACK_COMPONENT_TAG_NAME","CDSChatFeedbackElement","handleCancel","handleSubmit","handleTextInput","initialSelectedCategories","textInput","handleCategoryChange","isOpen","prompt","placeholder","categories","disclaimer","submitLabel","cancelLabel","feedbackElementTemplate","FeedbackComponent","ResponseStopped","messages_responseStopped","RealConnectToAgent","localMessage","agentDisplayState","persistedAgentState","activeLocalMessageID","isConnecting","showConfirmSuspended","setShowConfirmSuspended","doStartChat","humanAgentService","startChat","history","agent_availability","AgentsOnlineStatus","OFFLINE","agentUnavailableMessage","agent_unavailable","default_agent_unavailableMessage","textFromMessage","agent_available","default_agent_availableMessage","buttonIcon","buttonText","showDisabled","isConnectingOrConnected","messageToUser","Checkmark","agent_cardButtonChatRequested","agent_connectWaiting","Headset","agent_cardButtonConnected","agent_cardMessageConnected","wasAgentChatEnded","Logout","agent_cardButtonChatEnded","agent_cardMessageChatEnded","agent_startChat","HelpDesk","agent_chatTitle","Button","disabled","agent_suspendedWarning","agent_confirmSuspendedEndChatTitle","agent_confirmSuspendedEndChatMessage","ConnectToAgent","childDisableUserInputs","hasServiceDesk","AudioComponent","isMixCloud","startsWith","AudioComponentExport","ClickableImage","buttonAltText","isLink","imageProps","href","rel","BaseButtonItemComponent","label","kind","imageURL","errors_imageSource","theme","linkTarget","undefined","as","getButtonKind","ButtonItemKind","LINK","TERTIARY","DEFAULT","ButtonItemCustomEventComponent","messageItem","image_url","alt_text","isDisabled","optionSelected","onClickHandler","async","fire","BusEventType","MESSAGE_ITEM_CUSTOM","TouchInteraction","ButtonItemPostBackComponent","fullMessageID","input","messageRequest","createMessageRequestForButtonItemOption","store","dispatch","actions","messageSetOptionSelected","sendWithCatch","MessageSendSource","POST_BACK_BUTTON","consoleError","WA_CONSOLE_PREFIX","Send","ButtonItemShowPanelComponent","setResponsePanelIsOpen","setResponsePanelContent","ArrowRight","Link","CarbonLinkElement","LaunchIcon","icon","Launch16","createElement","attrs","fill","content","child","i","elem","ButtonItemURLComponent","Launch","slot","ButtonItemComponent","button_type","ButtonItemType","URL","SHOW_PANEL","CUSTOM_EVENT","CardItemComponent","ignoreMaxWidth","WACMaxWidthSmall","max_width","WidthOptions","SMALL","WACMaxWidthMedium","MEDIUM","WACMaxWidthLarge","LARGE","CardComponentExport","Carousel","lazyCarousel","CarouselItemComponent","itemsLocalMessageItemIDs","nestedLocalMessageItemID","useCallbackOnChange","callback","doDebounced","debounce","maxWait","leading","CitationCardContent","citation","setIsExpandable","isExpandable","useContext","WindowSizeContext","conversationalSearch_viewSourceDocument","textContent","useLayoutEffect","clientHeight","scrollHeight","CitationType","hostname","Maximize","CitationClickableCard","onSelectCitation","children","onFocus","getSearchResultMetaData","urlIsValid","isValidURL","getSearchResultURLMetaData","answer","titleIsURL","answers","endsWith","JSON","parse","error","ExpandToPanelCard","renderTile","EXPAND_IF_NEEDED","setViewSourcePanelIsOpen","CitationCard","isSelected","CitationCardExport","PortalComponent","hostElement","ReactDOM","TOGGLE_CONTAINER_CLASSNAME","ConversationalSearchText","highlightCitation","onToggleCitations","citationsOpen","searchItem","showCitationsToggle","streamingState","toggleID","useCounter","namespace","suffix","toggleContainer","setToggleContainer","setHtml","isDone","chunks","chunk","newHtml","ranges","pieces","startIndex","range","beforeHighlight","start","end","HIGHLIGHT_TOKEN_START","HIGHLIGHT_TOKEN_END","lastPiece","md","sanitzeHTML","tokenTree","getMarkdownWorker","result","container","document","htmlString","innerHTML","templateToString","renderTokenTree","processMarkdown","afterMarkdownHTML","sanitizeHTML","rootElement","insertHighlights","lastElement","lastElementChild","lastTag","appendChild","createTextNode","createHTMLWithHighlights","getHtml","useImperativeHandle","getToggleCitationsElement","querySelector","MaybeDangerouslySetInnerHTMLExport","OperationalTag","conversationalSearch_citationsLabel","ChevronUp","ChevronDown","conversationalSearch_toggleCitations","HIGHLIGHT_TOKEN_REGEXP","parent","isInHighlight","childNodes","Text","tokenMatches","matchAll","match","isInHighlightHere","addTextSegment","remove","Element","getAttributeNames","name","setAttribute","replaceAll","highlighted","beforeChild","textNode","trim","highlightNode","insertBefore","ConversationalSearchTextExport","ConversationalSearch","isStreamingError","selectedCitationIndex","setSelectedCitationIndex","setCitationsOpen","scrollIntoViewArea","swiperRef","conversationalSearchTextFunctionsRef","sortedCitations","citations","withRanges","filter","withoutRanges","concat","sortCitations","scrollCitations","focus","conversationalSearch_streamingIncomplete","tiles","swiper","slideTo","initialSlide","onSlideChange","renderCitations","UserDefinedResponse","userDefinedRegistryItem","getOrCreateUserDefinedElement","localMessageID","slotName","UserDefinedResponse$1","UNWANTED_CHARACTERS_REGEX","RIGHT_TO_LEFT_MARK","DatePickerComponent","intl","useIntl","webChatLocale","locale","allMessagesByID","uuidRef","uuid","UUIDType","MISCELLANEOUS","isCalendarOpen","setIsCalendarOpen","userDisplayValue","setUserDisplayValue","flatpickrFormat","setFlatpickrFormat","userDisplayFormat","setUserDisplayFormat","flatpickrLocale","setFlatpickrLocale","dayjsLocale","setDayjsLocale","datePickerHostElement","setDatePickerHostElement","valueForAssistantRef","isInputPointerDownEventFiredRef","inputLabel","formatMessage","format","isDateInfoReady","setDateInfoForLocale","dateFormat","includes","sanitizeDateFormat","dayjs","formats","L","toLocaleLowerCase","ENGLISH_US_DATE_FORMAT","localeValue","dash","firstChar","Error","getFlatpickrDateFormat","handlerSendDate","responseID","request","createMessageRequestForDate","DATE_PICKER","setValueSelectedForMessageID","doScrollElementIntoView","useOnMount","localeFromMessage","originalUserText","from_history","loadDayjsLocale","then","Layer","DatePicker","datePickerType","allowInput","appendTo","onChange","dates","date","day","getDate","padStart","month","getMonth","getFullYear","toAssistantDateFormat","year","toUserDateFormat","onOpen","DatePickerInput","labelText","onPointerDown","DatePickerComponentExport","VALID_COLUMN_WIDTH_REGEX","GridItemComponent","columns","horizontal_alignment","vertical_alignment","gridTemplateColumns","column","gridLocalMessageItemIDs","row","rowIndex","cell","columnIndex","cellData","rows","cells","isPixelValue","columnWidthString","flex","Number","alignItems","getFlexAlignment","justifyContent","localMessageItemID","itemIndex","GridItemComponentExport","IFramePreviewCardComponent","iframe_ariaImageAltText","iframeAriaClickPreviewCardMessage","setIFrameContent","IFramePreviewCardExport","InlineIFrame","errors_iframeSource","getMediaDimensions","base_height","iframeTitle","onTimeoutOverride","IFrameComponent","IFrameMessage","displayOverride","display","IFrameItemDisplayOption","INLINE","Description","Metablock","SelectComponent","options","isBeingOpened","setIsBeingOpened","environment","getRootNode","shadowRoot","properties","ownerDocument","addEventListener","removeEventListener","Node","Proxy","get","_","prop","createProxyEnvironment","WAC__customSelectTemporaryPadding","Dropdown","items","options_select","titleText","hideLabel","options_ariaOptionsDisabled","selectedItem","find","findOptionForValue","downshiftProps","onIsOpenChange","changes","OptionComponent","Component","onOptionSelected","selectedOption","createMessageRequestForChoice","OPTION_BUTTON","OPTION_DROP_DOWN","onButtonClick","onSelectChange","data","preference","getOptionType","unstable__ChatButton","ButtonKindEnum","isQuickAction","ButtonSizeEnum","Download16svg","Download16","tableTemplate","tableElement","tableTitle","tableDescription","headers","containerWidth","filterPlaceholderText","_handleDownload","handleDownload","_rowsWithIDs","tableRowsWithIDs","_allowFiltering","allowTableFiltering","_handleFilterEvent","handleFilterEvent","header","repeat","POSSIBLE_PAGE_SIZES","TABLE_COMPONENT_TAG_NAME","TableElement","_isValid","_currentPageNumber","_rowsPerPageChanged","_calcIsTableValid","_initializeRowsArrays","_currentPageSize","chatHeight","_initializePageSize","columnCount","some","_filterVisibleRowIDs","_updateVisibleRows","_handlePageChangeEvent","detail","page","pageSize","stopPropagation","_handlePageSizeChangeEvent","unfilteredRows","renderRoot","querySelectorAll","setProperty","filterVisibleRows","pageEnd","removeAttribute","tableArray","stringifiedTable","stringify","blob","Blob","link","createObjectURL","visibility","click","removeChild","loading","currentPageSize","currentPageNumber","filterVisibleRowIDs","previousPageText","nextPageText","itemsPerPageText","getPaginationSupplementalText","getPaginationStatusText","handlePageChangeEvent","handlePageSizeChangeEvent","totalVisibleRows","totalRows","supportedPageSizes","Math","ceil","tablePaginationTemplate","Function","Table","TableContainer","tableItem","carbonTheme","tableContainerRef","tableContainerWidth","setTableContainerWidth","onResize","clientWidth","ResizeObserver","observe","isValid","Theme","LIGHT_THEMES","table_filterPlaceholder","table_previousPage","table_nextPage","table_itemsPerPage","count","pagesCount","TableContainerExport","TourCard","tour_resumeButton","tour_restartButton","tour_startButton","activeTourID","persistedTourState","isCurrentTour","tourTitle","user_defined","card_title","tourDescription","card_description","changeView","ViewType","TOUR","mainWindowCloseReason","MainWindowCloseReason","TOUR_CARD_RESUMED_TOUR","Restart","TOUR_CARD_RESTARTED_TOUR","tour","changeStepInTour","newStepIndex","startTour","TourStartReason","START_TOUR_CLICKED","TOUR_CARD_STARTED_TOUR","TourCardExport","StreamingRichText","removeHTML","textToUse","stepTitleFormatter","createEnglishFormat","ChainOfThoughtElement","open","formatStepLabelText","stepNumber","stepTitle","inputLabelText","outputLabelText","toolLabelText","explainabilityText","statusSucceededLabelText","statusFailedLabelText","statusProcessingLabelText","_chainOfThoughtPanelID","firstUpdated","_changedProperties","_steps","steps","CSS_CLASS_ITEM_PREFIX","CSS_CLASS_STATUS_PREFIX","ChevronRight16svg","ChevronRight16","CheckmarkFilled16svg","CheckmarkFilled16","ErrorFilled16svg","ErrorFilled16","renderToolData","classPostfix","parseUnknownDataToMarkdown","renderToolDataAsMarkdown","CHAIN_OF_THOUGHT_COMPONENT_TAG_NAME","CDSChatChainOfThoughtElement","onToggle","onStepToggle","content_id","element","status","ChainOfThoughtStepStatus","PROCESSING","FAILURE","SUCCESS","stepStatus","tool_name","args","response","accordionItemContent","accordionContent","chainOfThoughtElementTemplate","ChainOfThought","feedbackDetailsRef","selectAgentDisplayState","shallowEqual","feedbackID","message_options","feedback","feedbackPanelID","useUUID","feedbackHistory","feedbackInitialValues","isFeedbackOpen","setIsFeedbackOpen","isPositiveFeedbackSelected","setIsPositiveFeedbackSelected","is_positive","isNegativeFeedbackSelected","setIsNegativeFeedbackSelected","isFeedbackSubmitted","setIsFeedbackSubmitted","renderRichText","is_streaming_error","renderUserDefinedResponse","scrollChainOfThought","isRequest","isTextItem","userText","message_type","InternalMessageRequestType","FILE","Attachment","fileSharing_fileIcon","role","renderRequest","isResponse","renderAsTour","renderTour","renderAsUserDefinedMessage","withHumanAgent","agent_message_type","TEXT","renderText","getState","renderImage","OPTION","renderOption","CONNECT_TO_AGENT","renderConnectToAgent","INLINE_ERROR","renderInlineError","renderIFrameMessage","renderVideoMessage","renderAudioMessage","DATE","renderDateMessage","CONVERSATIONAL_SEARCH","renderConversationalSearchMessage","TABLE","renderTable","CARD","renderCard","CAROUSEL","renderCarouselMessage","BUTTON","renderButtonItem","GRID","renderGrid","renderResponse","isResponseStopped","streaming_metadata","stream_stopped","chainOfThought","chain_of_thought","chainOfThought_explainabilityLabel","chainOfThought_inputLabel","chainOfThought_outputLabel","chainOfThought_toolLabel","renderChainOfThought","feedbackOptions","is_on","show_positive_details","show_negative_details","show_text_area","show_prompt","updateHistory","mergeMessageHistory","onFeedbackClicked","isPositive","toggleToSelected","openDetails","FEEDBACK","interactionType","FeedbackInteractionType","SUBMITTED","DETAILS_OPENED","DETAILS_CLOSED","renderFeedbackPopup","class","details","feedback_defaultTitle","feedback_defaultPrompt","feedback_defaultPlaceholder","feedback_submitLabel","feedback_cancelLabel","feedback_positiveLabel","feedback_negativeLabel","renderFeedback","renderSpecificMessage","AISkeletonText","SkeletonText$1","AISkeletonPlaceholder","SkeletonPlaceholder$1","nextNumber","counterRef","MaybeDangerouslySetInnerHTML","asSpan","doSanitize","useShouldSanitizeHTML","dangerouslySetInnerHTML","__html","iframe_ariaSourceLoaded","showSpinner","setShowSpinner","showError","setShowError","handleIFrameTimeout","handleIFrameLoaded","errorText","sandbox","referrerPolicy","MountChildrenOnDelay","delay","Loading","active","overlay"],"sourceRoot":""}