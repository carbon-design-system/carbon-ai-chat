{"version":3,"file":"9362.bundle.js","mappings":"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","sources":["webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat.resolvablePromise.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat.HomeScreenHeader.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat.BasePanelComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat.AppContainer.js"],"sourcesContent":["import { e as MessageResponseTypes, c as ButtonItemType } from \"./chat.dynamic-imports.js\";\n\nimport { u as uuid, U as UUIDType } from \"./chat.uuid.js\";\n\nimport { t as streamItemID, J as createMessageResponseForItem, L as isGridResponseType, M as isCarouselResponseType, N as isShowPanelButtonType, q as isResponseWithNestedItems, O as isItemSupportedInResponseBody, P as isCardResponseType, Q as isButtonResponseType } from \"./chat.messageUtils.js\";\n\nimport { b as consoleError } from \"./chat.miscUtils.js\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function inputItemToLocalItem(message, originalUserText, id = uuid(UUIDType.LOCAL_MESSAGE)) {\n  const localMessage = {\n    item: {\n      response_type: MessageResponseTypes.TEXT,\n      ...message.input\n    },\n    ui_state: {\n      id: id,\n      originalUserText: originalUserText,\n      needsAnnouncement: false\n    },\n    fullMessageID: message.id\n  };\n  return localMessage;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function outputItemToLocalItem(messageItem, fullMessage, isLatestWelcomeNode = false, disableFadeAnimation = false) {\n  const id = streamItemID(fullMessage.id, messageItem) || uuid(UUIDType.LOCAL_MESSAGE);\n  const localMessage = {\n    ui_state: {\n      id: id,\n      needsAnnouncement: !fullMessage.ui_state_internal?.from_history,\n      disableFadeAnimation: disableFadeAnimation\n    },\n    item: messageItem,\n    fullMessageID: fullMessage.id\n  };\n  if (isLatestWelcomeNode) {\n    localMessage.ui_state.isWelcomeResponse = true;\n  }\n  return localMessage;\n}\n\nfunction createLocalMessageForInlineError(text) {\n  const messageItem = {\n    response_type: MessageResponseTypes.INLINE_ERROR,\n    text: text\n  };\n  return createLocalMessageForItem(messageItem);\n}\n\nfunction createLocalMessageForItem(messageItem) {\n  const originalMessage = createMessageResponseForItem(messageItem);\n  const localMessage = outputItemToLocalItem(messageItem, originalMessage);\n  return {\n    originalMessage: originalMessage,\n    localMessage: localMessage\n  };\n}\n\nfunction createLocalMessageItemsForNestedMessageItems(localMessageItem, originalMessage, fromHistory, nestedLocalMessageItems, allowFooter) {\n  const {item: item} = localMessageItem;\n  if (isGridResponseType(item)) {\n    localMessageItem.ui_state.gridLocalMessageItemIDs = item.rows.map(row => row.cells.map(cell => {\n      const cellLocalMessageItemIDs = [];\n      createLocalMessageItemsForNestedType(\"items\", localMessageItem, cell.items, cellLocalMessageItemIDs, originalMessage, fromHistory, nestedLocalMessageItems, nestedMessageItem => isSupportedMessageItemInBody(localMessageItem.item, nestedMessageItem), false);\n      return cellLocalMessageItemIDs;\n    }));\n  } else if (isCarouselResponseType(item)) {\n    localMessageItem.ui_state.itemsLocalMessageItemIDs = [];\n    createLocalMessageItemsForNestedType(\"items\", localMessageItem, item.items, localMessageItem.ui_state.itemsLocalMessageItemIDs, originalMessage, fromHistory, nestedLocalMessageItems, nestedMessageItem => isSupportedMessageItemInBody(item, nestedMessageItem), allowFooter);\n  } else {\n    const bodyItems = item.body || item.panel?.body;\n    if (bodyItems) {\n      localMessageItem.ui_state.bodyLocalMessageItemIDs = [];\n      createLocalMessageItemsForNestedType(\"body\", localMessageItem, bodyItems, localMessageItem.ui_state.bodyLocalMessageItemIDs, originalMessage, fromHistory, nestedLocalMessageItems, nestedMessageItem => isSupportedMessageItemInBody(item, nestedMessageItem), !isShowPanelButtonType(item));\n    }\n    if (!allowFooter) {\n      return;\n    }\n    const footerItems = item.footer || item.panel?.footer;\n    if (footerItems) {\n      localMessageItem.ui_state.footerLocalMessageItemIDs = [];\n      createLocalMessageItemsForNestedType(\"footer\", localMessageItem, footerItems, localMessageItem.ui_state.footerLocalMessageItemIDs, originalMessage, fromHistory, nestedLocalMessageItems, nestedMessageItem => isSupportedMessageItemInFooter(item, nestedMessageItem), !isShowPanelButtonType(item));\n    }\n  }\n}\n\nfunction createLocalMessageItemsForNestedType(type, localMessageItem, items, nestedMessageItemIDs, originalMessage, fromHistory, nestedLocalMessageItems, isSupported, allowFooter) {\n  items.forEach(nestedMessageItem => {\n    if (isSupported(nestedMessageItem)) {\n      const nestedLocalMessageItem = outputItemToLocalItem(nestedMessageItem, originalMessage, false, true);\n      nestedMessageItemIDs.push(nestedLocalMessageItem.ui_state.id);\n      nestedLocalMessageItems.push(nestedLocalMessageItem);\n      if (isResponseWithNestedItems(nestedLocalMessageItem.item)) {\n        createLocalMessageItemsForNestedMessageItems(nestedLocalMessageItem, originalMessage, fromHistory, nestedLocalMessageItems, allowFooter);\n      }\n    } else {\n      consoleError(`The \"${localMessageItem.item.response_type}\" response type does not support \"${nestedMessageItem.response_type}\" in \"${type}\" array.`);\n    }\n  });\n}\n\nfunction isSupportedMessageItemInBody(rootMessageItem, nestedMessageItem) {\n  switch (rootMessageItem.response_type) {\n   case MessageResponseTypes.CARD:\n    return !isCardResponseType(nestedMessageItem) && isItemSupportedInResponseBody(nestedMessageItem);\n\n   case MessageResponseTypes.CAROUSEL:\n    return isCardResponseType(nestedMessageItem);\n\n   case MessageResponseTypes.BUTTON:\n    return rootMessageItem.button_type === ButtonItemType.SHOW_PANEL && isItemSupportedInResponseBody(nestedMessageItem);\n\n   case MessageResponseTypes.GRID:\n    return !isCardResponseType(nestedMessageItem) && isItemSupportedInResponseBody(nestedMessageItem);\n\n   default:\n    return false;\n  }\n}\n\nfunction isSupportedMessageItemInFooter(rootMessageItem, nestedMessageItem) {\n  if (isButtonResponseType(nestedMessageItem)) {\n    if (isShowPanelButtonType(rootMessageItem)) {\n      return !isShowPanelButtonType(nestedMessageItem);\n    }\n    return true;\n  }\n  return false;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const HA_SET_HUMAN_AGENT_AVAILABILITY = \"HA_SET_HUMAN_AGENT_AVAILABILITY\";\n\nconst HA_SET_IS_CONNECTING = \"HA_SET_IS_CONNECTING\";\n\nconst HA_SET_IS_RECONNECTING = \"HA_SET_IS_RECONNECTING\";\n\nconst HA_SET_HUMAN_AGENT_JOINED = \"HA_SET_HUMAN_AGENT_JOINED\";\n\nconst HA_SET_HUMAN_AGENT_LEFT_CHAT = \"HA_SET_HUMAN_AGENT_LEFT_CHAT\";\n\nconst HA_END_CHAT = \"HA_END_CHAT\";\n\nconst HA_UPDATE_CAPABILITIES = \"HA_UPDATE_CAPABILITIES\";\n\nconst HA_UPDATE_FILE_UPLOAD_IN_PROGRESS = \"HA_UPDATE_FILE_UPLOAD_IN_PROGRESS\";\n\nconst HA_SET_SHOW_SCREEN_SHARE_REQUEST = \"HA_SET_SHOW_SCREEN_SHARE_REQUEST\";\n\nconst HA_SET_IS_SCREEN_SHARING = \"HA_SET_IS_SCREEN_SHARING\";\n\nconst HA_SET_PERSISTED_STATE = \"HA_SET_PERSISTED_STATE\";\n\nconst HA_UPDATE_IS_SUSPENDED = \"HA_UPDATE_IS_SUSPENDED\";\n\nconst HA_UPDATE_IS_TYPING = \"HA_UPDATE_IS_TYPING\";\n\nfunction setIsConnecting(isConnecting, localMessageID) {\n  return {\n    type: HA_SET_IS_CONNECTING,\n    isConnecting: isConnecting,\n    localMessageID: localMessageID\n  };\n}\n\nfunction setIsReconnecting(isReconnecting) {\n  return {\n    type: HA_SET_IS_RECONNECTING,\n    isReconnecting: isReconnecting\n  };\n}\n\nfunction setHumanAgentLeftChat() {\n  return {\n    type: HA_SET_HUMAN_AGENT_LEFT_CHAT\n  };\n}\n\nfunction endChat() {\n  return {\n    type: HA_END_CHAT\n  };\n}\n\nfunction setAgentAvailability(availability) {\n  return {\n    type: HA_SET_HUMAN_AGENT_AVAILABILITY,\n    availability: availability\n  };\n}\n\nfunction setHumanAgentJoined(responseUserProfile) {\n  return {\n    type: HA_SET_HUMAN_AGENT_JOINED,\n    responseUserProfile: responseUserProfile\n  };\n}\n\nfunction updateCapabilities(capabilities) {\n  return {\n    type: HA_UPDATE_CAPABILITIES,\n    capabilities: capabilities\n  };\n}\n\nfunction updateFilesUploadInProgress(fileUploadInProgress) {\n  return {\n    type: HA_UPDATE_FILE_UPLOAD_IN_PROGRESS,\n    fileUploadInProgress: fileUploadInProgress\n  };\n}\n\nfunction setShowScreenShareRequest(showRequest) {\n  return {\n    type: HA_SET_SHOW_SCREEN_SHARE_REQUEST,\n    showRequest: showRequest\n  };\n}\n\nfunction setIsScreenSharing(isSharing) {\n  return {\n    type: HA_SET_IS_SCREEN_SHARING,\n    isSharing: isSharing\n  };\n}\n\nfunction setPersistedServiceDeskState(state) {\n  return {\n    type: HA_SET_PERSISTED_STATE,\n    state: state\n  };\n}\n\nfunction agentUpdateIsSuspended(isSuspended) {\n  return {\n    type: HA_UPDATE_IS_SUSPENDED,\n    isSuspended: isSuspended\n  };\n}\n\nfunction agentUpdateIsTyping(isTyping) {\n  return {\n    type: HA_UPDATE_IS_TYPING,\n    isTyping: isTyping\n  };\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function deepFreeze(object) {\n  Object.freeze(object);\n  Object.getOwnPropertyNames(object).forEach(prop => {\n    if (Object.prototype.hasOwnProperty.call(object, prop) && object[prop] !== null && (typeof object[prop] === \"object\" || typeof object[prop] === \"function\") && !Object.isFrozen(object[prop])) {\n      deepFreeze(object[prop]);\n    }\n  });\n  return object;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function resolvablePromise() {\n  let resolveFunction;\n  let rejectFunction;\n  const promise = new Promise((resolve, reject) => {\n    resolveFunction = resolve;\n    rejectFunction = reject;\n  });\n  promise.doResolve = resolveValue => {\n    promise.isResolved = true;\n    promise.isComplete = true;\n    resolveFunction(resolveValue);\n  };\n  promise.doReject = rejectValue => {\n    promise.isRejected = true;\n    promise.isComplete = true;\n    rejectFunction(rejectValue);\n  };\n  promise.isResolved = false;\n  promise.isRejected = false;\n  promise.isComplete = false;\n  return promise;\n}\n\nexport { setAgentAvailability as A, setHumanAgentJoined as B, agentUpdateIsTyping as C, setHumanAgentLeftChat as D, setPersistedServiceDeskState as E, HA_END_CHAT as H, agentUpdateIsSuspended as a, createLocalMessageForInlineError as b, createLocalMessageItemsForNestedMessageItems as c, deepFreeze as d, HA_UPDATE_FILE_UPLOAD_IN_PROGRESS as e, HA_SET_IS_SCREEN_SHARING as f, HA_UPDATE_CAPABILITIES as g, HA_SET_HUMAN_AGENT_LEFT_CHAT as h, inputItemToLocalItem as i, HA_UPDATE_IS_TYPING as j, HA_UPDATE_IS_SUSPENDED as k, HA_SET_PERSISTED_STATE as l, HA_SET_HUMAN_AGENT_JOINED as m, HA_SET_SHOW_SCREEN_SHARE_REQUEST as n, outputItemToLocalItem as o, HA_SET_HUMAN_AGENT_AVAILABILITY as p, HA_SET_IS_RECONNECTING as q, resolvablePromise as r, HA_SET_IS_CONNECTING as s, setIsConnecting as t, updateFilesUploadInProgress as u, endChat as v, setIsScreenSharing as w, setIsReconnecting as x, setShowScreenShareRequest as y, updateCapabilities as z };\n","import React, { forwardRef, useRef, useImperativeHandle, useCallback } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { H as HeaderExport } from \"./chat.Header.js\";\n\nimport { O as OverlayPanelName } from \"./chat.PageObjectId.js\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function HomeScreenHeader(props, ref) {\n  const {brandColor: brandColor, onClose: onClose, onRestart: onRestart, onCloseAndRestart: onCloseAndRestart} = props;\n  const showRestartButton = useSelector(state => state.config.public.showRestartButton || state.config.public.headerConfig?.showRestartButton);\n  const showBackButton = useSelector(state => state.persistedToBrowserStorage.chatState.homeScreenState.showBackToBot);\n  const displayName = useSelector(state => state.headerDisplayName);\n  const customMenuOptions = useSelector(state => state.customMenuOptions);\n  const useAITheme = useSelector(state => state.theme.useAITheme);\n  const headerRef = useRef();\n  useImperativeHandle(ref, () => headerRef.current);\n  const hideCloseAndRestartButton = !showBackButton;\n  const overflowClicked = useCallback(index => {\n    const {handler: handler} = customMenuOptions[index];\n    handler();\n  }, [ customMenuOptions ]);\n  const overflowItems = customMenuOptions?.map(option => option.text);\n  return React.createElement(\"div\", {\n    className: \"WACHomeScreenHeader\"\n  }, React.createElement(HeaderExport, {\n    ref: headerRef,\n    displayName: displayName,\n    showCenter: true,\n    showRestartButton: showRestartButton,\n    hideCloseAndRestartButton: hideCloseAndRestartButton,\n    onClickRestart: onRestart,\n    onClickClose: onClose,\n    onCloseAndRestart: onCloseAndRestart,\n    overflowClicked: overflowClicked,\n    overflowItems: overflowItems,\n    useAITheme: useAITheme,\n    brandColor: brandColor,\n    testIdPrefix: OverlayPanelName.HOME_SCREEN\n  }));\n}\n\nconst HomeScreenHeaderExport = React.memo(forwardRef(HomeScreenHeader));\n\nexport { HomeScreenHeaderExport as H };\n","import FocusTrap from \"focus-trap-react\";\n\nimport React, { useRef, useImperativeHandle } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { I as IS_MOBILE } from \"./chat.browserUtils.js\";\n\nimport { H as HeaderExport } from \"./chat.Header.js\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function BasePanelComponent({className: className, children: children, isOpen: isOpen, hidePanelHeader: hidePanelHeader, labelBackButton: labelBackButton, title: title, hideBackButton: hideBackButton, useAITheme: useAITheme, onClickCloseAndRestart: onClickCloseAndRestart, onClickRestart: onClickRestart, testIdPrefix: testIdPrefix, ...headerProps}, ref) {\n  const showRestartButton = useSelector(state => state.config.public.headerConfig?.showRestartButton);\n  const headerRef = useRef();\n  useImperativeHandle(ref, () => headerRef.current);\n  return React.createElement(FocusTrap, {\n    active: isOpen,\n    focusTrapOptions: {\n      clickOutsideDeactivates: true,\n      returnFocusOnDeactivate: !IS_MOBILE,\n      preventScroll: true\n    }\n  }, React.createElement(\"div\", {\n    className: className\n  }, !hidePanelHeader && React.createElement(HeaderExport, {\n    ...headerProps,\n    ref: headerRef,\n    showRestartButton: showRestartButton,\n    onClickRestart: onClickRestart,\n    onCloseAndRestart: onClickCloseAndRestart,\n    showBackButton: !hideBackButton,\n    labelBackButton: labelBackButton,\n    displayName: title,\n    useAITheme: useAITheme,\n    testIdPrefix: testIdPrefix,\n    showCenter: true\n  }), React.createElement(\"div\", {\n    className: \"WACPanelContent\"\n  }, children)));\n}\n\nconst BasePanelComponentExport = React.memo(React.forwardRef(BasePanelComponent));\n\nexport { BasePanelComponentExport as B };\n","import isEqual from \"lodash-es/isEqual.js\";\n\nimport React, { useRef, useCallback, useEffect, forwardRef, useImperativeHandle, useState, useContext, Component, Suspense, useMemo } from \"react\";\n\nimport dayjs from \"dayjs\";\n\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat.js\";\n\nimport merge from \"lodash-es/merge.js\";\n\nimport cloneDeep from \"lodash-es/cloneDeep.js\";\n\nimport { a as actions, U as UPDATE_MAIN_HEADER_AVATAR, S as SET_STREAM_ID, b as SET_STOP_STREAMING_BUTTON_DISABLED, c as SET_STOP_STREAMING_BUTTON_VISIBLE, d as UPDATE_MAX_VISIBLE_HEADER_OBJECTS, e as UPDATE_CHAT_HEADER_CONFIG, f as STREAMING_ADD_CHUNK, g as STREAMING_MERGE_MESSAGE_OPTIONS, h as STREAMING_START, i as SET_RESPONSE_PANEL_CONTENT, j as SET_RESPONSE_PANEL_IS_OPEN, A as ADD_NESTED_MESSAGES, F as FILE_UPLOAD_INPUT_ERROR, C as CLEAR_INPUT_FILES, R as REMOVE_ALL_NOTIFICATIONS, k as REMOVE_NOTIFICATIONS, l as ADD_NOTIFICATION, m as REMOVE_LOCAL_MESSAGE_ITEM, n as REMOVE_INPUT_FILE, o as ADD_INPUT_FILE, p as SET_IS_BROWSER_PAGE_VISIBLE, q as UPDATE_INPUT_STATE, r as CHANGE_STEP_IN_TOUR, s as CLEAR_TOUR_DATA, t as SET_TOUR_DATA, u as SET_CUSTOM_PANEL_OPTIONS, v as SET_CUSTOM_PANEL_OPEN, w as SET_CONVERSATIONAL_SEARCH_CITATION_PANEL_IS_OPEN, x as CLOSE_IFRAME_PANEL, O as OPEN_IFRAME_CONTENT, y as SET_LAUNCHER_MINIMIZED, z as SET_CHAT_MESSAGES_PROPERTY, B as SET_LAUNCHER_CONFIG_PROPERTY, D as SET_LAUNCHER_PROPERTY, E as UPDATE_LAUNCHER_CONFIG, T as TOGGLE_HOME_SCREEN, G as SET_HOME_SCREEN_IS_OPEN, H as ACCEPTED_DISCLAIMER, I as ANNOUNCE_MESSAGE, M as MERGE_HISTORY_ITEM, J as SET_MESSAGE_UI_STATE_INTERNAL_PROPERTY, K as SET_MESSAGE_RESPONSE_HISTORY_PROPERTY, L as SET_MESSAGE_UI_PROPERTY, N as UPDATE_HOME_SCREEN_CONFIG, P as UPDATE_CSS_VARIABLES, Q as UPDATE_MAIN_HEADER_TITLE, V as UPDATE_LAUNCHER_AVATAR_URL, W as UPDATE_BOT_AVATAR_URL, X as UPDATE_BOT_NAME, Y as SET_INITIAL_VIEW_CHANGE_COMPLETE, Z as SET_VIEW_CHANGING, _ as SET_VIEW_STATE, $ as UPDATE_HAS_SENT_NON_WELCOME_MESSAGE, a0 as UPDATE_PERSISTED_CHAT_STATE, a1 as SET_APP_STATE_VALUE, a2 as ADD_IS_HYDRATING_COUNTER, a3 as ADD_IS_LOADING_COUNTER, a4 as ADD_IS_TYPING_COUNTER, a5 as MESSAGE_SET_OPTION_SELECTED, a6 as ADD_MESSAGE, a7 as UPDATE_MESSAGE, a8 as UPDATE_LOCAL_MESSAGE_ITEM, a9 as REMOVE_MESSAGES, aa as ADD_LOCAL_MESSAGE_ITEM, ab as HYDRATE_MESSAGE_HISTORY, ac as RESTART_CONVERSATION, ad as HYDRATE_CHAT, ae as CHANGE_STATE } from \"./chat.actions.js\";\n\nimport { a as selectInputState, b as selectIsInputToHumanAgent, s as selectHumanAgentDisplayState } from \"./chat.selectors.js\";\n\nimport { C as ChatWidthBreakpoint } from \"./chat.AppState.js\";\n\nimport { l as loadLocale, b as loadLanguagePack, e as enLanguagePack, A as AnnounceOnMountComponentExport, V as VisuallyHidden } from \"./chat.VideoComponent.js\";\n\nimport { d as consoleDebug, e as debugLog, b as consoleError, c as consoleWarn, f as isEnableDebugLog, s as sleep, g as callOnError, h as debugStackTrace, j as consoleLog, k as safeFetchTextWithTimeout, l as getBotName, m as setEnableDebugLog, n as setEnableDebugStackTracesLog, a as createDidCatchErrorData } from \"./chat.miscUtils.js\";\n\nimport { V as ViewChangeReason, M as MessageSendSource, B as BusEventType, a as TourStartReason, d as MainWindowCloseReason, b as MainWindowOpenReason } from \"./chat.customElement.js\";\n\nimport { createIntl, useIntl, RawIntlProvider } from \"react-intl\";\n\nimport { V as ViewType, b as CarbonTheme, a as CornersType, e as MessageResponseTypes, O as OnErrorType, C as CSSVariable, F as FileStatusValue, d as MessageInputType, L as LauncherType, H as HumanAgentMessageType, W as WriteableElementName, l as loadHAA, i as lazyChat, j as lazyCatastrophicError, k as lazyDisclaimer, m as lazyHomeScreenContainer, n as lazyIFramePanel, o as lazyViewSourcePanel, p as lazyBodyAndFooterPanelComponent, q as lazyTourComponent } from \"./chat.dynamic-imports.js\";\n\nimport { d as deepFreeze, i as inputItemToLocalItem, r as resolvablePromise, o as outputItemToLocalItem, c as createLocalMessageItemsForNestedMessageItems, a as agentUpdateIsSuspended, b as createLocalMessageForInlineError, H as HA_END_CHAT, e as HA_UPDATE_FILE_UPLOAD_IN_PROGRESS, f as HA_SET_IS_SCREEN_SHARING, g as HA_UPDATE_CAPABILITIES, h as HA_SET_HUMAN_AGENT_LEFT_CHAT, j as HA_UPDATE_IS_TYPING, k as HA_UPDATE_IS_SUSPENDED, l as HA_SET_PERSISTED_STATE, m as HA_SET_HUMAN_AGENT_JOINED, n as HA_SET_SHOW_SCREEN_SHARE_REQUEST, p as HA_SET_HUMAN_AGENT_AVAILABILITY, q as HA_SET_IS_RECONNECTING, s as HA_SET_IS_CONNECTING } from \"./chat.resolvablePromise.js\";\n\nimport { H as HumanAgentsOnlineStatus, M as MessageErrorState } from \"./chat.LocalMessageItem.js\";\n\nimport { D as DEFAULT_CUSTOM_PANEL_ID, W as WA_CONSOLE_PREFIX } from \"./chat.constants.js\";\n\nimport { C as CarbonThemeClassNames, a as ButtonKindEnum } from \"./chat.carbonTypes.js\";\n\nimport { h as createWelcomeRequest, f as arrayLastValue, j as isLiveHumanAgentMessage, a as isRequest, k as createMessageRequestForText, l as addDefaultsToMessage, b as isResponse, m as createMessageResponseForText, n as isStreamCompleteItem, o as isStreamPartialItem, p as isStreamFinalResponse, r as renderAsUserDefinedMessage, q as isResponseWithNestedItems, s as asyncForEach, t as streamItemID, u as isPause, i as isConnectToHumanAgent, v as hasTourUserDefinedType, w as hasServiceDesk, x as isTyping, y as asArray, T as THREAD_ID_MAIN, z as findLast, c as isOptionItem, A as isDateResponseType, B as isEventRequest, C as getLastBotResponseWithContext, D as createMessageRequestForChoice } from \"./chat.messageUtils.js\";\n\nimport { u as uuid, U as UUIDType } from \"./chat.uuid.js\";\n\nimport Color from \"color\";\n\nimport { a as IS_SESSION_STORAGE, b as IS_PHONE, I as IS_MOBILE, c as IS_IOS, d as IS_PHONE_IN_PORTRAIT_MODE } from \"./chat.browserUtils.js\";\n\nimport { createStore } from \"redux\";\n\nimport mergeWith from \"lodash-es/mergeWith.js\";\n\nimport \"intl-pluralrules\";\n\nimport cx from \"classnames\";\n\nimport { useSelector, connect, Provider, useDispatch } from \"react-redux\";\n\nimport { u as useServiceManager, A as AriaAnnouncerContext, d as doFocusRef, b as usePrevious, c as SCROLLBAR_WIDTH, S as ServiceManagerContext } from \"./chat.usePrevious.js\";\n\nimport { a as AriaAnnouncerComponent, M as MessageTypeComponent, W as WindowSizeContext } from \"./chat.MessageTypeComponent.js\";\n\nimport { u as useLanguagePack, L as LanguagePackContext } from \"./chat.useLanguagePack.js\";\n\nimport { u as useOnMount } from \"./chat.useOnMount.js\";\n\nimport AiLaunch from \"@carbon/icons-react/es/AiLaunch.js\";\n\nimport ArrowUpLeft from \"@carbon/icons-react/es/ArrowUpLeft.js\";\n\nimport ChatLaunch from \"@carbon/icons-react/es/ChatLaunch.js\";\n\nimport { Button, Tag, Loading } from \"@carbon/react\";\n\nimport { P as PageObjectId, O as OverlayPanelName, b as AnimationInType, A as AnimationOutType, a as OverlayPanel } from \"./chat.PageObjectId.js\";\n\nimport Close from \"@carbon/icons-react/es/Close.js\";\n\nimport { u as useAriaAnnouncer, M as MountChildrenOnDelay } from \"./chat.MountChildrenOnDelay.js\";\n\nimport FocusTrap from \"focus-trap-react\";\n\nimport { a as HideComponentContext, H as HideComponent } from \"./chat.HideComponent.js\";\n\nimport { B as BotHeaderExport } from \"./chat.BotHeader.js\";\n\nimport { H as HomeScreenHeaderExport } from \"./chat.HomeScreenHeader.js\";\n\nimport { B as BasePanelComponentExport } from \"./chat.BasePanelComponent.js\";\n\nimport { a as WriteableElement, M as ModalPortalRootContext } from \"./chat.Header.js\";\n\nimport ReactDOM from \"react-dom\";\n\nimport \"dayjs/locale/en.js\";\n\nimport \"intl-messageformat\";\n\nimport \"./chat.InlineError.js\";\n\nimport \"@carbon/icons-react/es/ErrorFilled.js\";\n\nimport \"./chat.RichText.js\";\n\nimport \"@lit/react\";\n\nimport \"tslib\";\n\nimport \"lit\";\n\nimport \"lit/decorators.js\";\n\nimport \"lodash-es/throttle.js\";\n\nimport \"dompurify\";\n\nimport \"lit/directives/repeat.js\";\n\nimport \"lit/directives/unsafe-html.js\";\n\nimport \"@carbon/web-components/es-custom/components/list/index.js\";\n\nimport \"./chat.htmlUtils.js\";\n\nimport \"./chat.stringUtils.js\";\n\nimport \"@carbon/icons-react/es/Music.js\";\n\nimport \"uuid\";\n\nimport \"detect-browser\";\n\nimport \"memoize-one\";\n\nimport \"compute-scroll-into-view\";\n\nimport \"tabbable\";\n\nimport \"@carbon/icons-react/es/Attachment.js\";\n\nimport \"@carbon/web-components/es-custom/components/textarea/index.js\";\n\nimport \"@carbon/web-components/es-custom/components/icon-button/index.js\";\n\nimport \"@carbon/icon-helpers\";\n\nimport \"@carbon/icons/es/thumbs-down/16.js\";\n\nimport \"@carbon/icons/es/thumbs-down--filled/16.js\";\n\nimport \"@carbon/icons/es/thumbs-up/16.js\";\n\nimport \"@carbon/icons/es/thumbs-up--filled/16.js\";\n\nimport \"lit/directives/unsafe-svg.js\";\n\nimport \"@carbon/web-components/es-custom/components/tag/index.js\";\n\nimport \"@carbon/web-components/es-custom/components/chat-button/index.js\";\n\nimport \"@carbon/web-components/es-custom/components/button/button.js\";\n\nimport \"bind-decorator\";\n\nimport \"@carbon/web-components/es-custom/components/button/index.js\";\n\nimport \"@carbon/web-components/es-custom/components/layer/index.js\";\n\nimport \"@carbon/icons-react/es/Checkmark.js\";\n\nimport \"@carbon/icons-react/es/Headset.js\";\n\nimport \"@carbon/icons-react/es/HelpDesk.js\";\n\nimport \"@carbon/icons-react/es/Logout.js\";\n\nimport \"@carbon/icons-react/es/TouchInteraction.js\";\n\nimport \"@carbon/icons-react/es/Send.js\";\n\nimport \"@carbon/icons-react/es/ArrowRight.js\";\n\nimport \"@carbon/icons-react/es/Launch.js\";\n\nimport \"./chat.BodyWithFooterComponent.js\";\n\nimport \"lodash-es/debounce.js\";\n\nimport \"@carbon/icons-react/es/Link.js\";\n\nimport \"@carbon/icons-react/es/Maximize.js\";\n\nimport \"@carbon/icons-react/es/ChevronDown.js\";\n\nimport \"@carbon/icons-react/es/ChevronUp.js\";\n\nimport \"./chat.useCounter.js\";\n\nimport \"./chat.IFrameComponent.js\";\n\nimport \"@carbon/icons-react/es/Restart.js\";\n\nimport \"@carbon/web-components/es-custom/components/inline-loading/index.js\";\n\nimport \"@carbon/icons/es/checkmark--filled/16.js\";\n\nimport \"@carbon/icons/es/chevron--right/16.js\";\n\nimport \"@carbon/icons/es/error--filled/16.js\";\n\nimport \"@carbon/icons-react/es/Home.js\";\n\nimport \"@carbon/web-components/es-custom/components/slug/index.js\";\n\nimport \"@carbon/icons-react/es/CloseLarge.js\";\n\nimport \"@carbon/icons-react/es/DownToBottom.js\";\n\nimport \"@carbon/icons-react/es/Menu.js\";\n\nimport \"@carbon/icons-react/es/SidePanelClose.js\";\n\nimport \"@carbon/icons-react/es/SubtractLarge.js\";\n\nimport \"@carbon/web-components/es-custom/components/ai-label/defs.js\";\n\nimport \"@carbon/web-components/es-custom/components/popover/defs.js\";\n\nimport \"@carbon/web-components/es-custom/components/skeleton-icon/index.js\";\n\nimport \"@carbon/web-components/es-custom/components/overflow-menu/index.js\";\n\nimport \"@floating-ui/react\";\n\nimport \"@carbon/web-components/es-custom/components/ai-label/ai-label-action-button.js\";\n\nimport \"@carbon/web-components/es-custom/components/ai-label/ai-label.js\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function withoutEmptyStarters(config) {\n  let newConfig = config;\n  if (config?.starters?.buttons?.length) {\n    newConfig = {\n      allow_return: true,\n      ...config,\n      starters: {\n        ...config.starters,\n        buttons: config.starters.buttons.filter(button => Boolean(button.label?.trim()))\n      }\n    };\n    if (!newConfig?.starters?.buttons?.length) {\n      newConfig.starters.is_on = false;\n    }\n  }\n  return newConfig;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function setIntl(serviceManager, locale, messages) {\n  serviceManager.intl = createIntl({\n    locale: locale,\n    messages: messages\n  });\n  serviceManager.store.dispatch(actions.setAppStateValue(\"languagePack\", messages));\n  serviceManager.store.dispatch(actions.setAppStateValue(\"locale\", locale));\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function createChatInstance({serviceManager: serviceManager, callRender: callRender}) {\n  let wasRendered = false;\n  function getMainWindow() {\n    return {\n      addClassName: name => serviceManager.mainWindow?.addClassName(name),\n      removeClassName: name => serviceManager.mainWindow?.removeClassName(name)\n    };\n  }\n  function getMessageInput() {\n    return {\n      getHTMLElement: () => serviceManager.mainWindow?.getMessageInput()?.getHTMLElement(),\n      setValue: value => serviceManager.mainWindow?.getMessageInput()?.setValue(value),\n      setEnableEnterKey: value => serviceManager.mainWindow?.getMessageInput()?.setEnableEnterKey(value),\n      addChangeListener: listener => serviceManager.mainWindow?.getMessageInput()?.addChangeListener(listener),\n      removeChangeListener: listener => serviceManager.mainWindow?.getMessageInput()?.removeChangeListener(listener)\n    };\n  }\n  function getHomeScreenInput() {\n    return {\n      getHTMLElement: () => serviceManager.mainWindow?.getHomeScreenInput()?.getHTMLElement(),\n      setValue: value => serviceManager.mainWindow?.getHomeScreenInput()?.setValue(value),\n      setEnableEnterKey: value => serviceManager.mainWindow?.getHomeScreenInput()?.setEnableEnterKey(value),\n      addChangeListener: listener => serviceManager.mainWindow?.getHomeScreenInput()?.addChangeListener(listener),\n      removeChangeListener: listener => serviceManager.mainWindow?.getHomeScreenInput()?.removeChangeListener(listener)\n    };\n  }\n  let instance = {\n    render: () => {\n      if (wasRendered) {\n        consoleError(\"The render function has already been called!\");\n        return Promise.resolve(instance);\n      }\n      wasRendered = true;\n      return callRender();\n    },\n    on: handlers => {\n      serviceManager.eventBus.on(handlers);\n      return instance;\n    },\n    off: handlers => {\n      serviceManager.eventBus.off(handlers);\n      return instance;\n    },\n    once: handlers => {\n      serviceManager.eventBus.once(handlers);\n      return instance;\n    },\n    updateLanguagePack: newPack => {\n      debugLog(\"Called instance.updateLanguagePack\", newPack);\n      return serviceManager.actions.updateLanguagePack(newPack);\n    },\n    updateLocale: newLocale => {\n      debugLog(\"Called instance.updateLocale\", newLocale);\n      const localePromise = loadLocale(newLocale);\n      const languagePackPromise = loadLanguagePack(serviceManager.store.getState().languagePack);\n      return Promise.all([ localePromise, languagePackPromise ]).then(([localePack, languagePack]) => {\n        dayjs.locale(localePack);\n        setIntl(serviceManager, localePack.name, languagePack);\n        serviceManager.messageService.pendingLocale = true;\n        serviceManager.messageService.localeIsExplicit = true;\n      });\n    },\n    updateCSSVariables: (variables, whiteLabelVariables) => {\n      debugLog(\"Called instance.updateCSSVariables\", variables);\n      return serviceManager.actions.updateCSSVariables(variables, whiteLabelVariables);\n    },\n    send: async (message, options) => {\n      debugLog(\"Called instance.send\", message, options);\n      if (selectInputState(serviceManager.store.getState()).isReadonly) {\n        throw new Error(\"You are unable to send messages in read only mode.\");\n      }\n      return serviceManager.actions.send(message, MessageSendSource.INSTANCE_SEND, options);\n    },\n    doAutoScroll: (options = {}) => {\n      debugLog(\"Called instance.doAutoScroll\", options);\n      serviceManager.mainWindow?.doAutoScroll?.(options);\n    },\n    destroy: () => {\n      debugLog(\"Called instance.destroy\");\n      serviceManager.store.dispatch(actions.setAppStateValue(\"isDestroyed\", true));\n      serviceManager.container?.remove();\n      instance = undefined;\n    },\n    updateAssistantInputFieldVisibility: isVisible => {\n      debugLog(\"Called instance.updateAssistantInputFieldVisibility\", isVisible);\n      serviceManager.store.dispatch(actions.updateInputState({\n        fieldVisible: isVisible\n      }, false));\n    },\n    updateInputIsDisabled: isDisabled => {\n      debugLog(\"Called instance.updateInputIsDisabled\", isDisabled);\n      serviceManager.store.dispatch(actions.updateInputState({\n        isReadonly: isDisabled\n      }, false));\n    },\n    updateBotUnreadIndicatorVisibility: isVisible => {\n      debugLog(\"Called instance.updateBotUnreadIndicatorVisibility\", isVisible);\n      serviceManager.store.dispatch(actions.setLauncherProperty(\"showUnreadIndicator\", isVisible));\n    },\n    changeView: async newView => {\n      debugLog(\"Called instance.changeView\", newView);\n      let issueWithNewView = false;\n      if (!wasRendered) {\n        consoleError(`You tried to call \"changeView\" without ever having called the \"render\" method. There is no view to change!`);\n        issueWithNewView = true;\n      }\n      const viewTypeValues = Object.values(ViewType);\n      if (typeof newView === \"string\") {\n        if (!viewTypeValues.includes(newView)) {\n          consoleError(`You tried to change the view but the view you specified is not a valid view name. Please use` + ` the valid view names; ${viewTypeValues.join(\", \")}.`);\n          issueWithNewView = true;\n        }\n      } else if (typeof newView === \"object\") {\n        Object.keys(newView).forEach(key => {\n          if (!viewTypeValues.includes(key)) {\n            consoleError(`You tried to change the state of multiple views by providing an object, however you included the key` + ` \"${key}\" within the object which is not a valid view name. Please use the valid view names; ` + `${viewTypeValues.join(\", \")}.`);\n            issueWithNewView = true;\n          }\n        });\n      } else {\n        consoleError(\"You tried to change the view but the view you provided was not a string or an object. You can either change\" + ' to one of the supported views by providing a string, ex. \"launcher\", \"mainWindow\", or \"tour\". Or you can' + ' change the state of multiple views by providing an object, ex. { \"launcher\": true, \"mainWindow\": false,' + ' \"tour\": true }. Please use one of these supported options.');\n        issueWithNewView = true;\n      }\n      if (!issueWithNewView) {\n        await serviceManager.actions.changeView(newView, {\n          viewChangeReason: ViewChangeReason.CALLED_CHANGE_VIEW\n        });\n      }\n    },\n    notifications: {\n      addNotification: notification => {\n        debugLog(\"Called instance.addNotification\", notification);\n        serviceManager.actions.addNotification(notification);\n      },\n      removeNotifications: groupID => {\n        debugLog(\"Called instance.removeNotifications\", groupID);\n        serviceManager.actions.removeNotification(groupID);\n      },\n      removeAllNotifications: () => {\n        debugLog(\"Called instance.removeAllNotifications\");\n        serviceManager.actions.removeAllNotifications();\n      }\n    },\n    updateMainHeaderTitle: title => {\n      debugLog(\"Called instance.updateMainHeaderTitle\", title);\n      if (!title) {\n        title = null;\n      }\n      serviceManager.actions.updateMainHeaderTitle(title);\n    },\n    updateHomeScreenConfig: homeScreenConfig => {\n      debugLog(\"Called instance.updateHomeScreenConfig\", homeScreenConfig);\n      const homeScreenConfigClone = cloneDeep(homeScreenConfig);\n      const isAIThemeEnabled = serviceManager.store.getState().theme.useAITheme;\n      if (isAIThemeEnabled) {\n        if (homeScreenConfig?.background) {\n          consoleWarn(\"The home screen background can not be changed when the AI theme is enabled.\");\n          delete homeScreenConfigClone.background;\n        }\n      }\n      serviceManager.actions.updateHomeScreenConfig(withoutEmptyStarters(homeScreenConfigClone));\n    },\n    getState: () => serviceManager.actions.getPublicWebChatState(),\n    writeableElements: createWriteableElementsProxy(serviceManager),\n    scrollToMessage: (messageID, animate) => {\n      debugLog(\"Called instance.scrollToMessage\", messageID, animate);\n      serviceManager.mainWindow?.doScrollToMessage(messageID, animate);\n    },\n    updateLauncherConfig: config => serviceManager.actions.updateLauncherConfig(config),\n    customPanels: serviceManager.customPanelManager,\n    updateCustomMenuOptions: options => {\n      debugLog(\"Called instance.updateCustomMenuOptions\", options);\n      serviceManager.store.dispatch(actions.setAppStateValue(\"customMenuOptions\", options));\n    },\n    restartConversation: async () => {\n      debugLog(\"Called instance.restartConversation\");\n      return serviceManager.actions.restartConversation();\n    },\n    agentEndConversation: () => {\n      debugLog(\"Called instance.agentEndConversation\");\n      consoleWarn(`The instance.agentEndConversation method is deprecated. Use instance.serviceDesk.endConversation instead.`);\n      return serviceManager.actions.agentEndConversation(false);\n    },\n    updateIsTypingCounter(direction) {\n      debugLog(\"Called instance.updateIsTypingCounter\", direction);\n      const {store: store} = serviceManager;\n      if (direction === \"increase\") {\n        store.dispatch(actions.addIsTypingCounter(1));\n      } else if (direction === \"decrease\") {\n        if (store.getState().botMessageState.isTypingCounter <= 0) {\n          consoleError(\"You cannot decrease the typing counter when it is already <= 0\");\n          return;\n        }\n        store.dispatch(actions.addIsTypingCounter(-1));\n      } else {\n        consoleError(`[updateIsTypingCounter] Invalid direction: ${direction}. Valid values are \"increase\" and \"decrease\".`);\n      }\n    },\n    updateIsLoadingCounter(direction) {\n      debugLog(\"Called instance.updateIsLoadingCounter\", direction);\n      const {store: store} = serviceManager;\n      if (direction === \"increase\") {\n        store.dispatch(actions.addIsLoadingCounter(1));\n      } else if (direction === \"decrease\") {\n        if (store.getState().botMessageState.isLoadingCounter <= 0) {\n          consoleError(\"You cannot decrease the loading counter when it is already <= 0\");\n          return;\n        }\n        store.dispatch(actions.addIsLoadingCounter(-1));\n      } else {\n        consoleError(`[updateIsLoadingCounter] Invalid direction: ${direction}. Valid values are \"increase\" and \"decrease\".`);\n      }\n    },\n    updateIsChatLoadingCounter(direction) {\n      debugLog(\"Called instance.updateIsChatLoadingCounter\", direction);\n      const {store: store} = serviceManager;\n      if (direction === \"increase\") {\n        store.dispatch(actions.addIsHydratingCounter(1));\n      } else if (direction === \"decrease\") {\n        if (store.getState().botMessageState.isHydratingCounter <= 0) {\n          consoleError(\"You cannot decrease the hydrating counter when it is already <= 0\");\n          return;\n        }\n        store.dispatch(actions.addIsHydratingCounter(-1));\n      } else {\n        consoleError(`[updateIsChatLoadingCounter] Invalid direction: ${direction}. Valid values are \"increase\" and \"decrease\".`);\n      }\n    },\n    updateHeaderConfig: config => {\n      const configCopy = cloneDeep(config);\n      serviceManager.store.dispatch(actions.updateChatHeaderConfig(configCopy));\n    },\n    updateMainHeaderAvatar: config => {\n      serviceManager.store.dispatch(actions.updateMainHeaderAvatar(config));\n    },\n    updateBotName: name => serviceManager.actions.updateBotName(name),\n    updateBotAvatarURL: url => serviceManager.actions.updateBotAvatarURL(url),\n    elements: {\n      getMainWindow: getMainWindow,\n      getMessageInput: getMessageInput,\n      getHomeScreenInput: getHomeScreenInput\n    },\n    tours: {\n      startTour: async message => {\n        debugLog(\"Called instance.tours.startTour\", message);\n        await serviceManager.actions.send(message, MessageSendSource.START_TOUR_METHOD, {\n          skipTourCard: true\n        });\n      },\n      endTour: async () => {\n        debugLog(\"Called instance.tours.endTour\");\n        serviceManager.actions.endTour({\n          viewChangeReason: ViewChangeReason.CALLED_END_TOUR\n        });\n      },\n      goToNextStep: async () => {\n        debugLog(\"Called instance.tours.goToNextStep\");\n        serviceManager.actions.changeStepInTour({\n          nextStep: true\n        });\n      },\n      goToStep: async stepId => {\n        debugLog(\"Called instance.tours.goToStep\", stepId);\n        serviceManager.actions.goToSpecificTourStep(stepId);\n      }\n    },\n    messaging: {\n      addMessage: (message, options = {}) => {\n        debugLog(\"Called instance.messaging.addMessage\", message, options);\n        serviceManager.messageService.messageLoadingManager.end();\n        return serviceManager.actions.receive(message, options?.isLatestWelcomeNode ?? false, null, {\n          disableFadeAnimation: options?.disableFadeAnimation\n        });\n      },\n      addMessageChunk: async (chunk, options = {}) => {\n        debugLog(\"Called instance.messaging.addMessageChunk\", chunk, options);\n        serviceManager.messageService.messageLoadingManager.end();\n        await serviceManager.actions.receiveChunk(chunk, null, options);\n      },\n      removeMessages: async messageIDs => {\n        debugLog(\"Called instance.messaging.removeMessages\", messageIDs);\n        return serviceManager.actions.removeMessages(messageIDs);\n      },\n      clearConversation: () => {\n        debugLog(\"Called instance.messaging.clearConversation\");\n        return serviceManager.actions.restartConversation({\n          skipHydration: true,\n          endHumanAgentConversation: false,\n          fireEvents: false\n        });\n      },\n      insertHistory: messages => {\n        debugLog(\"Called instance.messaging.insertHistory\", messages);\n        return serviceManager.actions.insertHistory(messages);\n      }\n    },\n    requestFocus: () => {\n      debugLog(\"Called instance.requestFocus\");\n      serviceManager.appWindow?.requestFocus();\n    },\n    serviceDesk: {\n      endConversation: () => {\n        debugLog(\"Called instance.serviceDesk.endConversation\");\n        return serviceManager.actions.agentEndConversation(false);\n      },\n      updateIsSuspended: async isSuspended => {\n        debugLog(\"Called instance.serviceDesk.updateIsSuspended\", isSuspended);\n        return serviceManager.actions.agentUpdateIsSuspended(isSuspended);\n      }\n    }\n  };\n  if (serviceManager.store.getState().config.public.debug) {\n    consoleDebug(\"[ChatInstanceImpl] Created chat instance\", instance);\n  }\n  return instance;\n}\n\nfunction createWriteableElementsProxy(serviceManager) {\n  const elementSet = new Set;\n  const handler = {\n    get(target, element) {\n      if (!elementSet.has(element)) {\n        elementSet.add(element);\n      }\n      return target[element];\n    }\n  };\n  return new Proxy(serviceManager.writeableElements, handler);\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const NODE_ENV = \"production\";\n\nconst VERSION = \"0.4.0\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ var NotificationType;\n\n(function(NotificationType) {\n  NotificationType[\"TEXT_NOTIFICATION\"] = \"text_notification\";\n})(NotificationType || (NotificationType = {}));\n\nconst BOUNCING_ANIMATION_TIMEOUTS = [ 15e3, 6e4 ];\n\nconst TIME_TO_ENTRANCE_ANIMATION_START = 15e3;\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const DEFAULT_LAUNCHER = {\n  config: {\n    is_on: true,\n    mobile: {\n      is_on: true,\n      title: \"\",\n      time_to_expand: TIME_TO_ENTRANCE_ANIMATION_START,\n      new_expand_time: false,\n      time_to_reduce: 1e4,\n      notification_type: NotificationType.TEXT_NOTIFICATION\n    },\n    desktop: {\n      is_on: true,\n      title: \"\",\n      new_expand_time: false,\n      time_to_expand: TIME_TO_ENTRANCE_ANIMATION_START,\n      notification_type: NotificationType.TEXT_NOTIFICATION\n    }\n  }\n};\n\ndeepFreeze(DEFAULT_LAUNCHER);\n\nconst DEFAULT_CUSTOM_PANEL_CONFIG_OPTIONS = {\n  title: null,\n  hideBackButton: false,\n  hidePanelHeader: false,\n  disableAnimation: false\n};\n\ndeepFreeze(DEFAULT_CUSTOM_PANEL_CONFIG_OPTIONS);\n\nconst DEFAULT_CUSTOM_PANEL_STATE = {\n  isOpen: false,\n  panelID: DEFAULT_CUSTOM_PANEL_ID,\n  options: DEFAULT_CUSTOM_PANEL_CONFIG_OPTIONS\n};\n\ndeepFreeze(DEFAULT_CUSTOM_PANEL_STATE);\n\nconst DEFAULT_IFRAME_PANEL_STATE = {\n  isOpen: false,\n  messageItem: null\n};\n\ndeepFreeze(DEFAULT_IFRAME_PANEL_STATE);\n\nconst DEFAULT_CITATION_PANEL_STATE = {\n  isOpen: false,\n  citationItem: null\n};\n\ndeepFreeze(DEFAULT_CITATION_PANEL_STATE);\n\nconst DEFAULT_TOUR_STATE = {\n  activeTourStepItems: null\n};\n\ndeepFreeze(DEFAULT_TOUR_STATE);\n\nconst DEFAULT_MESSAGE_PANEL_STATE = {\n  isOpen: false,\n  localMessageItem: null,\n  isMessageForInput: false\n};\n\ndeepFreeze(DEFAULT_MESSAGE_PANEL_STATE);\n\nconst VIEW_STATE_ALL_CLOSED = {\n  launcher: false,\n  mainWindow: false,\n  tour: false\n};\n\ndeepFreeze(VIEW_STATE_ALL_CLOSED);\n\nconst VIEW_STATE_LAUNCHER_OPEN = {\n  launcher: true,\n  mainWindow: false,\n  tour: false\n};\n\ndeepFreeze(VIEW_STATE_LAUNCHER_OPEN);\n\nconst VIEW_STATE_MAIN_WINDOW_OPEN = {\n  mainWindow: true,\n  launcher: false,\n  tour: false\n};\n\ndeepFreeze(VIEW_STATE_MAIN_WINDOW_OPEN);\n\nconst DEFAULT_PERSISTED_TO_BROWSER = {\n  chatState: {\n    version: VERSION,\n    disclaimersAccepted: {},\n    homeScreenState: {\n      isHomeScreenOpen: false,\n      showBackToBot: false\n    },\n    hasSentNonWelcomeMessage: false,\n    persistedTourState: {\n      activeTourID: null,\n      activeTourCurrentStepIndex: null\n    },\n    humanAgentState: {\n      isConnected: false,\n      isSuspended: false,\n      responseUserProfiles: {}\n    }\n  },\n  launcherState: {\n    wasLoadedFromBrowser: false,\n    version: VERSION,\n    viewState: VIEW_STATE_ALL_CLOSED,\n    activeTour: false,\n    showUnreadIndicator: false,\n    mobileLauncherIsExtended: false,\n    mobileLauncherWasReduced: false,\n    mobileLauncherDisableBounce: false,\n    desktopLauncherIsExpanded: false,\n    desktopLauncherWasMinimized: false,\n    bounceTurn: 1,\n    hasSentNonWelcomeMessage: false\n  }\n};\n\ndeepFreeze(DEFAULT_PERSISTED_TO_BROWSER);\n\nconst DEFAULT_CHAT_MESSAGES_STATE = {\n  localMessageIDs: [],\n  messageIDs: [],\n  isTypingCounter: 0,\n  isLoadingCounter: 0,\n  isHydratingCounter: 0,\n  isScrollAnchored: false\n};\n\ndeepFreeze(DEFAULT_CHAT_MESSAGES_STATE);\n\nconst DEFAULT_MESSAGE_STATE = {\n  allMessageItemsByID: {},\n  allMessagesByID: {},\n  botMessageState: {\n    ...DEFAULT_CHAT_MESSAGES_STATE\n  }\n};\n\ndeepFreeze(DEFAULT_MESSAGE_STATE);\n\nconst DEFAULT_INPUT_STATE = () => ({\n  fieldVisible: true,\n  isReadonly: false,\n  files: [],\n  allowFileUploads: false,\n  allowMultipleFileUploads: false,\n  allowedFileUploadTypes: null,\n  stopStreamingButtonState: {\n    currentStreamID: null,\n    isVisible: false,\n    isDisabled: false\n  }\n});\n\nconst DEFAULT_HUMAN_AGENT_STATE = {\n  isConnecting: false,\n  isReconnecting: false,\n  numUnreadMessages: 0,\n  fileUploadInProgress: false,\n  showScreenShareRequest: false,\n  isScreenSharing: false,\n  isHumanAgentTyping: false,\n  inputState: DEFAULT_INPUT_STATE()\n};\n\ndeepFreeze(DEFAULT_HUMAN_AGENT_STATE);\n\nconst DEFAULT_THEME_STATE = {\n  carbonTheme: CarbonTheme.G10,\n  useAITheme: false,\n  corners: CornersType.ROUND\n};\n\ndeepFreeze(DEFAULT_THEME_STATE);\n\nconst DEFAULT_LAYOUT_STATE = {\n  showFrame: true,\n  hasContentMaxWidth: true\n};\n\ndeepFreeze(DEFAULT_LAYOUT_STATE);\n\nfunction calcAnnouncementForWidgetOpen(previousState, newViewState) {\n  if (isEqual(previousState.persistedToBrowserStorage.launcherState.viewState, newViewState)) {\n    return previousState.announceMessage;\n  }\n  return {\n    messageID: newViewState.mainWindow ? \"window_ariaWindowOpened\" : \"window_ariaWindowClosed\"\n  };\n}\n\nfunction applyBotMessageState(state, newState) {\n  return {\n    ...state,\n    botMessageState: {\n      ...state.botMessageState,\n      ...newState\n    }\n  };\n}\n\nfunction handleViewStateChange(state, viewState) {\n  let {humanAgentState: humanAgentState} = state;\n  let {showUnreadIndicator: showUnreadIndicator} = state.persistedToBrowserStorage.launcherState;\n  if (viewState.mainWindow && state.isBrowserPageVisible) {\n    if (humanAgentState.numUnreadMessages !== 0) {\n      humanAgentState = {\n        ...humanAgentState,\n        numUnreadMessages: 0\n      };\n    }\n    showUnreadIndicator = false;\n  }\n  return {\n    ...state,\n    announceMessage: calcAnnouncementForWidgetOpen(state, viewState),\n    humanAgentState: humanAgentState,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      launcherState: {\n        ...state.persistedToBrowserStorage.launcherState,\n        viewState: viewState,\n        showUnreadIndicator: showUnreadIndicator\n      }\n    }\n  };\n}\n\nfunction setHomeScreenOpenState(state, isOpen, showBackToBot) {\n  if (showBackToBot === undefined) {\n    showBackToBot = state.persistedToBrowserStorage.chatState.homeScreenState.showBackToBot;\n  }\n  return {\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      chatState: {\n        ...state.persistedToBrowserStorage.chatState,\n        homeScreenState: {\n          ...state.persistedToBrowserStorage.chatState.homeScreenState,\n          isHomeScreenOpen: isOpen,\n          showBackToBot: showBackToBot\n        }\n      }\n    }\n  };\n}\n\nfunction applyLocalMessageUIState(state, localMessageID, propertyName, propertyValue) {\n  const oldMessage = state.allMessageItemsByID[localMessageID];\n  if (oldMessage) {\n    return {\n      ...state,\n      allMessageItemsByID: {\n        ...state.allMessageItemsByID,\n        [localMessageID]: {\n          ...oldMessage,\n          ui_state: {\n            ...oldMessage.ui_state,\n            [propertyName]: propertyValue\n          }\n        }\n      }\n    };\n  }\n  return state;\n}\n\nfunction applyFullMessage(state, message) {\n  const newState = {\n    ...state,\n    allMessagesByID: {\n      ...state.allMessagesByID,\n      [message.id]: message\n    }\n  };\n  if (!state.allMessagesByID[message.id]) {\n    const currentMessageIDs = state.botMessageState.messageIDs;\n    const newMessageIDs = [ ...currentMessageIDs, message.id ];\n    return applyBotMessageState(newState, {\n      messageIDs: newMessageIDs\n    });\n  }\n  return newState;\n}\n\nvar white = \"#ffffff\";\n\nvar blue60 = \"#0f62fe\";\n\nvar gray10 = \"#f4f4f4\";\n\nvar gray80 = \"#393939\";\n\nvar gray100 = \"#161616\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const MIN_CONTRAST = 4.5;\n\nfunction hexCodeToRGB(color) {\n  if (color.length === 7) {\n    const red = color.substring(1, 3);\n    const blue = color.substring(3, 5);\n    const green = color.substring(5, 7);\n    return [ parseInt(red, 16), parseInt(blue, 16), parseInt(green, 16) ];\n  }\n  if (color.length === 4) {\n    const red = color.substring(1, 2);\n    const blue = color.substring(2, 3);\n    const green = color.substring(3, 4);\n    return [ parseInt(red + red, 16), parseInt(blue + blue, 16), parseInt(green + green, 16) ];\n  }\n  consoleError(`Unsupported color code: \"${color}\"`);\n  return [ 0, 0, 0 ];\n}\n\nfunction calculateContrast(color1, color2) {\n  const rgb1 = hexCodeToRGB(color1);\n  const rgb2 = hexCodeToRGB(color2);\n  const luminance1 = calculateRelativeLuminance(rgb1);\n  const luminance2 = calculateRelativeLuminance(rgb2);\n  let contrast;\n  if (luminance1 > luminance2) {\n    contrast = (luminance1 + .05) / (luminance2 + .05);\n  } else {\n    contrast = (luminance2 + .05) / (luminance1 + .05);\n  }\n  return contrast;\n}\n\nfunction calculateRelativeLuminance([r8, g8, b8]) {\n  const rRGB = r8 / 255;\n  const gRGB = g8 / 255;\n  const bRGB = b8 / 255;\n  const R = rRGB <= .03928 ? rRGB / 12.92 : ((rRGB + .055) / 1.055) ** 2.4;\n  const G = gRGB <= .03928 ? gRGB / 12.92 : ((gRGB + .055) / 1.055) ** 2.4;\n  const B = bRGB <= .03928 ? bRGB / 12.92 : ((bRGB + .055) / 1.055) ** 2.4;\n  const luminance = .2126 * R + .7152 * G + .0722 * B;\n  return luminance;\n}\n\nfunction whiteOrBlackText(background) {\n  return calculateContrast(gray100, background) >= MIN_CONTRAST ? gray100 : white;\n}\n\nfunction adjustLightness(token, shift) {\n  const original = Color(token).hsl().object();\n  return Color({\n    ...original,\n    l: original.l + shift\n  }).round().hex().toLowerCase();\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const CSS_VAR_PREFIX = \"--cds-\";\n\nconst CSS_CHAT_PREFIX = \"chat-\";\n\nconst HEXADECIMAL_REGEX = /#([a-f0-9]{3}){1,2}\\b/i;\n\nconst INTERNAL_OVERRIDES_LIGHT_THEME_MAP = {\n  \"$chat-button\": \"#000000\",\n  \"$chat-button-text-hover\": \"#525252\"\n};\n\nconst INTERNAL_OVERRIDES_DARK_THEME_MAP = {\n  \"$chat-button\": \"#ffffff\",\n  \"$chat-button-text-hover\": \"#f4f4f4\"\n};\n\nfunction convertCSSVariablesToString(cssVariables) {\n  const pieces = Object.keys(cssVariables).map(key => {\n    const value = cssVariables[key];\n    if (value === undefined) {\n      return \"\";\n    }\n    const fullName = key.startsWith(\"$\") ? `${CSS_VAR_PREFIX}${key.replace(/^\\$/, \"\")}` : `${CSS_VAR_PREFIX}${CSS_CHAT_PREFIX}${key}`;\n    return `${fullName}:${value};`;\n  });\n  let cssVariablesString = \"\";\n  const allValues = pieces.join(\"\");\n  const prefix = \"\";\n  if (allValues.length > 0) {\n    const rule = `${prefix}.WACContainer .cds--white, ${prefix}.WACContainer .cds--g10, ${prefix}.WACContainer .cds--g90, ${prefix}.WACContainer .cds--g100`;\n    cssVariablesString = `${rule}${`, :host`}{${allValues}}`;\n  }\n  return cssVariablesString;\n}\n\nfunction remoteStylesToCSSVars(whiteLabelVariables, carbonTheme) {\n  const cssOverrides = {};\n  const primaryColor = whiteLabelVariables[\"BASE-primary-color\"];\n  const secondaryColor = whiteLabelVariables[\"BASE-secondary-color\"];\n  const accentColor = whiteLabelVariables[\"BASE-accent-color\"];\n  if (primaryColor) {\n    cssOverrides[\"PRIMARY-color\"] = primaryColor;\n    cssOverrides[\"PRIMARY-color-text\"] = whiteOrBlackText(primaryColor);\n    cssOverrides[\"PRIMARY-color-hover\"] = adjustLightness(primaryColor, -8);\n    cssOverrides[\"PRIMARY-color-active\"] = adjustLightness(primaryColor, -10);\n    const useAccentColor = accentColor || blue60;\n    const tryFocusColor = carbonTheme === CarbonTheme.G90 || carbonTheme === CarbonTheme.G100 ? white : useAccentColor;\n    let useFocusColor;\n    if (calculateContrast(primaryColor, tryFocusColor) >= MIN_CONTRAST) {\n      useFocusColor = tryFocusColor;\n    } else if (tryFocusColor !== useAccentColor && calculateContrast(primaryColor, useAccentColor) >= MIN_CONTRAST) {\n      useFocusColor = useAccentColor;\n    } else if (tryFocusColor !== white && calculateContrast(primaryColor, white) >= MIN_CONTRAST) {\n      useFocusColor = white;\n    } else {\n      useFocusColor = gray100;\n    }\n    if (useFocusColor !== tryFocusColor) {\n      cssOverrides[\"PRIMARY-color-focus\"] = useFocusColor;\n    }\n  }\n  if (secondaryColor) {\n    cssOverrides[\"SECONDARY-color\"] = secondaryColor;\n    cssOverrides[\"SECONDARY-color-text\"] = whiteOrBlackText(secondaryColor);\n  } else if (carbonTheme === CarbonTheme.G90 || carbonTheme === CarbonTheme.G100) {\n    cssOverrides[\"SECONDARY-color\"] = `var(${CSS_VAR_PREFIX}layer-02)`;\n    cssOverrides[\"SECONDARY-color-text\"] = `var(${CSS_VAR_PREFIX}text-primary);`;\n  }\n  if (accentColor) {\n    const colorMap = ACCENT_COLOR_MAPS[carbonTheme];\n    const accentBlue20 = adjustLightness(accentColor, 40);\n    const accentBlue60Hover = adjustLightness(accentColor, -8);\n    const accentBlue80 = adjustLightness(accentColor, -20);\n    fillValues(cssOverrides, colorMap.blue20, accentBlue20);\n    fillValues(cssOverrides, colorMap.blue60, accentColor);\n    fillValues(cssOverrides, colorMap.blue60Hover, accentBlue60Hover);\n    fillValues(cssOverrides, colorMap.blue80, accentBlue80);\n    cssOverrides[\"LAUNCHER-color-background\"] = accentColor;\n    cssOverrides[\"LAUNCHER-color-background-hover\"] = accentBlue60Hover;\n    cssOverrides[\"LAUNCHER-color-background-active\"] = accentBlue80;\n    cssOverrides[\"LAUNCHER-EXPANDED-MESSAGE-color-background\"] = accentColor;\n    cssOverrides[\"LAUNCHER-EXPANDED-MESSAGE-color-hover\"] = accentBlue60Hover;\n    cssOverrides[\"LAUNCHER-EXPANDED-MESSAGE-color-active\"] = accentBlue80;\n    cssOverrides[\"ACCENT-color\"] = accentColor;\n    const accentColorRGB = hexCodeToRGB(accentColor);\n    cssOverrides[\"ACCENT-color-r\"] = accentColorRGB[0].toString();\n    cssOverrides[\"ACCENT-color-g\"] = accentColorRGB[1].toString();\n    cssOverrides[\"ACCENT-color-b\"] = accentColorRGB[2].toString();\n    cssOverrides[\"ACCENT-color-ghost-text\"] = accentColor;\n    const accentColorBW = whiteOrBlackText(accentColor);\n    cssOverrides[\"ACCENT-color-text\"] = accentColorBW;\n    cssOverrides[\"ACCENT-color-background-hover\"] = accentBlue60Hover;\n    cssOverrides[\"ACCENT-color-background-active\"] = accentBlue80;\n    cssOverrides[\"LAUNCHER-color-focus-border\"] = accentColorBW;\n    cssOverrides[\"LAUNCHER-color-avatar\"] = accentColorBW;\n    cssOverrides[\"LAUNCHER-EXPANDED-MESSAGE-color-text\"] = accentColorBW;\n    cssOverrides[\"LAUNCHER-EXPANDED-MESSAGE-color-focus-border\"] = accentColorBW;\n    cssOverrides[\"LAUNCHER-MOBILE-color-text\"] = accentColorBW;\n    cssOverrides[\"ACCENT-color-bw\"] = accentColorBW;\n    cssOverrides[\"ACCENT-color-bw-hover\"] = adjustLightness(accentColorBW, -8);\n    cssOverrides[\"ACCENT-color-bw-active\"] = adjustLightness(accentColorBW, -10);\n    cssOverrides[\"ACCENT-color-bw-inverse\"] = accentColorBW === gray100 ? white : gray100;\n    cssOverrides[\"ACCENT-color-bw-gray\"] = accentColorBW === gray100 ? gray80 : gray10;\n    cssOverrides[\"ACCENT-color-pastel\"] = accentColorBW === gray100 ? adjustLightness(accentColor, 20) : adjustLightness(accentColor, -15);\n  }\n  return cssOverrides;\n}\n\nconst ACCENT_COLOR_MAPS = {\n  white: {\n    blue20: [ \"$highlight\" ],\n    blue60: [ \"$background-brand\", \"$interactive\", \"$border-interactive\", \"$button-primary\", \"$button-tertiary\", \"$icon-interactive\", \"$focus\" ],\n    blue60Hover: [ \"$button-primary-hover\", \"$button-tertiary-hover\" ],\n    blue80: [ \"$button-primary-active\", \"$button-tertiary-active\" ]\n  },\n  g10: {\n    blue20: [ \"$highlight\" ],\n    blue60: [ \"$background-brand\", \"$interactive\", \"$border-interactive\", \"$button-primary\", \"$button-tertiary\", \"$icon-interactive\", \"$focus\" ],\n    blue60Hover: [ \"$button-primary-hover\", \"$button-tertiary-hover\" ],\n    blue80: [ \"$button-primary-active\", \"$button-tertiary-active\" ]\n  },\n  g90: {\n    blue20: [],\n    blue60: [ \"$background-brand\", \"$interactive\", \"$border-interactive\", \"$button-primary\", \"$button-tertiary\", \"$focus-inverse\" ],\n    blue60Hover: [ \"$button-primary-hover\", \"$button-tertiary-hover\" ],\n    blue80: [ \"$button-primary-active\", \"$highlight\", \"$button-tertiary-active\" ]\n  },\n  g100: {\n    blue20: [],\n    blue60: [ \"$background-brand\", \"$interactive\", \"$border-interactive\", \"$button-primary\", \"$button-tertiary\", \"$focus-inverse\" ],\n    blue60Hover: [ \"$button-primary-hover\", \"$button-tertiary-hover\" ],\n    blue80: [ \"$button-primary-active\", \"$highlight\", \"$button-tertiary-active\" ]\n  }\n};\n\nfunction fillValues(styles, propertyNames, value) {\n  propertyNames.forEach(propertyName => {\n    styles[propertyName] = value;\n  });\n}\n\nfunction mergeCSSVariables(publicVars, whiteLabelVariables, carbonTheme, useAITheme) {\n  carbonTheme = carbonTheme || CarbonTheme.G10;\n  useAITheme = useAITheme || false;\n  publicVars = publicVars || {};\n  const internalOverrides = createInternalCSSOverridesMap(carbonTheme, useAITheme);\n  const result = {\n    ...internalOverrides,\n    ...publicVars\n  };\n  Object.entries(result).forEach(([key, value]) => {\n    if (key.startsWith(\"$\") && !value.match(HEXADECIMAL_REGEX)) {\n      console.warn(`${WA_CONSOLE_PREFIX} You tried to call \"updateCSSVariables\" with an invalid value for \"${key}\": \"${publicVars[key]}\". You must use hexadecimal values for colors.`);\n      delete result[key];\n    }\n  });\n  const remoteVars = remoteStylesToCSSVars(whiteLabelVariables || {}, carbonTheme);\n  Object.entries(remoteVars).forEach(([key, value]) => {\n    if (value !== \"\" && publicVars[key] === undefined) {\n      result[key] = value;\n    }\n  });\n  return result;\n}\n\nfunction createInternalCSSOverridesMap(carbonTheme, useAITheme) {\n  let internalOverridesMap = {};\n  if (!useAITheme) {\n    if ([ CarbonTheme.G10, CarbonTheme.WHITE ].includes(carbonTheme)) {\n      internalOverridesMap = {\n        ...internalOverridesMap,\n        ...INTERNAL_OVERRIDES_LIGHT_THEME_MAP\n      };\n    } else if ([ CarbonTheme.G90, CarbonTheme.G100 ].includes(carbonTheme)) {\n      internalOverridesMap = {\n        ...internalOverridesMap,\n        ...INTERNAL_OVERRIDES_DARK_THEME_MAP\n      };\n    }\n  }\n  return internalOverridesMap;\n}\n\nfunction getThemeClassNames(themeState) {\n  let themeClassnames;\n  switch (themeState?.carbonTheme) {\n   case CarbonTheme.WHITE:\n    themeClassnames = CarbonThemeClassNames.WHITE;\n    break;\n\n   case CarbonTheme.G10:\n    themeClassnames = CarbonThemeClassNames.G10;\n    break;\n\n   case CarbonTheme.G90:\n    themeClassnames = CarbonThemeClassNames.G90;\n    break;\n\n   case CarbonTheme.G100:\n    themeClassnames = CarbonThemeClassNames.G100;\n    break;\n\n   default:\n    themeClassnames = CarbonThemeClassNames.G10;\n    break;\n  }\n  if (themeState?.useAITheme) {\n    themeClassnames += \" WAC--aiTheme\";\n  }\n  return themeClassnames;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function constructViewState(newView, appState) {\n  const {viewState: viewState} = appState.persistedToBrowserStorage.launcherState;\n  let newViewState;\n  if (typeof newView === \"string\") {\n    newViewState = {\n      ...VIEW_STATE_ALL_CLOSED,\n      [newView]: true\n    };\n  } else {\n    newViewState = {\n      ...viewState,\n      ...newView\n    };\n  }\n  return newViewState;\n}\n\nfunction validateViewState(viewState, appState) {\n  const {activeTour: activeTour} = appState.persistedToBrowserStorage.launcherState;\n  if (viewState.tour && !activeTour) {\n    consoleError(\"Error changing the view. The new view was supposed to show a tour however there is no active tour to show.\" + \" Changing the view has been canceled.\");\n    return false;\n  }\n  return true;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const VALID_PUBLIC_VARS_IN_AI_THEME_SET = new Set(Object.values(CSSVariable));\n\nconst UPDATE_CSS_VARS_AI_THEME_WARNING_MESSAGE = `[updateCSSVariables] The AI theme is enabled and only ${Object.values(CSSVariable).join(\", \")} can be updated.`;\n\nclass ChatActionsImpl {\n  constructor(serviceManager) {\n    this.hydrating = false;\n    this.restarting = false;\n    this.alreadyHydrated = false;\n    this.chunkQueue = [];\n    this.serviceManager = serviceManager;\n  }\n  async hydrateChat(alternateWelcomeRequest, alternateWelcomeRequestSource, alternateOptions) {\n    let fireReady = false;\n    try {\n      if (!this.hydrationPromise) {\n        this.hydrating = true;\n        this.hydrationPromise = this.doHydrateChat(alternateWelcomeRequest, alternateWelcomeRequestSource, alternateOptions);\n        fireReady = true;\n      }\n      await this.hydrationPromise;\n    } finally {\n      this.hydrating = false;\n    }\n    if (fireReady) {\n      await this.serviceManager.fire({\n        type: BusEventType.CHAT_READY\n      });\n    }\n  }\n  async doHydrateChat(alternateWelcomeRequest, alternateWelcomeRequestSource, alternateOptions) {\n    debugLog(\"Hydrating Carbon AI chat\", alternateWelcomeRequest, alternateWelcomeRequestSource, alternateOptions);\n    let history;\n    const {serviceManager: serviceManager} = this;\n    serviceManager.store.dispatch(actions.addIsHydratingCounter(1));\n    if (!this.alreadyHydrated) {\n      history = await this.serviceManager.historyService.loadHistory();\n      if (serviceManager.humanAgentService) {\n        debugLog(\"Initializing the human agent service\");\n        await serviceManager.humanAgentService.initialize();\n      } else {\n        debugLog(\"No service desk integrations present\");\n      }\n    }\n    const {config: config} = serviceManager.store.getState();\n    if (!history) {\n      if (!alternateWelcomeRequest) {\n        const state = serviceManager.store.getState();\n        if (state.homeScreenConfig?.is_on) {\n          serviceManager.store.dispatch(actions.setHomeScreenIsOpen(true));\n        } else if (!config.public.messaging?.skipWelcome) {\n          await serviceManager.actions.send(createWelcomeRequest(), MessageSendSource.WELCOME_REQUEST, {\n            returnBeforeStreaming: true\n          }, true);\n        }\n      }\n    } else {\n      serviceManager.store.dispatch(actions.hydrateMessageHistory(history.messageHistory));\n      await this.createElementsForUserDefinedResponses(history.messageHistory);\n      if (history.latestPanelLocalMessageItem) {\n        this.openResponsePanel(history.latestPanelLocalMessageItem, true);\n      }\n    }\n    if (alternateWelcomeRequest) {\n      serviceManager.store.dispatch(actions.setHomeScreenIsOpen(false));\n      await serviceManager.actions.send(alternateWelcomeRequest, alternateWelcomeRequestSource, alternateOptions, true);\n    }\n    serviceManager.store.dispatch(actions.chatWasHydrated());\n    serviceManager.store.dispatch(actions.addIsHydratingCounter(-1));\n    if (history) {\n      const lastMessageID = arrayLastValue(history.messageHistory.botMessageState.localMessageIDs);\n      const lastMessage = history.messageHistory.allMessageItemsByID[lastMessageID];\n      const lastOriginalMessage = history.messageHistory.allMessagesByID[lastMessage?.fullMessageID];\n      if (!isLiveHumanAgentMessage(lastMessage) && isRequest(lastOriginalMessage)) {\n        serviceManager.messageService.resendMessage(lastOriginalMessage, lastMessage.ui_state.id);\n      }\n    }\n    const allowReconnect = config.public.serviceDesk.allowReconnect ?? true;\n    this.serviceManager?.humanAgentService?.handleHydration(allowReconnect, Boolean(history));\n    this.alreadyHydrated = true;\n  }\n  getPublicWebChatState() {\n    const state = this.serviceManager.store.getState();\n    const {persistedToBrowserStorage: persistedToBrowserStorage} = state;\n    const {chatState: chatState, launcherState: launcherState} = persistedToBrowserStorage;\n    const publicWebChatState = {\n      isConnectedWithHumanAgent: chatState.humanAgentState.isConnected,\n      isWebChatOpen: launcherState.viewState.mainWindow,\n      isConnectingWithHumanAgent: state.humanAgentState.isConnecting,\n      isHomeScreenOpen: chatState.homeScreenState.isHomeScreenOpen,\n      isDebugEnabled: isEnableDebugLog(),\n      hasUserSentMessage: chatState.hasSentNonWelcomeMessage,\n      isTourActive: launcherState.activeTour,\n      viewState: {\n        ...launcherState.viewState\n      },\n      serviceDesk: {\n        isConnected: chatState.humanAgentState.isConnected,\n        isConnecting: state.humanAgentState.isConnecting,\n        isSuspended: chatState.humanAgentState.isSuspended ?? false\n      },\n      locale: this.serviceManager.store.getState().locale,\n      intl: this.serviceManager.intl\n    };\n    return publicWebChatState;\n  }\n  async sendWithCatch(message, source, options = {}, ignoreHydration = false) {\n    try {\n      await this.send(message, source, options, ignoreHydration);\n    } catch (error) {\n      consoleError(\"An error occurred sending the message\", error);\n    }\n  }\n  async send(message, source, options = {}, ignoreHydration = false) {\n    const messageRequest = typeof message === \"string\" ? createMessageRequestForText(message) : message;\n    if (this.serviceManager.store.getState().persistedToBrowserStorage.chatState.homeScreenState.isHomeScreenOpen) {\n      this.serviceManager.store.dispatch(actions.setHomeScreenIsOpen(false));\n    }\n    if (this.serviceManager.store.getState().responsePanelState.isOpen) {\n      this.serviceManager.store.dispatch(actions.setResponsePanelIsOpen(false));\n    }\n    if (this.hydrationPromise || ignoreHydration) {\n      if (!ignoreHydration) {\n        await this.hydrationPromise;\n      }\n      await this.doSend(messageRequest, source, options);\n    } else {\n      await this.hydrateChat(messageRequest, source, options);\n    }\n  }\n  async doSend(message, source, options = {}) {\n    const {store: store} = this.serviceManager;\n    addDefaultsToMessage(message);\n    const originalUserText = message.history?.label || message.input.text;\n    if (options.silent) {\n      message.history.silent = true;\n    }\n    const localMessage = inputItemToLocalItem(message, originalUserText);\n    if (!message.history.silent) {\n      store.dispatch(actions.addLocalMessageItem(localMessage, message, true));\n    } else {\n      store.dispatch(actions.addMessage(message));\n    }\n    if (options.setValueSelectedForMessageID) {\n      store.dispatch(actions.messageSetOptionSelected(options.setValueSelectedForMessageID, message));\n    }\n    deepFreeze(message);\n    await this.serviceManager.messageService.send(cloneDeep(message), source, localMessage.ui_state.id, options);\n  }\n  async receive(message, isLatestWelcomeNode = false, requestMessage, requestOptions) {\n    const {restartCount: initialRestartCount} = this.serviceManager;\n    if (!message.id) {\n      message.id = uuid(UUIDType.MESSAGE);\n    }\n    const preReceiveEvent = {\n      type: BusEventType.PRE_RECEIVE,\n      data: message\n    };\n    await this.serviceManager.fire(preReceiveEvent);\n    if (initialRestartCount !== this.serviceManager.restartCount) {\n      return;\n    }\n    if (!isLatestWelcomeNode) {\n      this.serviceManager.store.dispatch(actions.updateHasSentNonWelcomeMessage(true));\n    }\n    if (initialRestartCount !== this.serviceManager.restartCount) {\n      return;\n    }\n    const {languagePack: languagePack} = this.serviceManager.store.getState();\n    if (isResponse(message)) {\n      this.processMessageResponse(message, isLatestWelcomeNode, requestMessage, requestOptions).catch(error => {\n        consoleError(\"Error processing the message response\", error);\n      });\n    } else {\n      const inlineError = createMessageResponseForText(languagePack.errors_singleMessage, message.thread_id, MessageResponseTypes.INLINE_ERROR);\n      this.receive(inlineError, false);\n    }\n    deepFreeze(message);\n    await this.serviceManager.fire({\n      type: BusEventType.RECEIVE,\n      data: message\n    });\n  }\n  async removeMessages(messageIDs) {\n    this.serviceManager.store.dispatch(actions.removeMessages(messageIDs));\n  }\n  async insertHistory(messages) {\n    const scrollBottom = this.serviceManager.mainWindow?.getMessagesScrollBottom();\n    const state = this.serviceManager.store.getState();\n    const notes = {\n      notes: [ {\n        body: messages\n      } ]\n    };\n    const history = await this.serviceManager.historyService.loadHistory(notes);\n    const currentAppStateMessages = {\n      allMessageItemsByID: state.allMessageItemsByID,\n      allMessagesByID: state.allMessagesByID,\n      botMessageState: state.botMessageState\n    };\n    const newAppStateMessages = merge({}, history.messageHistory, currentAppStateMessages);\n    newAppStateMessages.botMessageState.messageIDs = [ ...history.messageHistory.botMessageState.messageIDs, ...currentAppStateMessages.botMessageState.messageIDs ];\n    newAppStateMessages.botMessageState.localMessageIDs = [ ...history.messageHistory.botMessageState.localMessageIDs, ...currentAppStateMessages.botMessageState.localMessageIDs ];\n    this.serviceManager.store.dispatch(actions.hydrateMessageHistory(newAppStateMessages));\n    await this.createElementsForUserDefinedResponses(history.messageHistory);\n    this.serviceManager.mainWindow?.doAutoScroll({\n      scrollToBottom: scrollBottom\n    });\n  }\n  async receiveChunk(chunk, messageID, options = {}) {\n    const chunkPromise = resolvablePromise();\n    this.chunkQueue.push({\n      chunk: chunk,\n      messageID: messageID,\n      options: options,\n      chunkPromise: chunkPromise\n    });\n    if (this.chunkQueue.length === 1) {\n      this.processChunkQueue();\n    }\n    return chunkPromise;\n  }\n  async processChunkQueue() {\n    const {chunk: chunk, options: options, chunkPromise: chunkPromise} = this.chunkQueue[0];\n    let {messageID: messageID} = this.chunkQueue[0];\n    const isCompleteItem = isStreamCompleteItem(chunk);\n    const isPartialItem = isStreamPartialItem(chunk);\n    const {store: store} = this.serviceManager;\n    const isStopGeneratingVisible = store.getState().botInputState.stopStreamingButtonState.isVisible;\n    if (isPartialItem) {\n      const streamingData = chunk.partial_item.streaming_metadata;\n      if (streamingData.cancellable && !isStopGeneratingVisible) {\n        store.dispatch(actions.setStopStreamingButtonVisible(true));\n      }\n    }\n    if (isCompleteItem || isPartialItem) {\n      if (!messageID) {\n        messageID = chunk.streaming_metadata.response_id;\n      }\n      if (!store.getState().allMessagesByID[messageID]) {\n        store.dispatch(actions.streamingStart(messageID));\n      }\n      const item = chunk.partial_item || chunk.complete_item;\n      store.dispatch(actions.streamingAddChunk(messageID, item, isCompleteItem, options.disableFadeAnimation ?? true));\n      if (chunk.partial_response?.message_options) {\n        if (Object.keys(chunk.partial_response).length > 1) {\n          throw new Error(`The partial_response object only supports the \"message_options\" property.`);\n        }\n        store.dispatch(actions.streamingMergeMessageOptions(messageID, chunk.partial_response?.message_options));\n      }\n      await this.handleUserDefinedResponseItemsChunk(messageID, chunk, item);\n    } else if (isStreamFinalResponse(chunk)) {\n      this.receive(chunk.final_response, options.isLatestWelcomeNode, null, {\n        disableFadeAnimation: true\n      });\n    }\n    if ((isCompleteItem || isStreamFinalResponse(chunk)) && isStopGeneratingVisible) {\n      store.dispatch(actions.setStopStreamingButtonDisabled(false));\n      store.dispatch(actions.setStopStreamingButtonVisible(false));\n    }\n    this.chunkQueue.shift();\n    chunkPromise.doResolve();\n    if (this.chunkQueue[0]) {\n      this.processChunkQueue();\n    }\n  }\n  getOrCreateUserDefinedElement(messageItemID) {\n    let userDefinedItem = this.serviceManager.userDefinedElementRegistry.get(messageItemID);\n    if (!userDefinedItem) {\n      userDefinedItem = {\n        element: document.createElement(\"div\"),\n        slotName: `slot-user-defined-${uuid()}`\n      };\n      userDefinedItem.element.setAttribute(\"slot\", userDefinedItem.slotName);\n      this.serviceManager.userDefinedElementRegistry.set(messageItemID, userDefinedItem);\n    }\n    return userDefinedItem;\n  }\n  async handleUserDefinedResponseItems(localMessage, originalMessage) {\n    if (renderAsUserDefinedMessage(localMessage.item)) {\n      let element;\n      let slotName;\n      if (!localMessage.item.user_defined?.silent) {\n        ({element: element, slotName: slotName} = this.getOrCreateUserDefinedElement(localMessage.ui_state.id));\n      }\n      const userDefinedResponseEvent = {\n        type: BusEventType.USER_DEFINED_RESPONSE,\n        data: {\n          message: localMessage.item,\n          fullMessage: originalMessage,\n          element: element,\n          slot: slotName\n        }\n      };\n      await this.serviceManager.fire(userDefinedResponseEvent);\n    } else if (isResponseWithNestedItems(localMessage.item)) {\n      const {itemsLocalMessageItemIDs: itemsLocalMessageItemIDs, bodyLocalMessageItemIDs: bodyLocalMessageItemIDs, footerLocalMessageItemIDs: footerLocalMessageItemIDs, gridLocalMessageItemIDs: gridLocalMessageItemIDs} = localMessage.ui_state;\n      const {allMessageItemsByID: allMessageItemsByID} = this.serviceManager.store.getState();\n      const createElementForNestedUserDefinedResponse = localMessageItemID => {\n        const nestedLocalMessage = allMessageItemsByID[localMessageItemID];\n        return this.handleUserDefinedResponseItems(nestedLocalMessage, originalMessage);\n      };\n      if (gridLocalMessageItemIDs?.length) {\n        await asyncForEach(gridLocalMessageItemIDs, row => asyncForEach(row, cell => asyncForEach(cell, itemID => createElementForNestedUserDefinedResponse(itemID))));\n      }\n      if (itemsLocalMessageItemIDs?.length) {\n        await asyncForEach(itemsLocalMessageItemIDs, createElementForNestedUserDefinedResponse);\n      }\n      if (bodyLocalMessageItemIDs?.length) {\n        await asyncForEach(bodyLocalMessageItemIDs, createElementForNestedUserDefinedResponse);\n      }\n      if (footerLocalMessageItemIDs?.length) {\n        await asyncForEach(footerLocalMessageItemIDs, createElementForNestedUserDefinedResponse);\n      }\n    }\n  }\n  async handleUserDefinedResponseItemsChunk(messageID, chunk, messageItem) {\n    if (renderAsUserDefinedMessage(messageItem)) {\n      const itemID = streamItemID(messageID, messageItem);\n      let element;\n      let slotName;\n      if (!messageItem.user_defined?.silent) {\n        ({element: element, slotName: slotName} = this.getOrCreateUserDefinedElement(itemID));\n      }\n      const userDefinedResponseEvent = {\n        type: BusEventType.CHUNK_USER_DEFINED_RESPONSE,\n        data: {\n          messageItem: messageItem,\n          chunk: chunk,\n          element: element,\n          slot: slotName\n        }\n      };\n      await this.serviceManager.fire(userDefinedResponseEvent);\n    }\n  }\n  async processMessageResponse(fullMessage, isLatestWelcomeNode, requestMessage, requestOptions = {}) {\n    const {store: store} = this.serviceManager;\n    const {config: config} = store.getState();\n    const initialRestartCount = this.serviceManager.restartCount;\n    const output = fullMessage.output.generic;\n    fullMessage.request_id = requestMessage?.id;\n    addDefaultsToMessage(fullMessage);\n    store.dispatch(actions.addMessage(fullMessage));\n    let previousItemID = null;\n    for (let index = 0; index < output.length && initialRestartCount === this.serviceManager.restartCount; index++) {\n      const messageItem = output[index];\n      if (messageItem) {\n        const pause = isPause(messageItem);\n        const agent = isConnectToHumanAgent(messageItem);\n        const tour = hasTourUserDefinedType(messageItem);\n        const localMessageItem = outputItemToLocalItem(messageItem, fullMessage, isLatestWelcomeNode, requestOptions.disableFadeAnimation);\n        if (tour && (requestOptions.skipTourCard || messageItem.user_defined?.skip_card)) {\n          const startTourReason = requestOptions.skipTourCard ? TourStartReason.START_TOUR_METHOD : TourStartReason.SKIP_CARD;\n          const {viewState: viewState} = store.getState().persistedToBrowserStorage.launcherState;\n          if (viewState.mainWindow) {\n            const mainWindowCloseReason = requestOptions.skipTourCard ? MainWindowCloseReason.CALLED_START_TOUR : MainWindowCloseReason.TOUR_SKIP_CARD;\n            this.startTour(localMessageItem, startTourReason, {\n              mainWindowCloseReason: mainWindowCloseReason\n            }).catch(error => {\n              consoleError(\"Error starting the tour\", error);\n            });\n          } else {\n            const viewChangeReason = requestOptions.skipTourCard ? ViewChangeReason.CALLED_START_TOUR : ViewChangeReason.TOUR_SKIP_CARD;\n            this.startTour(localMessageItem, startTourReason, {\n              viewChangeReason: viewChangeReason\n            }).catch(error => {\n              consoleError(\"Error starting the tour\", error);\n            });\n          }\n        } else if (!tour && requestOptions.skipTourCard) {\n          consoleError(\"The message response received was not a tour, so the tour card was not skipped nor was a tour started by the startTour() call.\");\n        }\n        const nestedLocalMessageItems = [];\n        createLocalMessageItemsForNestedMessageItems(localMessageItem, fullMessage, false, nestedLocalMessageItems, true);\n        store.dispatch(actions.addNestedMessages(nestedLocalMessageItems));\n        if (agent && isResponse(fullMessage)) {\n          store.dispatch(actions.addIsTypingCounter(1));\n          const partialMessage = {};\n          if (!hasServiceDesk(config)) {\n            const message = 'Web chat received a \"connect_to_agent\" message but there is no service desk configured. Check your chat configuration.';\n            this.errorOccurred({\n              errorType: OnErrorType.INTEGRATION_ERROR,\n              message: message\n            });\n            store.dispatch(actions.setMessageUIStateInternalProperty(localMessageItem.fullMessageID, \"agent_no_service_desk\", true));\n            partialMessage.ui_state_internal.agent_no_service_desk = true;\n          }\n          const agentAvailability = await (this.serviceManager.humanAgentService?.checkAreAnyHumanAgentsOnline(fullMessage));\n          if (initialRestartCount === this.serviceManager.restartCount) {\n            store.dispatch(actions.setMessageUIStateInternalProperty(localMessageItem.fullMessageID, \"agent_availability\", agentAvailability));\n            partialMessage.ui_state_internal = partialMessage.ui_state_internal || {};\n            partialMessage.ui_state_internal.agent_availability = agentAvailability;\n            let shouldAutoRequestHumanAgent = false;\n            if (config.public.serviceDesk?.skipConnectHumanAgentCard) {\n              shouldAutoRequestHumanAgent = true;\n            }\n            store.dispatch(actions.addIsTypingCounter(-1));\n            if (shouldAutoRequestHumanAgent && agentAvailability === HumanAgentsOnlineStatus.ONLINE) {\n              this.serviceManager.humanAgentService.startChat(localMessageItem, fullMessage);\n            }\n          }\n        }\n        if (pause) {\n          const showIsTyping = isTyping(messageItem);\n          if (showIsTyping) {\n            store.dispatch(actions.addIsTypingCounter(1));\n          }\n          await sleep(messageItem.time);\n          if (showIsTyping && initialRestartCount === this.serviceManager.restartCount) {\n            store.dispatch(actions.addIsTypingCounter(-1));\n          }\n        } else {\n          await this.handleUserDefinedResponseItems(localMessageItem, fullMessage);\n          if (!localMessageItem.item.user_defined?.silent && initialRestartCount === this.serviceManager.restartCount) {\n            this.serviceManager.store.dispatch(actions.addLocalMessageItem(localMessageItem, fullMessage, false, previousItemID));\n            previousItemID = localMessageItem.ui_state.id;\n          }\n        }\n      }\n    }\n  }\n  openResponsePanel(localMessageItem, isMessageForInput) {\n    this.serviceManager.store.dispatch(actions.setResponsePanelContent(localMessageItem, isMessageForInput));\n    this.serviceManager.store.dispatch(actions.setResponsePanelIsOpen(true));\n  }\n  async insertLocalMessageResponse(message) {\n    message.id = uuid(UUIDType.MESSAGE);\n    await this.processMessageResponse(message, false, null, {});\n  }\n  updateLanguagePack(changes) {\n    const {languagePack: languagePack, locale: locale} = this.serviceManager.store.getState();\n    const messages = {\n      ...languagePack,\n      ...changes\n    };\n    setIntl(this.serviceManager, locale, messages);\n  }\n  addNotification(notification) {\n    this.serviceManager.store.dispatch(actions.addNotification(notification));\n  }\n  removeNotification(groupID) {\n    this.serviceManager.store.dispatch(actions.removeNotifications({\n      groupID: groupID\n    }));\n  }\n  removeAllNotifications() {\n    this.serviceManager.store.dispatch(actions.removeAllNotifications());\n  }\n  updateCSSVariables(publicVars, whiteLabelVariables = {}) {\n    const {store: store} = this.serviceManager;\n    const {theme: theme} = store.getState();\n    const {carbonTheme: carbonTheme, useAITheme: useAITheme} = theme;\n    if (useAITheme) {\n      const usePublicVars = publicVars;\n      publicVars = {};\n      whiteLabelVariables = {};\n      usePublicVars && Object.entries(usePublicVars).forEach(([variable]) => {\n        if (VALID_PUBLIC_VARS_IN_AI_THEME_SET.has(variable)) {\n          publicVars[variable] = usePublicVars[variable];\n        } else {\n          consoleWarn(UPDATE_CSS_VARS_AI_THEME_WARNING_MESSAGE);\n        }\n      });\n    } else {\n      publicVars = {\n        ...publicVars\n      };\n      whiteLabelVariables = {\n        ...whiteLabelVariables\n      };\n    }\n    const allVariables = mergeCSSVariables(publicVars, whiteLabelVariables, carbonTheme, useAITheme);\n    store.dispatch(actions.updateCSSVariables(allVariables, publicVars, whiteLabelVariables));\n  }\n  updateBotName(name) {\n    this.serviceManager.store.dispatch(actions.updateBotName(name));\n  }\n  updateMainHeaderTitle(title) {\n    this.serviceManager.store.dispatch(actions.updateMainHeaderTitle(title));\n  }\n  updateBotAvatarURL(url) {\n    this.serviceManager.store.dispatch(actions.updateBotAvatarURL(url));\n  }\n  updateHomeScreenConfig(homeScreenConfig) {\n    this.serviceManager.store.dispatch(actions.updateHomeScreenConfig(homeScreenConfig));\n  }\n  updateLauncherConfig(launcherConfig) {\n    this.serviceManager.store.dispatch(actions.updateLauncherConfig(launcherConfig));\n  }\n  async changeView(newView, reason, tryHydrating = true, forceViewChange = false) {\n    const {store: store} = this.serviceManager;\n    const {viewState: viewState} = store.getState().persistedToBrowserStorage.launcherState;\n    let newViewState = constructViewState(newView, store.getState());\n    if (!validateViewState(newViewState, store.getState())) {\n      return viewState;\n    }\n    if (!isEqual(newViewState, viewState) || forceViewChange) {\n      await this.fireViewChangeEventsAndChangeView(newViewState, reason);\n      newViewState = store.getState().persistedToBrowserStorage.launcherState.viewState;\n      if (tryHydrating && (newViewState.mainWindow || newViewState.tour) && !store.getState().isHydrated) {\n        this.hydrateChat().catch(error => {\n          consoleError(\"Error hydrating the chat\", error);\n        });\n      }\n    }\n    return newViewState;\n  }\n  async fireViewChangeEventsAndChangeView(newViewState, reason) {\n    const {store: store} = this.serviceManager;\n    if (store.getState().viewChanging) {\n      throw new Error(\"The view may not be changed while a view change event is already running. Please make sure to resolve any promises from these events.\");\n    }\n    store.dispatch(actions.setViewChanging(true));\n    const {viewState: viewState} = store.getState().persistedToBrowserStorage.launcherState;\n    const {viewChangeReason: viewChangeReason} = reason;\n    const oldViewState = deepFreeze(viewState);\n    try {\n      const preViewChangeEvent = {\n        type: BusEventType.VIEW_PRE_CHANGE,\n        reason: viewChangeReason,\n        oldViewState: oldViewState,\n        newViewState: newViewState,\n        cancelViewChange: false\n      };\n      await this.serviceManager.fire(preViewChangeEvent);\n      if (preViewChangeEvent.cancelViewChange) {\n        debugLog(\"The view changing was cancelled by a view:pre:change event.\");\n        return;\n      }\n      if (!validateViewState(preViewChangeEvent.newViewState, store.getState())) {\n        return;\n      }\n      newViewState = preViewChangeEvent.newViewState;\n      store.dispatch(actions.setViewState(deepFreeze(newViewState)));\n      const viewChangeEvent = {\n        type: BusEventType.VIEW_CHANGE,\n        reason: viewChangeReason,\n        oldViewState: oldViewState,\n        newViewState: newViewState,\n        cancelViewChange: false\n      };\n      await this.serviceManager.fire(viewChangeEvent);\n      if (viewChangeEvent.cancelViewChange) {\n        store.dispatch(actions.setViewState(oldViewState));\n        debugLog(\"The view changing was cancelled by a view:change event.\");\n        return;\n      }\n      if (!validateViewState(viewChangeEvent.newViewState, store.getState())) {\n        store.dispatch(actions.setViewState(oldViewState));\n        return;\n      }\n      newViewState = viewChangeEvent.newViewState;\n      store.dispatch(actions.setViewState(deepFreeze(newViewState)));\n    } finally {\n      store.dispatch(actions.setViewChanging(false));\n    }\n  }\n  async startTour(message, startTourReason, changeViewReason) {\n    this.serviceManager.store.dispatch(actions.setTourData(message.fullMessageID));\n    const newViewState = await this.changeView(ViewType.TOUR, changeViewReason);\n    if (newViewState.tour) {\n      await this.serviceManager.fire({\n        type: BusEventType.TOUR_START,\n        reason: startTourReason\n      });\n      await this.serviceManager.fire({\n        type: BusEventType.TOUR_STEP,\n        step: this.serviceManager.store.getState().tourState.activeTourStepItems[0]\n      });\n    }\n  }\n  async endTour(reason) {\n    const {viewState: viewState} = this.serviceManager.store.getState().persistedToBrowserStorage.launcherState;\n    let newViewState = viewState;\n    if (viewState.tour) {\n      newViewState = await this.changeView(ViewType.LAUNCHER, reason);\n    }\n    if (!newViewState.tour) {\n      this.serviceManager.store.dispatch(actions.clearTourData());\n      return true;\n    }\n    return false;\n  }\n  goToSpecificTourStep(stepId) {\n    const {activeTourStepItems: activeTourStepItems} = this.serviceManager.store.getState().tourState;\n    const newStepIndex = activeTourStepItems.findIndex(stepItem => stepItem.step_id === stepId);\n    if (newStepIndex) {\n      this.changeStepInTour({\n        newStepIndex: newStepIndex\n      });\n    } else {\n      consoleError(`No step with the id \"${stepId}\" was found within the current tour. As a result, goToTourStep() did not change the current tour step.`);\n    }\n  }\n  async changeStepInTour(changeStepOptions) {\n    const {store: store} = this.serviceManager;\n    const {activeTourStepItems: activeTourStepItems} = store.getState().tourState;\n    const {activeTourCurrentStepIndex: activeTourCurrentStepIndex} = store.getState().persistedToBrowserStorage.chatState.persistedTourState;\n    let {newStepIndex: newStepIndex} = changeStepOptions;\n    if (changeStepOptions.nextStep) {\n      newStepIndex = activeTourCurrentStepIndex + 1;\n    } else if (changeStepOptions.previousStep) {\n      newStepIndex = activeTourCurrentStepIndex - 1;\n    }\n    store.dispatch(actions.changeStepInTour(newStepIndex));\n    const actualNewStepIndex = store.getState().persistedToBrowserStorage.chatState.persistedTourState.activeTourCurrentStepIndex;\n    if (actualNewStepIndex === newStepIndex) {\n      await this.serviceManager.fire({\n        type: BusEventType.TOUR_STEP,\n        step: activeTourStepItems[actualNewStepIndex]\n      });\n    } else {\n      consoleWarn(\"The tour tried to change to a step that was out of bounds for the step array, so no step change was made.\");\n    }\n  }\n  errorOccurred(error) {\n    consoleError(\"An error has occurred\", error);\n    if (error.catastrophicErrorType) {\n      this.serviceManager.store.dispatch(actions.setAppStateValue(\"catastrophicErrorType\", error.catastrophicErrorType));\n    }\n    callOnError(this.serviceManager.additionalChatParameters.onError, error);\n  }\n  async restartConversation(options = {}) {\n    const {skipHydration: skipHydration = false, endHumanAgentConversation: endHumanAgentConversation = true, fireEvents: fireEvents = true} = options;\n    debugLog(\"Restarting conversation\");\n    if (this.restarting) {\n      consoleWarn(\"You cannot restart a conversation while a previous restart is still pending.\");\n      return;\n    }\n    this.restarting = true;\n    try {\n      const {serviceManager: serviceManager} = this;\n      const {store: store} = serviceManager;\n      if (fireEvents) {\n        await serviceManager.fire({\n          type: BusEventType.PRE_RESTART_CONVERSATION\n        });\n      }\n      serviceManager.restartCount++;\n      if (this.hydrating) {\n        await this.hydrationPromise;\n      }\n      const currentState = store.getState();\n      const {persistedToBrowserStorage: persistedToBrowserStorage} = currentState;\n      const {viewState: viewState} = persistedToBrowserStorage.launcherState;\n      const {isConnecting: isConnecting} = currentState.humanAgentState;\n      const {isConnected: isConnected} = currentState.persistedToBrowserStorage.chatState.humanAgentState;\n      if ((isConnected || isConnecting) && endHumanAgentConversation) {\n        await serviceManager.humanAgentService.endChat(true, false, false);\n      }\n      if (viewState.tour) {\n        await this.serviceManager.actions.changeView(ViewType.MAIN_WINDOW, {\n          mainWindowOpenReason: MainWindowOpenReason.CALLED_RESTART_CONVERSATION\n        }, false);\n      }\n      this.serviceManager.instance.updateAssistantInputFieldVisibility(true);\n      this.serviceManager.messageService.cancelAllMessageRequests();\n      store.dispatch(actions.restartConversation());\n      if (!skipHydration) {\n        this.hydrationPromise = null;\n      }\n      if (fireEvents) {\n        await serviceManager.fire({\n          type: BusEventType.RESTART_CONVERSATION\n        });\n      }\n      if (this.hydrating) {\n        await this.hydrationPromise;\n      }\n      if (!skipHydration && !serviceManager.store.getState().isHydrated) {\n        this.hydrationPromise = null;\n        if (store.getState().persistedToBrowserStorage.launcherState.viewState.mainWindow) {\n          await serviceManager.actions.hydrateChat();\n        }\n      } else {\n        store.dispatch(actions.chatWasHydrated());\n      }\n    } finally {\n      this.restarting = false;\n    }\n  }\n  async destroySession(keepOpenState) {\n    const {store: store} = this.serviceManager;\n    const {persistedToBrowserStorage: persistedToBrowserStorage} = store.getState();\n    const originalViewState = persistedToBrowserStorage.launcherState.viewState;\n    const newPersistedToBrowserStorage = cloneDeep(DEFAULT_PERSISTED_TO_BROWSER);\n    if (keepOpenState) {\n      newPersistedToBrowserStorage.launcherState.viewState = originalViewState;\n      if (originalViewState.tour) {\n        newPersistedToBrowserStorage.launcherState.viewState = {\n          ...originalViewState,\n          tour: false,\n          mainWindow: true\n        };\n      }\n    } else {\n      newPersistedToBrowserStorage.launcherState.viewState = VIEW_STATE_LAUNCHER_OPEN;\n    }\n    this.serviceManager.messageService.cancelAllMessageRequests();\n    this.serviceManager.userSessionStorageService.clearLauncherSession();\n    this.serviceManager.userSessionStorageService.clearChatSession();\n    this.serviceManager.store.dispatch(actions.setAppStateValue(\"persistedToBrowserStorage\", newPersistedToBrowserStorage));\n  }\n  agentEndConversation(endedByUser) {\n    return this.serviceManager.humanAgentService.endChat(endedByUser);\n  }\n  agentUpdateIsSuspended(isSuspended) {\n    this.serviceManager.store.dispatch(agentUpdateIsSuspended(isSuspended));\n  }\n  async createElementsForUserDefinedResponses(messages) {\n    await asyncForEach(Object.values(messages.allMessageItemsByID), localMessage => {\n      const originalMessage = messages.allMessagesByID[localMessage.fullMessageID];\n      return this.handleUserDefinedResponseItems(localMessage, originalMessage);\n    });\n  }\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const HANDLER_NOT_FUNCTION = \"The event handler is not a function.\";\n\nclass EventBus {\n  constructor() {\n    this.handlersByType = new Map;\n    this.eventsTypesRunning = new Set;\n    this.eventsRunningCount = 0;\n  }\n  async fire(busEvent, instance) {\n    logEvent(\"Before fire\", busEvent);\n    const {type: type} = busEvent;\n    if (!type) {\n      throw new Error(`Attempted to fire an event with no type! ${JSON.stringify(busEvent)}`);\n    }\n    function wrappedHandler(handler) {\n      const result = handler(busEvent, instance);\n      if (result && !(result instanceof Promise)) {\n        consoleWarn(`An event handler for event ${type} returned a non-promise. This might be a mistake.`, result);\n      }\n      return result;\n    }\n    if (this.eventsTypesRunning.has(type)) {\n      throw new Error(`An event of type ${type} is already running. Please make sure that you have resolved the Promises for any earlier events that were fired.`);\n    }\n    try {\n      this.eventsRunningCount++;\n      try {\n        this.eventsTypesRunning.add(type);\n        const handlersForType = this.handlersByType.get(type);\n        if (handlersForType && handlersForType.length) {\n          const handlersCopy = handlersForType.slice();\n          await asyncForEach(handlersCopy, wrappedHandler);\n        }\n      } finally {\n        this.eventsTypesRunning.delete(type);\n      }\n    } finally {\n      this.eventsRunningCount--;\n      if (this.waitForEmptyPromise && this.eventsRunningCount === 0) {\n        this.waitForEmptyPromise.doResolve();\n      }\n    }\n    logEvent(\"After fire\", busEvent);\n  }\n  fireSync(busEvent, instance) {\n    logEvent(\"Before fire\", busEvent);\n    const {type: type} = busEvent;\n    const handlersForType = this.handlersByType.get(type);\n    if (handlersForType && handlersForType.length) {\n      const handlersCopy = handlersForType.slice();\n      handlersCopy.forEach(handler => handler(busEvent, instance));\n    }\n    logEvent(\"After fire\", busEvent);\n  }\n  async waitForEmpty() {\n    if (this.eventsRunningCount === 0) {\n      return;\n    }\n    if (!this.waitForEmptyPromise) {\n      this.waitForEmptyPromise = resolvablePromise();\n    }\n    await this.waitForEmptyPromise;\n    this.waitForEmptyPromise = null;\n  }\n  on(handlers) {\n    const data = asArray(handlers);\n    data.forEach(({type: type, handler: handler}) => {\n      if (!type) {\n        throw new Error(`Attempted to listen to an event with no type: \"${type}\"!`);\n      }\n      if (typeof handler === \"function\") {\n        if (!this.handlersByType.has(type)) {\n          this.handlersByType.set(type, []);\n        }\n        const handlersForType = this.handlersByType.get(type);\n        debugStackTrace(`[EventBus] Adding ${type} event handler`, handler);\n        handlersForType.push(handler);\n      } else {\n        consoleError(HANDLER_NOT_FUNCTION, handler);\n      }\n    });\n    return this;\n  }\n  off(handlers) {\n    const data = asArray(handlers);\n    data.forEach(({type: type, handler: handler}) => {\n      const handlersForType = this.handlersByType.get(type);\n      if (handlersForType) {\n        if (handler) {\n          const index = handlersForType.indexOf(handler);\n          if (index !== -1) {\n            const removed = handlersForType.splice(index, 1);\n            debugStackTrace(`[EventBus] Removing ${type} event handlers`, removed);\n          }\n        } else {\n          debugStackTrace(`[EventBus] Removing all ${type} event handlers`);\n          this.handlersByType.set(type, []);\n        }\n      }\n    });\n    return this;\n  }\n  once(handlers) {\n    const data = asArray(handlers);\n    data.forEach(({type: type, handler: handler}) => {\n      if (typeof handler === \"function\") {\n        const onceHandler = (event, instance) => {\n          this.off({\n            type: type,\n            handler: onceHandler\n          });\n          return handler(event, instance);\n        };\n        this.on({\n          type: type,\n          handler: onceHandler\n        });\n      } else {\n        consoleError(HANDLER_NOT_FUNCTION, handler);\n      }\n    });\n    return this;\n  }\n  logListeners() {\n    this.handlersByType.forEach((listeners, type) => {\n      console.group(`Event ${type} (${listeners.length})`);\n      listeners.forEach(listener => {\n        consoleLog(\"Listener\", listener);\n      });\n      console.groupEnd();\n    });\n  }\n  clear() {\n    this.handlersByType.clear();\n    return this;\n  }\n}\n\nfunction logEvent(message, busEvent) {\n  if (isEnableDebugLog()) {\n    const eventCopy = cloneDeep(busEvent);\n    debugLog(`[EventBus] ${message}`, eventCopy);\n  }\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function createCustomPanelInstance(serviceManager) {\n  const customPanelInstance = {\n    open(options = DEFAULT_CUSTOM_PANEL_CONFIG_OPTIONS) {\n      const {store: store} = serviceManager;\n      store.dispatch(actions.setCustomPanelConfigOptions(options));\n      store.dispatch(actions.setCustomPanelOpen(true));\n    },\n    close() {\n      serviceManager.store.dispatch(actions.setCustomPanelOpen(false));\n    }\n  };\n  return Object.freeze(customPanelInstance);\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function createCustomPanelManager(serviceManger) {\n  const panels = {\n    [DEFAULT_CUSTOM_PANEL_ID]: createCustomPanelInstance(serviceManger)\n  };\n  return Object.freeze({\n    getPanel() {\n      return panels[DEFAULT_CUSTOM_PANEL_ID];\n    }\n  });\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ async function notesToLoadedHistory(notes, serviceManager) {\n  const allLocalMessagesByID = {};\n  const allMessagesByID = {};\n  const loadingState = {\n    serviceManager: serviceManager,\n    allMessages: [],\n    allMessagesByID: allMessagesByID,\n    allLocalMessagesByID: allLocalMessagesByID,\n    threadMessagesByThreadID: {},\n    responsesByRequestID: {},\n    relatedMessageByID: {},\n    localMessagesByOriginalMessageID: {},\n    lastThreadID: null,\n    loadedHistory: {\n      messageHistory: {\n        allMessageItemsByID: allLocalMessagesByID,\n        allMessagesByID: allMessagesByID,\n        botMessageState: null\n      },\n      latestTransferToHumanAgentResponse: null,\n      latestPanelLocalMessageItem: null\n    }\n  };\n  await notesToMessages(notes, loadingState);\n  if (!loadingState.allMessages.length) {\n    return null;\n  }\n  createLocalMessages(loadingState);\n  createChatStates(loadingState);\n  markIsLatestWelcomeNode(loadingState);\n  markSelectedOptions(loadingState);\n  return loadingState.loadedHistory;\n}\n\nasync function notesToMessages(notes, loadingState) {\n  const {allMessages: allMessages, allMessagesByID: allMessagesByID, responsesByRequestID: responsesByRequestID, relatedMessageByID: relatedMessageByID, serviceManager: serviceManager, localMessagesByOriginalMessageID: localMessagesByOriginalMessageID} = loadingState;\n  if (!notes?.length) {\n    return;\n  }\n  notes.forEach(note => {\n    const sessionHistory = note.body;\n    const pushAndPrepareMessage = historyItem => {\n      const {message: message} = historyItem;\n      if (!isEventRequest(message) && (isRequest(message) || isResponse(message))) {\n        addMessage(message, loadingState, historyItem);\n      }\n    };\n    sessionHistory.forEach(pushAndPrepareMessage);\n  });\n  for (let index = allMessages.length - 1; index >= 0; index--) {\n    const message = allMessages[index];\n    if (message.history?.file_upload_status === FileStatusValue.UPLOADING) {\n      message.history.file_upload_status = FileStatusValue.COMPLETE;\n      message.history.error_state = MessageErrorState.FAILED;\n    }\n    if (isResponse(message) && message.history.silent) {\n      allMessages.splice(index, 1);\n      delete allMessagesByID[message.id];\n    } else {\n      localMessagesByOriginalMessageID[message.id] = [];\n      if (isResponse(message) && message.request_id) {\n        responsesByRequestID[message.request_id] = message;\n      } else if (isRequest(message) && message.history.related_message_id) {\n        relatedMessageByID[message.history.related_message_id] = message;\n      }\n    }\n  }\n  if (!allMessages.length) {\n    return;\n  }\n  Object.freeze(allMessages);\n  const beginEvent = {\n    type: BusEventType.HISTORY_BEGIN,\n    messages: allMessages\n  };\n  await serviceManager.eventBus.fire(beginEvent, serviceManager.instance);\n  allMessages.forEach(deepFreeze);\n  await serviceManager.eventBus.fire({\n    type: BusEventType.HISTORY_END,\n    messages: allMessages\n  }, serviceManager.instance);\n}\n\nfunction addMessage(message, loadingState, historyItem) {\n  message.history = message.history || {};\n  message.ui_state_internal = message.ui_state_internal || {};\n  message.ui_state_internal.from_history = true;\n  message.history.timestamp = new Date(historyItem.time).getTime();\n  if (message.thread_id !== THREAD_ID_MAIN) {\n    loadingState.lastThreadID = message.thread_id;\n  }\n  loadingState.allMessagesByID[message.id] = message;\n  loadingState.allMessages.push(message);\n}\n\nfunction createLocalMessages(loadingState) {\n  const {allMessages: allMessages, allLocalMessagesByID: allLocalMessagesByID, localMessagesByOriginalMessageID: localMessagesByOriginalMessageID} = loadingState;\n  allMessages.forEach(message => {\n    if (isRequest(message)) {\n      if (!message.history?.silent) {\n        const text = message.history?.label || message.input.text;\n        const localMessage = inputItemToLocalItem(message, text);\n        localMessagesByOriginalMessageID[message.id].push(localMessage);\n        allLocalMessagesByID[localMessage.ui_state.id] = localMessage;\n      }\n    } else {\n      const items = getResponseItems(message);\n      if (items?.length) {\n        items.forEach(messageItem => {\n          if (!isPause(messageItem)) {\n            const localMessage = outputItemToLocalItem(messageItem, message, false);\n            localMessagesByOriginalMessageID[message.id].push(localMessage);\n            allLocalMessagesByID[localMessage.ui_state.id] = localMessage;\n            if (isResponseWithNestedItems(localMessage.item)) {\n              const nestedLocalMessageItems = [];\n              createLocalMessageItemsForNestedMessageItems(localMessage, message, true, nestedLocalMessageItems, true);\n              nestedLocalMessageItems.forEach(localMessageItem => {\n                const localMessageID = localMessageItem.ui_state.id;\n                loadingState.loadedHistory.messageHistory.allMessageItemsByID[localMessageID] = localMessageItem;\n              });\n            }\n          }\n        });\n      }\n    }\n    addMessageToThread(message, loadingState);\n  });\n}\n\nfunction getResponseItems(message) {\n  if (isResponse(message)) {\n    return message.output.generic;\n  }\n  return null;\n}\n\nfunction addMessageToThread(message, loadingState) {\n  const {threadMessagesByThreadID: threadMessagesByThreadID} = loadingState;\n  let thread = threadMessagesByThreadID[THREAD_ID_MAIN];\n  if (!thread) {\n    thread = [];\n    threadMessagesByThreadID[THREAD_ID_MAIN] = thread;\n  }\n  thread.push(message);\n}\n\nfunction createChatStates(loadingState) {\n  const {loadedHistory: loadedHistory, threadMessagesByThreadID: threadMessagesByThreadID, localMessagesByOriginalMessageID: localMessagesByOriginalMessageID} = loadingState;\n  loadedHistory.messageHistory.botMessageState = toChatMessageState(threadMessagesByThreadID[THREAD_ID_MAIN], localMessagesByOriginalMessageID);\n}\n\nfunction toChatMessageState(messages, localMessagesByFullMessageID) {\n  const localMessageIDs = [];\n  const messageIDs = [];\n  if (messages) {\n    messages.forEach(message => {\n      messageIDs.push(message.id);\n      localMessagesByFullMessageID[message.id].forEach(localMessage => {\n        localMessageIDs.push(localMessage.ui_state.id);\n      });\n    });\n  }\n  return {\n    ...DEFAULT_CHAT_MESSAGES_STATE,\n    localMessageIDs: localMessageIDs,\n    messageIDs: messageIDs\n  };\n}\n\nfunction markIsLatestWelcomeNode(loadingState) {\n  const {responsesByRequestID: responsesByRequestID, threadMessagesByThreadID: threadMessagesByThreadID, localMessagesByOriginalMessageID: localMessagesByOriginalMessageID} = loadingState;\n  const mainThreadMessages = threadMessagesByThreadID[THREAD_ID_MAIN];\n  const welcomeRequest = findLast(mainThreadMessages, message => isRequest(message) && message.history.is_welcome_request);\n  if (welcomeRequest) {\n    const welcomeResponse = responsesByRequestID[welcomeRequest.id];\n    if (welcomeResponse) {\n      localMessagesByOriginalMessageID[welcomeResponse.id].forEach(localMessage => {\n        localMessage.ui_state.isWelcomeResponse = true;\n      });\n    }\n  }\n}\n\nfunction markSelectedOptions({allMessages: allMessages, relatedMessageByID: relatedMessageByID, localMessagesByOriginalMessageID: localMessagesByOriginalMessageID}) {\n  allMessages.forEach(message => {\n    if (isResponse(message)) {\n      localMessagesByOriginalMessageID[message.id].forEach(localMessage => {\n        if (isOptionItem(localMessage.item)) {\n          const relatedRequest = relatedMessageByID[message.id];\n          if (isRequest(relatedRequest)) {\n            localMessage.ui_state.optionSelected = relatedRequest;\n          }\n        } else if (isDateResponseType(localMessage)) {\n          const relatedRequest = relatedMessageByID[message.id];\n          if (isRequest(relatedRequest)) {\n            localMessage.ui_state.originalUserText = relatedRequest.history.label;\n          }\n        }\n      });\n    }\n  });\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ class HistoryService {\n  constructor(serviceManager) {\n    this.serviceManager = serviceManager;\n  }\n  async loadHistory(useHistory) {\n    const state = this.serviceManager.store.getState();\n    const {config: config, persistedToBrowserStorage: persistedToBrowserStorage} = state;\n    const publicConfig = config.public;\n    const {viewState: viewState} = persistedToBrowserStorage.launcherState;\n    try {\n      let resultData;\n      if (useHistory) {\n        resultData = useHistory;\n      } else if (publicConfig.messaging?.customLoadHistory) {\n        const items = await publicConfig.messaging.customLoadHistory(this.serviceManager.instance);\n        const note = {\n          body: items\n        };\n        resultData = {\n          notes: [ note ]\n        };\n      }\n      if (resultData) {\n        const historyNotes = resultData?.notes;\n        return notesToLoadedHistory(historyNotes, this.serviceManager);\n      }\n      if (viewState.tour) {\n        await this.serviceManager.actions.changeView(ViewType.MAIN_WINDOW, {\n          mainWindowOpenReason: MainWindowOpenReason.SESSION_HISTORY\n        }, false);\n        this.serviceManager.store.dispatch(actions.clearTourData());\n      }\n    } catch (error) {\n      consoleError(\"An error occurred while attempting to load the conversation history\", error);\n    }\n    return null;\n  }\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ class MessageLoadingManager {\n  start(onExceededMaxSilentLoading, onEnd, onTimeout, msMaxSilentLoading, msMaxAttempt) {\n    this.hasExceededMaxSilentLoading = false;\n    this.onEnd = onEnd;\n    this.onSilentLoading = setTimeout(() => {\n      this.hasExceededMaxSilentLoading = true;\n      onExceededMaxSilentLoading();\n    }, msMaxSilentLoading);\n    this.onMaxAttempt = setTimeout(() => {\n      onTimeout();\n    }, msMaxAttempt);\n  }\n  end() {\n    if (this.onMaxAttempt) {\n      clearTimeout(this.onMaxAttempt);\n    }\n    if (this.onSilentLoading) {\n      clearTimeout(this.onSilentLoading);\n    }\n    if (this.onEnd) {\n      this.onEnd(this.hasExceededMaxSilentLoading);\n    }\n    this.hasExceededMaxSilentLoading = null;\n    this.onEnd = null;\n  }\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const MS_BETWEEN_RETRIES = [ 1e3, 3e3, 5e3 ];\n\nconst MS_MAX_ATTEMPT = 150 * 1e3;\n\nconst MS_MAX_SILENT_ERROR = 6e3;\n\nconst MS_MAX_SILENT_LOADING = 4e3;\n\nvar RetryType;\n\n(function(RetryType) {\n  RetryType[RetryType[\"SILENT\"] = 1] = \"SILENT\";\n  RetryType[RetryType[\"VISIBLE\"] = 2] = \"VISIBLE\";\n})(RetryType || (RetryType = {}));\n\nclass MessageService {\n  constructor(serviceManager, publicConfig) {\n    this.pendingLocale = false;\n    this.localeIsExplicit = false;\n    this.serviceManager = serviceManager;\n    this.messageLoadingManager = new MessageLoadingManager;\n    this.queue = {\n      waiting: [],\n      current: null\n    };\n    const timeoutOverride = publicConfig.messaging?.messageTimeoutSecs;\n    this.timeoutMS = timeoutOverride ? timeoutOverride * 1e3 : MS_MAX_ATTEMPT;\n  }\n  async processSuccess(current, received) {\n    const {requestOptions: requestOptions, isProcessed: isProcessed} = current;\n    const isWelcomeNode = Boolean(current.message.history.is_welcome_request);\n    if (isProcessed) {\n      return;\n    }\n    this.setMessageErrorState(current, MessageErrorState.NONE);\n    const {message: message} = current;\n    if (received) {\n      if (message.input.message_type !== MessageInputType.EVENT) {\n        if (!isWelcomeNode) {\n          this.messageLoadingManager.end();\n        }\n        received.history = received.history || {};\n        received.history.timestamp = received.history.timestamp || Date.now();\n        current.trackData.lastRequestTime = Date.now() - current.timeLastRequest;\n        current.trackData.totalRequestTime = Date.now() - current.timeFirstRequest;\n        await this.serviceManager.actions.receive(received, isWelcomeNode, message, requestOptions);\n      }\n      this.messageLoadingManager.end();\n    }\n    if (current.isProcessed) {\n      return;\n    }\n    {\n      current.sendMessagePromise.doResolve();\n      current.isProcessed = true;\n    }\n    this.moveToNextQueueItem();\n  }\n  addErrorMessage() {\n    const {store: store} = this.serviceManager;\n    const errorMessage = store.getState().languagePack.errors_singleMessage;\n    const {originalMessage: originalMessage, localMessage: localMessage} = createLocalMessageForInlineError(errorMessage);\n    store.dispatch(actions.addLocalMessageItem(localMessage, originalMessage, true));\n  }\n  async resendMessage(message, localMessageID) {\n    await this.send(cloneDeep(message), MessageSendSource.HYDRATE_RESEND, localMessageID, {\n      skipQueue: true,\n      silent: true\n    });\n  }\n  sendToAssistantAndUpdateErrorState(current) {\n    if (current.isProcessed) {\n      return;\n    }\n    this.sendToAssistant(current);\n    const now = Date.now();\n    const msSinceStarted = now - current.timeFirstRequest;\n    const isSilentErrorWindow = MS_MAX_SILENT_ERROR > msSinceStarted;\n    const type = isSilentErrorWindow ? RetryType.SILENT : RetryType.VISIBLE;\n    if (type === RetryType.VISIBLE) {\n      this.setMessageErrorState(current, MessageErrorState.RETRYING);\n      this.queue.waiting.forEach(waitingMessage => {\n        this.setMessageErrorState(waitingMessage, MessageErrorState.WAITING);\n      });\n    }\n  }\n  async processError(pendingRequest, resultText, allowRetry) {\n    const {message: message, timeFirstRequest: timeFirstRequest, timeLastRequest: timeLastRequest, tryCount: tryCount, isProcessed: isProcessed, trackData: trackData, requestOptions: requestOptions} = pendingRequest;\n    const isWelcome = message.history.is_welcome_request;\n    const now = Date.now();\n    const msSinceStarted = now - timeFirstRequest;\n    const isInAttemptWindow = this.timeoutMS > msSinceStarted && tryCount < MS_BETWEEN_RETRIES.length;\n    if (isProcessed) {\n      return;\n    }\n    trackData.lastRequestTime = Date.now() - timeLastRequest;\n    trackData.totalRequestTime = Date.now() - timeFirstRequest;\n    if (isInAttemptWindow && allowRetry) {\n      trackData.numErrors++;\n      const retryDelay = MS_BETWEEN_RETRIES[pendingRequest.tryCount++];\n      setTimeout(() => {\n        this.sendToAssistantAndUpdateErrorState(pendingRequest);\n      }, retryDelay);\n    } else {\n      let catastrophicErrorType = false;\n      if (isWelcome) {\n        catastrophicErrorType = true;\n      } else if (requestOptions.silent) {\n        this.addErrorMessage();\n      }\n      this.serviceManager.actions.errorOccurred({\n        errorType: OnErrorType.MESSAGE_COMMUNICATION,\n        message: \"An error occurred sending a message\",\n        otherData: resultText,\n        catastrophicErrorType: catastrophicErrorType\n      });\n      this.rejectFinalErrorOnMessage(pendingRequest, resultText);\n    }\n  }\n  rejectFinalErrorOnMessage(pendingRequest, resultText = \"An undefined error occurred trying to send your message.\") {\n    const {sendMessagePromise: sendMessagePromise} = pendingRequest;\n    this.setMessageErrorState(pendingRequest, MessageErrorState.FAILED);\n    const {message: message} = pendingRequest;\n    if (pendingRequest === this.queue.current && message.input.message_type !== MessageInputType.EVENT && !message.history.is_welcome_request) {\n      this.messageLoadingManager.end();\n    }\n    sendMessagePromise.doReject(new Error(resultText));\n    pendingRequest.isProcessed = true;\n    if (pendingRequest === this.queue.current) {\n      this.moveToNextQueueItem();\n    }\n  }\n  async sendToAssistant(current) {\n    const {store: store} = this.serviceManager;\n    const state = store.getState();\n    const {customSendMessage: customSendMessage} = state.config.public.messaging;\n    current.timeLastRequest = Date.now();\n    if (current.isProcessed) {\n      return;\n    }\n    try {\n      const message = cloneDeep(current.message);\n      current.message = message;\n      store.dispatch(actions.updateMessage(message));\n      const controller = new AbortController;\n      current.sendMessageController = controller;\n      debugLog(\"Called customSendMessage\", message);\n      await customSendMessage(message, {\n        signal: controller.signal\n      }, this.serviceManager.instance);\n      await this.processSuccess(current, null);\n    } catch (error) {\n      consoleError(\"An error occurred while sending a message\", error);\n      const resultText = error && (typeof error === \"string\" ? error : JSON.stringify(error)) || \"There was an unidentified error.\";\n      this.processError(current, resultText, !customSendMessage);\n    }\n  }\n  async runQueueIfReady() {\n    if (!this.queue.current && this.queue.waiting.length > 0) {\n      const {eventBus: eventBus, store: store} = this.serviceManager;\n      this.clearCurrentQueueItem();\n      this.queue.current = this.queue.waiting.shift();\n      const {current: current} = this.queue;\n      const {message: message, source: source} = current;\n      const state = store.getState();\n      const {config: config} = store.getState();\n      const {public: publicConfig} = config;\n      current.timeFirstRequest = Date.now();\n      if (message.input.message_type !== MessageInputType.EVENT) {\n        const lastResponse = getLastBotResponseWithContext(state);\n        if (lastResponse) {\n          message.thread_id = THREAD_ID_MAIN;\n        }\n        if (!message.history.is_welcome_request) {\n          const LOADING_INDICATOR_TIMER = !publicConfig.messaging?.messageLoadingIndicatorTimeoutSecs && publicConfig.messaging?.messageLoadingIndicatorTimeoutSecs !== 0 ? MS_MAX_SILENT_LOADING : publicConfig.messaging.messageLoadingIndicatorTimeoutSecs * 1e3;\n          this.messageLoadingManager.start(() => {\n            this.serviceManager.store.dispatch(actions.addIsLoadingCounter(1));\n          }, didExceedMaxLoading => {\n            if (didExceedMaxLoading) {\n              this.serviceManager.store.dispatch(actions.addIsLoadingCounter(-1));\n            }\n          }, () => {\n            this.cancelMessageRequestByID(message.id, true);\n          }, LOADING_INDICATOR_TIMER, this.timeoutMS);\n        }\n        if (current.isProcessed) {\n          return;\n        }\n        const originalUserText = message.history?.label || message.input.text;\n        await eventBus.fire({\n          type: BusEventType.PRE_SEND,\n          data: message,\n          source: source\n        }, this.serviceManager.instance);\n        if (current.isProcessed) {\n          return;\n        }\n        const localMessage = inputItemToLocalItem(message, originalUserText, current.localMessageID);\n        if (!message.history.silent) {\n          store.dispatch(actions.updateLocalMessageItem(localMessage));\n          store.dispatch(actions.updateMessage(message));\n        }\n        deepFreeze(message);\n        await eventBus.fire({\n          type: BusEventType.SEND,\n          data: message,\n          source: source\n        }, this.serviceManager.instance);\n      }\n      this.sendToAssistant(current);\n    }\n  }\n  addToMessageQueue(message, source, localMessageID, sendMessagePromise, requestOptions = {}) {\n    const newPendingMessage = {\n      localMessageID: localMessageID,\n      message: message,\n      sendMessagePromise: sendMessagePromise,\n      requestOptions: requestOptions || {},\n      timeFirstRequest: 0,\n      timeLastRequest: 0,\n      trackData: {\n        numErrors: 0,\n        lastRequestTime: 0,\n        totalRequestTime: 0\n      },\n      tryCount: 0,\n      isProcessed: false,\n      source: source\n    };\n    this.queue.waiting.push(newPendingMessage);\n    if (this.queue.current) {\n      if (message.history?.error_state === MessageErrorState.RETRYING) {\n        this.setMessageErrorState(newPendingMessage, MessageErrorState.WAITING);\n      }\n    }\n  }\n  clearCurrentQueueItem() {\n    if (this.queue.current) {\n      this.queue.current = null;\n    }\n  }\n  moveToNextQueueItem() {\n    this.clearCurrentQueueItem();\n    this.runQueueIfReady();\n  }\n  setMessageErrorState(pendingRequest, errorState) {\n    const {message: message} = pendingRequest;\n    const {allMessagesByID: allMessagesByID} = this.serviceManager.store.getState();\n    const messageToUpdate = allMessagesByID[message.id];\n    if (messageToUpdate) {\n      const currentState = messageToUpdate.history?.error_state;\n      const errorSame = currentState === errorState || errorState === MessageErrorState.NONE && !currentState;\n      if (!errorSame) {\n        let announceMessageID;\n        switch (errorState) {\n         case MessageErrorState.FAILED:\n          {\n            announceMessageID = \"errors_ariaMessageFailed\";\n            break;\n          }\n        }\n        if (announceMessageID) {\n          this.serviceManager.store.dispatch(actions.announceMessage({\n            messageID: announceMessageID\n          }));\n        }\n        this.serviceManager.store.dispatch(actions.setMessageErrorState(message.id, errorState));\n        const {allMessagesByID: allMessagesByID} = this.serviceManager.store.getState();\n        pendingRequest.message = allMessagesByID[message.id];\n      }\n    }\n  }\n  send(message, source, localMessageID, requestOptions) {\n    message.history.timestamp = message.history.timestamp || Date.now();\n    message.input = message.input || {};\n    message.input.message_type = message.input.message_type || MessageInputType.TEXT;\n    const sendMessagePromise = resolvablePromise();\n    this.addToMessageQueue(message, source, localMessageID, sendMessagePromise, requestOptions);\n    this.runQueueIfReady();\n    return sendMessagePromise;\n  }\n  cancelAllMessageRequests() {\n    while (this.queue.waiting.length) {\n      this.cancelMessageRequestByID(this.queue.waiting[0].message.id, false);\n    }\n    if (this.queue.current) {\n      this.cancelMessageRequestByID(this.queue.current.message.id, false);\n      this.clearCurrentQueueItem();\n    }\n  }\n  async cancelMessageRequestByID(messageID, logError) {\n    let pendingRequest;\n    if (this.queue.current?.message.id === messageID) {\n      pendingRequest = this.queue.current;\n    } else {\n      const index = this.queue.waiting.findIndex(item => item.message.id === messageID);\n      if (index !== -1) {\n        pendingRequest = this.queue.waiting[index];\n        this.queue.waiting.splice(index, 1);\n      }\n    }\n    if (pendingRequest) {\n      const {lastResponse: lastResponse, sendMessageController: sendMessageController} = pendingRequest;\n      sendMessageController?.abort(\"Message was cancelled\");\n      this.rejectFinalErrorOnMessage(pendingRequest, \"Message was cancelled\");\n      if (logError) {\n        this.serviceManager.actions.errorOccurred({\n          errorType: OnErrorType.MESSAGE_COMMUNICATION,\n          message: \"Message was cancelled\",\n          otherData: await safeFetchTextWithTimeout(lastResponse)\n        });\n      }\n    }\n  }\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ class NamespaceService {\n  constructor(namespace) {\n    this.originalName = namespace;\n    this.attributeSafe = namespace;\n    this.suffix = getSuffix(namespace);\n  }\n}\n\nfunction getSuffix(namespace) {\n  const computedName = computeNamespaceName(namespace);\n  return computedName?.length ? `--${namespace}` : \"\";\n}\n\nfunction computeNamespaceName(namespace) {\n  return namespace ? namespace.trim() : \"\";\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ class ServiceManager {\n  constructor() {\n    this.userDefinedElementRegistry = new Map;\n    this.restartCount = 0;\n  }\n  async fire(busEvent) {\n    return this.eventBus.fire(busEvent, this.instance);\n  }\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ let innerStorage = {};\n\nconst storage$1 = {\n  getItem(key) {\n    return innerStorage[key];\n  },\n  setItem(key, value) {\n    innerStorage[key] = value;\n  },\n  removeItem(key) {\n    delete innerStorage[key];\n  },\n  length: Object.keys(innerStorage).length,\n  clear() {\n    innerStorage = {};\n  },\n  key(index) {\n    return Object.keys(innerStorage)[index];\n  }\n};\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const storage = IS_SESSION_STORAGE() ? window.sessionStorage : storage$1;\n\nclass UserSessionStorageService {\n  constructor(serviceManager) {\n    this.serviceManager = serviceManager;\n    this.prefix = `CARBON_CHAT_SESSION${this.serviceManager?.namespace?.suffix || \"\"}`;\n  }\n  loadChatSession() {\n    try {\n      const chatSessionString = storage.getItem(this.getChatSessionKey());\n      const chatSession = chatSessionString ? JSON.parse(chatSessionString) : null;\n      if (chatSession?.version === VERSION) {\n        return chatSession;\n      }\n      this.clearChatSession();\n      return null;\n    } catch (error) {\n      this.clearChatSession();\n      return null;\n    }\n  }\n  loadLauncherSession() {\n    try {\n      const launcherSessionString = storage.getItem(this.getLauncherSessionKey());\n      const launcherSession = launcherSessionString ? JSON.parse(launcherSessionString) : null;\n      if (launcherSession?.version === VERSION) {\n        launcherSession.wasLoadedFromBrowser = true;\n        return launcherSession;\n      }\n      this.clearLauncherSession();\n      return null;\n    } catch (error) {\n      this.clearLauncherSession();\n      return null;\n    }\n  }\n  persistChatSession(session) {\n    try {\n      storage.setItem(this.getChatSessionKey(), JSON.stringify(session));\n    } catch (error) {\n      consoleError(\"Error in persistChatSession\", error);\n    }\n  }\n  persistLauncherSession(session) {\n    try {\n      storage.setItem(this.getLauncherSessionKey(), JSON.stringify(session));\n    } catch (error) {\n      consoleError(\"Error in persistLauncherSession\", error);\n    }\n  }\n  clearChatSession() {\n    try {\n      storage.removeItem(this.getChatSessionKey());\n    } catch (error) {\n      consoleError(\"Error in clearChatSession\", error);\n    }\n  }\n  clearLauncherSession() {\n    try {\n      storage.removeItem(this.getLauncherSessionKey());\n    } catch (error) {\n      consoleError(\"Error in clearLauncherSession\", error);\n    }\n  }\n  getChatSessionKey() {\n    return this.prefix;\n  }\n  getLauncherSessionKey() {\n    return this.prefix;\n  }\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function replaceCurrentArrayValue(currentValue, newValue) {\n  if (Array.isArray(newValue)) {\n    return newValue;\n  }\n  return undefined;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const humanAgentReducers = {\n  [HA_SET_IS_CONNECTING]: (state, action) => {\n    const {isConnecting: isConnecting, localMessageID: localMessageID} = action;\n    return {\n      ...state,\n      humanAgentState: {\n        ...state.humanAgentState,\n        isConnecting: isConnecting,\n        activeLocalMessageID: localMessageID,\n        numUnreadMessages: isConnecting ? 0 : state.humanAgentState.numUnreadMessages\n      },\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        chatState: {\n          ...state.persistedToBrowserStorage.chatState,\n          humanAgentState: {\n            ...state.persistedToBrowserStorage.chatState.humanAgentState,\n            isSuspended: isConnecting ? state.persistedToBrowserStorage.chatState.humanAgentState.isSuspended : false\n          }\n        }\n      }\n    };\n  },\n  [HA_SET_IS_RECONNECTING]: (state, action) => {\n    const {isReconnecting: isReconnecting} = action;\n    return {\n      ...state,\n      humanAgentState: {\n        ...state.humanAgentState,\n        isReconnecting: isReconnecting\n      }\n    };\n  },\n  [HA_SET_HUMAN_AGENT_AVAILABILITY]: (state, action) => {\n    if (!state.humanAgentState.isConnecting) {\n      return state;\n    }\n    return {\n      ...state,\n      humanAgentState: {\n        ...state.humanAgentState,\n        availability: state.humanAgentState.isConnecting ? action.availability : null\n      }\n    };\n  },\n  [HA_SET_SHOW_SCREEN_SHARE_REQUEST]: (state, {showRequest: showRequest}) => ({\n    ...state,\n    humanAgentState: {\n      ...state.humanAgentState,\n      showScreenShareRequest: showRequest\n    }\n  }),\n  [HA_SET_HUMAN_AGENT_JOINED]: (state, action) => {\n    const responseUserProfiles = {\n      ...state.persistedToBrowserStorage.chatState.humanAgentState.responseUserProfiles\n    };\n    const {responseUserProfile: responseUserProfile} = action;\n    if (responseUserProfile) {\n      responseUserProfiles[responseUserProfile.id] = responseUserProfile;\n    }\n    return {\n      ...state,\n      humanAgentState: {\n        ...state.humanAgentState,\n        isConnecting: false,\n        isReconnecting: false,\n        availability: null\n      },\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        chatState: {\n          ...state.persistedToBrowserStorage.chatState,\n          humanAgentState: {\n            ...state.persistedToBrowserStorage.chatState.humanAgentState,\n            isConnected: true,\n            responseUserProfile: responseUserProfile,\n            responseUserProfiles: responseUserProfiles\n          }\n        }\n      }\n    };\n  },\n  [HA_SET_PERSISTED_STATE]: (state, action) => ({\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      chatState: {\n        ...state.persistedToBrowserStorage.chatState,\n        humanAgentState: {\n          ...state.persistedToBrowserStorage.chatState.humanAgentState,\n          serviceDeskState: action.state\n        }\n      }\n    }\n  }),\n  [HA_UPDATE_IS_SUSPENDED]: (state, action) => {\n    if (!state.humanAgentState.isConnecting && !state.persistedToBrowserStorage.chatState.humanAgentState.isConnected) {\n      return state;\n    }\n    return {\n      ...state,\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        chatState: {\n          ...state.persistedToBrowserStorage.chatState,\n          humanAgentState: {\n            ...state.persistedToBrowserStorage.chatState.humanAgentState,\n            isSuspended: action.isSuspended\n          }\n        }\n      }\n    };\n  },\n  [HA_UPDATE_IS_TYPING]: (state, action) => ({\n    ...state,\n    humanAgentState: {\n      ...state.humanAgentState,\n      isHumanAgentTyping: action.isTyping\n    }\n  }),\n  [HA_SET_HUMAN_AGENT_LEFT_CHAT]: state => ({\n    ...state,\n    botMessageState: {\n      ...state.botMessageState\n    },\n    humanAgentState: {\n      ...state.humanAgentState,\n      isHumanAgentTyping: false\n    },\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      chatState: {\n        ...state.persistedToBrowserStorage.chatState,\n        humanAgentState: {\n          ...state.persistedToBrowserStorage.chatState.humanAgentState,\n          responseUserProfile: null\n        }\n      }\n    }\n  }),\n  [HA_UPDATE_CAPABILITIES]: (state, action) => {\n    const newInputState = {\n      ...state.humanAgentState.inputState,\n      ...action.capabilities\n    };\n    if (!newInputState.allowFileUploads) {\n      newInputState.files = [];\n    }\n    return {\n      ...state,\n      humanAgentState: {\n        ...state.humanAgentState,\n        inputState: newInputState\n      }\n    };\n  },\n  [HA_SET_IS_SCREEN_SHARING]: (state, {isSharing: isSharing}) => ({\n    ...state,\n    humanAgentState: {\n      ...state.humanAgentState,\n      isScreenSharing: isSharing\n    }\n  }),\n  [HA_UPDATE_FILE_UPLOAD_IN_PROGRESS]: (state, action) => ({\n    ...state,\n    humanAgentState: {\n      ...state.humanAgentState,\n      fileUploadInProgress: action.fileUploadInProgress\n    }\n  }),\n  [HA_END_CHAT]: state => {\n    let newState = applyLocalMessageUIState(state, state.humanAgentState.activeLocalMessageID, \"wasHumanAgentChatEnded\", true);\n    newState = {\n      ...newState,\n      humanAgentState: {\n        ...newState.humanAgentState,\n        isConnecting: false,\n        isReconnecting: false,\n        availability: null,\n        activeLocalMessageID: null,\n        isHumanAgentTyping: false,\n        inputState: {\n          ...newState.humanAgentState.inputState,\n          isReadonly: false\n        }\n      },\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        chatState: {\n          ...state.persistedToBrowserStorage.chatState,\n          humanAgentState: {\n            ...state.persistedToBrowserStorage.chatState.humanAgentState,\n            isConnected: false,\n            isSuspended: false,\n            responseUserProfile: null\n          }\n        }\n      }\n    };\n    return newState;\n  }\n};\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function populateTourStepItems(state) {\n  const {activeTourID: activeTourID} = state.persistedToBrowserStorage.chatState.persistedTourState;\n  if (activeTourID) {\n    const originalMessage = state.allMessagesByID[activeTourID];\n    const tourMessageItem = originalMessage?.output?.generic?.find(message => Boolean(message.user_defined?.steps));\n    if (tourMessageItem) {\n      return {\n        ...state,\n        tourState: {\n          ...state.tourState,\n          activeTourStepItems: tourMessageItem.user_defined?.steps\n        }\n      };\n    }\n  }\n  return clearTourState(state);\n}\n\nfunction clearTourState(state) {\n  return {\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      chatState: {\n        ...state.persistedToBrowserStorage.chatState,\n        persistedTourState: {\n          activeTourID: null,\n          activeTourCurrentStepIndex: null\n        }\n      },\n      launcherState: {\n        ...state.persistedToBrowserStorage.launcherState,\n        activeTour: false\n      }\n    },\n    tourState: {\n      ...state.tourState,\n      activeTourStepItems: null\n    }\n  };\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const EXCLUDE_HUMAN_AGENT_UNREAD = new Set([ HumanAgentMessageType.USER_ENDED_CHAT, HumanAgentMessageType.CHAT_WAS_ENDED, HumanAgentMessageType.RELOAD_WARNING ]);\n\nconst reducers = {\n  [CHANGE_STATE]: (state, action) => merge({}, state, action.partialState),\n  [HYDRATE_CHAT]: state => ({\n    ...state,\n    isHydrated: true\n  }),\n  [RESTART_CONVERSATION]: state => {\n    let newState = {\n      ...state,\n      botMessageState: {\n        ...state.botMessageState,\n        localMessageIDs: [],\n        messageIDs: [],\n        isTypingCounter: 0,\n        isScrollAnchored: false\n      },\n      allMessageItemsByID: {},\n      allMessagesByID: {},\n      iFramePanelState: {\n        ...DEFAULT_IFRAME_PANEL_STATE\n      },\n      viewSourcePanelState: {\n        ...DEFAULT_CITATION_PANEL_STATE\n      },\n      customPanelState: {\n        ...DEFAULT_CUSTOM_PANEL_STATE\n      },\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        chatState: {\n          ...state.persistedToBrowserStorage.chatState,\n          homeScreenState: {\n            ...state.persistedToBrowserStorage.chatState.homeScreenState,\n            showBackToBot: false\n          }\n        }\n      },\n      isHydrated: false,\n      catastrophicErrorType: null\n    };\n    newState = clearTourState(newState);\n    if (newState.homeScreenConfig.is_on) {\n      newState = setHomeScreenOpenState(newState, true);\n    }\n    return newState;\n  },\n  [HYDRATE_MESSAGE_HISTORY]: (state, action) => {\n    let newState = {\n      ...state,\n      ...action.messageHistory\n    };\n    if (state.persistedToBrowserStorage.chatState.persistedTourState.activeTourID) {\n      newState = populateTourStepItems(newState);\n    }\n    return newState;\n  },\n  [ADD_LOCAL_MESSAGE_ITEM]: (state, action) => {\n    const {messageItem: messageItem, message: message, addMessage: addMessage, addAfterID: addAfterID} = action;\n    const {id: id} = messageItem.ui_state;\n    const isSilent = message.history.silent;\n    let newState = state;\n    if (addMessage) {\n      newState = applyFullMessage(newState, message);\n    }\n    const currentIndex = newState.botMessageState.localMessageIDs.findIndex(existingID => existingID === id);\n    const newLocalMessageIDs = [ ...newState.botMessageState.localMessageIDs ];\n    let insertAtIndex = currentIndex;\n    if (currentIndex !== -1) {\n      newLocalMessageIDs.splice(currentIndex, 1);\n    } else {\n      insertAtIndex = newLocalMessageIDs.length;\n    }\n    if (addAfterID) {\n      const afterIDIndex = newLocalMessageIDs.findIndex(existingID => existingID === addAfterID);\n      if (afterIDIndex !== -1) {\n        insertAtIndex = afterIDIndex + 1;\n      }\n    }\n    newLocalMessageIDs.splice(insertAtIndex, 0, id);\n    if (!isSilent) {\n      newState = {\n        ...newState,\n        allMessageItemsByID: {\n          ...newState.allMessageItemsByID,\n          [id]: messageItem\n        },\n        botMessageState: {\n          ...newState.botMessageState,\n          localMessageIDs: newLocalMessageIDs\n        }\n      };\n      if (newState.persistedToBrowserStorage.chatState.homeScreenState.isHomeScreenOpen) {\n        newState = setHomeScreenOpenState(newState, false);\n      }\n      const isBotMessage = !messageItem.item.agent_message_type;\n      const isMainWindowOpen = state.persistedToBrowserStorage.launcherState.viewState.mainWindow;\n      if (!isBotMessage && (!isMainWindowOpen || !state.isBrowserPageVisible)) {\n        const fromHumanAgent = !isRequest(message);\n        if (fromHumanAgent && !EXCLUDE_HUMAN_AGENT_UNREAD.has(messageItem.item.agent_message_type)) {\n          newState = {\n            ...newState,\n            humanAgentState: {\n              ...newState.humanAgentState,\n              numUnreadMessages: newState.humanAgentState.numUnreadMessages + 1\n            }\n          };\n        }\n      }\n    }\n    return newState;\n  },\n  [REMOVE_MESSAGES]: (state, {messageIDs: messageIDs}) => {\n    const idsSet = new Set(messageIDs);\n    const newAllMessages = {\n      ...state.allMessagesByID\n    };\n    const newAllMessageItems = {\n      ...state.allMessageItemsByID\n    };\n    const newMessageIDs = state.botMessageState.messageIDs.filter(messageID => !idsSet.has(messageID));\n    const newMessageItemsIDs = state.botMessageState.localMessageIDs.filter(messageItemID => {\n      const messageItem = newAllMessageItems[messageItemID];\n      const removeItem = idsSet.has(messageItem?.fullMessageID);\n      if (removeItem) {\n        delete newAllMessageItems[messageItemID];\n      }\n      return !removeItem;\n    });\n    messageIDs.forEach(messageID => {\n      delete newAllMessages[messageID];\n    });\n    const newState = {\n      ...state,\n      allMessagesByID: newAllMessages,\n      allMessageItemsByID: newAllMessageItems,\n      botMessageState: {\n        ...state.botMessageState,\n        messageIDs: newMessageIDs,\n        localMessageIDs: newMessageItemsIDs\n      }\n    };\n    return newState;\n  },\n  [UPDATE_LOCAL_MESSAGE_ITEM]: (state, action) => {\n    const {messageItem: messageItem} = action;\n    return {\n      ...state,\n      allMessageItemsByID: {\n        ...state.allMessageItemsByID,\n        [messageItem.ui_state.id]: messageItem\n      }\n    };\n  },\n  [UPDATE_MESSAGE]: (state, action) => {\n    const {message: message} = action;\n    return {\n      ...state,\n      allMessagesByID: {\n        ...state.allMessagesByID,\n        [message.id]: message\n      }\n    };\n  },\n  [ADD_MESSAGE]: (state, action) => {\n    const {message: message} = action;\n    const messageID = message.id;\n    let newState = state;\n    if (isResponse(message)) {\n      const itemIDsInNewMessage = [];\n      message.output.generic.forEach(item => {\n        const id = streamItemID(messageID, item);\n        if (id) {\n          itemIDsInNewMessage.push(id);\n        }\n      });\n      const newAllMessageItemsByID = {\n        ...state.allMessageItemsByID\n      };\n      const existingItemIDs = [];\n      let firstFoundIndex;\n      const newLocalMessageIDs = state.botMessageState.localMessageIDs.filter((itemID, index) => {\n        const item = state.allMessageItemsByID[itemID];\n        const isItemInMessage = item.fullMessageID === messageID;\n        if (isItemInMessage) {\n          if (firstFoundIndex === undefined) {\n            firstFoundIndex = index;\n          }\n          if (!itemIDsInNewMessage.includes(itemID)) {\n            delete newAllMessageItemsByID[itemID];\n          } else {\n            existingItemIDs.push(itemID);\n          }\n        }\n        return !isItemInMessage;\n      });\n      if (existingItemIDs.length) {\n        const itemIDsToInsert = itemIDsInNewMessage.filter(itemID => existingItemIDs.includes(itemID));\n        if (itemIDsToInsert.length) {\n          newLocalMessageIDs.splice(firstFoundIndex, 0, ...itemIDsToInsert);\n        }\n      }\n      newState = {\n        ...newState,\n        allMessageItemsByID: newAllMessageItemsByID,\n        botMessageState: {\n          ...newState.botMessageState,\n          localMessageIDs: newLocalMessageIDs\n        }\n      };\n    }\n    return applyFullMessage(newState, message);\n  },\n  [MESSAGE_SET_OPTION_SELECTED]: (state, action) => {\n    const newMessagesByID = {\n      ...state.allMessageItemsByID\n    };\n    newMessagesByID[action.messageID] = {\n      ...state.allMessageItemsByID[action.messageID],\n      ui_state: {\n        ...state.allMessageItemsByID[action.messageID].ui_state,\n        optionSelected: action.sentMessage\n      }\n    };\n    return {\n      ...state,\n      allMessageItemsByID: newMessagesByID\n    };\n  },\n  [ADD_IS_TYPING_COUNTER]: (state, action) => ({\n    ...state,\n    botMessageState: {\n      ...state.botMessageState,\n      isTypingCounter: Math.max(state.botMessageState.isTypingCounter + action.addToIsTyping, 0)\n    }\n  }),\n  [ADD_IS_LOADING_COUNTER]: (state, action) => ({\n    ...state,\n    botMessageState: {\n      ...state.botMessageState,\n      isLoadingCounter: Math.max(state.botMessageState.isLoadingCounter + action.addToIsLoading, 0)\n    }\n  }),\n  [ADD_IS_HYDRATING_COUNTER]: (state, action) => ({\n    ...state,\n    botMessageState: {\n      ...state.botMessageState,\n      isHydratingCounter: Math.max(state.botMessageState.isHydratingCounter + action.addToIsHydrating, 0)\n    }\n  }),\n  [SET_APP_STATE_VALUE]: (state, action) => ({\n    ...state,\n    [action.key]: action.value\n  }),\n  [UPDATE_PERSISTED_CHAT_STATE]: (state, action) => ({\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      chatState: {\n        ...state.persistedToBrowserStorage.chatState,\n        ...action.chatState\n      }\n    }\n  }),\n  [UPDATE_HAS_SENT_NON_WELCOME_MESSAGE]: (state, action) => {\n    if (state.persistedToBrowserStorage.chatState.hasSentNonWelcomeMessage === action.hasSentNonWelcomeMessage) {\n      return state;\n    }\n    return {\n      ...state,\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        chatState: {\n          ...state.persistedToBrowserStorage.chatState,\n          hasSentNonWelcomeMessage: action.hasSentNonWelcomeMessage\n        },\n        launcherState: {\n          ...state.persistedToBrowserStorage.launcherState,\n          hasSentNonWelcomeMessage: action.hasSentNonWelcomeMessage\n        }\n      }\n    };\n  },\n  [SET_VIEW_STATE]: (state, action) => handleViewStateChange(state, action.viewState),\n  [SET_VIEW_CHANGING]: (state, action) => ({\n    ...state,\n    viewChanging: action.viewChanging\n  }),\n  [SET_INITIAL_VIEW_CHANGE_COMPLETE]: (state, action) => ({\n    ...state,\n    initialViewChangeComplete: action.changeComplete\n  }),\n  [UPDATE_BOT_NAME]: (state, action) => ({\n    ...state,\n    botName: action.name,\n    headerDisplayName: state.theme.useAITheme ? state.headerDisplayName : action.name\n  }),\n  [UPDATE_BOT_AVATAR_URL]: (state, action) => ({\n    ...state,\n    botAvatarURL: action.url\n  }),\n  [UPDATE_LAUNCHER_AVATAR_URL]: (state, action) => ({\n    ...state,\n    launcher: {\n      ...state.launcher,\n      config: {\n        ...state.launcher.config,\n        mobile: {\n          ...state.launcher.config.mobile,\n          avatar_url_override: action.source\n        },\n        desktop: {\n          ...state.launcher.config.desktop,\n          avatar_url_override: action.source\n        }\n      }\n    }\n  }),\n  [UPDATE_MAIN_HEADER_TITLE]: (state, action) => ({\n    ...state,\n    headerDisplayName: action.title\n  }),\n  [UPDATE_CSS_VARIABLES]: (state, action) => {\n    const {config: config} = state;\n    const {variables: variables} = action;\n    const newConfig = {\n      public: {\n        ...config.public\n      }\n    };\n    return {\n      ...state,\n      config: newConfig,\n      cssVariableOverrides: variables\n    };\n  },\n  [UPDATE_HOME_SCREEN_CONFIG]: (state, action) => {\n    const newHomeScreenConfig = action.homeScreenConfig;\n    return {\n      ...state,\n      homeScreenConfig: mergeWith({}, state.homeScreenConfig, newHomeScreenConfig, replaceCurrentArrayValue)\n    };\n  },\n  [SET_MESSAGE_UI_PROPERTY]: (state, action) => applyLocalMessageUIState(state, action.localMessageID, action.propertyName, action.propertyValue),\n  [SET_MESSAGE_RESPONSE_HISTORY_PROPERTY]: (state, action) => {\n    const {messageID: messageID, propertyName: propertyName, propertyValue: propertyValue} = action;\n    const oldMessage = state.allMessagesByID[messageID];\n    if (oldMessage) {\n      return {\n        ...state,\n        allMessagesByID: {\n          ...state.allMessagesByID,\n          [messageID]: {\n            ...oldMessage,\n            history: {\n              ...oldMessage.history,\n              [propertyName]: propertyValue\n            }\n          }\n        }\n      };\n    }\n    return state;\n  },\n  [SET_MESSAGE_UI_STATE_INTERNAL_PROPERTY]: (state, action) => {\n    const {messageID: messageID, propertyName: propertyName, propertyValue: propertyValue} = action;\n    const oldMessage = state.allMessagesByID[messageID];\n    if (oldMessage) {\n      return {\n        ...state,\n        allMessagesByID: {\n          ...state.allMessagesByID,\n          [messageID]: {\n            ...oldMessage,\n            ui_state_internal: {\n              ...oldMessage.ui_state_internal,\n              [propertyName]: propertyValue\n            }\n          }\n        }\n      };\n    }\n    return state;\n  },\n  [MERGE_HISTORY_ITEM]: (state, action) => {\n    const oldMessage = state.allMessagesByID[action.messageID];\n    if (oldMessage) {\n      return {\n        ...state,\n        allMessagesByID: {\n          ...state.allMessagesByID,\n          [action.messageID]: {\n            ...oldMessage,\n            history: merge({}, oldMessage.history, action.history)\n          }\n        }\n      };\n    }\n    return state;\n  },\n  [ANNOUNCE_MESSAGE]: (state, action) => ({\n    ...state,\n    announceMessage: action.message\n  }),\n  [ACCEPTED_DISCLAIMER]: state => ({\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      chatState: {\n        ...state.persistedToBrowserStorage.chatState,\n        disclaimersAccepted: {\n          ...state.persistedToBrowserStorage.chatState.disclaimersAccepted,\n          [window.location.hostname]: true\n        }\n      }\n    }\n  }),\n  [SET_HOME_SCREEN_IS_OPEN]: (state, {isOpen: isOpen}) => setHomeScreenOpenState(state, isOpen),\n  [TOGGLE_HOME_SCREEN]: state => setHomeScreenOpenState(state, !state.persistedToBrowserStorage.chatState.homeScreenState.isHomeScreenOpen, true),\n  [UPDATE_LAUNCHER_CONFIG]: (state, action) => {\n    const newConfig = merge({}, state.launcher.config, action.launcherConfig);\n    return {\n      ...state,\n      launcher: {\n        ...state.launcher,\n        config: newConfig\n      },\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        launcherState: {\n          ...state.persistedToBrowserStorage.launcherState,\n          desktopLauncherIsExpanded: newConfig.is_on && newConfig.desktop.is_on ? state.persistedToBrowserStorage.launcherState.desktopLauncherIsExpanded : false,\n          mobileLauncherIsExtended: newConfig.is_on && newConfig.mobile.is_on ? state.persistedToBrowserStorage.launcherState.mobileLauncherIsExtended : false\n        }\n      }\n    };\n  },\n  [SET_LAUNCHER_PROPERTY]: (state, action) => ({\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      launcherState: {\n        ...state.persistedToBrowserStorage.launcherState,\n        [action.propertyName]: action.propertyValue\n      }\n    }\n  }),\n  [SET_LAUNCHER_CONFIG_PROPERTY]: (state, action) => {\n    const newState = {\n      ...state,\n      launcher: {\n        ...state.launcher,\n        config: {\n          ...state.launcher.config\n        }\n      }\n    };\n    if (!action.launcherType || action.launcherType === LauncherType.DESKTOP) {\n      newState.launcher.config.desktop = {\n        ...state.launcher.config.desktop,\n        [action.propertyName]: action.propertyValue\n      };\n    }\n    if (!action.launcherType || action.launcherType === LauncherType.MOBILE) {\n      newState.launcher.config.mobile = {\n        ...state.launcher.config.mobile,\n        [action.propertyName]: action.propertyValue\n      };\n    }\n    return newState;\n  },\n  [SET_CHAT_MESSAGES_PROPERTY]: (state, action) => applyBotMessageState(state, {\n    [action.propertyName]: action.propertyValue\n  }),\n  [SET_LAUNCHER_MINIMIZED]: state => ({\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      launcherState: {\n        ...state.persistedToBrowserStorage.launcherState,\n        desktopLauncherIsExpanded: false,\n        desktopLauncherWasMinimized: true\n      }\n    }\n  }),\n  [OPEN_IFRAME_CONTENT]: (state, {messageItem: messageItem}) => ({\n    ...state,\n    iFramePanelState: {\n      ...state.iFramePanelState,\n      messageItem: messageItem,\n      isOpen: true\n    },\n    announceMessage: {\n      messageID: \"iframe_ariaOpenedPanel\"\n    }\n  }),\n  [CLOSE_IFRAME_PANEL]: state => ({\n    ...state,\n    iFramePanelState: {\n      ...state.iFramePanelState,\n      isOpen: false\n    },\n    announceMessage: {\n      messageID: \"iframe_ariaClosedPanel\"\n    }\n  }),\n  [SET_CONVERSATIONAL_SEARCH_CITATION_PANEL_IS_OPEN]: (state, action) => ({\n    ...state,\n    viewSourcePanelState: {\n      ...state.viewSourcePanelState,\n      citationItem: action.citationItem,\n      relatedSearchResult: action.relatedSearchResult,\n      isOpen: action.isOpen\n    }\n  }),\n  [SET_CUSTOM_PANEL_OPEN]: (state, action) => ({\n    ...state,\n    customPanelState: {\n      ...state.customPanelState,\n      isOpen: action.isOpen\n    }\n  }),\n  [SET_CUSTOM_PANEL_OPTIONS]: (state, action) => ({\n    ...state,\n    customPanelState: {\n      ...state.customPanelState,\n      options: action.options\n    }\n  }),\n  [SET_TOUR_DATA]: (state, action) => {\n    const newStateWithPersistedTourData = {\n      ...state,\n      persistedToBrowserStorage: {\n        ...state.persistedToBrowserStorage,\n        chatState: {\n          ...state.persistedToBrowserStorage.chatState,\n          persistedTourState: {\n            activeTourID: action.newActiveTourMessageID,\n            activeTourCurrentStepIndex: 0\n          }\n        },\n        launcherState: {\n          ...state.persistedToBrowserStorage.launcherState,\n          activeTour: true\n        }\n      }\n    };\n    return populateTourStepItems(newStateWithPersistedTourData);\n  },\n  [CLEAR_TOUR_DATA]: state => clearTourState(state),\n  [CHANGE_STEP_IN_TOUR]: (state, action) => ({\n    ...state,\n    persistedToBrowserStorage: {\n      ...state.persistedToBrowserStorage,\n      chatState: {\n        ...state.persistedToBrowserStorage.chatState,\n        persistedTourState: {\n          ...state.persistedToBrowserStorage.chatState.persistedTourState,\n          activeTourCurrentStepIndex: Math.max(Math.min(action.newStepNumber, state.tourState.activeTourStepItems.length - 1), 0)\n        }\n      }\n    }\n  }),\n  [UPDATE_INPUT_STATE]: (state, action) => {\n    const currentInputState = getInputState(state, action.isInputToHumanAgent);\n    const newInputState = {\n      ...currentInputState,\n      ...action.newState\n    };\n    const newState = applyInputState(state, newInputState, action.isInputToHumanAgent);\n    return newState;\n  },\n  [SET_IS_BROWSER_PAGE_VISIBLE]: (state, action) => {\n    let numUnreadMessages;\n    const isMainWindowOpen = state.persistedToBrowserStorage.launcherState.viewState.mainWindow;\n    if (isMainWindowOpen && action.isVisible) {\n      numUnreadMessages = 0;\n    } else {\n      numUnreadMessages = state.humanAgentState.numUnreadMessages;\n    }\n    return {\n      ...state,\n      isBrowserPageVisible: action.isVisible,\n      humanAgentState: {\n        ...state.humanAgentState,\n        numUnreadMessages: numUnreadMessages\n      }\n    };\n  },\n  [ADD_INPUT_FILE]: (state, {file: file, isInputToHumanAgent: isInputToHumanAgent}) => {\n    const currentInputState = getInputState(state, isInputToHumanAgent);\n    return applyInputState(state, {\n      ...currentInputState,\n      files: [ ...currentInputState.files, file ]\n    }, isInputToHumanAgent);\n  },\n  [REMOVE_INPUT_FILE]: (state, {fileID: fileID, isInputToHumanAgent: isInputToHumanAgent}) => {\n    const currentInputState = getInputState(state, isInputToHumanAgent);\n    const newUploads = [ ...currentInputState.files ];\n    const index = newUploads.findIndex(file => file.id === fileID);\n    if (index !== -1) {\n      newUploads.splice(index, 1);\n    }\n    return applyInputState(state, {\n      ...currentInputState,\n      files: newUploads\n    }, isInputToHumanAgent);\n  },\n  [REMOVE_LOCAL_MESSAGE_ITEM]: (state, {localMessageItemID: localMessageItemID}) => {\n    const newLocalMessageIDs = state.botMessageState.localMessageIDs.filter(id => id !== localMessageItemID);\n    const allMessageItemsByID = {\n      ...state.allMessageItemsByID\n    };\n    if (allMessageItemsByID[localMessageItemID]) {\n      delete allMessageItemsByID[localMessageItemID];\n    }\n    return {\n      ...state,\n      allMessageItemsByID: allMessageItemsByID,\n      botMessageState: {\n        ...state.botMessageState,\n        localMessageIDs: newLocalMessageIDs\n      }\n    };\n  },\n  [ADD_NOTIFICATION]: (state, {notification: notification, notificationID: notificationID}) => ({\n    ...state,\n    notifications: state.notifications.concat({\n      id: notificationID,\n      notification: notification\n    })\n  }),\n  [REMOVE_NOTIFICATIONS]: (state, {groupID: groupID, notificationID: notificationID}) => ({\n    ...state,\n    notifications: state.notifications.filter(notification => {\n      if (notificationID) {\n        return notification.id !== notificationID;\n      }\n      return notification.notification.groupID !== groupID;\n    })\n  }),\n  [REMOVE_ALL_NOTIFICATIONS]: state => ({\n    ...state,\n    notifications: []\n  }),\n  [CLEAR_INPUT_FILES]: (state, {isInputToHumanAgent: isInputToHumanAgent}) => {\n    const currentInputState = getInputState(state, isInputToHumanAgent);\n    return applyInputState(state, {\n      ...currentInputState,\n      files: []\n    }, isInputToHumanAgent);\n  },\n  [FILE_UPLOAD_INPUT_ERROR]: (state, {fileID: fileID, errorMessage: errorMessage, isInputToHumanAgent: isInputToHumanAgent}) => {\n    const currentInputSate = getInputState(state, isInputToHumanAgent);\n    const newUploads = [ ...currentInputSate.files ];\n    const index = newUploads.findIndex(file => file.id === fileID);\n    if (index !== -1) {\n      newUploads[index] = {\n        ...newUploads[index],\n        isError: true,\n        errorMessage: errorMessage,\n        status: FileStatusValue.COMPLETE\n      };\n    }\n    return applyInputState(state, {\n      ...currentInputSate,\n      files: newUploads\n    }, isInputToHumanAgent);\n  },\n  [ADD_NESTED_MESSAGES]: (state, {localMessageItems: localMessageItems}) => {\n    const allMessageItemsByID = {\n      ...state.allMessageItemsByID\n    };\n    localMessageItems.forEach(localMessageItem => {\n      allMessageItemsByID[localMessageItem.ui_state.id] = localMessageItem;\n    });\n    return {\n      ...state,\n      allMessageItemsByID: allMessageItemsByID\n    };\n  },\n  [SET_RESPONSE_PANEL_IS_OPEN]: (state, {isOpen: isOpen}) => ({\n    ...state,\n    responsePanelState: {\n      ...state.responsePanelState,\n      isOpen: isOpen\n    }\n  }),\n  [SET_RESPONSE_PANEL_CONTENT]: (state, {localMessageItem: localMessageItem, isMessageForInput: isMessageForInput}) => ({\n    ...state,\n    responsePanelState: {\n      ...state.responsePanelState,\n      localMessageItem: localMessageItem,\n      isMessageForInput: isMessageForInput\n    }\n  }),\n  [STREAMING_START]: (state, {messageID: messageID}) => {\n    const streamIntoResponse = {\n      id: messageID,\n      output: {\n        generic: []\n      },\n      history: {\n        timestamp: Date.now()\n      }\n    };\n    return applyFullMessage(state, streamIntoResponse);\n  },\n  [STREAMING_MERGE_MESSAGE_OPTIONS]: (state, {messageID: messageID, message_options: message_options}) => {\n    const existingMessage = state.allMessagesByID[messageID];\n    const newMessage = merge({}, existingMessage, {\n      message_options: message_options\n    });\n    if (existingMessage) {\n      return {\n        ...state,\n        allMessagesByID: {\n          ...state.allMessagesByID,\n          [messageID]: newMessage\n        }\n      };\n    }\n    return state;\n  },\n  [STREAMING_ADD_CHUNK]: (state, {chunkItem: chunkItem, fullMessageID: fullMessageID, isCompleteItem: isCompleteItem, disableFadeAnimation: disableFadeAnimation}) => {\n    const message = state.allMessagesByID[fullMessageID];\n    const localItemID = streamItemID(fullMessageID, chunkItem);\n    const existingLocalMessageItem = state.allMessageItemsByID[localItemID];\n    let {localMessageIDs: localMessageIDs} = state.botMessageState;\n    let newItem;\n    if (!existingLocalMessageItem) {\n      newItem = outputItemToLocalItem(chunkItem, message, false);\n      newItem.ui_state.needsAnnouncement = false;\n      newItem.ui_state.disableFadeAnimation = disableFadeAnimation;\n      newItem.ui_state.isIntermediateStreaming = true;\n      if (isCompleteItem) {\n        newItem.ui_state.streamingState = {\n          chunks: [],\n          isDone: true\n        };\n      } else {\n        newItem.ui_state.streamingState = {\n          chunks: [ chunkItem ],\n          isDone: false\n        };\n      }\n      localMessageIDs = [ ...localMessageIDs, localItemID ];\n      if (!newItem.item.response_type) {\n        throw new Error(`New chunk item does not have a response_type: ${JSON.stringify(chunkItem)}`);\n      }\n    } else if (isCompleteItem) {\n      const updatedItem = {\n        ...existingLocalMessageItem.item,\n        ...chunkItem\n      };\n      newItem = {\n        ...existingLocalMessageItem,\n        item: updatedItem,\n        ui_state: {\n          ...existingLocalMessageItem.ui_state,\n          isIntermediateStreaming: false,\n          streamingState: {\n            chunks: [],\n            isDone: true\n          }\n        }\n      };\n    } else {\n      const existingChunks = existingLocalMessageItem?.ui_state.streamingState?.chunks || [];\n      const newChunks = [ ...existingChunks, chunkItem ];\n      newItem = {\n        ...existingLocalMessageItem,\n        ui_state: {\n          ...existingLocalMessageItem?.ui_state,\n          streamingState: {\n            ...existingLocalMessageItem?.ui_state.streamingState,\n            chunks: newChunks\n          }\n        }\n      };\n    }\n    return {\n      ...state,\n      allMessageItemsByID: {\n        ...state.allMessageItemsByID,\n        [localItemID]: newItem\n      },\n      botMessageState: {\n        ...state.botMessageState,\n        localMessageIDs: localMessageIDs\n      }\n    };\n  },\n  [UPDATE_CHAT_HEADER_CONFIG]: (state, {chatHeaderConfig: chatHeaderConfig}) => ({\n    ...state,\n    chatHeaderState: {\n      ...state.chatHeaderState,\n      config: {\n        ...state.chatHeaderState.config,\n        ...chatHeaderConfig\n      }\n    }\n  }),\n  [UPDATE_MAX_VISIBLE_HEADER_OBJECTS]: (state, {maxTotal: maxTotal}) => ({\n    ...state,\n    chatHeaderState: {\n      ...state.chatHeaderState,\n      maxVisibleHeaderObjects: maxTotal\n    }\n  }),\n  [SET_STOP_STREAMING_BUTTON_VISIBLE]: (state, {isVisible: isVisible}) => ({\n    ...state,\n    botInputState: {\n      ...state.botInputState,\n      stopStreamingButtonState: {\n        ...state.botInputState.stopStreamingButtonState,\n        isVisible: isVisible\n      }\n    }\n  }),\n  [SET_STOP_STREAMING_BUTTON_DISABLED]: (state, {isDisabled: isDisabled}) => ({\n    ...state,\n    botInputState: {\n      ...state.botInputState,\n      stopStreamingButtonState: {\n        ...state.botInputState.stopStreamingButtonState,\n        isDisabled: isDisabled\n      }\n    }\n  }),\n  [SET_STREAM_ID]: (state, {currentStreamID: currentStreamID}) => ({\n    ...state,\n    botInputState: {\n      ...state.botInputState,\n      stopStreamingButtonState: {\n        ...state.botInputState.stopStreamingButtonState,\n        currentStreamID: currentStreamID\n      }\n    }\n  }),\n  [UPDATE_MAIN_HEADER_AVATAR]: (state, {config: config}) => ({\n    ...state,\n    headerAvatarConfig: config\n  })\n};\n\nfunction applyInputState(state, newInputState, isInputToHumanAgent) {\n  if (isInputToHumanAgent) {\n    return {\n      ...state,\n      humanAgentState: {\n        ...state.humanAgentState,\n        inputState: newInputState\n      }\n    };\n  }\n  return {\n    ...state,\n    botInputState: newInputState\n  };\n}\n\nfunction getInputState(state, isInputToHumanAgent) {\n  return isInputToHumanAgent ? state.humanAgentState.inputState : state.botInputState;\n}\n\nObject.assign(reducers, humanAgentReducers);\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function doCreateStore(config, serviceManager) {\n  let useAITheme;\n  if (config.public.themeConfig?.useAITheme !== undefined) {\n    useAITheme = config.public.themeConfig?.useAITheme;\n  } else {\n    useAITheme = DEFAULT_THEME_STATE.useAITheme;\n  }\n  const themeState = {\n    carbonTheme: config.public.themeConfig?.carbonTheme || DEFAULT_THEME_STATE.carbonTheme,\n    useAITheme: useAITheme,\n    corners: getThemeCornersType(config)\n  };\n  const botName = getBotName(themeState.useAITheme, config);\n  const initialState = {\n    ...DEFAULT_MESSAGE_STATE,\n    notifications: [],\n    botInputState: {\n      ...DEFAULT_INPUT_STATE(),\n      isReadonly: config.public.isReadonly,\n      fieldVisible: !config.public.isReadonly\n    },\n    humanAgentState: {\n      ...DEFAULT_HUMAN_AGENT_STATE\n    },\n    botName: botName,\n    headerDisplayName: null,\n    botAvatarURL: config.public.botAvatarURL || null,\n    headerAvatarConfig: null,\n    chatWidthBreakpoint: null,\n    chatWidth: null,\n    chatHeight: null,\n    cssVariableOverrides: mergeCSSVariables({}, {}, themeState.carbonTheme, themeState.useAITheme),\n    isHydrated: false,\n    languagePack: enLanguagePack,\n    locale: \"en\",\n    config: config,\n    originalConfig: config,\n    suspendScrollDetection: false,\n    homeScreenConfig: withoutEmptyStarters({}),\n    persistedToBrowserStorage: {\n      ...DEFAULT_PERSISTED_TO_BROWSER,\n      chatState: {\n        ...DEFAULT_PERSISTED_TO_BROWSER.chatState,\n        homeScreenState: {\n          ...DEFAULT_PERSISTED_TO_BROWSER.chatState.homeScreenState\n        }\n      }\n    },\n    launcher: merge({}, DEFAULT_LAUNCHER, {\n      config: merge({}, {}, {\n        mobile: {}\n      }, {\n        is_on: config.public.showLauncher\n      })\n    }),\n    iFramePanelState: DEFAULT_IFRAME_PANEL_STATE,\n    viewSourcePanelState: DEFAULT_CITATION_PANEL_STATE,\n    isDestroyed: false,\n    customPanelState: DEFAULT_CUSTOM_PANEL_STATE,\n    viewChanging: false,\n    initialViewChangeComplete: false,\n    targetViewState: config.public.openChatByDefault ? VIEW_STATE_MAIN_WINDOW_OPEN : VIEW_STATE_LAUNCHER_OPEN,\n    responsePanelState: DEFAULT_MESSAGE_PANEL_STATE,\n    customMenuOptions: null,\n    tourState: DEFAULT_TOUR_STATE,\n    isBrowserPageVisible: true,\n    showNonHeaderBackgroundCover: false,\n    theme: themeState,\n    layout: getLayoutState(config),\n    chatHeaderState: {\n      config: null,\n      maxVisibleHeaderObjects: 0\n    }\n  };\n  const sessionStorageLauncherState = serviceManager.userSessionStorageService?.loadLauncherSession();\n  if (sessionStorageLauncherState) {\n    initialState.targetViewState = sessionStorageLauncherState.viewState;\n    sessionStorageLauncherState.viewState = VIEW_STATE_ALL_CLOSED;\n    initialState.persistedToBrowserStorage.launcherState = sessionStorageLauncherState;\n  }\n  const enhancer = config.public.debug || NODE_ENV === \"development\" ? window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    name: \"CarbonAIChat\",\n    instanceId: `Chat${serviceManager.namespace.suffix}`\n  }) : undefined;\n  return createStore(reducerFunction, initialState, enhancer);\n}\n\nfunction getThemeCornersType(config) {\n  if (getLayoutState(config).showFrame === false || IS_PHONE || config.public.themeConfig?.corners === CornersType.SQUARE) {\n    return CornersType.SQUARE;\n  }\n  return DEFAULT_THEME_STATE.corners;\n}\n\nfunction getLayoutState(config) {\n  if (config.public.themeConfig?.useAITheme) {\n    return {\n      showFrame: config.public.layout?.showFrame ?? true,\n      hasContentMaxWidth: config.public.layout?.hasContentMaxWidth ?? true\n    };\n  }\n  return merge({}, DEFAULT_LAYOUT_STATE, config.public.layout);\n}\n\nfunction reducerFunction(state, action) {\n  return action && reducers[action.type] ? reducers[action.type](state, action) : state;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const UNREAD_COUNT_TITLE_TIME = 1e4;\n\nfunction copyToSessionStorage(serviceManager) {\n  let previousPersistedToBrowserStorage = serviceManager.store.getState().persistedToBrowserStorage;\n  return () => {\n    const {persistedToBrowserStorage: persistedToBrowserStorage} = serviceManager.store.getState();\n    const persistChatSession = previousPersistedToBrowserStorage !== persistedToBrowserStorage;\n    if (persistChatSession) {\n      previousPersistedToBrowserStorage = persistedToBrowserStorage;\n      serviceManager.userSessionStorageService.persistChatSession(persistedToBrowserStorage.chatState);\n      serviceManager.userSessionStorageService.persistLauncherSession(persistedToBrowserStorage.launcherState);\n    }\n  };\n}\n\nfunction createHandleWindowTitle(serviceManager) {\n  const {store: store} = serviceManager;\n  let originalTitle;\n  let changeTitleTimer;\n  let previousState = store.getState();\n  return () => {\n    const state = store.getState();\n    const {humanAgentState: humanAgentState} = store.getState();\n    const {numUnreadMessages: numUnreadMessages} = humanAgentState;\n    if (numUnreadMessages !== previousState.humanAgentState.numUnreadMessages) {\n      if (!numUnreadMessages) {\n        clearTimeout(changeTitleTimer);\n        if (originalTitle) {\n          window.document.title = originalTitle;\n          originalTitle = null;\n        }\n      } else {\n        clearTimeout(changeTitleTimer);\n        if (!originalTitle) {\n          originalTitle = window.document.title;\n        }\n        window.document.title = state.languagePack.agent_newMessage;\n        changeTitleTimer = setTimeout(() => {\n          window.document.title = `(${numUnreadMessages}) ${originalTitle}`;\n        }, UNREAD_COUNT_TITLE_TIME);\n      }\n    }\n    previousState = state;\n  };\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ async function createServiceManager(appConfig, additionalChatParameters) {\n  const publicConfig = appConfig.public;\n  const serviceManager = new ServiceManager;\n  serviceManager.additionalChatParameters = additionalChatParameters;\n  serviceManager.namespace = new NamespaceService(publicConfig.namespace);\n  serviceManager.userSessionStorageService = new UserSessionStorageService(serviceManager);\n  serviceManager.actions = new ChatActionsImpl(serviceManager);\n  serviceManager.eventBus = new EventBus;\n  serviceManager.store = doCreateStore(appConfig, serviceManager);\n  serviceManager.historyService = new HistoryService(serviceManager);\n  serviceManager.messageService = new MessageService(serviceManager, publicConfig);\n  serviceManager.store.subscribe(copyToSessionStorage(serviceManager));\n  if (!publicConfig.disableWindowTitleChanges) {\n    serviceManager.store.subscribe(createHandleWindowTitle(serviceManager));\n  }\n  serviceManager.customPanelManager = createCustomPanelManager(serviceManager);\n  setIntl(serviceManager, serviceManager.store.getState().locale, serviceManager.store.getState().languagePack);\n  serviceManager.writeableElements = {\n    [WriteableElementName.AI_TOOLTIP_AFTER_DESCRIPTION_ELEMENT]: document.createElement(\"div\"),\n    [WriteableElementName.WELCOME_NODE_BEFORE_ELEMENT]: document.createElement(\"div\"),\n    [WriteableElementName.HEADER_BOTTOM_ELEMENT]: document.createElement(\"div\"),\n    [WriteableElementName.BEFORE_INPUT_ELEMENT]: document.createElement(\"div\"),\n    [WriteableElementName.HOME_SCREEN_HEADER_BOTTOM_ELEMENT]: document.createElement(\"div\"),\n    [WriteableElementName.HOME_SCREEN_AFTER_STARTERS_ELEMENT]: document.createElement(\"div\"),\n    [WriteableElementName.HOME_SCREEN_BEFORE_INPUT_ELEMENT]: document.createElement(\"div\"),\n    [WriteableElementName.CUSTOM_PANEL_ELEMENT]: document.createElement(\"div\")\n  };\n  if (publicConfig.debug) {\n    setEnableDebugLog(true);\n  }\n  if (publicConfig.debugStackTraces) {\n    setEnableDebugStackTracesLog(true);\n  }\n  return serviceManager;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const DEFAULT_PUBLIC_CONFIG = {\n  openChatByDefault: false,\n  showLauncher: true,\n  shouldTakeFocusIfOpensAutomatically: true,\n  serviceDesk: {},\n  messaging: {},\n  themeConfig: {\n    useAITheme: true\n  }\n};\n\nasync function instantiateWidget(pagePublicConfig, chatConstructorPromise, render, element) {\n  const config = cloneDeep(pagePublicConfig);\n  if (!config.messaging?.customSendMessage) {\n    throw new Error(`You must set messaging.customSendMessage in your configuration object.`);\n  }\n  if (config?.debug) {\n    consoleDebug(\"[ChatEntry] Called instantiateWidget\", config);\n  }\n  if (document.location.protocol !== \"https:\") {\n    consoleWarn('Your page is not running with \"https\"; your data will not be sent  securely.');\n  }\n  if (document.compatMode !== \"CSS1Compat\") {\n    consoleWarn('Your page is running in quirks mode; you may experience layout issues with the chat. Add \"<!DOCTYPE html>\" to the page to run in standards mode.');\n  }\n  const {onError: onError, ...publicConfig} = config;\n  const Chat = await chatConstructorPromise(publicConfig);\n  const additionalChatParameters = {\n    onError: onError,\n    render: render\n  };\n  return new Chat(publicConfig, element, additionalChatParameters);\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ dayjs.extend(LocalizedFormat);\n\nlet Chat$1 = class Chat {\n  constructor(publicConfigProvided, customHostElement, additionalChatParametersProvided) {\n    if (publicConfigProvided?.debug) {\n      consoleDebug(\"Constructed chat widget\", publicConfigProvided);\n    }\n    const publicConfig = merge({}, DEFAULT_PUBLIC_CONFIG, publicConfigProvided);\n    this.additionalChatParameters = additionalChatParametersProvided || {};\n    this.appConfig = {\n      public: publicConfig\n    };\n    this.customHostElement = customHostElement;\n  }\n  async start() {\n    try {\n      const result = await this.startInternal();\n      return result.instance;\n    } catch (error) {\n      consoleError(\"There was an error starting your chat\", error);\n      return null;\n    }\n  }\n  async startInternal() {\n    const doesHaveServiceDesk = hasServiceDesk(this.appConfig);\n    this.serviceManager = await createServiceManager(this.appConfig, this.additionalChatParameters);\n    const [languagePack, localePack, render, createHumanAgentService] = await Promise.all([ loadLanguagePack(this.serviceManager.store.getState().languagePack), loadLocale(this.serviceManager.store.getState().locale), Promise.resolve(this.additionalChatParameters.render), doesHaveServiceDesk ? loadHAA() : Promise.resolve(null) ]);\n    this.serviceManager.customHostElement = this.customHostElement;\n    if (createHumanAgentService) {\n      this.serviceManager.humanAgentService = createHumanAgentService(this.serviceManager);\n    }\n    setIntl(this.serviceManager, localePack.name, languagePack);\n    dayjs.locale(localePack);\n    const reallyRenderAndReturnInstance = async () => {\n      await render({\n        serviceManager: this.serviceManager\n      });\n      const initialState = this.serviceManager.store.getState();\n      const {wasLoadedFromBrowser: wasLoadedFromBrowser} = initialState.persistedToBrowserStorage.launcherState;\n      const {targetViewState: targetViewState} = initialState;\n      const {openChatByDefault: openChatByDefault} = initialState.config.public;\n      if (targetViewState.mainWindow) {\n        let mainWindowOpenReason = MainWindowOpenReason.SESSION_HISTORY;\n        if (openChatByDefault && !wasLoadedFromBrowser) {\n          mainWindowOpenReason = MainWindowOpenReason.OPEN_BY_DEFAULT;\n        }\n        await this.serviceManager.actions.changeView(targetViewState, {\n          mainWindowOpenReason: mainWindowOpenReason\n        });\n      } else {\n        const viewChangeReason = ViewChangeReason.WEB_CHAT_LOADED;\n        const tryHydrating = targetViewState.tour;\n        const forceViewChange = isEqual(targetViewState, VIEW_STATE_ALL_CLOSED);\n        await this.serviceManager.actions.changeView(targetViewState, {\n          viewChangeReason: viewChangeReason\n        }, tryHydrating, forceViewChange);\n      }\n      this.serviceManager.store.dispatch(actions.setInitialViewChangeComplete(true));\n      return this.serviceManager.instance;\n    };\n    const renderAndReturnInstance = () => {\n      const promise = reallyRenderAndReturnInstance();\n      this.serviceManager.renderPromise = promise;\n      return promise;\n    };\n    this.serviceManager.instance = createChatInstance({\n      serviceManager: this.serviceManager,\n      callRender: renderAndReturnInstance\n    });\n    return {\n      instance: this.serviceManager.instance,\n      serviceManager: this.serviceManager\n    };\n  }\n};\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function AriaAnnouncerProvider(props) {\n  const intl = useIntl();\n  const {store: store} = useServiceManager();\n  const announcerRef = useRef();\n  const announcerFunction = useCallback(value => {\n    if (!announcerRef.current) {\n      setTimeout(() => announcerRef.current.announceValue(value));\n    } else {\n      announcerRef.current.announceValue(value);\n    }\n  }, []);\n  const previousAnnounceMessageRef = useRef();\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      const currentAnnounceMessage = store.getState().announceMessage;\n      if (currentAnnounceMessage !== previousAnnounceMessageRef.current) {\n        announcerFunction(currentAnnounceMessage);\n        previousAnnounceMessageRef.current = currentAnnounceMessage;\n      }\n    });\n    return unsubscribe;\n  }, [ store, announcerFunction ]);\n  return React.createElement(AriaAnnouncerContext.Provider, {\n    value: announcerFunction\n  }, props.children, React.createElement(AriaAnnouncerComponent, {\n    intl: intl,\n    ref: announcerRef\n  }));\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function useEffectDidUpdate(effect, deps) {\n  const hasRunRef = useRef(false);\n  useEffect(() => {\n    if (hasRunRef.current) {\n      return effect();\n    }\n    hasRunRef.current = true;\n    return undefined;\n  }, deps);\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function getLauncherButtonAriaLabel(languagePack, isLauncherHidden, isTourActive) {\n  if (isTourActive) {\n    return isLauncherHidden ? languagePack.launcher_isTourOpen : languagePack.launcher_isTourClosed;\n  }\n  return isLauncherHidden ? languagePack.launcher_isOpen : languagePack.launcher_isClosed;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function Launcher(props, ref) {\n  const {onToggleOpen: onToggleOpen, languagePack: languagePack, unreadHumanAgentCount: unreadHumanAgentCount, intl: intl, showUnreadIndicator: showUnreadIndicator, className: className, tabIndex: tabIndex, launcherHidden: launcherHidden, activeTour: activeTour} = props;\n  const launcherAvatarURL = useSelector(state => state.theme.useAITheme ? undefined : state.launcher.config.desktop.avatar_url_override);\n  const useAITheme = useSelector(state => state.theme.useAITheme);\n  const buttonRef = React.createRef();\n  useImperativeHandle(ref, () => ({\n    requestFocus: () => {\n      doFocusRef(buttonRef);\n    }\n  }));\n  let ariaLabel = getLauncherButtonAriaLabel(languagePack, launcherHidden, activeTour);\n  if (unreadHumanAgentCount !== 0) {\n    ariaLabel += `. ${intl.formatMessage({\n      id: \"icon_ariaUnreadMessages\"\n    }, {\n      count: unreadHumanAgentCount\n    })}`;\n  }\n  let launcherAvatar = useAITheme ? React.createElement(AiLaunch, {\n    size: 24,\n    className: \"WACLauncher_svg\"\n  }) : React.createElement(ChatLaunch, {\n    size: 24,\n    className: \"WACLauncher__svg\"\n  });\n  if (launcherAvatarURL) {\n    launcherAvatar = React.createElement(\"img\", {\n      className: \"WACLauncher__Avatar\",\n      src: launcherAvatarURL,\n      alt: \"\",\n      \"aria-hidden\": true\n    });\n  }\n  return React.createElement(\"div\", {\n    className: cx(\"WACLauncher__ButtonContainer\", \"WACLauncher__ButtonContainer--round\", className, {\n      \"WACLauncher__ButtonContainer--hidden\": launcherHidden\n    })\n  }, React.createElement(Button, {\n    \"aria-label\": ariaLabel,\n    className: cx(\"WACLauncher__Button\", {\n      WACLauncher__TourButton: activeTour\n    }),\n    \"data-testid\": PageObjectId.LAUNCHER,\n    kind: ButtonKindEnum.PRIMARY,\n    type: \"button\",\n    onClick: onToggleOpen,\n    ref: buttonRef,\n    tabIndex: tabIndex\n  }, activeTour ? React.createElement(ArrowUpLeft, {\n    size: 24,\n    className: \"WACLauncher__svg\"\n  }) : launcherAvatar, (unreadHumanAgentCount !== 0 || showUnreadIndicator) && React.createElement(\"div\", {\n    className: \"WAC__countIndicator\"\n  }, unreadHumanAgentCount !== 0 ? unreadHumanAgentCount : \"\")));\n}\n\nconst LauncherExport = forwardRef(Launcher);\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function LauncherComplex(props) {\n  const {languagePack: languagePack, intl: intl, launcherConfig: launcherConfig, launcherComplexRef: launcherComplexRef, launcherRef: launcherRef, onOpen: onOpen, onMinimize: onMinimize, unreadHumanAgentCount: unreadHumanAgentCount, showUnreadIndicator: showUnreadIndicator, desktopLauncherIsExpanded: desktopLauncherIsExpanded, launcherHidden: launcherHidden, activeTour: activeTour, className: className} = props;\n  const {launcher_desktopGreeting: launcher_desktopGreeting, launcher_closeButton: launcher_closeButton, launcher_ariaIsExpanded: launcher_ariaIsExpanded} = languagePack;\n  function getLauncherContent() {\n    if (launcherConfig.desktop.title) {\n      return launcherConfig.desktop.title;\n    }\n    return launcher_desktopGreeting;\n  }\n  return React.createElement(\"div\", {\n    className: cx(\"WACLauncher__ButtonContainer\", \"WACLauncherComplex__Container\", className, {\n      \"WACLauncher__ButtonContainer--hidden\": launcherHidden\n    }),\n    ref: launcherComplexRef\n  }, React.createElement(\"button\", {\n    className: \"WACLauncherComplex__ContentButton\",\n    type: \"button\",\n    onClick: onOpen,\n    disabled: !desktopLauncherIsExpanded\n  }, React.createElement(\"div\", {\n    className: cx(\"WACWidget__textEllipsis\", {\n      WACLauncherComplex__Text: !launcherHidden\n    })\n  }, getLauncherContent())), React.createElement(LauncherExport, {\n    languagePack: languagePack,\n    intl: intl,\n    ref: launcherRef,\n    onToggleOpen: onOpen,\n    className: \"WACLauncherComplex__SmallLauncherContainer\",\n    unreadHumanAgentCount: unreadHumanAgentCount,\n    showUnreadIndicator: showUnreadIndicator,\n    launcherHidden: launcherHidden,\n    activeTour: activeTour\n  }), React.createElement(Tag, {\n    className: \"WACLauncher__CloseButton\",\n    \"aria-label\": launcher_ariaIsExpanded,\n    onClick: onMinimize,\n    disabled: !desktopLauncherIsExpanded\n  }, React.createElement(\"div\", {\n    className: \"WACLauncher__CloseButtonInnerWrapper\"\n  }, React.createElement(Close, {\n    className: \"WACLauncher__CloseButtonIcon\"\n  }), launcher_closeButton)));\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const TIME_FOR_MINIMIZE_ANIMATION = 400;\n\nconst TIME_FOR_BOUNCE_ANIMATION = 500;\n\nconst LauncherDesktopContainer = props => {\n  const {launcherRef: launcherRef, onDoToggle: onDoToggle, requestFocus: requestFocus, launcherHidden: launcherHidden, activeTour: activeTour} = props;\n  const serviceManager = useServiceManager();\n  const languagePack = useLanguagePack();\n  const intl = useIntl();\n  const browserLauncherState = useSelector(state => state.persistedToBrowserStorage.launcherState);\n  const {desktopLauncherWasMinimized: desktopLauncherWasMinimized, desktopLauncherIsExpanded: desktopLauncherIsExpanded, bounceTurn: bounceTurn, showUnreadIndicator: showUnreadIndicator, viewState: viewState} = browserLauncherState;\n  const launcherState = useSelector(state => state.launcher);\n  const launcherConfig = launcherState.config;\n  const {time_to_expand: time_to_expand, new_expand_time: new_expand_time} = launcherConfig.desktop;\n  const isExpandedLauncherEnabled = launcherConfig.desktop.is_on;\n  const unreadHumanAgentCount = useSelector(state => state.humanAgentState.numUnreadMessages);\n  const [smallLauncherClassName, setSmallLauncherClassName] = useState(\"\");\n  const [complexLauncherClassName, setComplexLauncherClassName] = useState(\"\");\n  const launcherComplexRef = useRef();\n  const launcherHiddenRef = useRef();\n  launcherHiddenRef.current = launcherHidden;\n  const animateOnceVisible = useRef(false);\n  const bounceTurnRef = useRef();\n  bounceTurnRef.current = bounceTurn;\n  const animationStartTimerRef = useRef();\n  const animationFinishedTimerRef = useRef();\n  const firstBounceAnimationStartTimerRef = useRef();\n  const firstBounceAnimationFinishedTimerRef = useRef();\n  const secondBounceAnimationStartTimerRef = useRef();\n  const secondBounceAnimationFinishedTimerRef = useRef();\n  const determineLauncherHeight = useCallback(() => {\n    const expandedLauncherHeight = `${launcherComplexRef.current?.offsetHeight}px`;\n    if (launcherComplexRef.current?.style?.setProperty) {\n      launcherComplexRef.current.style.setProperty(\"--cds-chat-LAUNCHER-desktop-expanded-height\", expandedLauncherHeight);\n    }\n  }, []);\n  const startExpandLauncher = useCallback(() => {\n    if (!launcherHiddenRef.current) {\n      serviceManager.store.dispatch(actions.setLauncherProperty(\"desktopLauncherIsExpanded\", true));\n      determineLauncherHeight();\n      setComplexLauncherClassName(\"WACLauncherComplex__Container--introAnimation\");\n    }\n  }, [ determineLauncherHeight, serviceManager.store ]);\n  const setExpandAnimationTimers = useCallback(() => {\n    animationStartTimerRef.current = setTimeout(() => {\n      startExpandLauncher();\n    }, time_to_expand);\n  }, [ time_to_expand, startExpandLauncher ]);\n  const clearExpandAnimationTimers = useCallback(() => {\n    clearTimeout(animationStartTimerRef.current);\n    clearTimeout(animationFinishedTimerRef.current);\n  }, []);\n  const startBounceAnimation = useCallback(() => {\n    if (!launcherHiddenRef.current) {\n      setSmallLauncherClassName(\"WACLauncher__ButtonContainer--bounceAnimation\");\n    }\n  }, []);\n  const finishBounceAnimation = useCallback(() => {\n    if (!launcherHiddenRef.current) {\n      setSmallLauncherClassName(\"WACLauncher__ButtonContainer--noAnimation\");\n      bounceTurnRef.current++;\n      serviceManager.store.dispatch(actions.setLauncherProperty(\"bounceTurn\", bounceTurnRef.current));\n    }\n  }, [ serviceManager.store ]);\n  const setBounceAnimationTimers = useCallback(() => {\n    if (bounceTurnRef.current === 1) {\n      firstBounceAnimationStartTimerRef.current = setTimeout(() => {\n        startBounceAnimation();\n      }, BOUNCING_ANIMATION_TIMEOUTS[0]);\n      firstBounceAnimationFinishedTimerRef.current = setTimeout(() => {\n        finishBounceAnimation();\n      }, BOUNCING_ANIMATION_TIMEOUTS[0] + TIME_FOR_BOUNCE_ANIMATION);\n      secondBounceAnimationStartTimerRef.current = setTimeout(() => {\n        startBounceAnimation();\n      }, BOUNCING_ANIMATION_TIMEOUTS[0] + BOUNCING_ANIMATION_TIMEOUTS[1]);\n      secondBounceAnimationFinishedTimerRef.current = setTimeout(() => {\n        finishBounceAnimation();\n      }, BOUNCING_ANIMATION_TIMEOUTS[0] + BOUNCING_ANIMATION_TIMEOUTS[1] + TIME_FOR_BOUNCE_ANIMATION);\n    } else if (bounceTurnRef.current === 2) {\n      secondBounceAnimationStartTimerRef.current = setTimeout(() => {\n        startBounceAnimation();\n      }, BOUNCING_ANIMATION_TIMEOUTS[1]);\n      secondBounceAnimationFinishedTimerRef.current = setTimeout(() => {\n        finishBounceAnimation();\n      }, BOUNCING_ANIMATION_TIMEOUTS[1] + TIME_FOR_BOUNCE_ANIMATION);\n    }\n  }, [ finishBounceAnimation, startBounceAnimation ]);\n  const clearBounceAnimationTimers = useCallback(() => {\n    clearTimeout(firstBounceAnimationStartTimerRef.current);\n    clearTimeout(firstBounceAnimationFinishedTimerRef.current);\n    clearTimeout(secondBounceAnimationStartTimerRef.current);\n    clearTimeout(secondBounceAnimationFinishedTimerRef.current);\n  }, []);\n  const setDefaultLauncherState = useCallback(() => {\n    clearExpandAnimationTimers();\n    serviceManager.store.dispatch(actions.setLauncherMinimized());\n    clearBounceAnimationTimers();\n    serviceManager.store.dispatch(actions.setLauncherProperty(\"bounceTurn\", 3));\n    animateOnceVisible.current = false;\n    setSmallLauncherClassName(\"WACLauncher__ButtonContainer--noAnimation\");\n  }, [ clearBounceAnimationTimers, clearExpandAnimationTimers, serviceManager.store ]);\n  useOnMount(() => {\n    if (desktopLauncherIsExpanded) {\n      animateOnceVisible.current = true;\n    } else if (!desktopLauncherWasMinimized && isExpandedLauncherEnabled) {\n      setExpandAnimationTimers();\n      return () => {\n        clearExpandAnimationTimers();\n      };\n    } else if (desktopLauncherWasMinimized && bounceTurn !== 3) {\n      setBounceAnimationTimers();\n      return () => {\n        clearBounceAnimationTimers();\n      };\n    }\n    return undefined;\n  });\n  useEffect(() => {\n    if (viewState.launcher && animateOnceVisible.current) {\n      determineLauncherHeight();\n      setComplexLauncherClassName(\"WACLauncherComplex__Container--simpleAnimation\");\n      animateOnceVisible.current = false;\n    }\n  }, [ determineLauncherHeight, viewState.launcher ]);\n  useEffect(() => {\n    if (viewState.mainWindow || viewState.tour) {\n      setDefaultLauncherState();\n    }\n  }, [ viewState, setDefaultLauncherState ]);\n  useEffect(() => {\n    if (new_expand_time) {\n      clearBounceAnimationTimers();\n      clearExpandAnimationTimers();\n      setExpandAnimationTimers();\n      serviceManager.store.dispatch(actions.setLauncherConfigProperty(\"new_expand_time\", false, LauncherType.DESKTOP));\n    }\n  }, [ animationFinishedTimerRef, animationStartTimerRef, new_expand_time, setExpandAnimationTimers, clearExpandAnimationTimers, clearBounceAnimationTimers, serviceManager.store ]);\n  const prevLauncherTitle = usePrevious(launcherConfig.desktop.title);\n  useEffect(() => {\n    if (prevLauncherTitle !== launcherConfig.desktop.title && (launcherConfig.desktop.title || prevLauncherTitle)) {\n      determineLauncherHeight();\n    }\n  }, [ determineLauncherHeight, launcherConfig, prevLauncherTitle ]);\n  const onMinimize = useCallback(() => {\n    setComplexLauncherClassName(\"WACLauncherComplex__Container--closeAnimation\");\n    setTimeout(() => {\n      setSmallLauncherClassName(\"WACLauncher__ButtonContainer--noAnimation\");\n      serviceManager.store.dispatch(actions.setLauncherMinimized());\n      setTimeout(requestFocus);\n    }, TIME_FOR_MINIMIZE_ANIMATION);\n  }, [ requestFocus, serviceManager.store ]);\n  const onOpen = useCallback(() => {\n    setDefaultLauncherState();\n    onDoToggle();\n  }, [ onDoToggle, setDefaultLauncherState ]);\n  let launcher;\n  if (desktopLauncherIsExpanded) {\n    launcher = React.createElement(LauncherComplex, {\n      languagePack: languagePack,\n      intl: intl,\n      launcherComplexRef: launcherComplexRef,\n      launcherRef: launcherRef,\n      launcherConfig: launcherConfig,\n      onOpen: onOpen,\n      onMinimize: onMinimize,\n      unreadHumanAgentCount: unreadHumanAgentCount,\n      showUnreadIndicator: showUnreadIndicator,\n      desktopLauncherIsExpanded: desktopLauncherIsExpanded,\n      launcherHidden: launcherHidden,\n      activeTour: activeTour,\n      className: complexLauncherClassName\n    });\n  } else {\n    launcher = React.createElement(LauncherExport, {\n      languagePack: languagePack,\n      intl: intl,\n      ref: launcherRef,\n      onToggleOpen: onOpen,\n      unreadHumanAgentCount: unreadHumanAgentCount,\n      showUnreadIndicator: showUnreadIndicator,\n      className: smallLauncherClassName,\n      launcherHidden: launcherHidden,\n      activeTour: activeTour\n    });\n  }\n  return launcher;\n};\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function animateWithClass(element, className, endAnimationNameOrDelay, endAnimationCallback) {\n  if (element) {\n    element.classList.add(className);\n    if (typeof endAnimationNameOrDelay === \"number\") {\n      setTimeout(() => {\n        element.classList.remove(className);\n        if (endAnimationCallback) {\n          endAnimationCallback();\n        }\n      }, endAnimationNameOrDelay);\n    } else {\n      const listener = event => {\n        if (!endAnimationNameOrDelay || event.animationName === endAnimationNameOrDelay) {\n          element.removeEventListener(\"animationend\", listener);\n          element.removeEventListener(\"animationcancel\", listener);\n          element.classList.remove(className);\n          if (endAnimationCallback) {\n            endAnimationCallback();\n          }\n        }\n      };\n      element.addEventListener(\"animationend\", listener);\n      element.addEventListener(\"animationcancel\", listener);\n    }\n  }\n}\n\nfunction setAnimationTimeouts(element, animation, timeouts, options) {\n  const {startingIndex: startingIndex, beforeAll: beforeAll, afterAll: afterAll, beforeEach: beforeEach, afterEach: afterEach} = options;\n  let index = startingIndex || 0;\n  let terminate = false;\n  let timeoutID = null;\n  function playAnimation() {\n    if (beforeAll && index === 0) {\n      beforeAll();\n    }\n    const isComplete = index === timeouts.length;\n    if (!isComplete && !terminate) {\n      timeoutID = setTimeout(setAnimationListener, timeouts[index]);\n    } else if (isComplete && afterAll) {\n      afterAll();\n    }\n  }\n  function replayAnimation() {\n    if (afterEach) {\n      afterEach();\n    }\n    index++;\n    element.removeEventListener(\"animationend\", replayAnimation);\n    element.classList.remove(animation);\n    playAnimation();\n  }\n  function setAnimationListener() {\n    if (beforeEach) {\n      beforeEach();\n    }\n    element.addEventListener(\"animationend\", replayAnimation);\n    element.classList.add(animation);\n  }\n  playAnimation();\n  return () => {\n    terminate = true;\n    clearTimeout(timeoutID);\n    element.classList.remove(animation);\n    element.removeEventListener(\"animationend\", replayAnimation);\n  };\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const MAX_EXTENDED_LAUNCHER_WIDTH = 400;\n\nfunction LauncherExtended(props, ref) {\n  const {unreadHumanAgentCount: unreadHumanAgentCount, showUnreadIndicator: showUnreadIndicator, launcherConfig: launcherConfig, isExtended: isExtended, playExtendAnimation: playExtendAnimation, onToggleOpen: onToggleOpen, onSwipeRight: onSwipeRight, onReduceEnd: onReduceEnd, className: className, launcherHidden: launcherHidden, activeTour: activeTour} = props;\n  const ariaAnnouncer = useAriaAnnouncer();\n  const languagePack = useLanguagePack();\n  const intl = useIntl();\n  const launcherAvatarURL = useSelector(state => state.theme.useAITheme ? undefined : state.launcher.config.mobile.avatar_url_override);\n  const [animateExtendedState, setAnimateExtendedState] = useState(playExtendAnimation);\n  const [showGreetingMessage, setShowGreetingMessage] = useState(false);\n  const prevIsExtended = usePrevious(isExtended);\n  const buttonRef = useRef();\n  const extendedContainerRef = useRef();\n  const greetingMessageRef = useRef();\n  const textHolderRef = useRef();\n  const touchStartRef = useRef({\n    touchStartX: null,\n    touchStartY: null\n  });\n  const shouldReduceExtendedLauncher = !isExtended && prevIsExtended;\n  const extendWithAnimation = isExtended && animateExtendedState;\n  const extendWithoutAnimation = isExtended && !animateExtendedState;\n  const launcherGreetingMessage = launcherConfig.mobile.title || languagePack.launcher_mobileGreeting;\n  let ariaLabel = getLauncherButtonAriaLabel(languagePack, launcherHidden, activeTour);\n  if (unreadHumanAgentCount !== 0) {\n    ariaLabel += `. ${intl.formatMessage({\n      id: \"icon_ariaUnreadMessages\"\n    }, {\n      count: unreadHumanAgentCount\n    })}`;\n  }\n  let launcherAvatar = React.createElement(ChatLaunch, {\n    size: 24,\n    className: \"WACLauncher__svg\"\n  });\n  if (launcherAvatarURL) {\n    launcherAvatar = React.createElement(\"img\", {\n      className: \"WACLauncher__Avatar\",\n      src: launcherAvatarURL,\n      \"aria-hidden\": true,\n      alt: \"\"\n    });\n  }\n  useImperativeHandle(ref, () => ({\n    requestFocus: () => {\n      doFocusRef(buttonRef);\n    },\n    launcherContainerElement: () => extendedContainerRef.current\n  }));\n  useEffect(() => {\n    const textHolderElement = textHolderRef.current;\n    const greetingMessageElement = greetingMessageRef.current;\n    const extendedContainerElement = extendedContainerRef.current;\n    calculateAndSetMaxExtendedLauncherWidth(textHolderElement, greetingMessageElement, extendedContainerElement);\n  }, [ ariaAnnouncer, extendWithoutAnimation, launcherGreetingMessage ]);\n  useEffect(() => {\n    if (isExtended) {\n      if (animateExtendedState) {\n        doFadeAnimationForElements({\n          fadeInElement: greetingMessageRef.current,\n          fadeInTime: 300\n        }, () => {\n          setAnimateExtendedState(false);\n        });\n      } else {\n        setShowGreetingMessage(true);\n      }\n      const buttonEl = buttonRef.current;\n      const handleTouchMove = event => {\n        checkIfUserSwipedRight(event.touches[0], touchStartRef.current, onSwipeRight);\n      };\n      const handleTouchStart = event => {\n        const {clientX: clientX, clientY: clientY} = event.touches[0];\n        const touchStart = touchStartRef.current;\n        touchStart.touchStartX = clientX;\n        touchStart.touchStartY = clientY;\n        buttonRef.current.addEventListener(\"touchmove\", handleTouchMove);\n      };\n      buttonEl.addEventListener(\"touchstart\", handleTouchStart);\n      return () => {\n        buttonEl.removeEventListener(\"touchmove\", handleTouchMove);\n        buttonEl.removeEventListener(\"touchstart\", handleTouchStart);\n      };\n    } else if (shouldReduceExtendedLauncher) {\n      const reduceAnimationEndListener = () => {\n        onReduceEnd();\n        setAnimateExtendedState(true);\n        extendedContainerRef.current.removeEventListener(\"animationend\", reduceAnimationEndListener);\n      };\n      extendedContainerRef.current.addEventListener(\"animationend\", reduceAnimationEndListener);\n      doFadeAnimationForElements({\n        fadeOutElement: greetingMessageRef.current\n      });\n    }\n    return undefined;\n  }, [ animateExtendedState, ariaAnnouncer, isExtended, launcherGreetingMessage, onReduceEnd, onSwipeRight, shouldReduceExtendedLauncher ]);\n  return React.createElement(\"div\", {\n    className: cx(\"WACLauncher__ButtonContainer WACLauncher__ButtonContainer--round WACLauncherExtended__Container\", className, {\n      \"WACLauncher__ButtonContainer--hidden\": launcherHidden,\n      \"WACLauncherExtended__Button--extended\": extendWithoutAnimation,\n      \"WACLauncherExtended__Button--extendedAnimation\": extendWithAnimation,\n      \"WACLauncherExtended__Button--reducedAnimation\": shouldReduceExtendedLauncher\n    }),\n    ref: extendedContainerRef\n  }, React.createElement(Button, {\n    \"aria-label\": ariaLabel,\n    className: cx(\"WACLauncher__Button\", \"WACLauncherExtended__Button\", {\n      WACLauncher__TourButton: activeTour\n    }),\n    kind: activeTour ? ButtonKindEnum.GHOST : ButtonKindEnum.PRIMARY,\n    type: \"button\",\n    ref: buttonRef,\n    onClick: onToggleOpen\n  }, React.createElement(\"div\", {\n    className: \"WACLauncherExtended__WrapperContainer\"\n  }, React.createElement(\"div\", {\n    className: \"WACLauncherExtended__Wrapper\"\n  }, React.createElement(\"div\", {\n    className: \"WACLauncherExtended__TextHolder\",\n    ref: textHolderRef\n  }, React.createElement(\"div\", {\n    className: cx(\"WACLauncherExtended__Greeting\", {\n      \"WACLauncherExtended__Element--hidden\": !showGreetingMessage\n    }),\n    ref: greetingMessageRef\n  }, React.createElement(\"div\", {\n    className: \"WACLauncherExtended__GreetingText\",\n    \"aria-hidden\": !isExtended\n  }, launcherGreetingMessage))), React.createElement(\"div\", {\n    className: \"WACLauncher__IconHolder\"\n  }, activeTour ? React.createElement(ArrowUpLeft, {\n    size: 24,\n    className: \"WACLauncher__svg\"\n  }) : launcherAvatar))), (unreadHumanAgentCount !== 0 || showUnreadIndicator) && React.createElement(\"div\", {\n    className: \"WAC__countIndicator\"\n  }, unreadHumanAgentCount !== 0 ? unreadHumanAgentCount : \"\")));\n}\n\nfunction calculateAndSetMaxExtendedLauncherWidth(textHolderEl, greetingMessageEl, extendedContainerEl) {\n  const nonTextSpace = 68;\n  const maxLauncherExtendedWidth = getMaxLauncherExtendedWidth();\n  const maxTextHolderWidth = maxLauncherExtendedWidth - nonTextSpace + 12;\n  textHolderEl.style.setProperty(\"width\", `${maxTextHolderWidth}px`);\n  greetingMessageEl.style.setProperty(\"width\", `${maxTextHolderWidth - 12}px`);\n  greetingMessageEl.style.setProperty(\"display\", \"flex\");\n  const {clientWidth: clientWidth} = greetingMessageEl.querySelector(\".WACLauncherExtended__GreetingText\");\n  let launcherExtendedWidth = clientWidth + nonTextSpace + 1;\n  if (launcherExtendedWidth > MAX_EXTENDED_LAUNCHER_WIDTH) {\n    launcherExtendedWidth = MAX_EXTENDED_LAUNCHER_WIDTH;\n  }\n  greetingMessageEl.removeAttribute(\"style\");\n  textHolderEl.removeAttribute(\"style\");\n  extendedContainerEl.style.setProperty(\"--cds-chat--LAUNCHER-EXTENDED-width\", `${launcherExtendedWidth}px`);\n}\n\nfunction doFadeAnimationForElements({fadeOutElement: fadeOutElement, fadeInElement: fadeInElement, fadeInTime: fadeInTime = 600}, callback) {\n  if (fadeOutElement) {\n    fadeOutElement.classList.remove(\"WACLauncherExtended__Element--hidden\");\n    animateWithClass(fadeOutElement, \"WACLauncherExtended__Element--FadeOut\", 500, () => {\n      fadeOutElement.classList.add(\"WACLauncherExtended__Element--hidden\");\n      fadeOutElement.classList.remove(\"WACLauncherExtended__Element--FadeOut\");\n      if (!fadeInElement && callback) {\n        callback();\n      }\n    });\n  }\n  if (fadeInElement) {\n    setTimeout(() => {\n      fadeInElement.classList.remove(\"WACLauncherExtended__Element--hidden\");\n      animateWithClass(fadeInElement, \"WACLauncherExtended__Element--FadeIn\", 600, () => {\n        fadeInElement.classList.remove(\"WACLauncherExtended__Element--FadeIn\");\n        if (callback) {\n          callback();\n        }\n      });\n    }, fadeInTime);\n  }\n}\n\nfunction checkIfUserSwipedRight(touchList, touchStartCoordinates, callback) {\n  const {touchStartX: touchStartX, touchStartY: touchStartY} = touchStartCoordinates;\n  if (touchStartX === null || touchStartY === null) {\n    return;\n  }\n  const {clientX: touchEndX, clientY: touchEndY} = touchList;\n  const differenceX = touchEndX - touchStartX;\n  const differenceY = touchEndY - touchStartY;\n  if (Math.abs(differenceX) > Math.abs(differenceY)) {\n    if (differenceX > 0) {\n      callback();\n    }\n  }\n  touchStartCoordinates.touchStartX = null;\n  touchStartCoordinates.touchStartY = null;\n}\n\nfunction getMaxLauncherExtendedWidth() {\n  const launcherPosition = IS_MOBILE ? 32 : 64;\n  const {width: width, height: height} = window.screen;\n  const lowestValue = Math.min(height, width);\n  const extendedWidth = lowestValue - launcherPosition;\n  return Math.min(extendedWidth, MAX_EXTENDED_LAUNCHER_WIDTH);\n}\n\nconst LauncherExtendedExport = React.memo(forwardRef(LauncherExtended));\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function LauncherMobileContainer(props) {\n  const {launcherRef: launcherRef, onToggleOpen: onToggleOpen, launcherHidden: launcherHidden, activeTour: activeTour} = props;\n  const serviceManager = useServiceManager();\n  const {config: launcherConfig} = useSelector(state => state.launcher);\n  const unreadHumanAgentCount = useSelector(state => state.humanAgentState.numUnreadMessages);\n  const {mobileLauncherIsExtended: isExtended, mobileLauncherWasReduced: wasReduced, mobileLauncherDisableBounce: disableBounce, bounceTurn: bounceTurn, showUnreadIndicator: showUnreadIndicator, viewState: viewState} = useSelector(state => state.persistedToBrowserStorage.launcherState);\n  const [isStartingBounceAnimation, setIsStartingBounceAnimation] = useState(false);\n  const prevIsExtended = usePrevious(isExtended);\n  const prevWasReduced = usePrevious(wasReduced);\n  const initialBounceTurn = useRef(bounceTurn).current;\n  const previouslyPlayedExtendAnimation = useRef(wasReduced).current;\n  const extendLauncherTimeoutIDRef = useRef(null);\n  const reduceLauncherTimeoutIDRef = useRef(null);\n  const endBounceAnimationRef = useRef(null);\n  const shouldBounceRef = useRef(previouslyPlayedExtendAnimation && !disableBounce);\n  const {time_to_expand: time_to_expand, new_expand_time: new_expand_time, time_to_reduce: time_to_reduce} = launcherConfig.mobile;\n  const isExpandedLauncherEnabled = launcherConfig.mobile.is_on;\n  const playExtendAnimation = prevIsExtended === undefined && !isExtended;\n  const isExtending = prevIsExtended !== undefined && !prevIsExtended && isExtended;\n  const hasReduced = prevWasReduced !== undefined && !prevWasReduced && wasReduced;\n  const disableIntroAnimation = isExtending || hasReduced || isStartingBounceAnimation;\n  const setLauncherStateAsReduced = useCallback(() => {\n    if (!wasReduced) {\n      serviceManager.store.dispatch(actions.setLauncherProperty(\"mobileLauncherWasReduced\", true));\n    }\n  }, [ wasReduced, serviceManager ]);\n  const reduceLauncher = useCallback(() => {\n    clearTimeouts();\n    if (isExtended) {\n      document.removeEventListener(\"scroll\", reduceLauncher);\n      serviceManager.store.dispatch(actions.setLauncherProperty(\"mobileLauncherIsExtended\", false));\n    }\n  }, [ isExtended, serviceManager ]);\n  const setExpandAnimationTimeout = useCallback(() => {\n    extendLauncherTimeoutIDRef.current = setTimeout(() => {\n      if (!isExtended && !isExtending) {\n        serviceManager.store.dispatch(actions.setLauncherProperty(\"mobileLauncherWasReduced\", false));\n        serviceManager.store.dispatch(actions.setLauncherProperty(\"mobileLauncherIsExtended\", true));\n      }\n    }, time_to_expand);\n  }, [ isExtended, isExtending, serviceManager.store, time_to_expand ]);\n  const setDefaultLauncherState = useCallback(() => {\n    const endBounceAnimation = endBounceAnimationRef.current;\n    if (endBounceAnimation) {\n      endBounceAnimation();\n      endBounceAnimationRef.current = null;\n    }\n    serviceManager.store.dispatch(actions.setLauncherProperty(\"mobileLauncherDisableBounce\", true));\n    reduceLauncher();\n    setLauncherStateAsReduced();\n  }, [ reduceLauncher, serviceManager.store, setLauncherStateAsReduced ]);\n  useOnMount(() => {\n    if (!wasReduced && playExtendAnimation && isExpandedLauncherEnabled) {\n      setExpandAnimationTimeout();\n    } else if (shouldBounceRef.current) {\n      const launcherContainerElement = launcherRef?.current?.launcherContainerElement();\n      if (launcherContainerElement) {\n        const startRecurringBounceAnimation = () => {\n          if (shouldBounceRef.current) {\n            let turnCounter = initialBounceTurn;\n            launcherContainerElement.removeEventListener(\"animationend\", startRecurringBounceAnimation);\n            setIsStartingBounceAnimation(true);\n            endBounceAnimationRef.current = setAnimationTimeouts(launcherContainerElement, \"WACLauncher__ButtonContainer--bounceAnimation\", BOUNCING_ANIMATION_TIMEOUTS, {\n              startingIndex: initialBounceTurn - 1,\n              afterEach: () => {\n                turnCounter++;\n                serviceManager.store.dispatch(actions.setLauncherProperty(\"bounceTurn\", turnCounter));\n              },\n              afterAll: () => {\n                serviceManager.store.dispatch(actions.setLauncherProperty(\"mobileLauncherDisableBounce\", true));\n              }\n            });\n          }\n        };\n        launcherContainerElement.addEventListener(\"animationend\", startRecurringBounceAnimation);\n      }\n    }\n  });\n  useEffect(() => {\n    if (viewState.mainWindow || viewState.tour) {\n      setDefaultLauncherState();\n    }\n  }, [ viewState, setDefaultLauncherState ]);\n  useEffect(() => {\n    if (new_expand_time) {\n      if (shouldBounceRef.current) {\n        shouldBounceRef.current = false;\n      }\n      const endBounceAnimation = endBounceAnimationRef.current;\n      if (endBounceAnimation) {\n        endBounceAnimation();\n        endBounceAnimationRef.current = null;\n      }\n      if (extendLauncherTimeoutIDRef.current) {\n        clearTimeout(extendLauncherTimeoutIDRef.current);\n      }\n      setExpandAnimationTimeout();\n      serviceManager.store.dispatch(actions.setLauncherConfigProperty(\"new_expand_time\", false, LauncherType.MOBILE));\n    }\n  }, [ setExpandAnimationTimeout, new_expand_time, serviceManager.store, shouldBounceRef ]);\n  function clearTimeouts() {\n    const extendLauncherTimeoutID = extendLauncherTimeoutIDRef.current;\n    const reduceLauncherTimeoutID = reduceLauncherTimeoutIDRef.current;\n    if (reduceLauncherTimeoutID) {\n      clearTimeout(reduceLauncherTimeoutID);\n      reduceLauncherTimeoutIDRef.current = null;\n    }\n    if (extendLauncherTimeoutID) {\n      clearTimeout(extendLauncherTimeoutID);\n      extendLauncherTimeoutIDRef.current = null;\n    }\n  }\n  const handleToggleOpen = useCallback(() => {\n    setDefaultLauncherState();\n    onToggleOpen();\n  }, [ onToggleOpen, setDefaultLauncherState ]);\n  const handleSwipeRight = useCallback(() => {\n    reduceLauncher();\n  }, [ reduceLauncher ]);\n  useEffect(() => {\n    if (isExtended) {\n      reduceLauncherTimeoutIDRef.current = setTimeout(() => {\n        reduceLauncher();\n      }, time_to_reduce);\n      document.addEventListener(\"scroll\", reduceLauncher);\n    }\n  }, [ isExtended, reduceLauncher, time_to_reduce, serviceManager ]);\n  return React.createElement(LauncherExtendedExport, {\n    className: cx({\n      \"WACLauncher__ButtonContainer--noAnimation\": disableIntroAnimation\n    }),\n    ref: launcherRef,\n    launcherConfig: launcherConfig,\n    showUnreadIndicator: showUnreadIndicator,\n    unreadHumanAgentCount: unreadHumanAgentCount,\n    isExtended: isExtended,\n    playExtendAnimation: playExtendAnimation,\n    onToggleOpen: handleToggleOpen,\n    onSwipeRight: handleSwipeRight,\n    onReduceEnd: setLauncherStateAsReduced,\n    launcherHidden: launcherHidden,\n    activeTour: activeTour\n  });\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function LauncherContainer() {\n  const serviceManager = useServiceManager();\n  const launcherRef = useRef();\n  const viewState = useSelector(state => state.persistedToBrowserStorage.launcherState.viewState);\n  const initialViewChangeComplete = useSelector(state => state.initialViewChangeComplete);\n  const launcherHidden = !viewState.launcher;\n  const activeTour = useSelector(state => state.persistedToBrowserStorage.launcherState.activeTour);\n  const requestFocus = useCallback(() => {\n    launcherRef.current?.requestFocus();\n  }, [ launcherRef ]);\n  const onDoToggle = useCallback(() => {\n    if (activeTour) {\n      return serviceManager.actions.changeView(ViewType.TOUR, {\n        viewChangeReason: ViewChangeReason.LAUNCHER_CLICKED\n      });\n    }\n    return serviceManager.actions.changeView(ViewType.MAIN_WINDOW, {\n      mainWindowOpenReason: MainWindowOpenReason.DEFAULT_LAUNCHER\n    });\n  }, [ activeTour, serviceManager.actions ]);\n  useEffectDidUpdate(() => {\n    if (viewState.launcher && !viewState.mainWindow && !viewState.tour && initialViewChangeComplete) {\n      launcherRef.current?.requestFocus();\n    }\n  }, [ viewState ]);\n  let launcherContainer;\n  if (IS_PHONE) {\n    launcherContainer = React.createElement(LauncherMobileContainer, {\n      launcherRef: launcherRef,\n      onToggleOpen: onDoToggle,\n      launcherHidden: launcherHidden,\n      activeTour: activeTour\n    });\n  } else {\n    launcherContainer = React.createElement(LauncherDesktopContainer, {\n      launcherRef: launcherRef,\n      onDoToggle: onDoToggle,\n      requestFocus: requestFocus,\n      launcherHidden: launcherHidden,\n      activeTour: activeTour\n    });\n  }\n  return launcherContainer;\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function HydrationPanel({onClose: onClose, languagePack: languagePack, isHydrated: isHydrated, headerDisplayName: headerDisplayName, useHomeScreenVersion: useHomeScreenVersion}) {\n  const isHidden = useContext(HideComponentContext);\n  let header;\n  if (useHomeScreenVersion) {\n    header = React.createElement(HomeScreenHeaderExport, {\n      onClose: onClose\n    });\n  } else {\n    header = React.createElement(BotHeaderExport, {\n      onClose: onClose,\n      headerDisplayName: headerDisplayName,\n      onToggleHomeScreen: null,\n      includeWriteableElement: false,\n      testIdPrefix: OverlayPanelName.HYDRATING\n    });\n  }\n  return React.createElement(\"div\", {\n    className: \"WAC WAC__hydratingContainer\"\n  }, header, React.createElement(\"div\", {\n    className: cx(\"WAC__hydrating\", \"WACPanelContent\", {\n      \"WAC__hydrating--homeScreen\": useHomeScreenVersion\n    })\n  }, !isHidden && React.createElement(MountChildrenOnDelay, {\n    delay: 400\n  }, !isHydrated && React.createElement(AnnounceOnMountComponentExport, {\n    announceOnce: languagePack.window_ariaWindowLoading\n  }), React.createElement(Loading, {\n    withOverlay: false,\n    \"aria-label\": languagePack.window_ariaWindowLoading\n  }))));\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function CustomPanel(props) {\n  const {useAITheme: useAITheme, onPanelOpenEnd: onPanelOpenEnd, onPanelCloseEnd: onPanelCloseEnd, onPanelOpenStart: onPanelOpenStart, onPanelCloseStart: onPanelCloseStart, onClose: onClose, onCloseAndRestart: onCloseAndRestart, onClickRestart: onClickRestart} = props;\n  const languagePack = useLanguagePack();\n  const {isOpen: isOpen, options: options} = useSelector(state => state.customPanelState);\n  const {title: title, hidePanelHeader: hidePanelHeader, disableDefaultCloseAction: disableDefaultCloseAction, disableAnimation: disableAnimation, onClickBack: onClickBack, onClickClose: onClickClose, onClickCloseAndRestart: onClickCloseAndRestart} = options;\n  const serviceManager = useServiceManager();\n  const ariaAnnouncer = useAriaAnnouncer();\n  const prevIsOpen = usePrevious(isOpen);\n  const openAnimation = disableAnimation ? AnimationInType.NONE : AnimationInType.SLIDE_IN_FROM_BOTTOM;\n  const closeAnimation = disableAnimation ? AnimationOutType.NONE : AnimationOutType.SLIDE_OUT_TO_BOTTOM;\n  useEffect(() => {\n    if (prevIsOpen !== isOpen && isOpen) {\n      if (!hidePanelHeader && title) {\n        ariaAnnouncer(title);\n      }\n    }\n  }, [ ariaAnnouncer, hidePanelHeader, isOpen, prevIsOpen, title ]);\n  const onClickBackLocal = useCallback(() => {\n    serviceManager.store.dispatch(actions.setCustomPanelOpen(false));\n    onClickBack?.();\n  }, [ serviceManager, onClickBack ]);\n  const onClickCloseLocal = useCallback(() => {\n    if (!disableDefaultCloseAction) {\n      checkAllowClose(serviceManager.store.getState().viewChanging);\n      onClose();\n    }\n    onClickClose?.();\n  }, [ disableDefaultCloseAction, onClickClose, onClose, serviceManager ]);\n  const onCloseAndRestartLocal = useCallback(() => {\n    if (!disableDefaultCloseAction) {\n      checkAllowClose(serviceManager.store.getState().viewChanging);\n      onCloseAndRestart();\n    }\n    onClickCloseAndRestart?.();\n  }, [ disableDefaultCloseAction, onClickCloseAndRestart, onCloseAndRestart, serviceManager ]);\n  return React.createElement(OverlayPanel, {\n    className: \"WAC__overlay--covering\",\n    onOpenStart: () => {\n      serviceManager.eventBus.fire({\n        type: BusEventType.CUSTOM_PANEL_PRE_OPEN\n      }, serviceManager.instance);\n      onPanelOpenStart();\n    },\n    onOpenEnd: () => {\n      serviceManager.eventBus.fire({\n        type: BusEventType.CUSTOM_PANEL_OPEN\n      }, serviceManager.instance);\n      onPanelOpenEnd();\n    },\n    onCloseStart: () => {\n      serviceManager.eventBus.fire({\n        type: BusEventType.CUSTOM_PANEL_PRE_CLOSE\n      }, serviceManager.instance);\n      onPanelCloseStart();\n    },\n    onCloseEnd: () => {\n      serviceManager.eventBus.fire({\n        type: BusEventType.CUSTOM_PANEL_CLOSE\n      }, serviceManager.instance);\n      onPanelCloseEnd();\n      serviceManager.store.dispatch(actions.setCustomPanelConfigOptions(DEFAULT_CUSTOM_PANEL_CONFIG_OPTIONS));\n    },\n    animationOnOpen: openAnimation,\n    animationOnClose: closeAnimation,\n    shouldOpen: isOpen,\n    serviceManager: serviceManager,\n    overlayPanelName: OverlayPanelName.CUSTOM\n  }, React.createElement(BasePanelComponentExport, {\n    className: \"WACCustomPanel\",\n    eventName: \"Custom panel opened\",\n    eventDescription: \"A user opened a custom panel.\",\n    labelBackButton: languagePack.general_returnToAssistant,\n    isOpen: isOpen,\n    title: title,\n    useAITheme: useAITheme,\n    onClickBack: onClickBackLocal,\n    onClickClose: onClickCloseLocal,\n    onClickCloseAndRestart: onCloseAndRestartLocal,\n    onClickRestart: onClickRestart,\n    hidePanelHeader: hidePanelHeader,\n    hideBackButton: options.hideBackButton,\n    hideCloseButton: options.hideCloseButton,\n    hideCloseAndRestartButton: options.hideCloseAndRestartButton,\n    testIdPrefix: OverlayPanelName.CUSTOM\n  }, React.createElement(WriteableElement, {\n    slotName: \"customPanelElement\",\n    className: \"WACCustomPanel__ContentContainer\"\n  })));\n}\n\nfunction checkAllowClose(viewChanging) {\n  if (viewChanging) {\n    const message = \"You are attempting to close Carbon AI chat from a custom panel while Carbon AI chat is currently running a view\" + \" change event which is not permitted. Please use the disableDefaultCloseAction option to disable\" + \" this behavior for the custom panel and then use onClickClose to resolve your Promise that is handling\" + \" the event; that Promise will allow you to close Carbon AI chat.\";\n    consoleError(message);\n    throw new Error(message);\n  }\n}\n\nconst CustomPanelExport = React.memo(CustomPanel);\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function addClassNameToState(name) {\n  return previousState => {\n    const currentIndex = previousState.extraClassNames.indexOf(name);\n    if (currentIndex === -1) {\n      return {\n        extraClassNames: [ ...previousState.extraClassNames, name ]\n      };\n    }\n    return null;\n  };\n}\n\nfunction removeClassNameFromState(name) {\n  return previousState => ({\n    extraClassNames: previousState.extraClassNames.filter(value => value !== name)\n  });\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const Chat = lazyChat();\n\nconst CatastrophicError = lazyCatastrophicError();\n\nconst Disclaimer = lazyDisclaimer();\n\nconst HomeScreenContainer = lazyHomeScreenContainer();\n\nconst IFramePanel = lazyIFramePanel();\n\nconst ViewSourcePanel = lazyViewSourcePanel();\n\nconst BodyAndFooterPanelComponent = lazyBodyAndFooterPanelComponent();\n\nconst WIDTH_BREAKPOINT_STANDARD = \"WAC--standardWidth\";\n\nconst WIDTH_BREAKPOINT_NARROW = \"WAC--narrowWidth\";\n\nconst WIDTH_BREAKPOINT_WIDE = \"WAC--wideWidth\";\n\nclass MainWindow extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      closing: false,\n      open: this.props.persistedToBrowserStorage.launcherState.viewState.mainWindow,\n      modalPortalHostElement: null,\n      numPanelsOpen: 0,\n      numPanelsAnimating: 0,\n      numPanelsCovering: 0,\n      isHydrationAnimationComplete: this.props.isHydrated,\n      shouldAutoFocus: this.props.config.public.shouldTakeFocusIfOpensAutomatically,\n      extraClassNames: [],\n      areModulesLoaded: false\n    };\n    this.mainWindowRef = React.createRef();\n    this.containerRef = React.createRef();\n    this.botChatRef = React.createRef();\n    this.homeScreenInputRef = React.createRef();\n    this.disclaimerRef = React.createRef();\n    this.brandingRef = React.createRef();\n    this.animationContainerRef = React.createRef();\n    this.iframePanelRef = React.createRef();\n    this.viewSourcePanelRef = React.createRef();\n    this.previousBodyVisibility = undefined;\n    this.previousBodyPosition = undefined;\n    this.onResize = () => {\n      let appChatWidthBreakpoint;\n      const height = this.containerRef?.current?.offsetHeight;\n      const width = this.containerRef?.current?.offsetWidth;\n      if (width >= 672 + 16 + 16) {\n        appChatWidthBreakpoint = ChatWidthBreakpoint.WIDE;\n      } else if (width >= 360) {\n        appChatWidthBreakpoint = ChatWidthBreakpoint.STANDARD;\n      } else {\n        appChatWidthBreakpoint = ChatWidthBreakpoint.NARROW;\n      }\n      this.props.serviceManager.store.dispatch(actions.setAppStateValue(\"chatWidth\", width));\n      this.props.serviceManager.store.dispatch(actions.setAppStateValue(\"chatHeight\", height));\n      this.props.serviceManager.store.dispatch(actions.setAppStateValue(\"chatWidthBreakpoint\", appChatWidthBreakpoint));\n    };\n    this.onVisualViewportResize = () => {\n      this.updateFromVisualViewport();\n    };\n    this.updateFromVisualViewport = () => {\n      const element = this.props.serviceManager.container;\n      const {visualViewport: visualViewport} = window;\n      if (visualViewport) {\n        element.style.setProperty(\"--cds-chat-viewport-height\", `${visualViewport.height}px`);\n        element.style.setProperty(\"--cds-chat-viewport-width\", `${visualViewport.width}px`);\n        element.style.setProperty(\"--cds-chat-viewport-offsetTop\", `${visualViewport.offsetTop}px`);\n        element.style.setProperty(\"--cds-chat-viewport-offsetLeft\", `${visualViewport.offsetLeft}px`);\n      } else {\n        const height = \"100vh\";\n        element.style.setProperty(\"--cds-chat-viewport-height\", height);\n        element.style.setProperty(\"--cds-chat-viewport-width\", \"100vw\");\n        element.style.setProperty(\"--cds-chat-viewport-offsetTop\", \"0\");\n        element.style.setProperty(\"--cds-chat-viewport-offsetLeft\", \"0\");\n      }\n    };\n    this.setModalPortalHostElement = ref => {\n      if (this.state.modalPortalHostElement !== ref) {\n        this.setState({\n          modalPortalHostElement: ref\n        });\n      }\n    };\n    this.onSendInput = async (text, source, options) => {\n      const isInputToHumanAgent = selectIsInputToHumanAgent(this.props);\n      const {serviceManager: serviceManager} = this.props;\n      const state = serviceManager.store.getState();\n      const {files: files} = selectInputState(state);\n      if (isInputToHumanAgent) {\n        serviceManager.humanAgentService.sendMessageToAgent(text, files);\n      } else {\n        const messageRequest = createMessageRequestForText(text);\n        serviceManager.actions.sendWithCatch(messageRequest, source, {\n          ...options\n        });\n      }\n      if (files.length) {\n        serviceManager.store.dispatch(actions.clearInputFiles(isInputToHumanAgent));\n      }\n    };\n    this.onSendHomeButtonInput = input => {\n      const messageRequest = createMessageRequestForChoice(input);\n      this.props.serviceManager.actions.sendWithCatch(messageRequest, MessageSendSource.HOME_SCREEN_STARTER);\n    };\n    this.removeChatFromDom = () => {\n      this.containerRef.current.removeEventListener(\"animationend\", this.removeChatFromDom);\n      this.setState({\n        open: false,\n        closing: false\n      });\n    };\n    this.onRestart = async () => {\n      await this.props.serviceManager.actions.restartConversation();\n      this.requestFocus();\n    };\n    this.onClose = async () => this.doClose(false);\n    this.onCloseAndRestart = async () => this.doClose(true);\n    this.onToggleHomeScreen = () => {\n      this.props.serviceManager.store.dispatch(actions.toggleHomeScreen());\n    };\n    this.requestFocus = () => {\n      try {\n        if (this.state.shouldAutoFocus && !IS_MOBILE) {\n          if (this.getShowDisclaimer()) {\n            if (this.disclaimerRef.current) {\n              doFocusRef(this.disclaimerRef);\n            }\n          } else if (this.getShowHomeScreen()) {\n            if (this.homeScreenInputRef.current) {\n              this.homeScreenInputRef.current.takeFocus();\n            }\n          } else if (this.props.iFramePanelState.isOpen) {\n            if (this.iframePanelRef.current) {\n              this.iframePanelRef.current.requestFocus();\n            }\n          } else if (this.botChatRef.current) {\n            this.botChatRef.current.requestInputFocus();\n          }\n        }\n      } catch (error) {\n        consoleError(\"An error occurred in MainWindow.requestFocus\", error);\n      }\n    };\n    this.onUserTyping = isTyping => {\n      if (this.props.serviceManager.store.getState().persistedToBrowserStorage.chatState.humanAgentState.isConnected) {\n        this.props.serviceManager.humanAgentService.userTyping(isTyping);\n      }\n    };\n    this.onAcceptDisclaimer = () => {\n      this.props.serviceManager.store.dispatch(actions.acceptDisclaimer());\n    };\n    this.onPanelOpenStart = coverBackground => {\n      this.setState(prevState => ({\n        numPanelsOpen: prevState.numPanelsOpen + 1,\n        numPanelsAnimating: prevState.numPanelsAnimating + 1,\n        numPanelsCovering: prevState.numPanelsCovering + (coverBackground ? 1 : 0)\n      }), this.requestFocus);\n    };\n    this.onPanelOpenEnd = () => {\n      this.setState(prevState => ({\n        numPanelsAnimating: prevState.numPanelsAnimating - 1\n      }));\n    };\n    this.onPanelCloseStart = () => {\n      this.setState(prevState => ({\n        numPanelsAnimating: prevState.numPanelsAnimating + 1\n      }), this.requestFocus);\n    };\n    this.onPanelCloseEnd = coverBackground => {\n      this.setState(prevState => ({\n        numPanelsOpen: prevState.numPanelsOpen - 1,\n        numPanelsAnimating: prevState.numPanelsAnimating - 1,\n        numPanelsCovering: prevState.numPanelsCovering - (coverBackground ? 1 : 0)\n      }));\n    };\n    this.onHydrationPanelClose = () => {\n      this.setState({\n        isHydrationAnimationComplete: true\n      }, this.requestFocus);\n    };\n  }\n  componentDidMount() {\n    const {persistedToBrowserStorage: persistedToBrowserStorage, config: config, serviceManager: serviceManager, mainWindowRef: mainWindowRef} = this.props;\n    const {viewState: viewState} = persistedToBrowserStorage.launcherState;\n    const {public: publicConfig} = config;\n    serviceManager.mainWindow = this;\n    mainWindowRef.current = this;\n    this.mainWindowObserver = new ResizeObserver(this.onResize);\n    this.mainWindowObserver.observe(this.containerRef.current);\n    if (IS_MOBILE && !publicConfig.disableCustomElementMobileEnhancements) {\n      const {visualViewport: visualViewport} = window;\n      if (visualViewport) {\n        visualViewport.addEventListener(\"resize\", this.onVisualViewportResize);\n        visualViewport.addEventListener(\"scroll\", this.updateFromVisualViewport);\n      }\n      this.updateFromVisualViewport();\n      this.updateBody(false);\n    }\n    this.containerRef.current.style.setProperty(\"--cds-chat-scrollbar-width\", `${SCROLLBAR_WIDTH()}px`);\n    if (viewState.mainWindow) {\n      this.loadPanels();\n    }\n  }\n  componentWillUnmount() {\n    this.mainWindowObserver.unobserve(this.containerRef.current);\n  }\n  destroy() {\n    if (IS_MOBILE && !this.props.config.public.disableCustomElementMobileEnhancements) {\n      const {visualViewport: visualViewport} = window;\n      if (visualViewport) {\n        visualViewport.removeEventListener(\"resize\", this.onVisualViewportResize);\n        visualViewport.removeEventListener(\"scroll\", this.updateFromVisualViewport);\n      }\n    }\n    this.updateBody(true);\n  }\n  componentDidUpdate(oldProps, oldState) {\n    const newProps = this.props;\n    const newState = this.state;\n    const {persistedToBrowserStorage: persistedToBrowserStorage, useCustomHostElement: useCustomHostElement, isDestroyed: isDestroyed} = newProps;\n    const {viewState: viewState} = persistedToBrowserStorage.launcherState;\n    const {open: open} = newState;\n    const prevViewState = oldProps.persistedToBrowserStorage.launcherState.viewState;\n    if (viewState.mainWindow !== prevViewState.mainWindow) {\n      this.updateBody(false);\n      this.updateFromVisualViewport();\n    }\n    if (isDestroyed && !oldProps.isDestroyed) {\n      this.destroy();\n    }\n    if ((oldState.areModulesLoaded !== newState.areModulesLoaded || oldProps.isHydrated !== newProps.isHydrated) && newProps.isHydrated && newState.areModulesLoaded) {\n      this.setState({\n        isHydrationAnimationComplete: true\n      }, () => {\n        requestAnimationFrame(() => {\n          this.requestFocus();\n        });\n      });\n    }\n    if (viewState.mainWindow && (!prevViewState.mainWindow || !open)) {\n      this.setState({\n        open: true\n      }, () => {\n        this.requestFocus();\n      });\n      this.loadPanels();\n    } else if (!viewState.mainWindow && prevViewState.mainWindow && oldState.open && open) {\n      this.setState({\n        closing: true\n      });\n      if (useCustomHostElement) {\n        this.removeChatFromDom();\n      } else {\n        this.containerRef.current.addEventListener(\"animationend\", this.removeChatFromDom);\n        this.requestFocus();\n      }\n    }\n    if (newProps.config.public.shouldTakeFocusIfOpensAutomatically) {\n      if (!oldProps.persistedToBrowserStorage.chatState.hasSentNonWelcomeMessage && newProps.persistedToBrowserStorage.chatState.hasSentNonWelcomeMessage && !this.state.shouldAutoFocus) {\n        this.setState({\n          shouldAutoFocus: true\n        });\n      } else if (oldProps.botMessageState.localMessageIDs.length > newProps.botMessageState.localMessageIDs.length && this.state.shouldAutoFocus) {\n        this.setState({\n          shouldAutoFocus: false\n        });\n      } else if (oldProps.botMessageState.localMessageIDs.length < newProps.botMessageState.localMessageIDs.length && !this.state.shouldAutoFocus) {\n        this.setState({\n          shouldAutoFocus: true\n        });\n      }\n    }\n    const newLastItemID = arrayLastValue(newProps.botMessageState.localMessageIDs);\n    const oldLastItemID = arrayLastValue(oldProps.botMessageState.localMessageIDs);\n    if (newLastItemID !== oldLastItemID && newState.shouldAutoFocus) {\n      const lastMessageItem = newProps.allMessageItemsByID[newLastItemID];\n      const lastMessage = newProps.allMessagesByID[lastMessageItem?.fullMessageID];\n      if (!lastMessage?.ui_state_internal?.from_history) {\n        this.requestFocus();\n      }\n    }\n  }\n  componentDidCatch(error, errorInfo) {\n    this.props.serviceManager.actions.errorOccurred(createDidCatchErrorData(\"MainWindow\", error, errorInfo, true));\n  }\n  loadPanels() {\n    Promise.all([ Chat.preload(), CatastrophicError.preload(), Disclaimer.preload(), HomeScreenContainer.preload(), IFramePanel.preload(), ViewSourcePanel.preload(), BodyAndFooterPanelComponent.preload() ]).then(() => {\n      this.setState({\n        areModulesLoaded: true\n      });\n    });\n  }\n  updateBody(unmounting) {\n    if (IS_IOS && !this.props.config.public.disableCustomElementMobileEnhancements) {\n      if ((window.screen.width <= 500 || window.screen.height <= 500) && this.props.persistedToBrowserStorage.launcherState.viewState.mainWindow && !unmounting) {\n        this.previousBodyVisibility = document.body.style.getPropertyValue(\"visibility\");\n        this.previousBodyPosition = document.body.style.getPropertyValue(\"position\");\n        document.body.style.setProperty(\"visibility\", \"hidden\", \"important\");\n        document.body.style.setProperty(\"position\", \"fixed\", \"important\");\n      } else {\n        document.body.style.setProperty(\"visibility\", this.previousBodyVisibility);\n        document.body.style.setProperty(\"position\", this.previousBodyPosition);\n      }\n    }\n  }\n  async doClose(fromCloseAndRestart) {\n    const {serviceManager: serviceManager} = this.props;\n    const {activeTour: activeTour} = serviceManager.store.getState().persistedToBrowserStorage.launcherState;\n    if (fromCloseAndRestart) {\n      const newViewState = await serviceManager.actions.changeView(ViewType.LAUNCHER, {\n        mainWindowCloseReason: MainWindowCloseReason.MAIN_WINDOW_CLOSED_AND_RESTARTED\n      });\n      if (!newViewState.mainWindow) {\n        await serviceManager.actions.restartConversation();\n      }\n    } else {\n      await serviceManager.actions.changeView(activeTour ? ViewType.TOUR : ViewType.LAUNCHER, {\n        mainWindowCloseReason: MainWindowCloseReason.DEFAULT_MINIMIZE\n      });\n    }\n  }\n  getShowHomeScreen() {\n    return this.props.homeScreenConfig.is_on && this.props.persistedToBrowserStorage.chatState.homeScreenState.isHomeScreenOpen && !this.getShowDisclaimer();\n  }\n  getShowDisclaimer() {\n    return this.props.config.public.disclaimer?.is_on && !this.props.persistedToBrowserStorage.chatState.disclaimersAccepted[window.location.hostname];\n  }\n  doAutoScroll(options) {\n    this.botChatRef?.current?.doAutoScroll(options);\n  }\n  getMessagesScrollBottom() {\n    return this.botChatRef?.current?.getMessagesScrollBottom();\n  }\n  doScrollToMessage(messageID, animate = true) {\n    this.botChatRef.current?.doScrollToMessage(messageID, animate);\n  }\n  getMessageInput() {\n    return this.botChatRef.current?.getMessageInput();\n  }\n  getHomeScreenInput() {\n    return this.homeScreenInputRef.current?.getMessageInput();\n  }\n  addClassName(name) {\n    this.setState(addClassNameToState(name));\n  }\n  removeClassName(name) {\n    this.setState(removeClassNameFromState(name));\n  }\n  renderChat() {\n    const {isHydrated: isHydrated, config: config, chatWidthBreakpoint: chatWidthBreakpoint} = this.props;\n    const {areModulesLoaded: areModulesLoaded} = this.state;\n    const showCovering = this.state.numPanelsCovering > 0 && config.public.layout?.hasContentMaxWidth && chatWidthBreakpoint === ChatWidthBreakpoint.WIDE;\n    return React.createElement(\"div\", {\n      className: \"WACWidget--content\"\n    }, this.renderCustomPanel(), this.renderHydrationPanel(), isHydrated && areModulesLoaded && React.createElement(React.Fragment, null, this.renderDisclaimerPanel(), this.renderResponsePanel(), this.renderHomeScreenPanel(), this.renderIFramePanel(), this.renderViewSourcePanel(), showCovering && React.createElement(\"div\", {\n      className: \"WACBackgroundCover\"\n    }), this.renderBotChat()));\n  }\n  renderBotChat() {\n    const {botName: botName, languagePack: languagePack, config: config, serviceManager: serviceManager, botMessageState: botMessageState, humanAgentState: humanAgentState, allMessageItemsByID: allMessageItemsByID, isHydrated: isHydrated, locale: locale, theme: theme, headerDisplayName: headerDisplayName, headerAvatarConfig: headerAvatar} = this.props;\n    const {numPanelsAnimating: numPanelsAnimating, numPanelsOpen: numPanelsOpen, isHydrationAnimationComplete: isHydrationAnimationComplete} = this.state;\n    const inputState = selectInputState(this.props);\n    const agentDisplayState = selectHumanAgentDisplayState(this.props);\n    const showDisclaimer = this.getShowDisclaimer();\n    let hideBotContainer;\n    if (!isHydrationAnimationComplete) {\n      hideBotContainer = true;\n    } else if (numPanelsAnimating > 0) {\n      hideBotContainer = false;\n    } else if (numPanelsOpen > 0) {\n      hideBotContainer = true;\n    }\n    return React.createElement(HideComponent, {\n      className: \"WACBotContainer\",\n      hidden: hideBotContainer\n    }, React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(Chat, {\n      botName: botName,\n      headerDisplayName: headerDisplayName,\n      headerAvatarConfig: headerAvatar,\n      ref: this.botChatRef,\n      languagePack: languagePack,\n      config: config,\n      serviceManager: serviceManager,\n      onClose: this.onClose,\n      onCloseAndRestart: this.onCloseAndRestart,\n      messageState: botMessageState,\n      onSendInput: text => this.onSendInput(text, MessageSendSource.MESSAGE_INPUT),\n      humanAgentState: humanAgentState,\n      agentDisplayState: agentDisplayState,\n      allMessageItemsByID: allMessageItemsByID,\n      onRestart: this.onRestart,\n      isHydrated: isHydrated,\n      isHydrationAnimationComplete: isHydrationAnimationComplete && !showDisclaimer,\n      inputState: inputState,\n      onToggleHomeScreen: this.onToggleHomeScreen,\n      onUserTyping: this.onUserTyping,\n      locale: locale,\n      useAITheme: theme.useAITheme,\n      carbonTheme: theme.carbonTheme\n    })));\n  }\n  renderInnerHydrationPanel() {\n    const {botMessageState: botMessageState, serviceManager: serviceManager, languagePack: languagePack, headerDisplayName: headerDisplayName, persistedToBrowserStorage: persistedToBrowserStorage, homeScreenConfig: homeScreenConfig} = this.props;\n    const {areModulesLoaded: areModulesLoaded} = this.state;\n    const useHomeScreenVersion = homeScreenConfig.is_on && !persistedToBrowserStorage.launcherState.hasSentNonWelcomeMessage;\n    return React.createElement(HydrationPanel, {\n      headerDisplayName: headerDisplayName,\n      isHydrated: botMessageState.isHydratingCounter === 0 && areModulesLoaded,\n      serviceManager: serviceManager,\n      onClose: this.onClose,\n      languagePack: languagePack,\n      useHomeScreenVersion: useHomeScreenVersion\n    });\n  }\n  renderHydrationPanel() {\n    const {botMessageState: botMessageState, serviceManager: serviceManager, catastrophicErrorType: catastrophicErrorType, persistedToBrowserStorage: persistedToBrowserStorage} = this.props;\n    const {viewState: viewState} = persistedToBrowserStorage.launcherState;\n    const {areModulesLoaded: areModulesLoaded} = this.state;\n    return React.createElement(OverlayPanel, {\n      onOpenStart: () => this.onPanelOpenStart(false),\n      onCloseStart: this.onPanelCloseStart,\n      onOpenEnd: this.onPanelOpenEnd,\n      onCloseEnd: () => {\n        this.onHydrationPanelClose();\n        this.onPanelCloseEnd(false);\n      },\n      animationOnOpen: AnimationInType.NONE,\n      animationOnClose: AnimationOutType.NONE,\n      shouldOpen: (botMessageState.isHydratingCounter > 0 || !areModulesLoaded) && !catastrophicErrorType && viewState.mainWindow,\n      shouldHide: false,\n      serviceManager: serviceManager,\n      overlayPanelName: OverlayPanelName.HYDRATING\n    }, this.renderInnerHydrationPanel());\n  }\n  renderCatastrophicPanel() {\n    const {serviceManager: serviceManager, botName: botName, languagePack: languagePack, headerDisplayName: headerDisplayName} = this.props;\n    return React.createElement(OverlayPanel, {\n      animationOnOpen: AnimationInType.NONE,\n      animationOnClose: AnimationOutType.NONE,\n      shouldOpen: true,\n      serviceManager: serviceManager,\n      overlayPanelName: OverlayPanelName.CATASTROPHIC\n    }, React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(CatastrophicError, {\n      onClose: this.onClose,\n      headerDisplayName: headerDisplayName,\n      languagePack: languagePack,\n      onRestart: this.onRestart,\n      showHeader: true,\n      botName: botName\n    })));\n  }\n  renderDisclaimerPanel() {\n    const {serviceManager: serviceManager, config: config} = this.props;\n    const showDisclaimer = this.getShowDisclaimer();\n    return config.public.disclaimer?.is_on ? React.createElement(OverlayPanel, {\n      onOpenStart: () => this.onPanelOpenStart(false),\n      onCloseStart: this.onPanelCloseStart,\n      onOpenEnd: this.onPanelOpenEnd,\n      onCloseEnd: () => this.onPanelCloseEnd(false),\n      animationOnOpen: AnimationInType.FADE_IN,\n      animationOnClose: AnimationOutType.FADE_OUT,\n      shouldOpen: showDisclaimer,\n      serviceManager: serviceManager,\n      overlayPanelName: OverlayPanelName.DISCLAIMER\n    }, React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(Disclaimer, {\n      onAcceptDisclaimer: this.onAcceptDisclaimer,\n      onClose: this.onClose,\n      disclaimerHTML: config.public.disclaimer?.disclaimerHTML,\n      disclaimerAcceptButtonRef: this.disclaimerRef\n    }))) : null;\n  }\n  renderHomeScreenPanel() {\n    const {isHydrationAnimationComplete: isHydrationAnimationComplete} = this.state;\n    const showHomeScreen = this.getShowHomeScreen();\n    return React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(HomeScreenContainer, {\n      onPanelOpenStart: () => this.onPanelOpenStart(false),\n      onPanelOpenEnd: this.onPanelOpenEnd,\n      onPanelCloseStart: this.onPanelCloseStart,\n      onPanelCloseEnd: () => this.onPanelCloseEnd(false),\n      onClose: this.onClose,\n      onCloseAndRestart: this.onCloseAndRestart,\n      onSendBotInput: text => this.onSendInput(text, MessageSendSource.HOME_SCREEN_INPUT),\n      onSendButtonInput: this.onSendHomeButtonInput,\n      onRestart: this.onRestart,\n      showHomeScreen: showHomeScreen,\n      isHydrationAnimationComplete: isHydrationAnimationComplete,\n      homeScreenInputRef: this.homeScreenInputRef,\n      onToggleHomeScreen: this.onToggleHomeScreen,\n      requestFocus: this.requestFocus\n    }));\n  }\n  renderIFramePanel() {\n    const {serviceManager: serviceManager, iFramePanelState: iFramePanelState} = this.props;\n    return React.createElement(OverlayPanel, {\n      className: \"WAC__overlay--covering\",\n      onOpenStart: () => this.onPanelOpenStart(true),\n      onCloseStart: this.onPanelCloseStart,\n      onOpenEnd: this.onPanelOpenEnd,\n      onCloseEnd: () => this.onPanelCloseEnd(true),\n      animationOnOpen: AnimationInType.SLIDE_IN_FROM_BOTTOM,\n      animationOnClose: AnimationOutType.SLIDE_OUT_TO_BOTTOM,\n      shouldOpen: iFramePanelState.isOpen,\n      serviceManager: serviceManager,\n      overlayPanelName: OverlayPanelName.IFRAME\n    }, React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(IFramePanel, {\n      useAITheme: this.props.theme.useAITheme,\n      ref: this.iframePanelRef,\n      onClickClose: this.onClose,\n      onClickRestart: this.onRestart,\n      onClickCloseAndRestart: this.onCloseAndRestart\n    })));\n  }\n  renderViewSourcePanel() {\n    const {serviceManager: serviceManager, viewSourcePanelState: viewSourcePanelState} = this.props;\n    return React.createElement(OverlayPanel, {\n      className: \"WAC__overlay--covering\",\n      onOpenStart: () => this.onPanelOpenStart(true),\n      onCloseStart: this.onPanelCloseStart,\n      onOpenEnd: this.onPanelOpenEnd,\n      onCloseEnd: () => this.onPanelCloseEnd(true),\n      animationOnOpen: AnimationInType.SLIDE_IN_FROM_BOTTOM,\n      animationOnClose: AnimationOutType.SLIDE_OUT_TO_BOTTOM,\n      shouldOpen: viewSourcePanelState.isOpen,\n      serviceManager: serviceManager,\n      overlayPanelName: OverlayPanelName.CONVERSATIONAL_SEARCH_CITATION\n    }, React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(ViewSourcePanel, {\n      ref: this.viewSourcePanelRef,\n      onClickClose: this.onClose,\n      onClickRestart: this.onRestart,\n      onClickCloseAndRestart: this.onCloseAndRestart\n    })));\n  }\n  renderCustomPanel() {\n    return React.createElement(CustomPanelExport, {\n      useAITheme: this.props.theme.useAITheme,\n      onClose: this.onClose,\n      onClickRestart: this.onRestart,\n      onCloseAndRestart: this.onCloseAndRestart,\n      onPanelOpenStart: () => this.onPanelOpenStart(true),\n      onPanelOpenEnd: this.onPanelOpenEnd,\n      onPanelCloseStart: this.onPanelCloseStart,\n      onPanelCloseEnd: () => this.onPanelCloseEnd(true)\n    });\n  }\n  renderResponsePanel() {\n    if (!this.props.responsePanelState.localMessageItem) {\n      return null;\n    }\n    const {isOpen: isOpen, localMessageItem: localMessageItem, isMessageForInput: isMessageForInput} = this.props.responsePanelState;\n    const panelOptions = (localMessageItem?.item).panel;\n    const eventName = `\"Show panel\" opened`;\n    const eventDescription = \"Panel opened through panel response type\";\n    const overlayPanelName = OverlayPanelName.PANEL_RESPONSE;\n    return React.createElement(Suspense, {\n      fallback: null\n    }, React.createElement(BodyAndFooterPanelComponent, {\n      eventName: eventName,\n      eventDescription: eventDescription,\n      overlayPanelName: overlayPanelName,\n      testIdPrefix: overlayPanelName,\n      isOpen: isOpen,\n      isMessageForInput: isMessageForInput,\n      localMessageItem: localMessageItem,\n      title: panelOptions?.title,\n      showAnimations: panelOptions?.show_animations,\n      useAITheme: this.props.theme.useAITheme,\n      requestFocus: this.requestFocus,\n      onClose: this.onClose,\n      onClickRestart: this.onRestart,\n      onCloseAndRestart: this.onCloseAndRestart,\n      onClickBack: () => this.props.serviceManager.store.dispatch(actions.setResponsePanelIsOpen(false)),\n      onPanelOpenStart: () => this.onPanelOpenStart(true),\n      onPanelOpenEnd: this.onPanelOpenEnd,\n      onPanelCloseStart: this.onPanelCloseStart,\n      onPanelCloseEnd: () => {\n        this.onPanelCloseEnd(true);\n        this.props.serviceManager.store.dispatch(actions.setResponsePanelContent(null, false));\n      },\n      renderMessageComponent: childProps => React.createElement(MessageTypeComponent, {\n        ...childProps\n      })\n    }));\n  }\n  renderWidget() {\n    const {serviceManager: serviceManager, useCustomHostElement: useCustomHostElement, locale: locale, catastrophicErrorType: catastrophicErrorType, config: config, isHydrated: isHydrated, theme: theme, chatWidthBreakpoint: chatWidthBreakpoint, layout: layout, languagePack: languagePack} = this.props;\n    const {closing: closing, open: open, extraClassNames: extraClassNames} = this.state;\n    const localeClassName = `WACLocale-${locale || \"en\"}`;\n    const showGlass = config.public.enableFocusTrap && open && !config.public.hideCloseButton && !config.public.headerConfig.hideMinimizeButton;\n    const trapActive = Boolean(showGlass && isHydrated);\n    const isWideWidth = chatWidthBreakpoint === ChatWidthBreakpoint.WIDE;\n    return React.createElement(FocusTrap, {\n      active: trapActive\n    }, React.createElement(\"div\", {\n      className: cx(\"WACMainWindow\", \"WACWidget__FocusTrapContainer\", ...extraClassNames),\n      ref: this.mainWindowRef\n    }, showGlass && React.createElement(\"div\", {\n      className: \"WACWidget__FocusTrapGlass\"\n    }), React.createElement(\"div\", {\n      id: `WACWidget${serviceManager.namespace.suffix}`,\n      className: cx(`WACWidget ${localeClassName}`, {\n        \"WACWidget--rounded\": theme.corners === CornersType.ROUND,\n        \"WACWidget--defaultElement\": !useCustomHostElement,\n        \"WACWidget--launched\": !closing,\n        \"WACWidget--closing\": closing,\n        \"WACWidget--closed\": !open,\n        \"WACWidget--maxWidth\": isWideWidth && layout.hasContentMaxWidth,\n        [WIDTH_BREAKPOINT_NARROW]: chatWidthBreakpoint === ChatWidthBreakpoint.NARROW,\n        [WIDTH_BREAKPOINT_STANDARD]: chatWidthBreakpoint === ChatWidthBreakpoint.STANDARD,\n        [WIDTH_BREAKPOINT_WIDE]: isWideWidth\n      }),\n      ref: this.containerRef\n    }, React.createElement(VisuallyHidden, null, React.createElement(\"h1\", null, languagePack.window_title)), catastrophicErrorType && this.renderCatastrophicPanel(), !catastrophicErrorType && React.createElement(\"div\", {\n      ref: this.animationContainerRef,\n      className: \"WACWidget__animationContainer\",\n      onScroll: () => {\n        if (this.animationContainerRef.current.scrollTop !== 0) {\n          this.animationContainerRef.current.scrollTop = 0;\n        }\n      }\n    }, this.renderChat()), React.createElement(\"div\", {\n      className: \"WACMainWindowModalHost\",\n      ref: this.setModalPortalHostElement\n    }))));\n  }\n  render() {\n    return React.createElement(ModalPortalRootContext.Provider, {\n      value: this.state.modalPortalHostElement\n    }, this.renderWidget());\n  }\n}\n\nvar MainWindow$1 = connect(state => state, null, null, {\n  forwardRef: true\n})(MainWindow);\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ const TourContainerLazy = lazyTourComponent();\n\nfunction App({serviceManager: serviceManager, hostElement: hostElement, applicationStyles: applicationStyles, fontStyles: fontStyles}) {\n  const {store: store} = serviceManager;\n  const {config: config} = store.getState();\n  if (config.public.debug) {\n    consoleDebug(\"[render] Called render\");\n  }\n  const combinedStyles = `${fontStyles ? `${fontStyles} ` : \"\"}${applicationStyles}`;\n  return React.createElement(Provider, {\n    store: store\n  }, React.createElement(AppContainer$1, {\n    serviceManager: serviceManager,\n    hostElement: hostElement,\n    applicationStyles: combinedStyles\n  }));\n}\n\nfunction AppContainer$1({serviceManager: serviceManager, hostElement: hostElement, applicationStyles: applicationStyles}) {\n  const languagePack = useSelector(state => state.languagePack);\n  const cssVariableOverrides = useSelector(state => state.cssVariableOverrides);\n  const theme = useSelector(state => state.theme);\n  const config = useSelector(state => state.config);\n  const layout = useSelector(state => state.layout);\n  const {namespace: namespace} = serviceManager;\n  const {originalName: originalName} = namespace;\n  const dispatch = useDispatch();\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const cssVariableOverrideString = useMemo(() => convertCSSVariablesToString(cssVariableOverrides), [ cssVariableOverrides ]);\n  const dir = document.dir || \"auto\";\n  useOnMount(() => {\n    const windowListener = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener(\"resize\", windowListener);\n    const visibilityListener = () => {\n      dispatch(actions.setIsBrowserPageVisible(document.visibilityState === \"visible\"));\n    };\n    document.addEventListener(\"visibilitychange\", visibilityListener);\n    return () => {\n      window.removeEventListener(\"resize\", windowListener);\n      document.removeEventListener(\"visibilitychange\", visibilityListener);\n    };\n  });\n  return React.createElement(\"div\", {\n    className: \"WACContainer\",\n    \"data-namespace\": originalName,\n    ref: node => {\n      if (node && hostElement) {\n        node.style.setProperty(\"height\", \"100%\", \"important\");\n        node.style.setProperty(\"width\", \"100%\", \"important\");\n      }\n    }\n  }, React.createElement(\"div\", {\n    className: \"WACContainer--styles\"\n  }, React.createElement(\"style\", {\n    \"data-base-styles\": \"true\",\n    nonce: config.public.cspNonce\n  }, applicationStyles || `.WACContainer { visibility: hidden; }`), React.createElement(\"style\", {\n    \"data-variables-custom\": \"true\",\n    nonce: config.public.cspNonce\n  }, cssVariableOverrideString)), React.createElement(\"div\", {\n    className: cx(`WACContainer--render`, getThemeClassNames(theme), {\n      \"WACContainer-disableMobileEnhancements\": hostElement && config.public.disableCustomElementMobileEnhancements,\n      \"WAC-isPhone\": IS_PHONE && !config.public.disableCustomElementMobileEnhancements,\n      \"WAC-isPhonePortraitMode\": IS_PHONE_IN_PORTRAIT_MODE && !config.public.disableCustomElementMobileEnhancements,\n      \"WAC--frameless\": !layout?.showFrame\n    }),\n    dir: dir\n  }, React.createElement(WindowSizeContext.Provider, {\n    value: windowSize\n  }, React.createElement(ServiceManagerContext.Provider, {\n    value: serviceManager\n  }, React.createElement(RawIntlProvider, {\n    value: serviceManager.intl\n  }, React.createElement(LanguagePackContext.Provider, {\n    value: languagePack\n  }, React.createElement(AriaAnnouncerProvider, null, React.createElement(MainContainer, {\n    serviceManager: serviceManager,\n    hostElement: hostElement\n  }))))))));\n}\n\nfunction MainContainer(props) {\n  const {hostElement: hostElement, serviceManager: serviceManager} = props;\n  const showLauncher = useSelector(state => state.launcher.config.is_on);\n  const {viewState: viewState} = useSelector(state => state.persistedToBrowserStorage.launcherState);\n  const tourContainerRef = useRef();\n  const mainWindowRef = useRef();\n  const showTour = viewState.tour;\n  const showedTourOnce = useRef(showTour);\n  showedTourOnce.current = showTour || showedTourOnce.current;\n  const intl = useIntl();\n  const namespace = serviceManager.namespace.originalName;\n  const languageKey = namespace ? \"window_ariaChatRegionNamespace\" : \"window_ariaChatRegion\";\n  const regionLabel = intl.formatMessage({\n    id: languageKey\n  }, {\n    namespace: namespace\n  });\n  useOnMount(() => {\n    function requestFocus() {\n      try {\n        const {persistedToBrowserStorage: persistedToBrowserStorage} = serviceManager.store.getState();\n        const {viewState: viewState} = persistedToBrowserStorage.launcherState;\n        if (viewState.tour) {\n          tourContainerRef.current?.requestFocus();\n        } else if (viewState.mainWindow) {\n          mainWindowRef.current?.requestFocus();\n        }\n      } catch (error) {\n        consoleError(\"An error occurred in App.requestFocus\", error);\n      }\n    }\n    serviceManager.appWindow = {\n      requestFocus: requestFocus\n    };\n  });\n  return React.createElement(\"div\", {\n    className: \"WACWidget__regionContainer\",\n    role: \"region\",\n    \"aria-label\": regionLabel\n  }, React.createElement(MainWindow$1, {\n    mainWindowRef: mainWindowRef,\n    useCustomHostElement: Boolean(hostElement),\n    serviceManager: serviceManager\n  }), showedTourOnce.current && React.createElement(Suspense, {\n    fallback: null\n  }, React.createElement(TourContainerLazy, {\n    ref: tourContainerRef\n  })), showLauncher && React.createElement(LauncherContainer, null));\n}\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function UserDefinedResponsePortalsContainer({chatInstance: chatInstance, renderUserDefinedResponse: renderUserDefinedResponse, userDefinedResponseEventsBySlot: userDefinedResponseEventsBySlot}) {\n  return renderUserDefinedResponse ? Object.entries(userDefinedResponseEventsBySlot).map(([slot, slotState]) => {\n    const {element: element} = slotState;\n    if (!element) {\n      return null;\n    }\n    return React.createElement(UserDefinedResponseComponentPortal, {\n      key: slot,\n      hostElement: element\n    }, renderUserDefinedResponse(slotState, chatInstance));\n  }) : null;\n}\n\nfunction UserDefinedResponseComponentPortal({hostElement: hostElement, children: children}) {\n  return ReactDOM.createPortal(children, hostElement);\n}\n\nconst UserDefinedResponsePortalsContainerExport = React.memo(UserDefinedResponsePortalsContainer);\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function WriteableElementsPortalsContainer({chatInstance: chatInstance, renderResponseMap: renderResponseMap}) {\n  return React.createElement(React.Fragment, null, Object.keys(chatInstance.writeableElements).map(key => {\n    const responseItem = renderResponseMap[key];\n    return responseItem ? React.createElement(WriteableElementsComponentPortal, {\n      key: key,\n      hostElement: chatInstance.writeableElements[key]\n    }, responseItem) : null;\n  }));\n}\n\nfunction WriteableElementsComponentPortal({hostElement: hostElement, children: children}) {\n  return ReactDOM.createPortal(children, hostElement);\n}\n\nconst WriteableElementsPortalsContainerExport = React.memo(WriteableElementsPortalsContainer);\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function AppContainer({config: config, onBeforeRender: onBeforeRender, onAfterRender: onAfterRender, renderUserDefinedResponse: renderUserDefinedResponse, renderWriteableElements: renderWriteableElements, container: container, setParentInstance: setParentInstance, element: element}) {\n  const [instance, setInstance] = useState(null);\n  const [renderProps, setRenderProps] = useState(null);\n  const [applicationStyles, setApplicationStyles] = useState(null);\n  const setInstances = instance => {\n    setInstance(instance);\n    setParentInstance?.(instance);\n  };\n  const [userDefinedResponseEventsBySlot, setUserDefinedResponseEventsBySlot] = useState({});\n  const managedWebChatRef = useRef(null);\n  const previousConfigRef = useRef(null);\n  useEffect(() => {\n    const previousConfig = previousConfigRef.current;\n    previousConfigRef.current = config;\n    async function render({serviceManager: serviceManager}) {\n      const applicationStyles = await loadStyles();\n      serviceManager.container = container;\n      if (serviceManager.customHostElement) {\n        container.style.setProperty(\"width\", \"100%\", \"important\");\n        container.style.setProperty(\"height\", \"100%\", \"important\");\n      } else {\n        container.style.setProperty(\"width\", \"0\", \"important\");\n        container.style.setProperty(\"height\", \"0\", \"important\");\n      }\n      setApplicationStyles(applicationStyles);\n      setRenderProps({\n        serviceManager: serviceManager\n      });\n      await sleep(0);\n    }\n    if (!isEqual(previousConfig, config)) {\n      const managedWebChat = {\n        instance: null,\n        shouldDestroy: false,\n        config: config\n      };\n      if (config) {\n        loadChat({\n          managedWebChatRef: managedWebChatRef,\n          managedWebChat: managedWebChat,\n          render: render,\n          setInstance: setInstances,\n          onBeforeRender: onBeforeRender,\n          onAfterRender: onAfterRender,\n          setUserDefinedResponseEventsBySlot: setUserDefinedResponseEventsBySlot,\n          element: element\n        });\n      }\n      return () => {\n        destroyWebChat(managedWebChat, setInstances);\n        previousConfigRef.current = null;\n      };\n    }\n    return undefined;\n  }, [ config, container ]);\n  if (renderProps && instance) {\n    return React.createElement(React.Fragment, null, React.createElement(App, {\n      serviceManager: renderProps.serviceManager,\n      hostElement: renderProps.serviceManager.customHostElement,\n      applicationStyles: applicationStyles\n    }), renderUserDefinedResponse && React.createElement(UserDefinedResponsePortalsContainerExport, {\n      chatInstance: instance,\n      renderUserDefinedResponse: renderUserDefinedResponse,\n      userDefinedResponseEventsBySlot: userDefinedResponseEventsBySlot\n    }), renderWriteableElements && React.createElement(WriteableElementsPortalsContainerExport, {\n      chatInstance: instance,\n      renderResponseMap: renderWriteableElements\n    }));\n  }\n  return null;\n}\n\nasync function destroyWebChat(managedWebChat, setInstance) {\n  if (managedWebChat) {\n    if (managedWebChat.instance) {\n      managedWebChat.instance.destroy();\n      await sleep(0);\n    }\n    managedWebChat.shouldDestroy = true;\n    managedWebChat.instance = null;\n  }\n  setInstance(null);\n  await sleep(0);\n}\n\nfunction addUserDefinedResponseHandler(webChatInstance, setUserDefinedResponseEventsBySlot) {\n  function userDefinedResponseHandler(event) {\n    setUserDefinedResponseEventsBySlot(userDefinedEventsBySlot => ({\n      ...userDefinedEventsBySlot,\n      [event.data.slot]: {\n        fullMessage: event.data.fullMessage,\n        messageItem: event.data.message,\n        element: event.data.element\n      }\n    }));\n  }\n  function userDefinedChunkHandler(event) {\n    if (\"complete_item\" in event.data.chunk) {\n      const messageItem = event.data.chunk.complete_item;\n      setUserDefinedResponseEventsBySlot(userDefinedEventsBySlot => ({\n        ...userDefinedEventsBySlot,\n        [event.data.slot]: {\n          messageItem: messageItem,\n          element: event.data.element\n        }\n      }));\n    } else if (\"partial_item\" in event.data.chunk) {\n      const itemChunk = event.data.chunk.partial_item;\n      setUserDefinedResponseEventsBySlot(userDefinedEventsBySlot => ({\n        ...userDefinedEventsBySlot,\n        [event.data.slot]: {\n          partialItems: [ ...userDefinedEventsBySlot[event.data.slot]?.partialItems || [], itemChunk ],\n          element: event.data.element\n        }\n      }));\n    }\n  }\n  function restartHandler() {\n    setUserDefinedResponseEventsBySlot({});\n  }\n  webChatInstance.on({\n    type: BusEventType.CHUNK_USER_DEFINED_RESPONSE,\n    handler: userDefinedChunkHandler\n  });\n  webChatInstance.on({\n    type: BusEventType.USER_DEFINED_RESPONSE,\n    handler: userDefinedResponseHandler\n  });\n  webChatInstance.on({\n    type: BusEventType.RESTART_CONVERSATION,\n    handler: restartHandler\n  });\n}\n\nasync function loadChat({managedWebChatRef: managedWebChatRef, managedWebChat: managedWebChat, render: render, setInstance: setInstance, onBeforeRender: onBeforeRender, onAfterRender: onAfterRender, setUserDefinedResponseEventsBySlot: setUserDefinedResponseEventsBySlot, element: element}) {\n  await destroyWebChat(managedWebChatRef.current, setInstance);\n  managedWebChatRef.current = managedWebChat;\n  if (managedWebChat.shouldDestroy) {\n    await destroyWebChat(managedWebChat, setInstance);\n    return;\n  }\n  const widget = await instantiateWidget(managedWebChat.config, () => Promise.resolve(Chat$1), Promise.resolve(render), element);\n  const instance = await widget.start();\n  addUserDefinedResponseHandler(instance, setUserDefinedResponseEventsBySlot);\n  onBeforeRender?.(instance);\n  await instance.render();\n  onAfterRender?.(instance);\n  setInstance(instance);\n  managedWebChat.instance = instance;\n  if (managedWebChat.shouldDestroy) {\n    await destroyWebChat(managedWebChat, setInstance);\n  }\n}\n\nconst AppContainerExport = React.memo(AppContainer);\n\nconst loadBaseStyles = async () => {\n  const {default: styles} = await import(\"./chat.export.js\");\n  return styles;\n};\n\nconst loadCarbon = async () => {\n  const {default: carbon} = await import(\"./chat.export.carbon.js\");\n  return carbon;\n};\n\nasync function loadStyles() {\n  const [styles, carbonStyles] = await Promise.all([ loadBaseStyles(), loadCarbon() ]);\n  return carbonStyles + styles;\n}\n\nexport { AppContainerExport as AppContainer };\n"],"names":["inputItemToLocalItem","message","originalUserText","id","uuid","UUIDType","LOCAL_MESSAGE","item","response_type","MessageResponseTypes","TEXT","input","ui_state","needsAnnouncement","fullMessageID","outputItemToLocalItem","messageItem","fullMessage","isLatestWelcomeNode","disableFadeAnimation","localMessage","streamItemID","ui_state_internal","from_history","isWelcomeResponse","createLocalMessageForInlineError","text","originalMessage","createMessageResponseForItem","createLocalMessageForItem","INLINE_ERROR","createLocalMessageItemsForNestedMessageItems","localMessageItem","fromHistory","nestedLocalMessageItems","allowFooter","isGridResponseType","gridLocalMessageItemIDs","rows","map","row","cells","cell","cellLocalMessageItemIDs","createLocalMessageItemsForNestedType","items","nestedMessageItem","isSupportedMessageItemInBody","isCarouselResponseType","itemsLocalMessageItemIDs","bodyItems","body","panel","bodyLocalMessageItemIDs","isShowPanelButtonType","footerItems","footer","footerLocalMessageItemIDs","rootMessageItem","isButtonResponseType","isSupportedMessageItemInFooter","type","nestedMessageItemIDs","isSupported","forEach","nestedLocalMessageItem","push","isResponseWithNestedItems","consoleError","CARD","isCardResponseType","isItemSupportedInResponseBody","CAROUSEL","BUTTON","button_type","ButtonItemType","SHOW_PANEL","GRID","HA_SET_HUMAN_AGENT_AVAILABILITY","HA_SET_IS_CONNECTING","HA_SET_IS_RECONNECTING","HA_SET_HUMAN_AGENT_JOINED","HA_SET_HUMAN_AGENT_LEFT_CHAT","HA_END_CHAT","HA_UPDATE_CAPABILITIES","HA_UPDATE_FILE_UPLOAD_IN_PROGRESS","HA_SET_SHOW_SCREEN_SHARE_REQUEST","HA_SET_IS_SCREEN_SHARING","HA_SET_PERSISTED_STATE","HA_UPDATE_IS_SUSPENDED","HA_UPDATE_IS_TYPING","setIsConnecting","isConnecting","localMessageID","setIsReconnecting","isReconnecting","setHumanAgentLeftChat","endChat","setAgentAvailability","availability","setHumanAgentJoined","responseUserProfile","updateCapabilities","capabilities","updateFilesUploadInProgress","fileUploadInProgress","setShowScreenShareRequest","showRequest","setIsScreenSharing","isSharing","setPersistedServiceDeskState","state","agentUpdateIsSuspended","isSuspended","agentUpdateIsTyping","isTyping","deepFreeze","object","Object","freeze","getOwnPropertyNames","prop","prototype","hasOwnProperty","call","isFrozen","resolvablePromise","resolveFunction","rejectFunction","promise","Promise","resolve","reject","doResolve","resolveValue","isResolved","isComplete","doReject","rejectValue","isRejected","HomeScreenHeader","props","ref","brandColor","onClose","onRestart","onCloseAndRestart","showRestartButton","useSelector","config","public","headerConfig","showBackButton","persistedToBrowserStorage","chatState","homeScreenState","showBackToBot","displayName","headerDisplayName","customMenuOptions","useAITheme","theme","headerRef","useRef","useImperativeHandle","current","hideCloseAndRestartButton","overflowClicked","useCallback","index","handler","overflowItems","option","React","className","HeaderExport","showCenter","onClickRestart","onClickClose","testIdPrefix","OverlayPanelName","HOME_SCREEN","HomeScreenHeaderExport","forwardRef","BasePanelComponent","children","isOpen","hidePanelHeader","labelBackButton","title","hideBackButton","onClickCloseAndRestart","headerProps","FocusTrap","active","focusTrapOptions","clickOutsideDeactivates","returnFocusOnDeactivate","IS_MOBILE","preventScroll","BasePanelComponentExport","withoutEmptyStarters","newConfig","starters","buttons","length","allow_return","filter","button","Boolean","label","trim","is_on","setIntl","serviceManager","locale","messages","intl","createIntl","store","dispatch","actions","setAppStateValue","createWriteableElementsProxy","elementSet","Set","get","target","element","has","add","Proxy","writeableElements","VERSION","NotificationType","BOUNCING_ANIMATION_TIMEOUTS","DEFAULT_LAUNCHER","mobile","time_to_expand","new_expand_time","time_to_reduce","notification_type","TEXT_NOTIFICATION","desktop","DEFAULT_CUSTOM_PANEL_CONFIG_OPTIONS","disableAnimation","DEFAULT_CUSTOM_PANEL_STATE","panelID","DEFAULT_CUSTOM_PANEL_ID","options","DEFAULT_IFRAME_PANEL_STATE","DEFAULT_CITATION_PANEL_STATE","citationItem","DEFAULT_TOUR_STATE","activeTourStepItems","DEFAULT_MESSAGE_PANEL_STATE","isMessageForInput","VIEW_STATE_ALL_CLOSED","launcher","mainWindow","tour","VIEW_STATE_LAUNCHER_OPEN","VIEW_STATE_MAIN_WINDOW_OPEN","DEFAULT_PERSISTED_TO_BROWSER","version","disclaimersAccepted","isHomeScreenOpen","hasSentNonWelcomeMessage","persistedTourState","activeTourID","activeTourCurrentStepIndex","humanAgentState","isConnected","responseUserProfiles","launcherState","wasLoadedFromBrowser","viewState","activeTour","showUnreadIndicator","mobileLauncherIsExtended","mobileLauncherWasReduced","mobileLauncherDisableBounce","desktopLauncherIsExpanded","desktopLauncherWasMinimized","bounceTurn","DEFAULT_CHAT_MESSAGES_STATE","localMessageIDs","messageIDs","isTypingCounter","isLoadingCounter","isHydratingCounter","isScrollAnchored","DEFAULT_MESSAGE_STATE","allMessageItemsByID","allMessagesByID","botMessageState","DEFAULT_HUMAN_AGENT_STATE","numUnreadMessages","showScreenShareRequest","isScreenSharing","isHumanAgentTyping","inputState","fieldVisible","isReadonly","files","allowFileUploads","allowMultipleFileUploads","allowedFileUploadTypes","stopStreamingButtonState","currentStreamID","isVisible","isDisabled","DEFAULT_THEME_STATE","carbonTheme","CarbonTheme","G10","corners","CornersType","ROUND","DEFAULT_LAYOUT_STATE","showFrame","hasContentMaxWidth","applyBotMessageState","newState","setHomeScreenOpenState","undefined","applyLocalMessageUIState","propertyName","propertyValue","oldMessage","applyFullMessage","white","gray100","MIN_CONTRAST","hexCodeToRGB","color","red","substring","blue","green","parseInt","calculateContrast","color1","color2","rgb1","rgb2","luminance1","calculateRelativeLuminance","luminance2","contrast","r8","g8","b8","rRGB","gRGB","bRGB","whiteOrBlackText","background","adjustLightness","token","shift","original","Color","hsl","l","round","hex","toLowerCase","CSS_VAR_PREFIX","HEXADECIMAL_REGEX","INTERNAL_OVERRIDES_LIGHT_THEME_MAP","INTERNAL_OVERRIDES_DARK_THEME_MAP","ACCENT_COLOR_MAPS","blue20","blue60","blue60Hover","blue80","g10","g90","g100","fillValues","styles","propertyNames","value","mergeCSSVariables","publicVars","whiteLabelVariables","internalOverrides","internalOverridesMap","WHITE","includes","G90","G100","createInternalCSSOverridesMap","result","entries","key","startsWith","match","console","warn","WA_CONSOLE_PREFIX","remoteVars","cssOverrides","primaryColor","secondaryColor","accentColor","useAccentColor","tryFocusColor","useFocusColor","colorMap","accentBlue20","accentBlue60Hover","accentBlue80","accentColorRGB","toString","accentColorBW","remoteStylesToCSSVars","getThemeClassNames","themeState","themeClassnames","CarbonThemeClassNames","validateViewState","appState","VALID_PUBLIC_VARS_IN_AI_THEME_SET","values","CSSVariable","UPDATE_CSS_VARS_AI_THEME_WARNING_MESSAGE","join","ChatActionsImpl","constructor","this","hydrating","restarting","alreadyHydrated","chunkQueue","hydrateChat","alternateWelcomeRequest","alternateWelcomeRequestSource","alternateOptions","fireReady","hydrationPromise","doHydrateChat","fire","BusEventType","CHAT_READY","history","debugLog","addIsHydratingCounter","historyService","loadHistory","humanAgentService","initialize","getState","hydrateMessageHistory","messageHistory","createElementsForUserDefinedResponses","latestPanelLocalMessageItem","openResponsePanel","homeScreenConfig","setHomeScreenIsOpen","messaging","skipWelcome","send","createWelcomeRequest","MessageSendSource","WELCOME_REQUEST","returnBeforeStreaming","chatWasHydrated","lastMessageID","arrayLastValue","lastMessage","lastOriginalMessage","isLiveHumanAgentMessage","isRequest","messageService","resendMessage","allowReconnect","serviceDesk","handleHydration","getPublicWebChatState","isConnectedWithHumanAgent","isWebChatOpen","isConnectingWithHumanAgent","isDebugEnabled","isEnableDebugLog","hasUserSentMessage","isTourActive","sendWithCatch","source","ignoreHydration","error","messageRequest","createMessageRequestForText","responsePanelState","setResponsePanelIsOpen","doSend","addDefaultsToMessage","silent","addMessage","addLocalMessageItem","setValueSelectedForMessageID","messageSetOptionSelected","cloneDeep","receive","requestMessage","requestOptions","restartCount","initialRestartCount","MESSAGE","preReceiveEvent","PRE_RECEIVE","data","updateHasSentNonWelcomeMessage","languagePack","isResponse","processMessageResponse","catch","inlineError","createMessageResponseForText","errors_singleMessage","thread_id","RECEIVE","removeMessages","insertHistory","scrollBottom","getMessagesScrollBottom","notes","currentAppStateMessages","newAppStateMessages","merge","doAutoScroll","scrollToBottom","receiveChunk","chunk","messageID","chunkPromise","processChunkQueue","isCompleteItem","isStreamCompleteItem","isPartialItem","isStreamPartialItem","isStopGeneratingVisible","botInputState","partial_item","streaming_metadata","cancellable","setStopStreamingButtonVisible","response_id","streamingStart","complete_item","streamingAddChunk","partial_response","message_options","keys","Error","streamingMergeMessageOptions","handleUserDefinedResponseItemsChunk","isStreamFinalResponse","final_response","setStopStreamingButtonDisabled","getOrCreateUserDefinedElement","messageItemID","userDefinedItem","userDefinedElementRegistry","document","createElement","slotName","setAttribute","set","handleUserDefinedResponseItems","renderAsUserDefinedMessage","user_defined","userDefinedResponseEvent","USER_DEFINED_RESPONSE","slot","createElementForNestedUserDefinedResponse","localMessageItemID","nestedLocalMessage","asyncForEach","itemID","CHUNK_USER_DEFINED_RESPONSE","output","generic","request_id","previousItemID","pause","isPause","agent","isConnectToHumanAgent","hasTourUserDefinedType","skipTourCard","skip_card","startTourReason","TourStartReason","START_TOUR_METHOD","SKIP_CARD","mainWindowCloseReason","MainWindowCloseReason","CALLED_START_TOUR","TOUR_SKIP_CARD","startTour","viewChangeReason","ViewChangeReason","addNestedMessages","addIsTypingCounter","partialMessage","hasServiceDesk","errorOccurred","errorType","OnErrorType","INTEGRATION_ERROR","setMessageUIStateInternalProperty","agent_no_service_desk","agentAvailability","checkAreAnyHumanAgentsOnline","agent_availability","shouldAutoRequestHumanAgent","skipConnectHumanAgentCard","HumanAgentsOnlineStatus","ONLINE","startChat","showIsTyping","sleep","time","setResponsePanelContent","insertLocalMessageResponse","updateLanguagePack","changes","addNotification","notification","removeNotification","groupID","removeNotifications","removeAllNotifications","updateCSSVariables","usePublicVars","variable","consoleWarn","allVariables","updateBotName","name","updateMainHeaderTitle","updateBotAvatarURL","url","updateHomeScreenConfig","updateLauncherConfig","launcherConfig","changeView","newView","reason","tryHydrating","forceViewChange","newViewState","constructViewState","isEqual","fireViewChangeEventsAndChangeView","isHydrated","viewChanging","setViewChanging","oldViewState","preViewChangeEvent","VIEW_PRE_CHANGE","cancelViewChange","setViewState","viewChangeEvent","VIEW_CHANGE","changeViewReason","setTourData","ViewType","TOUR","TOUR_START","TOUR_STEP","step","tourState","endTour","LAUNCHER","clearTourData","goToSpecificTourStep","stepId","newStepIndex","findIndex","stepItem","step_id","changeStepInTour","changeStepOptions","nextStep","previousStep","actualNewStepIndex","catastrophicErrorType","callOnError","additionalChatParameters","onError","restartConversation","skipHydration","endHumanAgentConversation","fireEvents","PRE_RESTART_CONVERSATION","currentState","MAIN_WINDOW","mainWindowOpenReason","MainWindowOpenReason","CALLED_RESTART_CONVERSATION","instance","updateAssistantInputFieldVisibility","cancelAllMessageRequests","RESTART_CONVERSATION","destroySession","keepOpenState","originalViewState","newPersistedToBrowserStorage","userSessionStorageService","clearLauncherSession","clearChatSession","agentEndConversation","endedByUser","HANDLER_NOT_FUNCTION","EventBus","handlersByType","Map","eventsTypesRunning","eventsRunningCount","busEvent","logEvent","JSON","stringify","handlersForType","handlersCopy","slice","delete","waitForEmptyPromise","fireSync","waitForEmpty","on","handlers","asArray","debugStackTrace","off","indexOf","removed","splice","once","onceHandler","event","logListeners","listeners","group","listener","consoleLog","groupEnd","clear","eventCopy","createCustomPanelInstance","customPanelInstance","open","setCustomPanelConfigOptions","setCustomPanelOpen","close","HistoryService","useHistory","publicConfig","resultData","customLoadHistory","historyNotes","async","allLocalMessagesByID","loadingState","allMessages","threadMessagesByThreadID","responsesByRequestID","relatedMessageByID","localMessagesByOriginalMessageID","lastThreadID","loadedHistory","latestTransferToHumanAgentResponse","note","historyItem","isEventRequest","timestamp","Date","getTime","THREAD_ID_MAIN","file_upload_status","FileStatusValue","UPLOADING","COMPLETE","error_state","MessageErrorState","FAILED","related_message_id","beginEvent","HISTORY_BEGIN","eventBus","HISTORY_END","notesToMessages","getResponseItems","thread","addMessageToThread","createLocalMessages","localMessagesByFullMessageID","toChatMessageState","createChatStates","mainThreadMessages","welcomeRequest","findLast","is_welcome_request","welcomeResponse","markIsLatestWelcomeNode","isOptionItem","relatedRequest","optionSelected","isDateResponseType","markSelectedOptions","notesToLoadedHistory","SESSION_HISTORY","MessageLoadingManager","start","onExceededMaxSilentLoading","onEnd","onTimeout","msMaxSilentLoading","msMaxAttempt","hasExceededMaxSilentLoading","onSilentLoading","setTimeout","onMaxAttempt","end","clearTimeout","MS_BETWEEN_RETRIES","RetryType","MessageService","pendingLocale","localeIsExplicit","messageLoadingManager","queue","waiting","timeoutOverride","messageTimeoutSecs","timeoutMS","processSuccess","received","isProcessed","isWelcomeNode","setMessageErrorState","NONE","message_type","MessageInputType","EVENT","now","trackData","lastRequestTime","timeLastRequest","totalRequestTime","timeFirstRequest","sendMessagePromise","moveToNextQueueItem","addErrorMessage","errorMessage","HYDRATE_RESEND","skipQueue","sendToAssistantAndUpdateErrorState","sendToAssistant","SILENT","VISIBLE","RETRYING","waitingMessage","WAITING","processError","pendingRequest","resultText","allowRetry","tryCount","isWelcome","msSinceStarted","isInAttemptWindow","numErrors","retryDelay","MESSAGE_COMMUNICATION","otherData","rejectFinalErrorOnMessage","customSendMessage","updateMessage","controller","AbortController","sendMessageController","signal","runQueueIfReady","clearCurrentQueueItem","getLastBotResponseWithContext","LOADING_INDICATOR_TIMER","messageLoadingIndicatorTimeoutSecs","addIsLoadingCounter","didExceedMaxLoading","cancelMessageRequestByID","PRE_SEND","updateLocalMessageItem","SEND","addToMessageQueue","newPendingMessage","errorState","messageToUpdate","announceMessageID","announceMessage","logError","lastResponse","abort","safeFetchTextWithTimeout","NamespaceService","namespace","originalName","attributeSafe","suffix","computedName","computeNamespaceName","getSuffix","ServiceManager","innerStorage","storage$1","getItem","setItem","removeItem","storage","IS_SESSION_STORAGE","window","sessionStorage","UserSessionStorageService","prefix","loadChatSession","chatSessionString","getChatSessionKey","chatSession","parse","loadLauncherSession","launcherSessionString","getLauncherSessionKey","launcherSession","persistChatSession","session","persistLauncherSession","replaceCurrentArrayValue","currentValue","newValue","Array","isArray","humanAgentReducers","action","activeLocalMessageID","serviceDeskState","newInputState","populateTourStepItems","tourMessageItem","find","steps","clearTourState","EXCLUDE_HUMAN_AGENT_UNREAD","HumanAgentMessageType","USER_ENDED_CHAT","CHAT_WAS_ENDED","RELOAD_WARNING","reducers","CHANGE_STATE","partialState","HYDRATE_CHAT","iFramePanelState","viewSourcePanelState","customPanelState","HYDRATE_MESSAGE_HISTORY","ADD_LOCAL_MESSAGE_ITEM","addAfterID","isSilent","currentIndex","existingID","newLocalMessageIDs","insertAtIndex","afterIDIndex","isBotMessage","agent_message_type","isMainWindowOpen","isBrowserPageVisible","REMOVE_MESSAGES","idsSet","newAllMessages","newAllMessageItems","newMessageIDs","newMessageItemsIDs","UPDATE_LOCAL_MESSAGE_ITEM","UPDATE_MESSAGE","ADD_MESSAGE","itemIDsInNewMessage","newAllMessageItemsByID","existingItemIDs","firstFoundIndex","isItemInMessage","itemIDsToInsert","MESSAGE_SET_OPTION_SELECTED","newMessagesByID","sentMessage","ADD_IS_TYPING_COUNTER","Math","max","addToIsTyping","ADD_IS_LOADING_COUNTER","addToIsLoading","ADD_IS_HYDRATING_COUNTER","addToIsHydrating","SET_APP_STATE_VALUE","UPDATE_PERSISTED_CHAT_STATE","UPDATE_HAS_SENT_NON_WELCOME_MESSAGE","SET_VIEW_STATE","previousState","handleViewStateChange","SET_VIEW_CHANGING","SET_INITIAL_VIEW_CHANGE_COMPLETE","initialViewChangeComplete","changeComplete","UPDATE_BOT_NAME","botName","UPDATE_BOT_AVATAR_URL","botAvatarURL","UPDATE_LAUNCHER_AVATAR_URL","avatar_url_override","UPDATE_MAIN_HEADER_TITLE","UPDATE_CSS_VARIABLES","variables","cssVariableOverrides","UPDATE_HOME_SCREEN_CONFIG","newHomeScreenConfig","mergeWith","SET_MESSAGE_UI_PROPERTY","SET_MESSAGE_RESPONSE_HISTORY_PROPERTY","SET_MESSAGE_UI_STATE_INTERNAL_PROPERTY","MERGE_HISTORY_ITEM","ANNOUNCE_MESSAGE","ACCEPTED_DISCLAIMER","location","hostname","SET_HOME_SCREEN_IS_OPEN","TOGGLE_HOME_SCREEN","UPDATE_LAUNCHER_CONFIG","SET_LAUNCHER_PROPERTY","SET_LAUNCHER_CONFIG_PROPERTY","launcherType","LauncherType","DESKTOP","MOBILE","SET_CHAT_MESSAGES_PROPERTY","SET_LAUNCHER_MINIMIZED","OPEN_IFRAME_CONTENT","CLOSE_IFRAME_PANEL","SET_CONVERSATIONAL_SEARCH_CITATION_PANEL_IS_OPEN","relatedSearchResult","SET_CUSTOM_PANEL_OPEN","SET_CUSTOM_PANEL_OPTIONS","SET_TOUR_DATA","newActiveTourMessageID","CLEAR_TOUR_DATA","CHANGE_STEP_IN_TOUR","min","newStepNumber","UPDATE_INPUT_STATE","applyInputState","getInputState","isInputToHumanAgent","SET_IS_BROWSER_PAGE_VISIBLE","ADD_INPUT_FILE","file","currentInputState","REMOVE_INPUT_FILE","fileID","newUploads","REMOVE_LOCAL_MESSAGE_ITEM","ADD_NOTIFICATION","notificationID","notifications","concat","REMOVE_NOTIFICATIONS","REMOVE_ALL_NOTIFICATIONS","CLEAR_INPUT_FILES","FILE_UPLOAD_INPUT_ERROR","currentInputSate","isError","status","ADD_NESTED_MESSAGES","localMessageItems","SET_RESPONSE_PANEL_IS_OPEN","SET_RESPONSE_PANEL_CONTENT","STREAMING_START","STREAMING_MERGE_MESSAGE_OPTIONS","existingMessage","newMessage","STREAMING_ADD_CHUNK","chunkItem","localItemID","existingLocalMessageItem","newItem","updatedItem","isIntermediateStreaming","streamingState","chunks","isDone","newChunks","UPDATE_CHAT_HEADER_CONFIG","chatHeaderConfig","chatHeaderState","UPDATE_MAX_VISIBLE_HEADER_OBJECTS","maxTotal","maxVisibleHeaderObjects","SET_STOP_STREAMING_BUTTON_VISIBLE","SET_STOP_STREAMING_BUTTON_DISABLED","SET_STREAM_ID","UPDATE_MAIN_HEADER_AVATAR","headerAvatarConfig","getThemeCornersType","getLayoutState","IS_PHONE","themeConfig","SQUARE","layout","reducerFunction","assign","DEFAULT_PUBLIC_CONFIG","openChatByDefault","showLauncher","shouldTakeFocusIfOpensAutomatically","dayjs","LocalizedFormat","Chat$1","publicConfigProvided","customHostElement","additionalChatParametersProvided","debug","consoleDebug","appConfig","startInternal","doesHaveServiceDesk","getBotName","initialState","chatWidthBreakpoint","chatWidth","chatHeight","enLanguagePack","originalConfig","suspendScrollDetection","isDestroyed","targetViewState","showNonHeaderBackgroundCover","sessionStorageLauncherState","enhancer","__REDUX_DEVTOOLS_EXTENSION__","instanceId","createStore","doCreateStore","subscribe","previousPersistedToBrowserStorage","copyToSessionStorage","disableWindowTitleChanges","originalTitle","changeTitleTimer","agent_newMessage","createHandleWindowTitle","customPanelManager","serviceManger","panels","getPanel","createCustomPanelManager","WriteableElementName","AI_TOOLTIP_AFTER_DESCRIPTION_ELEMENT","WELCOME_NODE_BEFORE_ELEMENT","HEADER_BOTTOM_ELEMENT","BEFORE_INPUT_ELEMENT","HOME_SCREEN_HEADER_BOTTOM_ELEMENT","HOME_SCREEN_AFTER_STARTERS_ELEMENT","HOME_SCREEN_BEFORE_INPUT_ELEMENT","CUSTOM_PANEL_ELEMENT","setEnableDebugLog","debugStackTraces","setEnableDebugStackTracesLog","createServiceManager","localePack","render","createHumanAgentService","all","loadLanguagePack","loadLocale","loadHAA","reallyRenderAndReturnInstance","OPEN_BY_DEFAULT","WEB_CHAT_LOADED","setInitialViewChangeComplete","callRender","wasRendered","newPack","updateLocale","newLocale","localePromise","languagePackPromise","then","selectInputState","INSTANCE_SEND","destroy","container","remove","updateInputState","updateInputIsDisabled","updateBotUnreadIndicatorVisibility","setLauncherProperty","issueWithNewView","viewTypeValues","CALLED_CHANGE_VIEW","homeScreenConfigClone","scrollToMessage","animate","doScrollToMessage","customPanels","updateCustomMenuOptions","updateIsTypingCounter","direction","updateIsLoadingCounter","updateIsChatLoadingCounter","updateHeaderConfig","configCopy","updateChatHeaderConfig","updateMainHeaderAvatar","elements","getMainWindow","addClassName","removeClassName","getMessageInput","getHTMLElement","setValue","setEnableEnterKey","addChangeListener","removeChangeListener","getHomeScreenInput","tours","CALLED_END_TOUR","goToNextStep","goToStep","addMessageChunk","clearConversation","requestFocus","appWindow","endConversation","updateIsSuspended","createChatInstance","renderAndReturnInstance","renderPromise","AriaAnnouncerProvider","useIntl","useServiceManager","announcerRef","announcerFunction","announceValue","previousAnnounceMessageRef","useEffect","currentAnnounceMessage","AriaAnnouncerContext","Provider","AriaAnnouncerComponent","getLauncherButtonAriaLabel","isLauncherHidden","launcher_isTourOpen","launcher_isTourClosed","launcher_isOpen","launcher_isClosed","Launcher","onToggleOpen","unreadHumanAgentCount","tabIndex","launcherHidden","launcherAvatarURL","buttonRef","doFocusRef","ariaLabel","formatMessage","count","launcherAvatar","AiLaunch","size","ChatLaunch","src","alt","cx","Button","WACLauncher__TourButton","PageObjectId","kind","ButtonKindEnum","PRIMARY","onClick","ArrowUpLeft","LauncherExport","LauncherComplex","launcherComplexRef","launcherRef","onOpen","onMinimize","launcher_desktopGreeting","launcher_closeButton","launcher_ariaIsExpanded","disabled","WACLauncherComplex__Text","Tag","Close","LauncherDesktopContainer","onDoToggle","useLanguagePack","browserLauncherState","isExpandedLauncherEnabled","smallLauncherClassName","setSmallLauncherClassName","useState","complexLauncherClassName","setComplexLauncherClassName","launcherHiddenRef","animateOnceVisible","bounceTurnRef","animationStartTimerRef","animationFinishedTimerRef","firstBounceAnimationStartTimerRef","firstBounceAnimationFinishedTimerRef","secondBounceAnimationStartTimerRef","secondBounceAnimationFinishedTimerRef","determineLauncherHeight","expandedLauncherHeight","offsetHeight","style","setProperty","startExpandLauncher","setExpandAnimationTimers","clearExpandAnimationTimers","startBounceAnimation","finishBounceAnimation","setBounceAnimationTimers","clearBounceAnimationTimers","setDefaultLauncherState","setLauncherMinimized","useOnMount","setLauncherConfigProperty","prevLauncherTitle","usePrevious","animateWithClass","endAnimationNameOrDelay","endAnimationCallback","classList","animationName","removeEventListener","addEventListener","LauncherExtended","isExtended","playExtendAnimation","onSwipeRight","onReduceEnd","ariaAnnouncer","useAriaAnnouncer","animateExtendedState","setAnimateExtendedState","showGreetingMessage","setShowGreetingMessage","prevIsExtended","extendedContainerRef","greetingMessageRef","textHolderRef","touchStartRef","touchStartX","touchStartY","shouldReduceExtendedLauncher","extendWithAnimation","extendWithoutAnimation","launcherGreetingMessage","launcher_mobileGreeting","launcherContainerElement","textHolderEl","greetingMessageEl","extendedContainerEl","maxTextHolderWidth","launcherPosition","width","height","screen","extendedWidth","getMaxLauncherExtendedWidth","clientWidth","querySelector","launcherExtendedWidth","removeAttribute","calculateAndSetMaxExtendedLauncherWidth","doFadeAnimationForElements","fadeInElement","fadeInTime","buttonEl","handleTouchMove","touchList","touchStartCoordinates","callback","clientX","touchEndX","clientY","touchEndY","differenceX","differenceY","abs","checkIfUserSwipedRight","touches","handleTouchStart","touchStart","reduceAnimationEndListener","fadeOutElement","GHOST","LauncherExtendedExport","LauncherMobileContainer","wasReduced","disableBounce","isStartingBounceAnimation","setIsStartingBounceAnimation","prevWasReduced","initialBounceTurn","previouslyPlayedExtendAnimation","extendLauncherTimeoutIDRef","reduceLauncherTimeoutIDRef","endBounceAnimationRef","shouldBounceRef","isExtending","disableIntroAnimation","setLauncherStateAsReduced","reduceLauncher","extendLauncherTimeoutID","reduceLauncherTimeoutID","clearTimeouts","setExpandAnimationTimeout","endBounceAnimation","startRecurringBounceAnimation","turnCounter","animation","timeouts","startingIndex","beforeAll","afterAll","beforeEach","afterEach","terminate","timeoutID","playAnimation","setAnimationListener","replayAnimation","setAnimationTimeouts","handleToggleOpen","handleSwipeRight","LauncherContainer","LAUNCHER_CLICKED","launcherContainer","effect","deps","hasRunRef","useEffectDidUpdate","HydrationPanel","useHomeScreenVersion","isHidden","useContext","HideComponentContext","header","BotHeaderExport","onToggleHomeScreen","includeWriteableElement","HYDRATING","MountChildrenOnDelay","delay","AnnounceOnMountComponentExport","announceOnce","window_ariaWindowLoading","Loading","withOverlay","CustomPanel","onPanelOpenEnd","onPanelCloseEnd","onPanelOpenStart","onPanelCloseStart","disableDefaultCloseAction","onClickBack","prevIsOpen","openAnimation","AnimationInType","SLIDE_IN_FROM_BOTTOM","closeAnimation","AnimationOutType","SLIDE_OUT_TO_BOTTOM","onClickBackLocal","onClickCloseLocal","checkAllowClose","onCloseAndRestartLocal","OverlayPanel","onOpenStart","CUSTOM_PANEL_PRE_OPEN","onOpenEnd","CUSTOM_PANEL_OPEN","onCloseStart","CUSTOM_PANEL_PRE_CLOSE","onCloseEnd","CUSTOM_PANEL_CLOSE","animationOnOpen","animationOnClose","shouldOpen","overlayPanelName","CUSTOM","eventName","eventDescription","general_returnToAssistant","hideCloseButton","WriteableElement","CustomPanelExport","Chat","lazyChat","CatastrophicError","lazyCatastrophicError","Disclaimer","lazyDisclaimer","HomeScreenContainer","lazyHomeScreenContainer","IFramePanel","lazyIFramePanel","ViewSourcePanel","lazyViewSourcePanel","BodyAndFooterPanelComponent","lazyBodyAndFooterPanelComponent","WIDTH_BREAKPOINT_STANDARD","WIDTH_BREAKPOINT_NARROW","WIDTH_BREAKPOINT_WIDE","MainWindow","Component","super","arguments","closing","modalPortalHostElement","numPanelsOpen","numPanelsAnimating","numPanelsCovering","isHydrationAnimationComplete","shouldAutoFocus","extraClassNames","areModulesLoaded","mainWindowRef","containerRef","botChatRef","homeScreenInputRef","disclaimerRef","brandingRef","animationContainerRef","iframePanelRef","viewSourcePanelRef","previousBodyVisibility","previousBodyPosition","onResize","appChatWidthBreakpoint","offsetWidth","ChatWidthBreakpoint","WIDE","STANDARD","NARROW","onVisualViewportResize","updateFromVisualViewport","visualViewport","offsetTop","offsetLeft","setModalPortalHostElement","setState","onSendInput","selectIsInputToHumanAgent","sendMessageToAgent","clearInputFiles","onSendHomeButtonInput","createMessageRequestForChoice","HOME_SCREEN_STARTER","removeChatFromDom","doClose","toggleHomeScreen","getShowDisclaimer","getShowHomeScreen","takeFocus","requestInputFocus","onUserTyping","userTyping","onAcceptDisclaimer","acceptDisclaimer","coverBackground","prevState","onHydrationPanelClose","componentDidMount","mainWindowObserver","ResizeObserver","observe","disableCustomElementMobileEnhancements","updateBody","SCROLLBAR_WIDTH","loadPanels","componentWillUnmount","unobserve","componentDidUpdate","oldProps","oldState","newProps","useCustomHostElement","prevViewState","requestAnimationFrame","newLastItemID","lastMessageItem","componentDidCatch","errorInfo","createDidCatchErrorData","preload","unmounting","IS_IOS","getPropertyValue","fromCloseAndRestart","MAIN_WINDOW_CLOSED_AND_RESTARTED","DEFAULT_MINIMIZE","disclaimer","addClassNameToState","removeClassNameFromState","renderChat","showCovering","renderCustomPanel","renderHydrationPanel","renderDisclaimerPanel","renderResponsePanel","renderHomeScreenPanel","renderIFramePanel","renderViewSourcePanel","renderBotChat","headerAvatar","agentDisplayState","selectHumanAgentDisplayState","showDisclaimer","hideBotContainer","HideComponent","hidden","Suspense","fallback","messageState","MESSAGE_INPUT","renderInnerHydrationPanel","shouldHide","renderCatastrophicPanel","CATASTROPHIC","showHeader","FADE_IN","FADE_OUT","DISCLAIMER","disclaimerHTML","disclaimerAcceptButtonRef","showHomeScreen","onSendBotInput","HOME_SCREEN_INPUT","onSendButtonInput","IFRAME","CONVERSATIONAL_SEARCH_CITATION","panelOptions","PANEL_RESPONSE","showAnimations","show_animations","renderMessageComponent","childProps","MessageTypeComponent","renderWidget","localeClassName","showGlass","enableFocusTrap","hideMinimizeButton","trapActive","isWideWidth","VisuallyHidden","window_title","onScroll","scrollTop","ModalPortalRootContext","MainWindow$1","connect","TourContainerLazy","lazyTourComponent","App","hostElement","applicationStyles","fontStyles","combinedStyles","AppContainer$1","useDispatch","windowSize","setWindowSize","innerWidth","innerHeight","cssVariableOverrideString","useMemo","cssVariables","cssVariablesString","allValues","replace","convertCSSVariablesToString","dir","windowListener","visibilityListener","setIsBrowserPageVisible","visibilityState","node","nonce","cspNonce","IS_PHONE_IN_PORTRAIT_MODE","WindowSizeContext","ServiceManagerContext","RawIntlProvider","LanguagePackContext","MainContainer","tourContainerRef","showTour","showedTourOnce","languageKey","regionLabel","role","UserDefinedResponsePortalsContainer","chatInstance","renderUserDefinedResponse","userDefinedResponseEventsBySlot","slotState","UserDefinedResponseComponentPortal","ReactDOM","UserDefinedResponsePortalsContainerExport","WriteableElementsPortalsContainer","renderResponseMap","responseItem","WriteableElementsComponentPortal","WriteableElementsPortalsContainerExport","AppContainer","onBeforeRender","onAfterRender","renderWriteableElements","setParentInstance","setInstance","renderProps","setRenderProps","setApplicationStyles","setInstances","setUserDefinedResponseEventsBySlot","managedWebChatRef","previousConfigRef","previousConfig","managedWebChat","shouldDestroy","destroyWebChat","widget","pagePublicConfig","chatConstructorPromise","protocol","compatMode","instantiateWidget","webChatInstance","userDefinedEventsBySlot","itemChunk","partialItems","addUserDefinedResponseHandler","loadChat","carbonStyles","loadBaseStyles","loadCarbon","loadStyles","AppContainerExport","default","carbon"],"sourceRoot":""}