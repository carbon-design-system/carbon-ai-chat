{"version":3,"file":"7640.bundle.js","mappings":";yQASI,SAASA,EAAcC,GACzB,OAAQA,GAAmB,SAAVA,CACnB,CAWA,SAASC,EAA2BC,GAClC,IAAIC,EACJ,GAAID,EACF,IAYE,OAVEC,EADkB,iBAATD,EACC,WAAWE,KAAKC,UAAUH,EAAM,KAAM,eACvB,iBAATA,EAfxB,SAAsBA,GACpB,IACEE,KAAKE,MAAMJ,EACb,CAAE,MAAOK,GACP,OAAO,CACT,CACA,OAAO,CACT,CASYC,CAAaN,GACL,WAAWE,KAAKC,UAAUD,KAAKE,MAAMJ,GAAO,KAAM,eAElDA,EAGFO,OAAOP,GAEZC,CACT,CAAE,MAAOI,IACPG,EAAAA,EAAAA,IAAa,4BAA6BH,EAC5C,CAGJ,CAEA,SAASI,EAAsCC,GAC7C,MAAe,SAARA,EAAiB,KAAOA,CACjC,CAEA,SAASC,EAA6CD,GACpD,GAAmB,iBAARA,GAAoBA,EAAIE,WAAW,OAASF,EAAIG,SAAS,MAClE,KACGH,GAAOR,KAAKE,MAAMM,EACrB,CAAE,MAAOI,GAAQ,CAEnB,OAAOJ,CACT,C,oJC7CI,SAASK,GAAyCC,oBAAqBA,EAAqBC,aAAcA,IAC5G,MAAMC,EAAgB,GACtB,IAAIC,EACAC,EAQJ,GAPIJ,GAAqBK,OAEvBF,GAD6BR,EAAAA,EAAAA,KAA6CF,EAAAA,EAAAA,IAAsCO,EAAoBK,OAChGC,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,KAEvEL,GAAcM,OAChBH,GAAiBT,EAAAA,EAAAA,KAA6CF,EAAAA,EAAAA,IAAsCQ,EAAaM,QAE/GJ,GAAgBC,EAAgB,CAClC,MAAMI,EAAkBL,EAAaM,QAAQL,IACpB,IAArBI,IACFN,EAAcQ,KAAKC,EAAAA,cAAoB,OAAQ,CAC7CC,IAAK,GACJT,EAAaU,UAAU,EAAGL,KAC7BN,EAAcQ,KAAKC,EAAAA,cAAoB,KAAM,CAC3CC,IAAK,EACLE,UAAW,kBACVX,EAAaU,UAAUL,EAAiBA,EAAkBJ,EAAeW,UAC5Eb,EAAcQ,KAAKC,EAAAA,cAAoB,OAAQ,CAC7CC,IAAK,GACJT,EAAaU,UAAUL,EAAkBJ,EAAeW,UAE/D,CACA,OAAIb,EAAca,OACTb,EAELC,EAAaY,OACR,CAAEJ,EAAAA,cAAoB,OAAQ,CACnCC,IAAK,iBACJT,IAEE,CAAEQ,EAAAA,cAAoB,OAAQ,CACnCC,IAAK,mBACJR,GACL,CAEA,MAAMY,EAAgDL,EAAAA,KAAWZ,GC7B7D,SAASkB,EAAgBC,EAAOC,GAClC,MAAMC,GAAeC,EAAAA,EAAAA,MACdC,MAAOA,IAASC,EAAAA,EAAAA,MAChBC,OAAQA,EAAQvB,aAAcA,EAAcD,oBAAqBA,IAAuByB,EAAAA,EAAAA,IAAYC,GAASA,EAAMC,sBAC1H,IAAI1C,EAWJ,OAVIgB,IAEAhB,EADEe,EACQW,EAAAA,cAAoBK,EAA+C,CAC3EhB,oBAAqBA,EACrBC,aAAcA,IAGNA,EAAaM,MAGpBI,EAAAA,cAAoBiB,EAAAA,EAA0B,IAChDV,EACHC,IAAKA,EACLL,UAAW,qBACXU,OAAQA,EACRK,YAAaA,IAAMP,EAAMQ,SAASC,EAAAA,GAAQC,0BAAyB,IACnEC,MAAOhC,GAAcgC,MACrBC,gBAAiBd,EAAae,oCAC9BC,UAAW,+BACXC,iBAAkB,+CACjB1B,EAAAA,cAAoB,MAAO,CAC5BG,UAAW,+BACV7B,GACL,CAEA,MAAMqD,GAAwBC,EAAAA,EAAAA,YAAWtB,E","sources":["webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/utils/lang/stringUtils.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/SearchResultBody.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/citations/ViewSourcePanel.js"],"sourcesContent":["import { consoleError } from \"../miscUtils.js\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function isEmptyString(value) {\n  return !value || value === \"null\";\n}\n\nfunction isJsonString(data) {\n  try {\n    JSON.parse(data);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\nfunction parseUnknownDataToMarkdown(data) {\n  let content;\n  if (data) {\n    try {\n      if (typeof data === \"object\") {\n        content = `\\`\\`\\`\\n${JSON.stringify(data, null, 2)}\\n\\`\\`\\`\\n`;\n      } else if (typeof data === \"string\") {\n        if (isJsonString(data)) {\n          content = `\\`\\`\\`\\n${JSON.stringify(JSON.parse(data), null, 2)}\\n\\`\\`\\`\\n`;\n        } else {\n          content = data;\n        }\n      } else {\n        content = String(data);\n      }\n      return content;\n    } catch (e) {\n      consoleError(\"Cannot parse step content\", e);\n    }\n  }\n  return undefined;\n}\n\nfunction convertToEmptyStringIfStringifiedNull(str) {\n  return str === \"null\" ? null : str;\n}\n\nfunction convertPossibleStringifiedArrayToFirstString(str) {\n  if (typeof str === \"string\" && str.startsWith('[\"') && str.endsWith('\"]')) {\n    try {\n      [str] = JSON.parse(str);\n    } catch (error) {}\n  }\n  return str;\n}\n\nexport { convertPossibleStringifiedArrayToFirstString, convertToEmptyStringIfStringifiedNull, isEmptyString, parseUnknownDataToMarkdown };\n","import React from \"react\";\n\nimport { convertPossibleStringifiedArrayToFirstString, convertToEmptyStringIfStringifiedNull } from \"../../../utils/lang/stringUtils.js\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function SearchResultBodyWithCitationHighlighted({relatedSearchResult: relatedSearchResult, citationItem: citationItem}) {\n  const elementsArray = [];\n  let searchString;\n  let citationString;\n  if (relatedSearchResult?.body) {\n    const searchStringFromBody = convertPossibleStringifiedArrayToFirstString(convertToEmptyStringIfStringifiedNull(relatedSearchResult.body));\n    searchString = searchStringFromBody.replace(\"<em>\", \"\").replace(\"</em>\", \"\");\n  }\n  if (citationItem?.text) {\n    citationString = convertPossibleStringifiedArrayToFirstString(convertToEmptyStringIfStringifiedNull(citationItem.text));\n  }\n  if (searchString && citationString) {\n    const startOfCitation = searchString.indexOf(citationString);\n    if (startOfCitation !== -1) {\n      elementsArray.push(React.createElement(\"span\", {\n        key: 1\n      }, searchString.substring(0, startOfCitation)));\n      elementsArray.push(React.createElement(\"em\", {\n        key: 2,\n        className: \"WAC__highlight\"\n      }, searchString.substring(startOfCitation, startOfCitation + citationString.length)));\n      elementsArray.push(React.createElement(\"span\", {\n        key: 3\n      }, searchString.substring(startOfCitation + citationString.length)));\n    }\n  }\n  if (elementsArray.length) {\n    return elementsArray;\n  }\n  if (searchString.length) {\n    return [ React.createElement(\"span\", {\n      key: \"search-string\"\n    }, searchString) ];\n  }\n  return [ React.createElement(\"span\", {\n    key: \"citation-string\"\n  }, citationString) ];\n}\n\nconst SearchResultBodyWithCitationHighlightedExport = React.memo(SearchResultBodyWithCitationHighlighted);\n\nexport { SearchResultBodyWithCitationHighlightedExport as SearchResultBodyWithCitationHighlighted };\n","import React, { forwardRef } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { useLanguagePack } from \"../../../../hooks/useLanguagePack.js\";\n\nimport { useServiceManager } from \"../../../../hooks/useServiceManager.js\";\n\nimport actions from \"../../../../store/actions.js\";\n\nimport { BasePanelComponent as BasePanelComponentExport } from \"../../../BasePanelComponent.js\";\n\nimport { SearchResultBodyWithCitationHighlighted as SearchResultBodyWithCitationHighlightedExport } from \"../SearchResultBody.js\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function ViewSourcePanel(props, ref) {\n  const languagePack = useLanguagePack();\n  const {store: store} = useServiceManager();\n  const {isOpen: isOpen, citationItem: citationItem, relatedSearchResult: relatedSearchResult} = useSelector(state => state.viewSourcePanelState);\n  let content;\n  if (citationItem) {\n    if (relatedSearchResult) {\n      content = React.createElement(SearchResultBodyWithCitationHighlightedExport, {\n        relatedSearchResult: relatedSearchResult,\n        citationItem: citationItem\n      });\n    } else {\n      content = citationItem.text;\n    }\n  }\n  return React.createElement(BasePanelComponentExport, {\n    ...props,\n    ref: ref,\n    className: \"WACViewSourcePanel\",\n    isOpen: isOpen,\n    onClickBack: () => store.dispatch(actions.setViewSourcePanelIsOpen(false)),\n    title: citationItem?.title,\n    labelBackButton: languagePack.general_ariaCloseInformationOverlay,\n    eventName: \"Search citation panel opened\",\n    eventDescription: \"A user has opened the search citation panel\"\n  }, React.createElement(\"div\", {\n    className: \"WACViewSourcePanel__Content\"\n  }, content));\n}\n\nconst ViewSourcePanelExport = forwardRef(ViewSourcePanel);\n\nexport { ViewSourcePanelExport as ViewSourcePanel };\n"],"names":["isEmptyString","value","parseUnknownDataToMarkdown","data","content","JSON","stringify","parse","e","isJsonString","String","consoleError","convertToEmptyStringIfStringifiedNull","str","convertPossibleStringifiedArrayToFirstString","startsWith","endsWith","error","SearchResultBodyWithCitationHighlighted","relatedSearchResult","citationItem","elementsArray","searchString","citationString","body","replace","text","startOfCitation","indexOf","push","React","key","substring","className","length","SearchResultBodyWithCitationHighlightedExport","ViewSourcePanel","props","ref","languagePack","useLanguagePack","store","useServiceManager","isOpen","useSelector","state","viewSourcePanelState","BasePanelComponentExport","onClickBack","dispatch","actions","setViewSourcePanelIsOpen","title","labelBackButton","general_ariaCloseInformationOverlay","eventName","eventDescription","ViewSourcePanelExport","forwardRef"],"sourceRoot":""}