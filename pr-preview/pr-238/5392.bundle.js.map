{"version":3,"file":"5392.bundle.js","mappings":"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","sources":["webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/ErrorIcon.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/error/InlineError.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/image/Image.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/MediaPlayer.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/TextHolderTile.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/video/VideoComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/hooks/useCSSCustomProperties.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/react/carbon/InlineNotification.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/tour/TourCloseMinimizeComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/tour/TourControlsComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/tour/TourStepContentComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/tour/TourStepSkeletonComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/tour/TourContainer.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/SkeletonPicker.js"],"sourcesContent":["import ErrorFilled from '@carbon/icons-react/es/ErrorFilled.js';\nimport cx from 'classnames';\nimport React from 'react';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction ErrorIcon(props) {\n    return React.createElement(ErrorFilled, { className: cx(\"WACErrorIcon\", props.className) });\n}\n\nexport { ErrorIcon };\n","import React from 'react';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { ErrorIcon } from '../../ErrorIcon.js';\nimport { RichText as RichTextExport } from '../util/RichText.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction InlineError({ text }) {\n    const languagePack = useLanguagePack();\n    return (React.createElement(\"div\", { className: \"WAC__inlineError\" },\n        React.createElement(\"div\", { className: \"WAC__inlineError--iconHolder\" },\n            React.createElement(ErrorIcon, { className: \"WAC__inlineError--icon\" })),\n        React.createElement(\"div\", { className: \"WAC__inlineError--text\" },\n            React.createElement(RichTextExport, { shouldRemoveHTMLBeforeMarkdownConversion: true, text: text || languagePack.errors_generalContent }))));\n}\n\nexport { InlineError, InlineError as default };\n","import { Tile, unstable__AiSkeletonPlaceholder, SkeletonPlaceholder } from '@carbon/react';\nimport cx from 'classnames';\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useAriaAnnouncer } from '../../../hooks/useAriaAnnouncer.js';\nimport { getURLHostName } from '../../../utils/browserUtils.js';\nimport { RESPONSE_TYPE_TIMEOUT_MS } from '../../../utils/constants.js';\nimport { InlineError } from '../error/InlineError.js';\nimport { TextHolderTile } from '../util/TextHolderTile.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction Image(props) {\n    const { imageError, title, description, displayURL, hideIconAndTitle, needsAnnouncement, renderIcon, inline, } = props;\n    const ariaAnnouncer = useAriaAnnouncer();\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const rootRef = useRef();\n    // This ref is for merely saving the initial value of shouldAnnounce prop.\n    const needsAnnouncementRef = useRef(needsAnnouncement);\n    const hasText = Boolean(title || description || displayURL);\n    const Icon = renderIcon;\n    // This effect announces the contents of this response type once the image has loaded.\n    useEffect(() => {\n        if (isLoaded && needsAnnouncementRef.current) {\n            ariaAnnouncer(rootRef.current);\n        }\n    }, [ariaAnnouncer, isLoaded]);\n    if (isError) {\n        return React.createElement(InlineError, { text: imageError });\n    }\n    if (inline) {\n        return (React.createElement(ImageOnly, { ...props, setIsError: setIsError, setIsLoaded: setIsLoaded, isError: isError, isLoaded: isLoaded }));\n    }\n    return (React.createElement(Tile, { ref: rootRef, className: cx(\"WACImage\", {\n            WACImage__TextAndIcon: hasText && Boolean(renderIcon),\n            WACImage__IconOnly: !hideIconAndTitle && !title && !description && Boolean(renderIcon),\n        }) },\n        React.createElement(\"div\", { className: \"WACImage__ImageWrapper\" },\n            React.createElement(ImageOnly, { ...props, setIsError: setIsError, setIsLoaded: setIsLoaded, isError: isError, isLoaded: isLoaded })),\n        hasText && (React.createElement(TextHolderTile, { title: title, description: description, displayURL: displayURL, urlHostName: displayURL && getURLHostName(displayURL), hideTitle: hideIconAndTitle })),\n        Boolean(Icon) && (React.createElement(Icon, { className: cx(\"WACImage__Icon\", \"WACDirectionHasReversibleSVG\", {\n                \"WACImage__Icon--link\": displayURL,\n            }) }))));\n}\nfunction ImageOnly({ source, title, description, altText, displayURL, preventInlineError, onImageLoad, useAITheme, isLoaded, isError, setIsLoaded, setIsError, className, inline, }) {\n    const [isImageHidden, setIsImageHidden] = useState(false);\n    const imageAlt = altText || title || description || \"\";\n    const hasText = Boolean(title || description || displayURL);\n    /**\n     * Upon an error, update the error loading flag in order to render an inline error.\n     */\n    const handleError = useCallback(() => {\n        if (preventInlineError && hasText) {\n            setIsImageHidden(true);\n        }\n        else {\n            setIsError(true);\n        }\n    }, [preventInlineError, hasText, setIsError]);\n    // This effect sets a timeout that auto error handles after 10 seconds of waiting for the image to load. Once the\n    // image has loaded, the skeleton will be hidden, and we can clear the timeout.\n    useEffect(() => {\n        let errorTimeout = null;\n        if (!isLoaded) {\n            errorTimeout = setTimeout(handleError, RESPONSE_TYPE_TIMEOUT_MS);\n        }\n        return () => {\n            clearTimeout(errorTimeout);\n        };\n    }, [isLoaded, handleError]);\n    return (React.createElement(React.Fragment, null,\n        !isLoaded &&\n            !isImageHidden &&\n            !inline &&\n            source &&\n            (useAITheme ? (React.createElement(unstable__AiSkeletonPlaceholder, { className: \"WACImage__Skeleton\" })) : (React.createElement(SkeletonPlaceholder, { className: \"WACImage__Skeleton\" }))),\n        !isError && !isImageHidden && source && (React.createElement(\"img\", { className: cx(\"WACImage__Image\", {\n                [className]: className,\n                \"WACImage__Image--loaded\": isLoaded,\n            }), src: source, alt: imageAlt, onLoad: () => {\n                onImageLoad?.();\n                setIsLoaded(true);\n            }, onError: handleError }))));\n}\nconst ImageExport = React.memo(Image);\n\nexport { ImageExport as Image };\n","import Music from '@carbon/icons-react/es/Music.js';\nimport { Tile } from '@carbon/react';\nimport cx from 'classnames';\nimport React, { useState, useRef, useCallback, useEffect, Suspense } from 'react';\nimport { useAriaAnnouncer } from '../../../hooks/useAriaAnnouncer.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { usePrevious } from '../../../hooks/usePrevious.js';\nimport { RESPONSE_TYPE_TIMEOUT_MS } from '../../../utils/constants.js';\nimport { getResponsiveElementPaddingValue } from '../../../utils/miscUtils.js';\nimport { SkeletonPlaceholder, SkeletonText } from '../../SkeletonPicker.js';\nimport { InlineError } from '../error/InlineError.js';\nimport { TextHolderTile } from './TextHolderTile.js';\nimport { MessageResponseTypes } from '../../../../../types/messaging/Messages.js';\nimport { lazyMediaPlayer } from '../../../../dynamic-imports/dynamic-imports.js';\nimport { useDynamicCSSProperties } from '../../../hooks/useCSSCustomProperties.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n// https://reactjs.org/docs/code-splitting.html#reactlazy\nconst ReactPlayerComponent = lazyMediaPlayer();\n/**\n * This component uses the React player library to handle rendering video/audio files, as well as handling third-party\n * embeddable video/audio services. Learn more: https://github.com/cookpete/react-player\n *\n * Note: We force media files to render using a video element for accessibility purposes since the audio element doesn't\n * support WebVTT for captioning/transcripts, but the video element does.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio#accessibility_concerns\n */\nfunction MediaPlayerComponent({ type, source, title, description, ariaLabel, isMixcloud, baseHeight, doAutoScroll, playing, onPlay, onPause, hideIconAndTitle, needsAnnouncement, }) {\n    const [skeletonHidden, setSkeletonHidden] = useState(false);\n    const [errorLoading, setErrorLoading] = useState(false);\n    const { errors_audioSource, errors_videoSource } = useLanguagePack();\n    const ariaAnnouncer = useAriaAnnouncer();\n    const rootElementRef = useRef();\n    const paddingTop = isMixcloud\n        ? \"120px\"\n        : getResponsiveElementPaddingValue(baseHeight);\n    const inlineStyles = useDynamicCSSProperties({ paddingTop });\n    const isAudio = type === MessageResponseTypes.AUDIO;\n    const errorMessage = isAudio ? errors_audioSource : errors_videoSource;\n    const prevSource = usePrevious(source);\n    // This ref is for merely saving the initial value of shouldAnnounce prop.\n    const shouldAnnounceRef = useRef(needsAnnouncement);\n    /**\n     * Upon an error, update the error loading flag in order to render an inline error.\n     */\n    const handleError = useCallback(() => {\n        setErrorLoading(true);\n        setSkeletonHidden(true);\n    }, []);\n    useEffect(() => {\n        if (source !== prevSource && skeletonHidden) {\n            setSkeletonHidden(false);\n        }\n    }, [prevSource, skeletonHidden, source]);\n    // This effect sets a timeout that auto error handles after 10 seconds of waiting for the React player to ready.\n    // Once the player has loaded, the skeleton will be hidden, and we can clear the timeout.\n    useEffect(() => {\n        let errorTimeout = null;\n        if (!skeletonHidden) {\n            errorTimeout = setTimeout(handleError, RESPONSE_TYPE_TIMEOUT_MS);\n        }\n        return () => {\n            clearTimeout(errorTimeout);\n        };\n    }, [skeletonHidden, handleError]);\n    useEffect(() => {\n        if (skeletonHidden && shouldAnnounceRef.current) {\n            ariaAnnouncer(rootElementRef.current);\n        }\n    }, [ariaAnnouncer, skeletonHidden]);\n    /**\n     * Once the video player is finished loading, remove the skeleton.\n     */\n    const handleReady = useCallback(() => {\n        if (!skeletonHidden) {\n            setSkeletonHidden(true);\n            doAutoScroll?.();\n        }\n    }, [doAutoScroll, skeletonHidden]);\n    /**\n     * Renders a media player skeleton. This is rendered until the react-player has loaded the provided url.\n     */\n    function renderMediaPlayerSkeleton() {\n        return (React.createElement(Tile, { className: \"WACMediaPlayer__Skeleton\" },\n            React.createElement(\"div\", { className: \"WACMediaPlayer__SkeletonContainer\", \n                // eslint-disable-next-line react/forbid-dom-props\n                style: inlineStyles },\n                React.createElement(SkeletonPlaceholder, { className: \"WACMediaPlayer__SkeletonPlayer\" })),\n            (title || description) && (React.createElement(\"div\", { className: \"WACMediaPlayer__SkeletonTextContainer\" },\n                React.createElement(SkeletonText, { paragraph: true, lineCount: 2 })))));\n    }\n    /**\n     * Render a media player background that adds letterboxes to urls utilizing iframes that may not have them included\n     * already. If an audio file is being played, we should display a music icon in the center since audio files will be\n     * loaded using a video element and a 16:9 blank video element with controls playing audio would look weird.\n     */\n    function renderMediaPlayerBackground() {\n        return (React.createElement(\"div\", { className: cx(\"WACMediaPlayer__Background\", {\n                \"WACMediaPlayer__Background--audio\": isAudio,\n            }) }, isAudio && React.createElement(Music, { size: 32, className: \"WACMediaPlayer__MusicIcon\" })));\n    }\n    /**\n     * If the dynamically imported react-player component is in suspense, we don't need to display some loading indicator\n     * since the media player skeleton handles that for us and the media player is hidden with `display: none` until the\n     * react-player has loaded the url.\n     */\n    function renderSuspenseFallback() {\n        return React.createElement(\"div\", null);\n    }\n    return (React.createElement(React.Fragment, null,\n        !skeletonHidden && renderMediaPlayerSkeleton(),\n        React.createElement(\"div\", { className: \"WACMediaPlayer__Root\", ref: rootElementRef },\n            errorLoading && React.createElement(InlineError, { text: errorMessage }),\n            !errorLoading && (React.createElement(Tile, { className: cx(\"WACMediaPlayer\", { WAC__hidden: !skeletonHidden }) },\n                React.createElement(\"div\", { className: \"WACMediaPlayer__Wrapper\", style: inlineStyles },\n                    renderMediaPlayerBackground(),\n                    React.createElement(Suspense, { fallback: renderSuspenseFallback() },\n                        React.createElement(ReactPlayerComponent, { className: \"WACMediaPlayer__Player\", url: source, controls: true, width: \"100%\", height: \"100%\", config: {\n                                file: {\n                                    forceVideo: true,\n                                    attributes: {\n                                        controlsList: \"nodownload\",\n                                        \"aria-label\": ariaLabel || description || title,\n                                    },\n                                },\n                            }, playsinline: true, playing: playing, onPlay: onPlay, onPause: onPause, onReady: handleReady, onError: handleError, pip: true }))),\n                (title || description) && (React.createElement(TextHolderTile, { title: title, description: description, hideTitle: hideIconAndTitle })))))));\n}\nconst MediaPlayerExport = React.memo(MediaPlayerComponent);\n\nexport { MediaPlayerExport as MediaPlayer };\n","import cx from 'classnames';\nimport React from 'react';\nimport VisuallyHidden from '../../util/VisuallyHidden.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component renders the Textual part of the cards - more specifically Title, description, favicon URL\n * or default fallback icon. In the case of Iframes, this also renders the URL part. Also renders a launch icon in\n * the case of text-only cards\n */\nfunction TextHolderTile({ title, description, displayURL, urlHostName, hideTitle, }) {\n    return (React.createElement(\"div\", { className: \"WACTextHolderTile\" },\n        React.createElement(\"div\", { className: cx(\"WACTextHolderTile__Wrapper\", \"WACWidget__textEllipsis\", {\n                WACTextHolderTile__IconMargin: !displayURL,\n            }) },\n            !hideTitle && title && (React.createElement(\"div\", { className: \"WACTextHolderTile__Title\" }, title)),\n            description && (React.createElement(\"div\", { className: cx(\"WACTextHolderTile__Description\", {\n                    WACTextHolderTile__DescriptionMargin: title,\n                }) }, description)),\n            displayURL && (React.createElement(React.Fragment, null,\n                React.createElement(VisuallyHidden, null, urlHostName),\n                React.createElement(\"div\", { className: cx(\"WACTextHolderTile__Url\", \"WACWidget__textEllipsis\", {\n                        WACTextHolderTile__UrlMargin: title || description,\n                    }), \"aria-hidden\": true }, displayURL))))));\n}\n\nexport { TextHolderTile };\n","import React from 'react';\nimport { MediaPlayer as MediaPlayerExport } from '../util/MediaPlayer.js';\nimport { MessageResponseTypes } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction VideoComponent({ ...props }) {\n    return React.createElement(MediaPlayerExport, { type: MessageResponseTypes.VIDEO, ...props });\n}\nconst VideoComponentExport = React.memo(VideoComponent);\n\nexport { VideoComponentExport as VideoComponent };\n","import { useMemo } from 'react';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Hook for generating CSS custom properties from any valid CSS properties object.\n * Converts camelCase React CSS properties to kebab-case CSS custom properties\n * that can be safely used across shadow DOM boundaries.\n *\n * @param styles - Object containing CSS properties with calculated values\n * @returns Object suitable for React's style prop containing CSS custom properties\n */\nconst useDynamicCSSProperties = (styles) => {\n    return useMemo(() => {\n        const customProperties = {};\n        Object.entries(styles).forEach(([key, value]) => {\n            if (value !== undefined && value !== null) {\n                // Convert camelCase to kebab-case for CSS custom properties\n                const kebabKey = key.replace(/[A-Z]/g, (letter) => `-${letter.toLowerCase()}`);\n                customProperties[`--${kebabKey}`] = value;\n            }\n        });\n        return customProperties;\n    }, [styles]);\n};\n\nexport { useDynamicCSSProperties };\n","import { createComponent } from '@lit/react';\nimport React from 'react';\nimport CarbonInlineNotificationElement from '@carbon/web-components/es-custom/components/notification/inline-notification.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst InlineNotification = createComponent({\n    tagName: \"cds-custom-inline-notification\",\n    elementClass: CarbonInlineNotificationElement,\n    react: React,\n});\n\nexport { InlineNotification as default };\n","import Close from '@carbon/icons-react/es/Close.js';\nimport Subtract from '@carbon/icons-react/es/Subtract.js';\nimport { Button } from '@carbon/react';\nimport React from 'react';\nimport { useLanguagePack } from '../../hooks/useLanguagePack.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This renders the close and minimize buttons for the tour feature.\n */\nfunction TourCloseMinimizeComponent(props) {\n    const { hideMinimizeButton, onMinimizeClick, onCloseClick } = props;\n    const { tour_ariaMinimizeButton, tour_ariaCloseButton } = useLanguagePack();\n    return (React.createElement(\"div\", { className: \"WACTour__CloseMinimizeWrapper\" },\n        !hideMinimizeButton && (React.createElement(React.Fragment, null,\n            React.createElement(Button, { className: \"WACTour__CloseMinimizeButton WACTour__MinimizeButton\", kind: \"ghost\", hasIconOnly: true, renderIcon: Subtract, iconDescription: tour_ariaMinimizeButton, onClick: onMinimizeClick, \"aria-label\": tour_ariaMinimizeButton }),\n            React.createElement(\"div\", { className: \"WACTour__CloseMinimizeDivider\" }))),\n        React.createElement(Button, { className: \"WACTour__CloseMinimizeButton WACTour__CloseButton\", kind: \"ghost\", hasIconOnly: true, renderIcon: Close, iconDescription: tour_ariaCloseButton, onClick: onCloseClick, \"aria-label\": tour_ariaCloseButton })));\n}\n\nexport { TourCloseMinimizeComponent };\n","import ArrowLeft from '@carbon/icons-react/es/ArrowLeft.js';\nimport ArrowRight from '@carbon/icons-react/es/ArrowRight.js';\nimport Chat from '@carbon/icons-react/es/Chat.js';\nimport { Button } from '@carbon/react';\nimport cx from 'classnames';\nimport React, { useRef, useImperativeHandle } from 'react';\nimport { useLanguagePack } from '../../hooks/useLanguagePack.js';\nimport { doFocusRef } from '../../utils/domUtils.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This renders the buttons to open the main window, progress forward and back through the steps, and end the tour once\n * on the last step.\n */\nfunction TourControlsComponent(props, ref) {\n    const { reservePreviousButtonSpace, hidePreviousButton, renderDoneButton, disableNextButton, hideButtons, hideChatButton, onOpenMainWindowClick, onNextClick, onPreviousClick, onDoneClick, } = props;\n    const { tour_ariaChatButton, tour_ariaNextButton, tour_ariaPreviousButton, tour_doneButton, } = useLanguagePack();\n    const nextButtonRef = useRef();\n    const doneButtonRef = useRef();\n    useImperativeHandle(ref, () => ({\n        requestFocus: () => {\n            setTimeout(() => {\n                if (doneButtonRef.current) {\n                    doFocusRef(doneButtonRef);\n                }\n                else {\n                    doFocusRef(nextButtonRef);\n                }\n            });\n        },\n    }));\n    return (React.createElement(\"div\", { className: cx(\"WACTour__Controls\", {\n            \"WACTour__Controls--empty\": hideButtons,\n        }) },\n        !hideChatButton && (React.createElement(\"div\", { className: \"WACTour__ControlsButton\" },\n            React.createElement(Button, { className: \"WACTour__MainWindowButton\", kind: \"ghost\", size: \"md\", hasIconOnly: true, renderIcon: (props) => React.createElement(Chat, { ...props }), iconDescription: tour_ariaChatButton, onClick: onOpenMainWindowClick, \"aria-label\": tour_ariaChatButton }))),\n        reservePreviousButtonSpace && (React.createElement(\"div\", { className: \"WACTour__ControlsButton\" },\n            React.createElement(Button, { className: cx(\"WACTour__PreviousButton\", {\n                    \"WACTour__ControlsButton--hidden\": hidePreviousButton,\n                }), kind: \"ghost\", size: \"md\", hasIconOnly: true, renderIcon: (props) => React.createElement(ArrowLeft, { ...props }), iconDescription: tour_ariaPreviousButton, onClick: onPreviousClick, \"aria-label\": tour_ariaPreviousButton }))),\n        renderDoneButton && (React.createElement(\"div\", { className: \"WACTour__ControlsButton\" },\n            React.createElement(Button, { ref: doneButtonRef, className: \"WACTour__DoneButton\", size: \"md\", onClick: onDoneClick }, tour_doneButton))),\n        !renderDoneButton && (React.createElement(\"div\", { className: \"WACTour__ControlsButton\" },\n            React.createElement(Button, { ref: nextButtonRef, className: \"WACTour__NextButton\", size: \"md\", hasIconOnly: true, renderIcon: (props) => React.createElement(ArrowRight, { ...props }), iconDescription: tour_ariaNextButton, onClick: onNextClick, disabled: disableNextButton, \"aria-label\": tour_ariaNextButton })))));\n}\nconst TourControlsComponentExport = React.forwardRef(TourControlsComponent);\n\nexport { TourControlsComponentExport as TourControlsComponent };\n","import cx from 'classnames';\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useAriaAnnouncer } from '../../hooks/useAriaAnnouncer.js';\nimport { useLanguagePack } from '../../hooks/useLanguagePack.js';\nimport { getMediaDimensions } from '../../utils/messageUtils.js';\nimport { consoleError } from '../../utils/miscUtils.js';\nimport { InlineError } from '../responseTypes/error/InlineError.js';\nimport { Image as ImageExport } from '../responseTypes/image/Image.js';\nimport { RichText as RichTextExport } from '../responseTypes/util/RichText.js';\nimport { VideoComponent as VideoComponentExport } from '../responseTypes/video/VideoComponent.js';\nimport { MessageResponseTypes } from '../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This renders the content for a particular step within the tour.\n */\nfunction TourStepContentComponent(props) {\n    const { stepGenericItem, isCurrentStep } = props;\n    const ariaAnnouncer = useAriaAnnouncer();\n    const rootRef = useRef();\n    /**\n     * Determine if a border should be shown between the step content and the tour controls.\n     */\n    function showBottomBorder() {\n        const responseType = stepGenericItem.response_type;\n        switch (responseType) {\n            case MessageResponseTypes.TEXT:\n                // For a text step we want to show a border between the text and the tour controls.\n                return true;\n            case MessageResponseTypes.IMAGE:\n                // If the Image is going to have a description then we want to show a border between the description and the\n                // tour controls.\n                return stepGenericItem?.description;\n            case MessageResponseTypes.VIDEO:\n                // If the Video is going to have a description then we want to show a border between the description and the\n                // tour controls.\n                return stepGenericItem?.description;\n            default:\n                // For an unsupported step we want to show a border between the error and the tour controls.\n                return true;\n        }\n    }\n    /**\n     * Render the appropriate component for the given message responseType.\n     */\n    function renderStepContent() {\n        const responseType = stepGenericItem.response_type;\n        switch (responseType) {\n            case MessageResponseTypes.TEXT:\n                return React.createElement(StepContentText, { messageItem: stepGenericItem });\n            case MessageResponseTypes.IMAGE:\n                return React.createElement(StepContentImage, { messageItem: stepGenericItem });\n            case MessageResponseTypes.VIDEO:\n                return (React.createElement(StepContentVideo, { messageItem: stepGenericItem, isCurrentStep: isCurrentStep }));\n            default:\n                // If the responseType is not one of the three supported types for tours then render an inline error.\n                return (React.createElement(StepContentUnsupportedError, { messageItem: stepGenericItem, isCurrentStep: isCurrentStep }));\n        }\n    }\n    // If this is the current step then send an event and track the type of response being shown.\n    useEffect(() => {\n        if (isCurrentStep) {\n            // Announce the content of the current step. The announcement is handled in setTimeout so that it doesn't prevent\n            // the initial announcement from being heard when the tour is open.\n            setTimeout(() => ariaAnnouncer(rootRef.current));\n        }\n    }, [isCurrentStep, stepGenericItem.response_type, ariaAnnouncer]);\n    return (React.createElement(\"div\", { className: \"WACTourStep__Wrapper\", ref: rootRef },\n        React.createElement(\"div\", { className: cx(\"WACTourStep\", \"WAC__message\", {\n                \"WACTourStep--hidden\": !isCurrentStep,\n                WACTourStep__BottomBorder: showBottomBorder(),\n            }) }, renderStepContent())));\n}\n/**\n * Given a TextItem return a RichText component containing the text from the message.\n */\nfunction StepContentText(props) {\n    const { messageItem } = props;\n    const { text } = messageItem;\n    // For text provided by the assistant, pass it through some HTML formatting before displaying it.\n    return (React.createElement(\"div\", { className: \"WACTourStep__Text\" },\n        React.createElement(RichTextExport, { text: text })));\n}\n/**\n * Given an ImageItem return an Image component containing the image from the message.\n */\nfunction StepContentImage(props) {\n    const { messageItem } = props;\n    const { source, description, alt_text } = messageItem;\n    const languagePack = useLanguagePack();\n    return (\n    // Don't pass the title to the Image component since tours only support descriptions.\n    React.createElement(ImageExport, { imageError: languagePack.errors_imageSource, source: source, description: description, altText: alt_text, hideIconAndTitle: true }));\n}\n/**\n * Given a VideoItem return a VideoComponent containing the video from the message.\n */\nfunction StepContentVideo(props) {\n    const { messageItem, isCurrentStep } = props;\n    const { source, description, alt_text } = messageItem;\n    const { viewState } = useSelector((state) => state.persistedToBrowserStorage.launcherState);\n    const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n    // If this isn't the current step or the tour isn't visible then the video needs to be paused.\n    useEffect(() => {\n        if (!isCurrentStep || !viewState.tour) {\n            setIsVideoPlaying(false);\n        }\n    }, [isCurrentStep, viewState.tour]);\n    return (\n    // Don't pass the title to the VideoComponent since tours only support descriptions.\n    React.createElement(VideoComponentExport, { source: source, description: description, baseHeight: getMediaDimensions(messageItem)?.base_height, ariaLabel: alt_text, playing: isVideoPlaying, onPlay: () => setIsVideoPlaying(true), onPause: () => setIsVideoPlaying(false), hideIconAndTitle: true }));\n}\n/**\n * If the responseType is not one of the three supported types for tours then render an inline error.\n */\nfunction StepContentUnsupportedError(props) {\n    const { messageItem, isCurrentStep } = props;\n    const languagePack = useLanguagePack();\n    // If the current response type isn't a supported response type then log an error.\n    useEffect(() => {\n        if (isCurrentStep) {\n            consoleError(`The response type you tried to use \"${messageItem.response_type}\" is not valid within a tour step. The supported response types in tour steps are text, video, and image.`);\n        }\n    }, [isCurrentStep, messageItem.response_type]);\n    return (React.createElement(\"div\", { className: \"WACTourStep__UnsupportedResponse\" },\n        React.createElement(InlineError, { text: languagePack.errors_generalContent })));\n}\nconst TourStepContentComponentExport = React.memo(TourStepContentComponent);\n\nexport { TourStepContentComponentExport as TourStepContentComponent };\n","import React from 'react';\nimport { SkeletonPlaceholder } from '../SkeletonPicker.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This renders the skeleton of a step within the tour.\n */\nfunction TourStepSkeletonComponent() {\n    return (React.createElement(\"div\", { className: \"WACTourStep WACTourStep__Skeleton\" },\n        React.createElement(SkeletonPlaceholder, { className: \"WACTourStep__SkeletonPlaceholder\" })));\n}\n\nexport { TourStepSkeletonComponent };\n","import ErrorFilled from '@carbon/icons-react/es/ErrorFilled.js';\nimport Restart from '@carbon/icons-react/es/Restart.js';\nimport { Button } from '@carbon/react';\nimport InlineNotification from '../../../react/carbon/InlineNotification.js';\nimport React, { useState, useRef, useImperativeHandle, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { ViewChangeReason, TourEndReason, BusEventType, MainWindowOpenReason } from '../../../../types/events/eventBusTypes.js';\nimport { useAriaAnnouncer } from '../../hooks/useAriaAnnouncer.js';\nimport { useLanguagePack } from '../../hooks/useLanguagePack.js';\nimport { useServiceManager } from '../../hooks/useServiceManager.js';\nimport '../../../../types/state/AppState.js';\nimport { formatMessage } from '../../utils/languages.js';\nimport { AnnounceOnMountComponent as AnnounceOnMountComponentExport } from '../util/AnnounceOnMountComponent.js';\nimport { HideComponent } from '../util/HideComponent.js';\nimport { MountChildrenOnDelay } from '../util/MountChildrenOnDelay.js';\nimport { TourCloseMinimizeComponent } from './TourCloseMinimizeComponent.js';\nimport { TourControlsComponent as TourControlsComponentExport } from './TourControlsComponent.js';\nimport { TourStepContentComponent as TourStepContentComponentExport } from './TourStepContentComponent.js';\nimport { TourStepSkeletonComponent } from './TourStepSkeletonComponent.js';\nimport { ViewType } from '../../../../types/instance/apiTypes.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This manages the tour feature controls and renders the tour content before passing both to either a mobile or desktop\n * container depending.\n */\nfunction TourContainer(props, ref) {\n    const languagePack = useLanguagePack();\n    const serviceManager = useServiceManager();\n    const ariaAnnouncer = useAriaAnnouncer();\n    const intl = useIntl();\n    const tourConfig = useSelector((state) => state.config.public.tourConfig);\n    const { isHydrated } = useSelector((state) => state);\n    const { viewState } = useSelector((state) => state.persistedToBrowserStorage.launcherState);\n    const { activeTourCurrentStepIndex } = useSelector((state) => state.persistedToBrowserStorage.chatState.persistedTourState);\n    const { activeTourStepItems } = useSelector((state) => state.tourState);\n    // These three state variables are for future use when dynamic steps are introduced.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [renderLoadingBar, setRenderLoadingBar] = useState(false);\n    const [renderErrorBanner, setRenderErrorBanner] = useState(false);\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [renderErrorScreen, setRenderErrorScreen] = useState(false);\n    const rootRef = useRef();\n    const tourControlsRef = useRef();\n    const namespace = serviceManager.namespace.originalName;\n    const languageKey = namespace\n        ? \"window_ariaTourRegionNamespace\"\n        : \"window_ariaTourRegion\";\n    const regionLabel = formatMessage(intl, languageKey, { namespace });\n    // If we're showing the launcher or main window then hide the tour. We do this instead of unmounting so that we don't\n    // lose scroll position, video playback position, etc.\n    const hideTour = !viewState.tour;\n    // Set default values for the tour controls that match what we want to show during the loading state. These values\n    // will be updated when the Carbon AI chat is hydrated and the activeTourStepItems become available.\n    let reservePreviousButtonSpace = true;\n    let hidePreviousButton = false;\n    let renderDoneButton = false;\n    let stepContentComponentsArray = [];\n    // Once the Carbon AI chat is hydrated, and we have the activeTourStepItems, create TourStepContentComponent's for each step\n    // and set the correct values for the tour controls properties.\n    if (isHydrated && activeTourStepItems) {\n        // If there is more than one step in the tour then save space in the tour controls for a previous button.\n        // This doesn't guarantee that the previous button will be visible, just that there will be room for it in the\n        // controls.\n        reservePreviousButtonSpace = activeTourStepItems.length > 1;\n        // If there has been space reserved for the previous button then hide it if this is the first step of the tour.\n        // Any other step will show the previous button in the space reserved.\n        hidePreviousButton = activeTourCurrentStepIndex <= 0;\n        // If this is the last step of the tour then show a done button instead of a next button.\n        renderDoneButton =\n            activeTourCurrentStepIndex >= activeTourStepItems.length - 1;\n        // For each step (GenericItem) in the array of steps, create a TourStepContentComponent, and return it. Assign this\n        // new array of TourStepContentComponents to our local array.\n        stepContentComponentsArray = activeTourStepItems.map((step, index) => (React.createElement(TourStepContentComponentExport\n        // eslint-disable-next-line react/no-array-index-key\n        , { \n            // eslint-disable-next-line react/no-array-index-key\n            key: index, stepGenericItem: step, isCurrentStep: index === activeTourCurrentStepIndex })));\n    }\n    else if (!isHydrated) {\n        // If the Carbon AI chat is not hydrated then show a skeleton component.\n        stepContentComponentsArray = [React.createElement(TourStepSkeletonComponent, { key: 0 })];\n    }\n    /**\n     * When the user clicks on the main window icon then fire the window open events and switch to the main window.\n     */\n    async function onOpenMainWindowClick() {\n        // Try to open the main window.\n        await serviceManager.actions.changeView(ViewType.MAIN_WINDOW, {\n            mainWindowOpenReason: MainWindowOpenReason.TOUR_OPENED_OTHER_VIEW,\n        });\n    }\n    /**\n     * When the tour is finished switch to the launcher and clear the tour data. When the launcher is clicked the main\n     * window will open.\n     */\n    async function onDoneClick() {\n        // Fire the tour end event before switching to the launcher.\n        await serviceManager.eventBus.fire({ type: BusEventType.TOUR_END, reason: TourEndReason.DONE_CLICKED }, serviceManager.instance);\n        // Try to open the launcher and clear the tour data from store.\n        await serviceManager.actions.endTour({\n            viewChangeReason: ViewChangeReason.TOUR_DONE,\n        });\n    }\n    /**\n     * When the tour is closed switch to the launcher and clear the tour data. When the launcher is clicked the main\n     * window will open.\n     */\n    async function onCloseClick() {\n        // Try to open the launcher and clear the tour data from store.\n        await serviceManager.actions.endTour({\n            viewChangeReason: ViewChangeReason.TOUR_CLOSED,\n        });\n    }\n    /**\n     * When the tour is minimized switch to the launcher. When the launcher is clicked the tour will open.\n     */\n    async function onMinimizeClick() {\n        // Try to open the launcher.\n        await serviceManager.actions.changeView(ViewType.LAUNCHER, {\n            viewChangeReason: ViewChangeReason.TOUR_MINIMIZED,\n        });\n    }\n    /**\n     * Now that we have the necessary pieces render the controls for the tour feature.\n     */\n    function renderTourControlsComponent() {\n        return (React.createElement(TourControlsComponentExport, { ref: tourControlsRef, hideChatButton: tourConfig?.hideChatButton, reservePreviousButtonSpace: reservePreviousButtonSpace, hidePreviousButton: hidePreviousButton, disableNextButton: renderLoadingBar, hideButtons: !isHydrated, renderDoneButton: renderDoneButton, onNextClick: () => {\n                serviceManager.actions.changeStepInTour({ nextStep: true });\n                // If the next step is the final step, request focus so that the \"done\" button has focus.\n                if (activeTourCurrentStepIndex + 1 ===\n                    activeTourStepItems.length - 1) {\n                    tourControlsRef.current?.requestFocus();\n                }\n            }, onPreviousClick: () => {\n                serviceManager.actions.changeStepInTour({ previousStep: true });\n                // If the previous step is the first step, request focus so that the \"next\" button has focus.\n                if (activeTourCurrentStepIndex - 1 === 0) {\n                    tourControlsRef.current?.requestFocus();\n                }\n            }, onOpenMainWindowClick: onOpenMainWindowClick, onDoneClick: onDoneClick }));\n    }\n    function renderTourCloseMinimizeComponent() {\n        return (React.createElement(TourCloseMinimizeComponent, { hideMinimizeButton: tourConfig?.hideMinimizeButton, onCloseClick: onCloseClick, onMinimizeClick: onMinimizeClick }));\n    }\n    /**\n     * Handles rendering a loading bar or error notification based on the state of the active tour.\n     */\n    function renderTourStepStatusContainer() {\n        return (React.createElement(\"div\", { className: \"WACTour__StatusContainer\" },\n            renderErrorBanner && (React.createElement(AnnounceOnMountComponentExport, null,\n                React.createElement(InlineNotification, { kind: \"error\", title: languagePack.tour_errorFetchingStep, lowContrast: true, hideCloseButton: true, onClick: () => setRenderErrorBanner(false) }))),\n            renderLoadingBar && (React.createElement(MountChildrenOnDelay, { delay: 500 },\n                React.createElement(\"div\", { className: \"WACLoadingBar__ConnectingAnimation\" })))));\n    }\n    /**\n     * The error screen when a tour fails to load.\n     */\n    function renderTourErrorScreen() {\n        return (React.createElement(AnnounceOnMountComponentExport, null,\n            React.createElement(\"div\", { className: \"WACTour__ErrorScreen\" },\n                React.createElement(\"div\", { className: \"WACTour__ErrorHeader\" },\n                    React.createElement(ErrorFilled, { size: 20, className: \"WACTour__ErrorIcon\" }),\n                    languagePack.tour_errorTitle),\n                React.createElement(\"div\", { className: \"WACTour__ErrorBody\" },\n                    React.createElement(\"div\", { className: \"WACTour__ErrorText\" }, languagePack.tour_errorBody),\n                    React.createElement(Button, { className: \"WACTour__ErrorButton\", size: \"sm\", kind: \"tertiary\", renderIcon: (props) => React.createElement(Restart, { size: 32, ...props }) }, languagePack.buttons_retry)))));\n    }\n    useImperativeHandle(ref, () => tourControlsRef.current);\n    useEffect(() => {\n        if (isHydrated && !hideTour && !renderErrorScreen) {\n            const tourInstructionsText = intl.formatMessage({ id: \"tour_instructions\" }, { chatButtonText: languagePack.tour_ariaChatButton });\n            ariaAnnouncer(tourInstructionsText);\n        }\n    }, [\n        hideTour,\n        ariaAnnouncer,\n        languagePack,\n        intl,\n        isHydrated,\n        renderErrorScreen,\n    ]);\n    // This effect automatically applies focus to the tour when it hydrates or is opened. Checking for hydration will\n    // allow the \"done\" button do get focus when it renders after hydration.\n    useEffect(() => {\n        if (isHydrated || !hideTour) {\n            tourControlsRef.current?.requestFocus();\n        }\n    }, [hideTour, isHydrated]);\n    return (\n    // In the future this hiding may have to be done with visibility: hidden so that dynamic height animations can be\n    // preformed.\n    React.createElement(HideComponent, { hidden: hideTour },\n        React.createElement(\"div\", { ref: rootRef, className: \"WACTour\", role: \"region\", \"aria-label\": regionLabel },\n            renderTourCloseMinimizeComponent(),\n            renderErrorScreen && renderTourErrorScreen(),\n            !renderErrorScreen && (React.createElement(React.Fragment, null,\n                stepContentComponentsArray,\n                renderTourStepStatusContainer(),\n                renderTourControlsComponent())))));\n}\nconst TourContainerExport = React.memo(React.forwardRef(TourContainer));\n\nexport { TourContainerExport as default };\n","import { AISkeletonPlaceholder, SkeletonPlaceholder as SkeletonPlaceholder$1, AISkeletonText, SkeletonText as SkeletonText$1 } from '@carbon/react';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction SkeletonText(props) {\n    const useAITheme = useSelector((state) => state.theme.useAITheme);\n    return useAITheme ? (React.createElement(AISkeletonText, { ...props })) : (React.createElement(SkeletonText$1, { ...props }));\n}\nfunction SkeletonPlaceholder(props) {\n    const useAITheme = useSelector((state) => state.theme.useAITheme);\n    return useAITheme ? (React.createElement(AISkeletonPlaceholder, { ...props })) : (React.createElement(SkeletonPlaceholder$1, { ...props }));\n}\n\nexport { SkeletonPlaceholder, SkeletonText };\n"],"names":["ErrorIcon","props","React","ErrorFilled","className","cx","InlineError","text","languagePack","useLanguagePack","RichTextExport","shouldRemoveHTMLBeforeMarkdownConversion","errors_generalContent","Image","imageError","title","description","displayURL","hideIconAndTitle","needsAnnouncement","renderIcon","inline","ariaAnnouncer","useAriaAnnouncer","isLoaded","setIsLoaded","useState","isError","setIsError","rootRef","useRef","needsAnnouncementRef","hasText","Boolean","Icon","useEffect","current","ImageOnly","Tile","ref","WACImage__TextAndIcon","WACImage__IconOnly","TextHolderTile","urlHostName","getURLHostName","hideTitle","source","altText","preventInlineError","onImageLoad","useAITheme","isImageHidden","setIsImageHidden","imageAlt","handleError","useCallback","errorTimeout","setTimeout","RESPONSE_TYPE_TIMEOUT_MS","clearTimeout","unstable__AiSkeletonPlaceholder","SkeletonPlaceholder","src","alt","onLoad","onError","ImageExport","ReactPlayerComponent","lazyMediaPlayer","MediaPlayerComponent","type","ariaLabel","isMixcloud","baseHeight","doAutoScroll","playing","onPlay","onPause","skeletonHidden","setSkeletonHidden","errorLoading","setErrorLoading","errors_audioSource","errors_videoSource","rootElementRef","paddingTop","getResponsiveElementPaddingValue","inlineStyles","useDynamicCSSProperties","isAudio","MessageResponseTypes","AUDIO","errorMessage","prevSource","usePrevious","shouldAnnounceRef","handleReady","style","SkeletonText","paragraph","lineCount","WAC__hidden","Music","size","Suspense","fallback","url","controls","width","height","config","file","forceVideo","attributes","controlsList","playsinline","onReady","pip","MediaPlayerExport","WACTextHolderTile__IconMargin","WACTextHolderTile__DescriptionMargin","VisuallyHidden","WACTextHolderTile__UrlMargin","VideoComponent","VIDEO","VideoComponentExport","styles","useMemo","customProperties","Object","entries","forEach","key","value","kebabKey","replace","letter","toLowerCase","InlineNotification","createComponent","tagName","elementClass","CarbonInlineNotificationElement","react","TourCloseMinimizeComponent","hideMinimizeButton","onMinimizeClick","onCloseClick","tour_ariaMinimizeButton","tour_ariaCloseButton","Button","kind","hasIconOnly","Subtract","iconDescription","onClick","Close","TourControlsComponent","reservePreviousButtonSpace","hidePreviousButton","renderDoneButton","disableNextButton","hideButtons","hideChatButton","onOpenMainWindowClick","onNextClick","onPreviousClick","onDoneClick","tour_ariaChatButton","tour_ariaNextButton","tour_ariaPreviousButton","tour_doneButton","nextButtonRef","doneButtonRef","useImperativeHandle","requestFocus","doFocusRef","Chat","ArrowLeft","ArrowRight","disabled","TourControlsComponentExport","TourStepContentComponent","stepGenericItem","isCurrentStep","response_type","WACTourStep__BottomBorder","TEXT","IMAGE","showBottomBorder","StepContentText","messageItem","StepContentImage","StepContentVideo","StepContentUnsupportedError","renderStepContent","alt_text","errors_imageSource","viewState","useSelector","state","persistedToBrowserStorage","launcherState","isVideoPlaying","setIsVideoPlaying","tour","getMediaDimensions","base_height","consoleError","TourStepContentComponentExport","TourStepSkeletonComponent","TourContainer","serviceManager","useServiceManager","intl","useIntl","tourConfig","public","isHydrated","activeTourCurrentStepIndex","chatState","persistedTourState","activeTourStepItems","tourState","renderLoadingBar","setRenderLoadingBar","renderErrorBanner","setRenderErrorBanner","renderErrorScreen","setRenderErrorScreen","tourControlsRef","namespace","originalName","languageKey","regionLabel","formatMessage","hideTour","stepContentComponentsArray","length","map","step","index","tourInstructionsText","id","chatButtonText","HideComponent","hidden","role","async","actions","endTour","viewChangeReason","ViewChangeReason","TOUR_CLOSED","changeView","ViewType","LAUNCHER","TOUR_MINIMIZED","AnnounceOnMountComponentExport","tour_errorTitle","tour_errorBody","Restart","buttons_retry","tour_errorFetchingStep","lowContrast","hideCloseButton","MountChildrenOnDelay","delay","changeStepInTour","nextStep","previousStep","MAIN_WINDOW","mainWindowOpenReason","MainWindowOpenReason","TOUR_OPENED_OTHER_VIEW","eventBus","fire","BusEventType","TOUR_END","reason","TourEndReason","DONE_CLICKED","instance","TOUR_DONE","TourContainerExport","theme","AISkeletonText","SkeletonText$1","AISkeletonPlaceholder","SkeletonPlaceholder$1"],"sourceRoot":""}