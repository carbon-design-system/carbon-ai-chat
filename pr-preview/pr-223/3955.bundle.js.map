{"version":3,"file":"3955.bundle.js","mappings":";mTAyBI,SAASA,EAA4BC,GACvC,MAAOC,OAAQA,EAAQC,kBAAmBA,EAAmBC,iBAAkBA,EAAkBC,UAAWA,EAAWC,iBAAkBA,EAAkBC,iBAAkBA,EAAkBC,UAAWA,EAAWC,MAAOA,EAAOC,WAAYA,EAAYC,aAAcA,EAAcC,YAAaA,EAAaC,QAASA,EAASC,eAAgBA,EAAgBC,kBAAmBA,EAAmBC,eAAgBA,EAAgBC,gBAAiBA,EAAiBC,iBAAkBA,EAAkBC,kBAAmBA,GAAqBlB,EACjhBmB,GAAeC,EAAAA,EAAAA,KACfC,GAAiBC,EAAAA,EAAAA,KACjBC,GAAkBC,EAAAA,EAAAA,IAAYC,GAASA,EAAMC,gBAAgBvB,GAAkBwB,gBAE/EC,IADiB5B,EAAM6B,gBAAkB,GAEzCC,EAAgBF,EAAmBG,EAAAA,EAAgBC,KAAOD,EAAAA,EAAgBE,qBAC1EC,EAAiBN,EAAmBO,EAAAA,EAAiBH,KAAOG,EAAAA,EAAiBC,oBACnF,OAAOC,EAAAA,cAAoBC,EAAAA,EAAc,CACvC/B,UAAW,yBACXgC,YAAatB,EACbuB,UAAWzB,EACX0B,aAAcvB,EACdwB,WAAY1B,EACZ2B,gBAAiBb,EACjBc,iBAAkBV,EAClBW,WAAY5C,EACZoB,eAAgBA,EAChBf,iBAAkBA,GACjB+B,EAAAA,cAAoBS,EAAAA,EAA0B,CAC/CvC,UAAWwC,EAAG,4BAA6BxC,GAC3CH,UAAWA,EACXC,iBAAkBA,EAClBJ,OAAQA,EACRO,MAAOA,EACPoB,iBAAkBA,EAClBnB,WAAYA,EACZuC,gBAAiB7B,EAAa8B,0BAC9BtC,YAAaA,EACbuC,aAActC,EACdC,eAAgBA,EAChBsC,uBAAwBrC,GACvBS,GAAmBc,EAAAA,cAAoBe,EAAAA,EAAyB,CACjEjD,iBAAkBA,EAClBkD,YAAa9B,EACbrB,kBAAmBA,EACnBQ,aAAcA,KAElB,C","sources":["webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/panels/BodyAndFooterPanelComponent.js"],"sourcesContent":["import cx from \"classnames\";\n\nimport React from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { useLanguagePack } from \"../../hooks/useLanguagePack.js\";\n\nimport { useServiceManager } from \"../../hooks/useServiceManager.js\";\n\nimport { AnimationInType, AnimationOutType } from \"../../../../types/utilities/Animation.js\";\n\nimport { BasePanelComponent as BasePanelComponentExport } from \"../BasePanelComponent.js\";\n\nimport { BodyWithFooterComponent } from \"../BodyWithFooterComponent.js\";\n\nimport { OverlayPanel } from \"../OverlayPanel.js\";\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */ function BodyAndFooterPanelComponent(props) {\n  const {isOpen: isOpen, isMessageForInput: isMessageForInput, localMessageItem: localMessageItem, eventName: eventName, eventDescription: eventDescription, overlayPanelName: overlayPanelName, className: className, title: title, useAITheme: useAITheme, requestFocus: requestFocus, onClickBack: onClickBack, onClose: onClose, onClickRestart: onClickRestart, onCloseAndRestart: onCloseAndRestart, onPanelOpenEnd: onPanelOpenEnd, onPanelCloseEnd: onPanelCloseEnd, onPanelOpenStart: onPanelOpenStart, onPanelCloseStart: onPanelCloseStart} = props;\n  const languagePack = useLanguagePack();\n  const serviceManager = useServiceManager();\n  const originalMessage = useSelector(state => state.allMessagesByID[localMessageItem?.fullMessageID]);\n  const showAnimations = props.showAnimations ?? true;\n  const disableAnimation = !showAnimations;\n  const openAnimation = disableAnimation ? AnimationInType.NONE : AnimationInType.SLIDE_IN_FROM_BOTTOM;\n  const closeAnimation = disableAnimation ? AnimationOutType.NONE : AnimationOutType.SLIDE_OUT_TO_BOTTOM;\n  return React.createElement(OverlayPanel, {\n    className: \"WAC__overlay--covering\",\n    onOpenStart: onPanelOpenStart,\n    onOpenEnd: onPanelOpenEnd,\n    onCloseStart: onPanelCloseStart,\n    onCloseEnd: onPanelCloseEnd,\n    animationOnOpen: openAnimation,\n    animationOnClose: closeAnimation,\n    shouldOpen: isOpen,\n    serviceManager: serviceManager,\n    overlayPanelName: overlayPanelName\n  }, React.createElement(BasePanelComponentExport, {\n    className: cx(\"WACBodyAndFooterComponent\", className),\n    eventName: eventName,\n    eventDescription: eventDescription,\n    isOpen: isOpen,\n    title: title,\n    disableAnimation: disableAnimation,\n    useAITheme: useAITheme,\n    labelBackButton: languagePack.general_returnToAssistant,\n    onClickBack: onClickBack,\n    onClickClose: onClose,\n    onClickRestart: onClickRestart,\n    onClickCloseAndRestart: onCloseAndRestart\n  }, originalMessage && React.createElement(BodyWithFooterComponent, {\n    localMessageItem: localMessageItem,\n    fullMessage: originalMessage,\n    isMessageForInput: isMessageForInput,\n    requestFocus: requestFocus\n  })));\n}\n\nexport { BodyAndFooterPanelComponent };\n"],"names":["BodyAndFooterPanelComponent","props","isOpen","isMessageForInput","localMessageItem","eventName","eventDescription","overlayPanelName","className","title","useAITheme","requestFocus","onClickBack","onClose","onClickRestart","onCloseAndRestart","onPanelOpenEnd","onPanelCloseEnd","onPanelOpenStart","onPanelCloseStart","languagePack","useLanguagePack","serviceManager","useServiceManager","originalMessage","useSelector","state","allMessagesByID","fullMessageID","disableAnimation","showAnimations","openAnimation","AnimationInType","NONE","SLIDE_IN_FROM_BOTTOM","closeAnimation","AnimationOutType","SLIDE_OUT_TO_BOTTOM","React","OverlayPanel","onOpenStart","onOpenEnd","onCloseStart","onCloseEnd","animationOnOpen","animationOnClose","shouldOpen","BasePanelComponentExport","cx","labelBackButton","general_returnToAssistant","onClickClose","onClickCloseAndRestart","BodyWithFooterComponent","fullMessage"],"sourceRoot":""}