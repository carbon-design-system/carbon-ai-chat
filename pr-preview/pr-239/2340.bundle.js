/*! For license information please see 2340.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_carbon_ai_chat_examples_demo=self.webpackChunk_carbon_ai_chat_examples_demo||[]).push([[2340],{2340:function(e,t,s){s.d(t,{createService:function(){return x}});var a=s(8690),i=s(1122),r=s(9499),n=s(1120),c=s(1748),o=s(9763),h=s(3092),g=s(9280),d=s(9080),l=s(7391),p=s(2870),E=s(5041),u=s(8625),S=s(5505),A=s(5230),v=s(948),y=s(9633);function M(e,t){return{localMessages:e,originalMessage:t}}async function C(e,t,s,a=!0){const i=function(e,t,s){const a=t?.nickname;let i;switch(e){case y.Xb.AGENT_JOINED:i=a?"agent_agentJoinedName":"agent_agentJoinedNoName";break;case y.Xb.RELOAD_WARNING:i="agent_youConnectedWarning";break;case y.Xb.AGENT_LEFT_CHAT:i=a?"agent_agentLeftChat":"agent_agentLeftChatNoName";break;case y.Xb.AGENT_ENDED_CHAT:i=a?"agent_agentEndedChat":"agent_agentEndedChatNoName";break;case y.Xb.TRANSFER_TO_AGENT:i=a?"agent_transferring":"agent_transferringNoName";break;case y.Xb.USER_ENDED_CHAT:i="agent_youEndedChat";break;case y.Xb.CHAT_WAS_ENDED:i="agent_conversationWasEnded";break;case y.Xb.DISCONNECTED:i="agent_disconnected";break;case y.Xb.RECONNECTED:i="agent_reconnected";break;case y.Xb.SHARING_REQUESTED:i="agent_sharingRequested";break;case y.Xb.SHARING_ACCEPTED:i="agent_sharingAccepted";break;case y.Xb.SHARING_DECLINED:i="agent_sharingDeclined";break;case y.Xb.SHARING_CANCELLED:i="agent_sharingCancelled";break;case y.Xb.SHARING_ENDED:i="agent_sharingEnded";break;default:return""}return i&&s.formatMessage({id:i},{personName:a})}(e,s,t.intl),r=f(e),{originalMessage:n,localMessage:c}=r;return c.item.text=i,s&&(n.history||(n.history={}),n.history.agent_profile=s),a&&await t.fire({type:S.xp.AGENT_PRE_RECEIVE,data:n}),(0,g.o)(n),a&&await t.fire({type:S.xp.AGENT_RECEIVE,data:n}),r}function f(e){const t={response_type:y.sP.TEXT,agent_message_type:e},s=(0,l.jv)(t);return{localMessage:(0,n.CL)(t,s),originalMessage:s}}async function T(e,t,s,a,i){a&&await(0,v.PQ)(e,async({localMessages:e,originalMessage:t})=>{await(0,v.PQ)(e,async(e,s)=>{await i.actions.handleUserDefinedResponseItems(e,t),i.store.dispatch(c.Ay.addLocalMessageItem(e,t,0===s))})})}async function _(e,t,s){const a=function(e){const{agent_botReturned:t}=e;if(!t)return null;const{originalMessage:s,localMessage:a}=f(null);return a.item.text=t,{originalMessage:s,localMessage:a}}(s.store.getState().languagePack);if(a){const i=s.restartCount;(0,A.Ah)(()=>{i===s.restartCount&&T([M([a.localMessage],a.originalMessage)],0,0,!t,s)},e)}}async function D(e,t,s,a,i){const r=await C(e,i,t,s);await T([M([r.localMessage],r.originalMessage)],0,0,!a,i)}var N=s(6895);const{FROM_USER:w,RECONNECTED:k,DISCONNECTED:R,AGENT_ENDED_CHAT:b,AGENT_JOINED:m,USER_ENDED_CHAT:I,CHAT_WAS_ENDED:L,TRANSFER_TO_AGENT:P,AGENT_LEFT_CHAT:G,RELOAD_WARNING:F,SHARING_CANCELLED:O,SHARING_DECLINED:H,SHARING_ACCEPTED:J,SHARING_REQUESTED:B,SHARING_ENDED:q}=y.Xb;class U{constructor(e){this.chatStarted=!1,this.showingDisconnectedError=!1,this.isAgentTyping=!1,this.uploadingFiles=new Set,this.showLeaveWarning=!0,this.serviceManager=e}getCustomServiceDeskName(){return this.serviceManager.store.getState().config.public.serviceDeskFactory?this.serviceDesk.getName?.():void 0}async initialize(){if(this.serviceDesk)throw new Error("A service desk has already been created!");const{store:e,instance:t}=this.serviceManager,s=e.getState(),{config:i,persistedToBrowserStorage:r}=s,n=(0,a.A)(r.chatState.agentState.serviceDeskState);if(this.serviceDeskCallback=new X(this.serviceManager,this),i.public.serviceDeskFactory){const e={callback:this.serviceDeskCallback,instance:t,persistedState:n};this.serviceDesk=await i.public.serviceDeskFactory(e),function(e){if(e)if("object"!=typeof e)(0,p.yA)(`The custom service desk does not appear to be valid. The type should be "object" but is "${typeof e}"`,e);else{["startChat","endChat","sendMessageToAgent"].forEach(t=>{const s=e[t];"function"!=typeof s&&(0,p.yA)(`The custom service desk does not appear to be valid. The type of property "${t}"should be "function" but is "${typeof s}"`,s,e)});const t=e.getName?.();if(!t)throw Error("The custom service desk does not have a name.");if(t&&("string"!=typeof t||t.length>40))throw new Error(`The custom service desk name "${t}" is not valid.`)}else(0,p.yA)("The custom service desk does not appear to be valid. No service desk was provided.",e)}(this.serviceDesk),(0,p.cY)("Initializing a custom service desk")}this.showLeaveWarning=!this.serviceDesk?.reconnect}async startChat(e,t){if(!this.serviceDesk)throw new Error("A service desk has not been configured.");if(this.serviceManager.store.getState().persistedToBrowserStorage.chatState.agentState.isSuspended&&await this.endChat(!0,!0,!1),this.chatStarted)throw new Error("A chat is already running. A call to endChat must be made before a new chat can start.");const{serviceManager:s}=this;try{this.chatStarted=!0,this.isAgentTyping=!1,this.uploadingFiles.clear(),this.serviceManager.store.dispatch((0,o.cg)(this.uploadingFiles.size>0));const a={type:S.xp.AGENT_PRE_START_CHAT,message:t};if(await s.fire(a),a.cancelStartChat)return this.chatStarted=!1,await this.fireEndChat(!1,!0),void s.store.dispatch((0,o.np)(!1,null));const i=s.store.getState().config.public.serviceDesk?.agentJoinTimeoutSeconds;i&&(this.waitingForAgentJoinedTimer=setTimeout(()=>this.handleAgentJoinedTimeout(),1e3*i)),s.store.dispatch((0,o.np)(!0,e.ui_state.id)),await this.serviceDesk.startChat(t,{preStartChatPayload:a.preStartChatPayload})}catch(e){throw(0,p.yA)("[startChat] An error with the service desk occurred.",e),this.serviceDeskCallback&&await this.serviceDeskCallback.setErrorStatus({type:u.By.CONNECTING,logInfo:e}),s.store.dispatch((0,o.np)(!1,null)),this.chatStarted=!1,this.cancelAgentJoinedTimer(),e}}async firePreEndChat(e){const t={type:S.xp.AGENT_PRE_END_CHAT,endedByAgent:e,preEndChatPayload:null,cancelEndChat:!1};return await this.serviceManager.fire(t),t}async fireEndChat(e,t){await this.serviceManager.fire({type:S.xp.AGENT_END_CHAT,endedByAgent:e,requestCancelled:t})}async endChat(e,t=!0,s=!0){if(!this.chatStarted||!this.serviceDesk)return;const{isConnected:a}=this.persistedAgentState();let i;if(a&&(i=await this.firePreEndChat(!1),i.cancelEndChat))return;const r=e?I:L;await this.doEndChat(!1,i?.preEndChatPayload,t,s,r)}async doEndChat(e,t,s,a,i){const{isConnected:r}=this.persistedAgentState(),n=this.isSuspended();this.cancelAgentJoinedTimer(),this.closeScreenShareRequestModal(u.Ri.CANCELLED);try{await(0,d.$)(this.serviceDesk.endChat({endedByAgent:e,preEndChatPayload:t}),5e3)}catch(e){(0,p.yA)("[doEndChat] An error with the service desk occurred.",e)}if(r&&s){const{agentProfile:e}=this.persistedAgentState();await D(i,e,!0,n,this.serviceManager)}this.chatStarted=!1,this.isAgentTyping=!1,this.serviceManager.store.dispatch((0,o._0)()),await this.fireEndChat(e,!r),r&&a&&await _(1500,n,this.serviceManager)}async sendMessageToAgent(e,t){if(!this.serviceDesk||!this.chatStarted)return;const{serviceManager:s}=this;(0,g.o)(t);const a=(0,l.r2)(e);a.input.agent_message_type=w,await s.fire({type:S.xp.AGENT_PRE_SEND,data:a,files:t});const i=(0,r.A)(a,a.input.text),n=i.ui_state.id,c=[];i.item.text&&c.push(M([i],a)),t.forEach(e=>{const t=(0,l.jS)(e),s=(0,r.A)(t,t.input.text,e.id);c.push(M([s],t)),this.uploadingFiles.add(e.id)}),this.serviceManager.store.dispatch((0,o.cg)(this.uploadingFiles.size>0)),await T(c,0,0,!this.isSuspended(),s);let d=!1,E=!1;setTimeout(()=>{d||E||this.setMessageErrorState(i.fullMessageID,h.J.RETRYING)},3e3),setTimeout(()=>{d||this.setMessageErrorState(i.fullMessageID,h.J.FAILED)},2e4);const u={filesToUpload:t};try{await this.serviceDesk.sendMessageToAgent(a,n,u),d=!0,this.setMessageErrorState(i.fullMessageID,h.J.NONE),await s.fire({type:S.xp.AGENT_SEND,data:a,files:t})}catch(e){E=!0,(0,p.yA)("[sendMessageToAgent] An error with the service desk occurred.",e),this.setMessageErrorState(i.fullMessageID,h.J.FAILED)}}filesSelectedForUpload(e){if(this.serviceDesk&&this.chatStarted)try{this.serviceDesk.filesSelectedForUpload?.(e)}catch(e){(0,p.yA)("[userReadMessages] An error with the service desk occurred.",e)}}async userReadMessages(){if(this.serviceDesk&&this.chatStarted)try{await this.serviceDesk.userReadMessages()}catch(e){(0,p.yA)("[userReadMessages] An error with the service desk occurred.",e)}}async checkAreAnyAgentsOnline(e){let t;const s=this.serviceManager.restartCount;if(this.serviceDesk?.areAnyAgentsOnline)try{const s=this.serviceManager.store.getState().config.public.serviceDesk?.availabilityTimeoutSeconds,a=s?1e3*s:5e3,i=await(0,d.$)(this.serviceDesk.areAnyAgentsOnline(e),a);t=!0===i?u.Gf.ONLINE:!1===i?u.Gf.OFFLINE:u.Gf.UNKNOWN}catch(e){(0,p.yA)("Error attempting to get agent availability",e),t=u.Gf.OFFLINE}else t=u.Gf.UNKNOWN;return s===this.serviceManager.restartCount&&this.serviceManager.fire({type:S.xp.AGENT_ARE_ANY_AGENTS_ONLINE,areAnyAgentsOnline:t}),t}async userTyping(e){if(this.serviceDesk&&this.chatStarted)try{await(this.serviceDesk.userTyping?.(e))}catch(e){(0,p.yA)("[userTyping] An error with the service desk occurred.",e)}}setMessageErrorState(e,t){this.serviceManager.store.dispatch(c.Ay.setMessageErrorState(e,t))}async handleAgentJoinedTimeout(){const e=this.serviceManager.store.getState().languagePack.errors_noAgentsJoined,{originalMessage:t,localMessage:s}=(0,n.fS)(e);await T([M([s],t)],0,0,!this.isSuspended(),this.serviceManager),this.endChat(!1)}cancelAgentJoinedTimer(){this.waitingForAgentJoinedTimer&&(clearTimeout(this.waitingForAgentJoinedTimer),this.waitingForAgentJoinedTimer=null)}async screenShareUpdateRequestState(e){if(!this.persistedAgentState().isConnected)return;let t;switch(this.closeScreenShareRequestModal(e),e){case u.Ri.ACCEPTED:t=J;break;case u.Ri.DECLINED:t=H;break;case u.Ri.CANCELLED:t=O;break;case u.Ri.ENDED:t=q;break;default:return}await this.addAgentLocalMessage(t)}async screenShareStop(){this.serviceManager.store.dispatch((0,o.F)(!1)),await this.addAgentLocalMessage(q),await(this.serviceDesk?.screenShareStop?.())}async handleHydration(e,t){const{store:s}=this.serviceManager;let a=!1;const{isConnected:i}=this.persistedAgentState();if(i){if(this.chatStarted=!0,e&&this.serviceDesk?.reconnect)try{s.dispatch((0,o.AF)(!0)),setTimeout(this.serviceManager.appWindow.requestFocus),a=await this.serviceDesk.reconnect()}catch(e){(0,p.yA)("Error while trying to reconnect to an agent.",e)}if(s.dispatch((0,o.AF)(!1)),!this.persistedAgentState().isConnected)return void(this.chatStarted=!1);if(setTimeout(this.serviceManager.appWindow.requestFocus),a)this.showLeaveWarning=!1;else{this.chatStarted=!1;const e=this.isSuspended();if(s.dispatch((0,o._0)()),t){const{agentProfile:t}=this.persistedAgentState();await D(y.Xb.CHAT_WAS_ENDED,t,!1,e,this.serviceManager),await _(0,e,this.serviceManager)}}}}closeScreenShareRequestModal(e){this.serviceManager.store.dispatch((0,o.KT)(!1)),this.screenShareRequestPromise&&(this.screenShareRequestPromise.doResolve(e),this.screenShareRequestPromise=null),this.serviceManager.store.dispatch((0,o.F)(e===u.Ri.ACCEPTED))}async addAgentLocalMessage(e,t,s=!0,a=!0){t||(t=this.persistedAgentState().agentProfile);const{localMessage:i,originalMessage:r}=await C(e,this.serviceManager,t,s);await T([M([i],r)],0,0,!this.isSuspended(),this.serviceManager)}persistedAgentState(){return this.serviceManager.store.getState().persistedToBrowserStorage.chatState.agentState}isSuspended(){return this.serviceManager.store.getState().persistedToBrowserStorage.chatState.agentState.isSuspended}}class X{constructor(e,t){this.serviceManager=e,this.service=t}updateCapabilities(e){this.serviceManager.store.dispatch((0,o.qb)((0,a.A)(e)))}async updateAgentAvailability(e){this.service.chatStarted&&this.serviceManager.store.dispatch((0,o.hB)(e))}async agentJoined(e){this.service.chatStarted&&(this.service.cancelAgentJoinedTimer(),this.serviceManager.store.dispatch((0,o.BC)(e)),await this.service.addAgentLocalMessage(m,e),this.service.showLeaveWarning&&(await this.service.addAgentLocalMessage(F,null,!1,!1),this.service.showLeaveWarning=!1))}async agentReadMessages(){this.service.chatStarted&&(0,p.cY)("[ServiceDeskCallbackImpl] agentReadMessages")}async agentTyping(e){this.persistedAgentState().isConnected&&e!==this.service.isAgentTyping&&(this.serviceManager.store.dispatch((0,o.oP)(e)),this.service.isAgentTyping=e)}async sendMessageToUser(e,t){if(!this.service.chatStarted||!e)return;const s="string"==typeof e?(0,l.Z2)(e):e;(0,l.Wf)(s),s.output?.generic?.length&&s.output.generic.forEach(e=>{e.agent_message_type||(e.agent_message_type=y.Xb.FROM_AGENT)});const{serviceManager:a}=this;let i;void 0===t?i=this.persistedAgentState().agentProfile:(i=this.persistedAgentState().agentProfiles[t],i||(i=this.persistedAgentState().agentProfile,i&&(0,p.yA)(`Got agent ID ${t} but no agent with that ID joined the conversation. Using the current agent instead.`))),await a.fire({type:S.xp.AGENT_PRE_RECEIVE,data:s,agentProfile:i}),s.history.agent_profile=i;const r=s.output.generic.map(e=>(0,n.CL)(e,s));await T([M(r,s)],0,0,!this.service.isSuspended(),this.serviceManager),await a.fire({type:S.xp.AGENT_RECEIVE,data:s,agentProfile:i})}async beginTransferToAnotherAgent(e){this.service.chatStarted&&(e&&this.serviceManager.store.dispatch((0,o.BC)(e)),await this.service.addAgentLocalMessage(P,e))}async agentLeftChat(){this.service.chatStarted&&(await this.service.addAgentLocalMessage(G),this.service.isAgentTyping=!1,this.serviceManager.store.dispatch((0,o.VD)()))}async agentEndedChat(){if(!this.service.chatStarted)return;const e=await this.service.firePreEndChat(!0);e.cancelEndChat||await this.service.doEndChat(!0,e.preEndChatPayload,!0,!0,b)}async setErrorStatus(e){if(!this.service.chatStarted)return;const{type:t,logInfo:s}=e,{store:a}=this.serviceManager,{isConnecting:i}=a.getState().agentState;switch(s&&(0,p.yA)(`An error occurred in the service desk (type=${t})`,s),i&&e.type===u.By.DISCONNECTED&&e.isDisconnected&&(e={type:u.By.CONNECTING}),e.type){case u.By.DISCONNECTED:e.isDisconnected?(this.service.showingDisconnectedError=!0,await this.service.addAgentLocalMessage(R,null,!0,!1),a.dispatch(c.Ay.updateInputState({isReadonly:!0},!0))):this.service.showingDisconnectedError&&(this.service.showingDisconnectedError=!1,await this.service.addAgentLocalMessage(k,null,!0,!1),a.dispatch(c.Ay.updateInputState({isReadonly:!1},!0)));break;case u.By.CONNECTING:{const{languagePack:t}=this.serviceManager.store.getState(),s=e.messageToUser||t.errors_connectingToAgent,{originalMessage:a,localMessage:r}=(0,n.fS)(s);await T([M([r],a)],0,0,!this.service.isSuspended(),this.serviceManager),this.serviceManager.store.dispatch((0,o.np)(!1,null)),this.service.chatStarted=!1,this.service.cancelAgentJoinedTimer(),await this.service.fireEndChat(!1,i);break}case u.By.USER_MESSAGE:this.service.setMessageErrorState(e.messageID,h.J.FAILED)}}async setFileUploadStatus(e,t,s){const{store:a}=this.serviceManager;if(a.getState().allMessagesByID[e])if(N.aT.COMPLETE,t){if(a.dispatch(c.Ay.setMessageHistoryProperty(e,"file_upload_status",N.aT.COMPLETE)),a.dispatch(c.Ay.setMessageHistoryProperty(e,"error_state",h.J.FAILED)),h.J.FAILED,s){const{originalMessage:e,localMessage:t}=(0,n.fS)(s);t.item.agent_message_type=y.Xb.INLINE_ERROR,await T([M([t],e)],0,0,!this.service.isSuspended(),this.serviceManager)}}else a.dispatch(c.Ay.setMessageHistoryProperty(e,"file_upload_status",N.aT.SUCCESS)),a.dispatch(c.Ay.announceMessage({messageID:"fileSharing_ariaAnnounceSuccess"}));else t&&a.dispatch(c.Ay.fileUploadInputError(e,s,!0));this.service.uploadingFiles.delete(e),this.serviceManager.store.dispatch((0,o.cg)(this.service.uploadingFiles.size>0))}async screenShareRequest(){return this.persistedAgentState().isConnected?(this.service.screenShareRequestPromise||(this.service.screenShareRequestPromise=(0,E.H)(),this.serviceManager.store.dispatch((0,o.KT)(!0)),await this.service.addAgentLocalMessage(B)),this.service.screenShareRequestPromise):Promise.reject(new Error("Cannot request screen sharing if no chat is in progress."))}async screenShareEnded(){const e=this.serviceManager.store.getState().agentState.isScreenSharing,t=this.service.screenShareRequestPromise;this.service.closeScreenShareRequestModal(u.Ri.CANCELLED),e?(this.serviceManager.store.dispatch((0,o.F)(!1)),await this.service.addAgentLocalMessage(q)):t&&await this.service.addAgentLocalMessage(O)}persistedAgentState(){return this.serviceManager.store.getState().persistedToBrowserStorage.chatState.agentState}persistedState(){return this.serviceManager.store.getState().persistedToBrowserStorage.chatState.agentState.serviceDeskState}updatePersistedState(e,t=!0){const{store:s}=this.serviceManager;let r;r=t?(0,i.A)({},s.getState().persistedToBrowserStorage.chatState.agentState.serviceDeskState,e):(0,a.A)(e),s.dispatch((0,o.HO)((0,g.o)(r)))}}function x(e){return new U(e)}}}]);
//# sourceMappingURL=2340.bundle.js.map