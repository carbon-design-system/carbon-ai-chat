{"version":3,"file":"9603.bundle.js","mappings":"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","sources":["webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/utils/lang/langUtils.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackButtonsElement/src/FeedbackButtonsElement.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackButtonsElement/src/feedbackButtonsElement.scss.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackButtonsElement/src/feedbackButtonsElement.template.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackButtonsElement/cds-aichat-feedback-buttons.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/react/components/feedback/FeedbackButtonsComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/tagListElement/src/TagListElement.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/tagListElement/src/tagListElement.scss.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/tagListElement/cds-aichat-tag-list.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/tagListElement/src/tagListElement.template.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/roundedButton/cds-aichat-rounded-button.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackElement/src/FeedbackElement.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackElement/src/feedbackElement.scss.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackElement/cds-aichat-feedback.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/feedbackElement/src/feedbackElement.template.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/react/components/feedback/FeedbackComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/ResponseStopped.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/agent/RealConnectToAgent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/agent/ConnectToAgent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/audio/AudioComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/ClickableImage.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/buttonItem/BaseButtonItemComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/buttonItem/ButtonItemCustomEventComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/buttonItem/ButtonItemPostBackComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/buttonItem/ButtonItemShowPanelComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/buttonItem/ButtonItemURLComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/buttonItem/ButtonItemComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/card/CardItemComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/carousel/CarouselItemComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/hooks/useCallbackOnChange.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/citations/CitationCardContent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/hooks/useWindowSize.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/citations/CitationClickableCard.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/citations/CitationCard.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/utils/searchUtils.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/citations/ExpandToPanelCard.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/PortalComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/conversationalSearch/ConversationalSearchText.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/markdownText/markdown/markdownToHTML.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/conversationalSearch/ConversationalSearch.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/custom/UserDefinedResponse.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/utils/dateUtils.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/datePicker/DatePickerComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/grid/GridItemComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/iframe/IFramePreviewCard.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/iframe/InlineIFrame.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/iframe/IFrameMessage.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/Description.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/Metablock.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/options/SelectComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/options/OptionComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/table/src/table.template.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/table/cds-aichat-table.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/table/src/tableSkeleton.template.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/table/src/tablePagination.template.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/table/src/table.scss.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/react/components/table/Table.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/table/TableContainer.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/tour/TourCard.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/StreamingRichText.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/chainOfThought/src/ChainOfThoughtElement.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/chainOfThought/src/chainOfThoughtElement.scss.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/chainOfThought/src/chainOfThoughtElement.template.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/web-components/components/chainOfThought/cds-aichat-chain-of-thought.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/react/components/chainOfThought/ChainOfThought.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/containers/MessageTypeComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/agent/AvailabilityMessage.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/ErrorIcon.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/error/InlineError.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/modals/EndAgentChatModal.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/image/Image.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/SearchResultBody.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/MediaPlayer.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/TextHolderTile.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/BodyMessageComponents.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/util/FooterButtonComponents.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/BodyWithFooterComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/video/VideoComponent.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/hooks/useCSSCustomProperties.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/SkeletonPicker.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/hooks/useCounter.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/util/MaybeDangerouslySetInnerHTML.js","webpack://@carbon/ai-chat-examples-demo/../packages/ai-chat/dist/es/chat/shared/components/responseTypes/iframe/IFrameComponent.js"],"sourcesContent":["/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Miscellaneous JavaScript utilities.\n */\n/**\n * Determines if the given value is null or undefined.\n */\nfunction isNil(value) {\n    return value === undefined || value === null;\n}\n/**\n * Determines if a given number is odd.\n */\nfunction isOdd(value) {\n    if (value % 2 !== 1) {\n        return true;\n    }\n    return false;\n}\n\nexport { isNil, isOdd };\n","import { __decorate } from 'tslib';\nimport { LitElement, unsafeCSS, css } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport css_248z from './feedbackButtonsElement.scss.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nclass FeedbackButtonsElement extends LitElement {\n}\nFeedbackButtonsElement.styles = css `\n    ${unsafeCSS(css_248z)}\n  `;\n__decorate([\n    property({ type: Boolean, attribute: \"is-positive-open\", reflect: true })\n], FeedbackButtonsElement.prototype, \"isPositiveOpen\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"is-negative-open\", reflect: true })\n], FeedbackButtonsElement.prototype, \"isNegativeOpen\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"is-positive-selected\", reflect: true })\n], FeedbackButtonsElement.prototype, \"isPositiveSelected\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"has-positive-details\", reflect: true })\n], FeedbackButtonsElement.prototype, \"hasPositiveDetails\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"has-negative-details\", reflect: true })\n], FeedbackButtonsElement.prototype, \"hasNegativeDetails\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"is-negative-selected\", reflect: true })\n], FeedbackButtonsElement.prototype, \"isNegativeSelected\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"is-positive-disabled\", reflect: true })\n], FeedbackButtonsElement.prototype, \"isPositiveDisabled\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"is-negative-disabled\", reflect: true })\n], FeedbackButtonsElement.prototype, \"isNegativeDisabled\", void 0);\n__decorate([\n    property({ type: String, attribute: \"positive-label\", reflect: true })\n], FeedbackButtonsElement.prototype, \"positiveLabel\", void 0);\n__decorate([\n    property({ type: String, attribute: \"negative-label\", reflect: true })\n], FeedbackButtonsElement.prototype, \"negativeLabel\", void 0);\n__decorate([\n    property({ type: String, attribute: \"panel-id\", reflect: true })\n], FeedbackButtonsElement.prototype, \"panelID\", void 0);\n__decorate([\n    property({ type: Object, attribute: \"on-click\" })\n], FeedbackButtonsElement.prototype, \"onClick\", void 0);\n\nexport { FeedbackButtonsElement };\n","var css_248z = \".cds--aichat-feedback-buttons{\\n  display:flex;\\n  margin-block-start:0.5rem;\\n}\";\n\nexport { css_248z as default };\n","import '@carbon/web-components/es-custom/components/textarea/index.js';\nimport '@carbon/web-components/es-custom/components/icon-button/index.js';\nimport { toString } from '@carbon/icon-helpers';\nimport ThumbsDown16 from '@carbon/icons/es/thumbs-down/16.js';\nimport ThumbsDownFilled16 from '@carbon/icons/es/thumbs-down--filled/16.js';\nimport ThumbsUp16 from '@carbon/icons/es/thumbs-up/16.js';\nimport ThumbsUpFilled16 from '@carbon/icons/es/thumbs-up--filled/16.js';\nimport { nothing, html } from 'lit';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\nimport { CSS_CLASS_PREFIX } from '../../../settings.js';\nimport '../../../../../types/instance/apiTypes.js';\nimport enLanguagePack from '../../../../languages/en.json.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst ThumbsDown16svg = toString(ThumbsDown16);\nconst ThumbsDownFilled16svg = toString(ThumbsDownFilled16);\nconst ThumbsUp16svg = toString(ThumbsUp16);\nconst ThumbsUpFilled16svg = toString(ThumbsUpFilled16);\nfunction feedbackButtonsElementTemplate(customElementClass) {\n    const { isPositiveOpen, isNegativeOpen, isPositiveSelected, isNegativeSelected, hasPositiveDetails, hasNegativeDetails, isPositiveDisabled, isNegativeDisabled, positiveLabel, negativeLabel, panelID, onClick, } = customElementClass;\n    return html `<div class=\"${CSS_CLASS_PREFIX}-feedback-buttons\">\n    <cds-custom-icon-button\n      class=\"${CSS_CLASS_PREFIX}-feedback-buttons-positive\"\n      size=\"sm\"\n      align=\"top-left\"\n      kind=\"ghost\"\n      role=\"button\"\n      disabled=\"${isPositiveDisabled || nothing}\"\n      aria-expanded=\"${isPositiveDisabled || !hasPositiveDetails\n        ? nothing\n        : isPositiveOpen}\"\n      aria-pressed=\"${isPositiveSelected || nothing}\"\n      aria-controls=\"${panelID}-feedback-positive\"\n      @click=\"${() => onClick(true)}\"\n    >\n      <span slot=\"icon\"\n        >${unsafeSVG(isPositiveSelected ? ThumbsUpFilled16svg : ThumbsUp16svg)}</span\n      >\n      <span slot=\"tooltip-content\"\n        >${positiveLabel || enLanguagePack.feedback_positiveLabel}</span\n      >\n    </cds-custom-icon-button>\n    <cds-custom-icon-button\n      class=\"${CSS_CLASS_PREFIX}-feedback-buttons-negative\"\n      size=\"sm\"\n      align=\"top-left\"\n      kind=\"ghost\"\n      role=\"button\"\n      disabled=\"${isNegativeDisabled || nothing}\"\n      aria-expanded=\"${isNegativeDisabled || !hasNegativeDetails\n        ? nothing\n        : isNegativeOpen}\"\n      aria-pressed=\"${isNegativeSelected || nothing}\"\n      aria-controls=\"${panelID}-feedback-positive\"\n      @click=\"${() => onClick(false)}\"\n    >\n      <span slot=\"icon\"\n        >${unsafeSVG(isNegativeSelected ? ThumbsDownFilled16svg : ThumbsDown16svg)}</span\n      >\n      <span slot=\"tooltip-content\"\n        >${negativeLabel || enLanguagePack.feedback_negativeLabel}</span\n      >\n    </cds-custom-icon-button>\n  </div>`;\n}\n\nexport { feedbackButtonsElementTemplate };\n","import { __decorate } from 'tslib';\nimport { carbonElement } from '../../decorators/customElement.js';\nimport { FeedbackButtonsElement } from './src/FeedbackButtonsElement.js';\nimport { feedbackButtonsElementTemplate } from './src/feedbackButtonsElement.template.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst FEEDBACK_BUTTONS_COMPONENT_TAG_NAME = `cds-aichat-feedback-buttons`;\n/**\n * This class is used to display two feedback buttons (thumbs up and thumbs down).\n */\nlet CDSChatFeedbackButtonsElement = class CDSChatFeedbackButtonsElement extends FeedbackButtonsElement {\n    /**\n     * Renders the template while passing in class functionality.\n     */\n    render() {\n        return feedbackButtonsElementTemplate(this);\n    }\n};\nCDSChatFeedbackButtonsElement = __decorate([\n    carbonElement(FEEDBACK_BUTTONS_COMPONENT_TAG_NAME)\n], CDSChatFeedbackButtonsElement);\n\nexport { FEEDBACK_BUTTONS_COMPONENT_TAG_NAME, CDSChatFeedbackButtonsElement as default };\n","import { createComponent } from '@lit/react';\nimport React from 'react';\nimport CDSChatFeedbackButtonsElement, { FEEDBACK_BUTTONS_COMPONENT_TAG_NAME } from '../../../web-components/components/feedbackButtonsElement/cds-aichat-feedback-buttons.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst FeedbackButtonsComponent = createComponent({\n    tagName: FEEDBACK_BUTTONS_COMPONENT_TAG_NAME,\n    elementClass: CDSChatFeedbackButtonsElement,\n    react: React,\n});\n\nexport { FeedbackButtonsComponent };\n","import { __decorate } from 'tslib';\nimport { unsafeCSS, css, LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport css_248z from './tagListElement.scss.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nclass TagListElement extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The set of tags that have been selected.\n         */\n        this.selectedTags = new Set();\n    }\n    /**\n     * Called when the properties of the component have changed.\n     */\n    updated(changedProperties) {\n        if (changedProperties.has(\"initialSelectedTags\")) {\n            this._setInitialValues(this.initialSelectedTags);\n        }\n    }\n    /**\n     * Updates the initial values used in the component.\n     */\n    _setInitialValues(values) {\n        if (values) {\n            this.selectedTags = new Set(this.initialSelectedTags);\n        }\n    }\n    /**\n     * Called when a tag is clicked.\n     */\n    _handleTagClick(event) {\n        const tagValue = event.target.getAttribute(\"data-content\");\n        const isSelected = this.selectedTags.has(tagValue);\n        if (isSelected) {\n            this.selectedTags.delete(tagValue);\n        }\n        else {\n            this.selectedTags.add(tagValue);\n        }\n        this.onTagsChanged?.(Array.from(this.selectedTags));\n        // Force an update because we changed selectedTags internally but the property reference itself didn't change.\n        this.requestUpdate();\n    }\n}\nTagListElement.styles = css `\n    ${unsafeCSS(css_248z)}\n  `;\n__decorate([\n    property({ type: Array, attribute: \"tags\" })\n], TagListElement.prototype, \"tags\", void 0);\n__decorate([\n    property({ type: Array, attribute: \"initial-selected-tags\" })\n], TagListElement.prototype, \"initialSelectedTags\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"multi-select\" })\n], TagListElement.prototype, \"multiSelect\", void 0);\n__decorate([\n    property({ type: Object, attribute: \"on-tags-changed\" })\n], TagListElement.prototype, \"onTagsChanged\", void 0);\n__decorate([\n    state()\n], TagListElement.prototype, \"selectedTags\", void 0);\n\nexport { TagListElement as default };\n","var css_248z = \".cds--aichat-tag-list-container{\\n  display:flex;\\n  flex-wrap:wrap;\\n  align-items:center;\\n  padding:0;\\n  margin:0;\\n  gap:0.5rem;\\n  list-style:none;\\n}\\n\\n.cds--aichat-tag-list-item{\\n  box-sizing:border-box;\\n  padding:0.125rem;\\n  animation:fade-in 600ms forwards;\\n  font-size:var(--cds-chat-BASE-font-size-small);\\n  opacity:0;\\n}\\n\\n@keyframes fade-in{\\n  from{\\n    opacity:0;\\n  }\\n  to{\\n    opacity:1;\\n  }\\n}\";\n\nexport { css_248z as default };\n","import { __decorate } from 'tslib';\nimport { carbonElement } from '../../decorators/customElement.js';\nimport { WEB_COMPONENT_PREFIX } from '../../settings.js';\nimport TagListElement from './src/TagListElement.js';\nimport { tagListElementTemplate } from './src/tagListElement.template.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst TAG_LIST_TAG_NAME = `${WEB_COMPONENT_PREFIX}-tag-list`;\n/**\n * This component is used to display a list of tags that the user can choose from.\n */\nlet CDSTagListElement = class CDSTagListElement extends TagListElement {\n    /**\n     * Renders the template while passing in class functionality.\n     */\n    render() {\n        return tagListElementTemplate(this);\n    }\n};\nCDSTagListElement = __decorate([\n    carbonElement(TAG_LIST_TAG_NAME)\n], CDSTagListElement);\n\nexport { CDSTagListElement, TAG_LIST_TAG_NAME };\n","import '@carbon/web-components/es-custom/components/tag/index.js';\nimport '@carbon/web-components/es-custom/components/chat-button/index.js';\nimport { html } from 'lit';\nimport { CSS_CLASS_PREFIX } from '../../../settings.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Lit template for code.\n */\nfunction tagListElementTemplate(customElementClass) {\n    const { selectedTags, tags, _handleTagClick: handleTagClick, } = customElementClass;\n    return html `<div class=\"${CSS_CLASS_PREFIX}-tag-list\">\n    ${html `<ul class=\"${CSS_CLASS_PREFIX}-tag-list-container\">\n      ${tags.map((value) => html `<li class=\"${CSS_CLASS_PREFIX}-tag-list-item}\">\n            <cds-custom-chat-button\n              class=\"${CSS_CLASS_PREFIX}-tag-list-button\"\n              kind=\"primary\"\n              size=\"sm\"\n              type=\"button\"\n              is-quick-action\n              role=\"option\"\n              aria-pressed=\"${selectedTags.has(value)}\"\n              ?is-selected=\"${selectedTags.has(value)}\"\n              data-content=\"${value}\"\n              @click=\"${handleTagClick}\"\n            >\n              ${value}\n            </cds-custom-chat-button>\n          </li>`)}\n    </div>`}\n  </div>`;\n}\n\nexport { tagListElementTemplate };\n","import { __decorate } from 'tslib';\nimport CDSButton from '@carbon/web-components/es-custom/components/button/button.js';\nimport { unsafeCSS, css } from 'lit';\nimport { carbonElement } from '../../decorators/customElement.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst ROUNDED_BUTTON_TAG_NAME = `cds-aichat-rounded-button`;\nconst styles = `\n  .cds-custom--btn {\n    border-start-start-radius: var(--${ROUNDED_BUTTON_TAG_NAME}-top-left);\n    border-start-end-radius: var(--${ROUNDED_BUTTON_TAG_NAME}-top-right);\n    border-end-start-radius: var(--${ROUNDED_BUTTON_TAG_NAME}-bottom-left);\n    border-end-end-radius: var(--${ROUNDED_BUTTON_TAG_NAME}-bottom-right);\n    width: var(--${ROUNDED_BUTTON_TAG_NAME}-width);\n    max-width: var(--${ROUNDED_BUTTON_TAG_NAME}-max-width);\n  }`;\n/**\n * This is an extension of the carbon button that allows us to round the corners.\n */\nlet CDSRoundedButtonElement = class CDSRoundedButtonElement extends CDSButton {\n};\nCDSRoundedButtonElement.styles = css `\n    ${CDSButton.styles}\n    ${unsafeCSS(styles)}\n  `;\nCDSRoundedButtonElement = __decorate([\n    carbonElement(ROUNDED_BUTTON_TAG_NAME)\n], CDSRoundedButtonElement);\n\nexport { CDSRoundedButtonElement, ROUNDED_BUTTON_TAG_NAME };\n","import { __decorate } from 'tslib';\nimport { bind } from 'bind-decorator';\nimport { LitElement, unsafeCSS, css } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport css_248z from './feedbackElement.scss.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * The component for displaying a panel requesting feedback from a user.\n */\nclass FeedbackElement extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Indicates whether the text area should be shown.\n         */\n        this.showTextArea = true;\n        /**\n         * Indicates whether the prompt line should be shown.\n         */\n        this.showPrompt = true;\n    }\n    /**\n     * Called when the properties of the component have changed.\n     */\n    updated(changedProperties) {\n        if (changedProperties.has(\"initialValues\")) {\n            this._setInitialValues(this.initialValues);\n        }\n    }\n    /**\n     * Updates the initial values used in the component.\n     */\n    _setInitialValues(values) {\n        if (values) {\n            this._textInput = values.text;\n            this._initialSelectedCategories = values.selectedCategories;\n        }\n    }\n    /**\n     * Stores the current value of the text area used to collect feedback.\n     */\n    _handleTextInput(event) {\n        this._textInput = event.currentTarget.value;\n    }\n    /**\n     * Called when the user clicks the submit button.\n     */\n    _handleSubmit() {\n        this.onSubmit?.({\n            text: this._textInput,\n            selectedCategories: this._selectedCategories,\n        });\n    }\n    /**\n     * Called then the user clicks the close button.\n     */\n    _handleCancel() {\n        this.onClose?.();\n    }\n    /**\n     * Called when the selected categories changes.\n     */\n    _handleCategoryChange(selectedCategories) {\n        this._selectedCategories = selectedCategories;\n    }\n}\nFeedbackElement.styles = css `\n    ${unsafeCSS(css_248z)}\n  `;\n__decorate([\n    property({ type: String, attribute: \"class\", reflect: true })\n], FeedbackElement.prototype, \"class\", void 0);\n__decorate([\n    property({ type: String, reflect: true })\n], FeedbackElement.prototype, \"id\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"is-open\", reflect: true })\n], FeedbackElement.prototype, \"isOpen\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"is-readonly\", reflect: true })\n], FeedbackElement.prototype, \"isReadonly\", void 0);\n__decorate([\n    property({ type: Object, attribute: \"on-close\" })\n], FeedbackElement.prototype, \"onClose\", void 0);\n__decorate([\n    property({ type: Object, attribute: \"on-submit\" })\n], FeedbackElement.prototype, \"onSubmit\", void 0);\n__decorate([\n    property({ type: Object, attribute: \"initial-values\", reflect: true })\n], FeedbackElement.prototype, \"initialValues\", void 0);\n__decorate([\n    property({ type: String, attribute: \"title\", reflect: true })\n], FeedbackElement.prototype, \"title\", void 0);\n__decorate([\n    property({ type: String, attribute: \"prompt\", reflect: true })\n], FeedbackElement.prototype, \"prompt\", void 0);\n__decorate([\n    property({ type: Object, attribute: \"categories\", reflect: true })\n], FeedbackElement.prototype, \"categories\", void 0);\n__decorate([\n    property({ type: String, attribute: \"disclaimer\", reflect: true })\n], FeedbackElement.prototype, \"disclaimer\", void 0);\n__decorate([\n    property({ type: String, attribute: \"text-area-placeholder\", reflect: true })\n], FeedbackElement.prototype, \"placeholder\", void 0);\n__decorate([\n    property({ type: String, attribute: \"cancel-label\", reflect: true })\n], FeedbackElement.prototype, \"cancelLabel\", void 0);\n__decorate([\n    property({ type: String, attribute: \"submit-label\", reflect: true })\n], FeedbackElement.prototype, \"submitLabel\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"show-text-area\", reflect: true })\n], FeedbackElement.prototype, \"showTextArea\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"show-prompt\", reflect: true })\n], FeedbackElement.prototype, \"showPrompt\", void 0);\n__decorate([\n    state()\n], FeedbackElement.prototype, \"_textInput\", void 0);\n__decorate([\n    state()\n], FeedbackElement.prototype, \"_initialSelectedCategories\", void 0);\n__decorate([\n    state()\n], FeedbackElement.prototype, \"_selectedCategories\", void 0);\n__decorate([\n    bind\n], FeedbackElement.prototype, \"_handleCategoryChange\", null);\n\nexport { FeedbackElement };\n","var css_248z = \".cds--aichat-container{\\n  box-sizing:border-box;\\n  border:1px solid var(--cds-chat-bubble-border, #e0e0e0);\\n  border-radius:var(--cds-chat-BASE-border-radius-med);\\n  animation:fade-in 600ms forwards;\\n  background-color:var(--cds-chat-shell-background, #ffffff);\\n  container-type:inline-size;\\n  inline-size:100%;\\n  margin-block-start:0.25rem;\\n}\\n\\n.cds--aichat-is-closed{\\n  display:none;\\n}\\n\\n.cds--aichat-title-row{\\n  display:flex;\\n  margin-block-start:0.75rem;\\n  margin-inline:1rem 0.5rem;\\n}\\n\\n.cds--aichat-title{\\n  flex:1;\\n  font-size:var(--cds-chat-BASE-font-size-xlarge);\\n  line-height:var(--cds-chat-BASE-line-height-xlarge);\\n}\\n\\n.cds--aichat-close{\\n  margin-inline-start:0.5rem;\\n}\\n\\n.cds--aichat-disclaimer,\\n.cds--aichat-prompt{\\n  color:var(--cds-text-secondary, #525252);\\n  font-size:var(--cds-chat-BASE-font-size-small);\\n  line-height:var(--cds-chat-BASE-line-height-small);\\n  margin-block-start:0.5rem;\\n  margin-inline:1rem;\\n}\\n\\n.cds--aichat-categories{\\n  margin-block-start:0.5rem;\\n  margin-inline:1rem;\\n}\\n\\n.cds--aichat-feedback-text{\\n  margin-block-start:0.5rem;\\n  margin-inline:1rem;\\n}\\n\\n.cds--aichat-buttons{\\n  display:flex;\\n  inline-size:100%;\\n  margin-block-start:1rem;\\n}\\n\\n.cds--aichat-submit{\\n  flex:1;\\n  --cds-aichat-rounded-button-bottom-right:var(\\n    --cds-chat-BASE-border-radius-med\\n  );\\n  --cds-aichat-rounded-button-width:100%;\\n  --cds-aichat-rounded-button-max-width:100%;\\n}\\n\\n.cds--aichat-cancel{\\n  flex:1;\\n  --cds-aichat-rounded-button-bottom-left:var(\\n    --cds-chat-BASE-border-radius-med\\n  );\\n  --cds-aichat-rounded-button-width:100%;\\n  --cds-aichat-rounded-button-max-width:100%;\\n}\\n\\n@keyframes fade-in{\\n  from{\\n    opacity:0;\\n  }\\n  to{\\n    opacity:1;\\n  }\\n}\";\n\nexport { css_248z as default };\n","import { __decorate } from 'tslib';\nimport '../tagListElement/cds-aichat-tag-list.js';\nimport '../roundedButton/cds-aichat-rounded-button.js';\nimport { carbonElement } from '../../decorators/customElement.js';\nimport { FeedbackElement } from './src/FeedbackElement.js';\nimport { feedbackElementTemplate } from './src/feedbackElement.template.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst FEEDBACK_COMPONENT_TAG_NAME = `cds-aichat-feedback`;\n/**\n * Constructed class functionality for the test input custom element\n */\nlet CDSChatFeedbackElement = class CDSChatFeedbackElement extends FeedbackElement {\n    /**\n     * Renders the template while passing in class functionality.\n     */\n    render() {\n        return feedbackElementTemplate(this);\n    }\n};\nCDSChatFeedbackElement = __decorate([\n    carbonElement(FEEDBACK_COMPONENT_TAG_NAME)\n], CDSChatFeedbackElement);\n\nexport { FEEDBACK_COMPONENT_TAG_NAME, CDSChatFeedbackElement as default };\n","import '@carbon/web-components/es-custom/components/button/index.js';\nimport '@carbon/web-components/es-custom/components/icon-button/index.js';\nimport '@carbon/web-components/es-custom/components/layer/index.js';\nimport '@carbon/web-components/es-custom/components/textarea/index.js';\nimport '../../tagListElement/cds-aichat-tag-list.js';\nimport cx from 'classnames';\nimport { nothing, html } from 'lit';\nimport { CSS_CLASS_PREFIX } from '../../../settings.js';\nimport '../../../../../types/instance/apiTypes.js';\nimport enLanguagePack from '../../../../languages/en.json.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n// The maximum number of characters the user is allowed to type into the text area.\nconst MAX_TEXT_COUNT = 1000;\n/**\n * Lit template for feedback.\n */\nfunction feedbackElementTemplate(customElementClass) {\n    const { _handleCancel: handleCancel, _handleSubmit: handleSubmit, _handleTextInput: handleTextInput, _initialSelectedCategories: initialSelectedCategories, _textInput: textInput, _handleCategoryChange: handleCategoryChange, id, isReadonly, isOpen, title, prompt, placeholder, categories, disclaimer, showTextArea, showPrompt, submitLabel, cancelLabel, } = customElementClass;\n    return html `<div\n    class=\"${cx(`${CSS_CLASS_PREFIX}-container`, {\n        [`${CSS_CLASS_PREFIX}-is-closed`]: !isOpen,\n    })}\"\n  >\n    <div class=\"${CSS_CLASS_PREFIX}-title-row\">\n      <div class=\"${CSS_CLASS_PREFIX}-title\">\n        ${title || enLanguagePack.feedback_defaultTitle}\n      </div>\n    </div>\n    ${showPrompt\n        ? html `<div class=\"${CSS_CLASS_PREFIX}-prompt\">\n          ${prompt || enLanguagePack.feedback_defaultPrompt}\n        </div>`\n        : \"\"}\n    ${categories?.length\n        ? html `<div class=\"${CSS_CLASS_PREFIX}-categories\">\n          <cds-aichat-tag-list\n            .tags=${categories}\n            .initialSelectedTags=${initialSelectedCategories}\n            .onTagsChanged=${handleCategoryChange}\n          >\n          </cds-aichat-tag-list>\n        </div>`\n        : \"\"}\n    ${showTextArea\n        ? html `<div class=\"${CSS_CLASS_PREFIX}-feedback-text\">\n          <cds-custom-layer level=\"1\">\n            <cds-custom-textarea\n              id=\"${id}-text-area\"\n              value=\"${textInput}\"\n              class=\"${CSS_CLASS_PREFIX}-feedback-text-area\"\n              ?disabled=\"${isReadonly}\"\n              placeholder=\"${placeholder ||\n            enLanguagePack.feedback_defaultPlaceholder}\"\n              rows=\"3\"\n              max-count=\"${MAX_TEXT_COUNT}\"\n              @input=${handleTextInput}\n            ></cds-custom-textarea>\n          </cds-custom-layer>\n        </div>`\n        : \"\"}\n    ${disclaimer\n        ? html `<div class=\"${CSS_CLASS_PREFIX}-disclaimer\">\n          <cds-aichat-markdown-text\n            markdown=\"${disclaimer}\"\n          ></cds-aichat-markdown-text>\n        </div>`\n        : \"\"}\n    <div class=\"${CSS_CLASS_PREFIX}-buttons\">\n      <cds-aichat-rounded-button\n        class=\"${CSS_CLASS_PREFIX}-cancel\"\n        disabled=${isReadonly || nothing}\n        size=\"lg\"\n        kind=\"secondary\"\n        @click=${handleCancel}\n      >\n        ${cancelLabel || enLanguagePack.feedback_cancelLabel}\n      </cds-aichat-rounded-button>\n      <cds-aichat-rounded-button\n        class=\"${CSS_CLASS_PREFIX}-submit\"\n        disabled=${isReadonly || nothing}\n        size=\"lg\"\n        @click=${handleSubmit}\n      >\n        ${submitLabel || enLanguagePack.feedback_submitLabel}\n      </cds-aichat-rounded-button>\n    </div>\n  </div>`;\n}\n\nexport { feedbackElementTemplate };\n","import { createComponent } from '@lit/react';\nimport React from 'react';\nimport CDSChatFeedbackElement, { FEEDBACK_COMPONENT_TAG_NAME } from '../../../web-components/components/feedbackElement/cds-aichat-feedback.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst FeedbackComponent = createComponent({\n    tagName: FEEDBACK_COMPONENT_TAG_NAME,\n    elementClass: CDSChatFeedbackElement,\n    react: React,\n});\n\nexport { FeedbackComponent };\n","import React from 'react';\nimport { useLanguagePack } from '../hooks/useLanguagePack.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is for displaying a message under streamed responses that were stopped.\n */\nfunction ResponseStopped() {\n    const { messages_responseStopped } = useLanguagePack();\n    return React.createElement(\"div\", { className: \"WACResponseStopped\" }, messages_responseStopped);\n}\n\nexport { ResponseStopped };\n","import Checkmark from '@carbon/icons-react/es/Checkmark.js';\nimport Headset from '@carbon/icons-react/es/Headset.js';\nimport HelpDesk from '@carbon/icons-react/es/HelpDesk.js';\nimport Logout from '@carbon/icons-react/es/Logout.js';\nimport { Tile, Button } from '@carbon/react';\nimport React, { useState } from 'react';\nimport { AgentsOnlineStatus } from '../../../../../types/config/ServiceDeskConfig.js';\nimport { AvailabilityMessage } from '../../agent/AvailabilityMessage.js';\nimport { EndAgentChatModal } from '../../modals/EndAgentChatModal.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is displayed to the user when a \"connect to agent\" response comes back from the server. This\n * informs the user that we are able to connect them to a human agent and display a confirmation asking if they do\n * want to connect.\n *\n * This is the \"real\" component that is displayed to users as opposed to the \"preview\" component that is displayed\n * for users using the preview link.\n */\nfunction RealConnectToAgent(props) {\n    const { languagePack, localMessage, originalMessage, disableUserInputs, serviceManager, agentState, requestFocus, agentDisplayState, persistedAgentState, } = props;\n    const { activeLocalMessageID, availability, isConnecting } = agentState;\n    const { isSuspended } = persistedAgentState;\n    const [showConfirmSuspended, setShowConfirmSuspended] = useState(false);\n    if (!isSuspended && showConfirmSuspended) {\n        // This can happen if the user is disconnected while waiting for the confirmation.\n        setShowConfirmSuspended(false);\n    }\n    function doStartChat() {\n        if (isSuspended && !showConfirmSuspended) {\n            // If there is already a suspended chat and we're not showing the confirmation modal, then we need to confirm\n            // first.\n            setShowConfirmSuspended(true);\n        }\n        else {\n            setShowConfirmSuspended(false);\n            serviceManager.humanAgentService.startChat(localMessage, originalMessage);\n            // The connect button will become disabled. We need to move focus to the cancel button but do so in a timeout to\n            // give it a chance to render.\n            setTimeout(requestFocus);\n        }\n    }\n    const noAgentsWereOnline = originalMessage.history.agent_availability === AgentsOnlineStatus.OFFLINE;\n    if (noAgentsWereOnline) {\n        // Display the \"agents are not available\" message that was configured in the skill or show a default value if\n        // there is none.\n        const agentUnavailableMessage = localMessage.item.agent_unavailable?.message ||\n            languagePack.default_agent_unavailableMessage;\n        return React.createElement(\"div\", null, agentUnavailableMessage);\n    }\n    const textFromMessage = localMessage.item.agent_available?.message ||\n        languagePack.default_agent_availableMessage;\n    let buttonIcon; // CarbonIconType is not exported, currently.\n    let buttonText;\n    let showDisabled = disableUserInputs || agentDisplayState.isConnectingOrConnected;\n    let messageToUser = textFromMessage;\n    if (localMessage.ui_state.id === activeLocalMessageID) {\n        // This card is the active card in a chat that has been started.\n        showDisabled = true;\n        if (isConnecting) {\n            // In the connecting state, the text on the card changes as the availability information is updated by the\n            // service desk integration.\n            buttonIcon = Checkmark;\n            buttonText = languagePack.agent_cardButtonChatRequested;\n            messageToUser = (React.createElement(AvailabilityMessage, { availability: availability, fallbackText: languagePack.agent_connectWaiting }));\n        }\n        else {\n            buttonIcon = Headset;\n            buttonText = languagePack.agent_cardButtonConnected;\n            messageToUser = languagePack.agent_cardMessageConnected;\n        }\n    }\n    else if (disableUserInputs) {\n        if (localMessage.ui_state.wasAgentChatEnded) {\n            buttonIcon = Logout;\n            buttonText = languagePack.agent_cardButtonChatEnded;\n            messageToUser = languagePack.agent_cardMessageChatEnded;\n        }\n        else {\n            buttonIcon = Headset;\n            buttonText = languagePack.agent_startChat;\n        }\n    }\n    else {\n        buttonIcon = HelpDesk;\n        buttonText = languagePack.agent_startChat;\n    }\n    return (React.createElement(Tile, { className: \"WACConnectToAgent\" },\n        React.createElement(\"div\", { className: \"WACConnectToAgent__Title\" },\n            React.createElement(\"span\", null, languagePack.agent_chatTitle)),\n        React.createElement(\"div\", { className: \"WACConnectToAgent__Text\" }, messageToUser),\n        React.createElement(Button, { className: \"WACConnectToAgent__RequestButton\", size: \"md\", disabled: showDisabled, onClick: doStartChat, renderIcon: buttonIcon }, buttonText),\n        !showDisabled && isSuspended && (React.createElement(\"div\", { className: \"WACConnectToAgent__SuspendedWarning\" }, languagePack.agent_suspendedWarning)),\n        showConfirmSuspended && (React.createElement(EndAgentChatModal, { title: languagePack.agent_confirmSuspendedEndChatTitle, message: languagePack.agent_confirmSuspendedEndChatMessage, onConfirm: doStartChat, onCancel: () => setShowConfirmSuspended(false) }))));\n}\n\nexport { RealConnectToAgent };\n","import React from 'react';\nimport { hasServiceDesk } from '../../../utils/messageUtils.js';\nimport { RealConnectToAgent } from './RealConnectToAgent.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is displayed to the user when a \"connect to agent\" response comes back from the server. This\n * informs the user that we are able to connect them to a human agent and displays a confirmation asking if they do\n * want to connect.\n *\n * This component will display the appropriate panel depending on whether the user is viewing the preview link.\n */\nfunction ConnectToAgent(props) {\n    const { languagePack, localMessage, originalMessage, config, serviceManager, disableUserInputs, agentState, requestFocus, agentDisplayState, persistedAgentState, } = props;\n    // Disable the \"start chat\" button if the widget is in a readonly mode or a preview mode with no service desk.\n    const childDisableUserInputs = disableUserInputs || !hasServiceDesk(config);\n    // The Carbon InlineNotification component doesn't allow HTML anymore, so faking it here.\n    return (React.createElement(\"div\", null,\n        React.createElement(RealConnectToAgent, { localMessage: localMessage, originalMessage: originalMessage, languagePack: languagePack, serviceManager: serviceManager, disableUserInputs: childDisableUserInputs, agentState: agentState, persistedAgentState: persistedAgentState, agentDisplayState: agentDisplayState, requestFocus: requestFocus })));\n}\n\nexport { ConnectToAgent };\n","import React from 'react';\nimport { MediaPlayer as MediaPlayerExport } from '../util/MediaPlayer.js';\nimport { MessageResponseTypes } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction AudioComponent({ source, ...props }) {\n    // Determine if the provided source is a Mixcloud link in order to set a fixed height it uses.\n    const isMixCloud = source?.startsWith(\"https://www.mixcloud.com\");\n    return (React.createElement(MediaPlayerExport, { type: MessageResponseTypes.AUDIO, source: source, isMixcloud: isMixCloud, ...props }));\n}\nconst AudioComponentExport = React.memo(AudioComponent);\n\nexport { AudioComponentExport as AudioComponent };\n","import React from 'react';\nimport VisuallyHidden from '../../util/VisuallyHidden.js';\nimport { Image as ImageExport } from '../image/Image.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is the same as the {@link Image} component, but makes it clickable. Depending on the props, it can\n * be a normal clickable tile or link.\n */\nfunction ClickableImage({ buttonAltText, isLink, target, disabled, onClick, ...imageProps }) {\n    if (isLink) {\n        return (React.createElement(\"a\", { className: \"WACClickableImage\", href: imageProps.displayURL, rel: \"noopener noreferrer\", target: target, onClick: onClick },\n            React.createElement(ImageExport, { ...imageProps }),\n            buttonAltText && React.createElement(VisuallyHidden, null, buttonAltText)));\n    }\n    return (React.createElement(\"button\", { className: \"WACClickableImage\", type: \"button\", onClick: onClick, disabled: disabled },\n        React.createElement(ImageExport, { ...imageProps }),\n        buttonAltText && React.createElement(VisuallyHidden, null, buttonAltText)));\n}\n\nexport { ClickableImage };\n","import { Button } from '@carbon/react';\nimport cx from 'classnames';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { ClickableImage } from '../util/ClickableImage.js';\nimport { ButtonItemKind } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This is the base button component for the \"button\" response type.\n */\nfunction BaseButtonItemComponent({ className, label, kind, url, target = \"_blank\", disabled, renderIcon, imageURL, altText, onClick, }) {\n    const { errors_imageSource } = useLanguagePack();\n    const useAITheme = useSelector((state) => state.theme.useAITheme);\n    const text = label || url;\n    const linkTarget = url ? target : undefined;\n    if (imageURL) {\n        return (React.createElement(ClickableImage, { imageError: errors_imageSource, source: imageURL, target: target, title: label, displayURL: url, altText: altText, renderIcon: renderIcon, onClick: onClick, disabled: disabled, isLink: Boolean(url), useAITheme: useAITheme }));\n    }\n    return (React.createElement(Button, { className: cx(\"WACButtonItem\", className), as: url ? \"a\" : undefined, kind: getButtonKind(kind), href: url, target: linkTarget, rel: url ? \"noopener noreferrer\" : undefined, disabled: disabled, renderIcon: renderIcon, onClick: onClick }, text));\n}\nfunction getButtonKind(style) {\n    switch (style) {\n        case ButtonItemKind.LINK:\n        case ButtonItemKind.TERTIARY:\n            return \"ghost\";\n        case ButtonItemKind.DEFAULT:\n            return \"primary\";\n        default:\n            return style;\n    }\n}\n\nexport { BaseButtonItemComponent };\n","import TouchInteraction from '@carbon/icons-react/es/TouchInteraction.js';\nimport React, { useCallback } from 'react';\nimport { useServiceManager } from '../../../hooks/useServiceManager.js';\nimport { BusEventType } from '../../../../../types/events/eventBusTypes.js';\nimport { BaseButtonItemComponent } from './BaseButtonItemComponent.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is for a button response type where the button_type is \"custom_event\" that fires an event when\n * clicked that developers can hook into.\n */\nfunction ButtonItemCustomEventComponent({ localMessageItem, fullMessage, }) {\n    const serviceManager = useServiceManager();\n    const messageItem = localMessageItem.item;\n    const { ui_state } = localMessageItem;\n    const { image_url, alt_text, label, kind, value } = messageItem;\n    const isDisabled = Boolean(value && ui_state.optionSelected);\n    const onClickHandler = useCallback(async () => {\n        await serviceManager.fire({\n            type: BusEventType.MESSAGE_ITEM_CUSTOM,\n            messageItem,\n            fullMessage,\n        });\n    }, [messageItem, serviceManager, fullMessage]);\n    return (React.createElement(BaseButtonItemComponent, { imageURL: image_url, altText: alt_text, label: label, kind: kind, disabled: isDisabled, renderIcon: (image_url && TouchInteraction) || undefined, onClick: onClickHandler }));\n}\n\nexport { ButtonItemCustomEventComponent };\n","import Send from '@carbon/icons-react/es/Send.js';\nimport React, { useCallback } from 'react';\nimport { useServiceManager } from '../../../hooks/useServiceManager.js';\nimport actions from '../../../store/actions.js';\nimport { WA_CONSOLE_PREFIX } from '../../../utils/constants.js';\nimport { createMessageRequestForButtonItemOption } from '../../../utils/messageUtils.js';\nimport { consoleError } from '../../../utils/miscUtils.js';\nimport { MessageSendSource } from '../../../../../types/events/eventBusTypes.js';\nimport { BaseButtonItemComponent } from './BaseButtonItemComponent.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is for a button response type where the button_type is \"post_back\" that can send a message request\n * to the assistant. When the button is clicked, it gets disabled.\n */\nfunction ButtonItemPostBackComponent({ localMessageItem, requestFocus, isMessageForInput, }) {\n    const serviceManager = useServiceManager();\n    const messageItem = localMessageItem.item;\n    const { ui_state, fullMessageID } = localMessageItem;\n    const { image_url, alt_text, label, kind } = messageItem;\n    const isDisabled = !isMessageForInput || Boolean(ui_state.optionSelected);\n    const onClickHandler = useCallback(() => {\n        const isInputAvailable = Boolean(messageItem.value?.input?.text || label);\n        if (isInputAvailable) {\n            const messageRequest = createMessageRequestForButtonItemOption(messageItem, fullMessageID);\n            requestFocus();\n            serviceManager.store.dispatch(actions.messageSetOptionSelected(ui_state.id, messageRequest));\n            serviceManager.actions.sendWithCatch(messageRequest, MessageSendSource.POST_BACK_BUTTON);\n        }\n        else {\n            consoleError(`${WA_CONSOLE_PREFIX} post_back button with label \"${messageItem.label}\" has no input message to send.`);\n        }\n    }, [\n        messageItem,\n        label,\n        fullMessageID,\n        requestFocus,\n        serviceManager.store,\n        serviceManager.actions,\n        ui_state.id,\n    ]);\n    return (React.createElement(BaseButtonItemComponent, { imageURL: image_url, altText: alt_text, label: label, kind: kind, onClick: onClickHandler, renderIcon: (image_url && Send) || undefined, disabled: isDisabled }));\n}\n\nexport { ButtonItemPostBackComponent };\n","import ArrowRight from '@carbon/icons-react/es/ArrowRight.js';\nimport React, { useCallback } from 'react';\nimport { useServiceManager } from '../../../hooks/useServiceManager.js';\nimport actions from '../../../store/actions.js';\nimport { BaseButtonItemComponent } from './BaseButtonItemComponent.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is for a button response type where the button_type is \"show_panel\". This component is a button\n * opens a panel when clicked. The panel content is authored similarly to normal response types, but instead of\n * appearing in the chat they appear in a panel under the \"panel.body\" or \"panel.footer\" property.\n */\nfunction ButtonItemShowPanelComponent({ localMessageItem, isMessageForInput, }) {\n    const serviceManager = useServiceManager();\n    const { image_url, alt_text, label, kind } = localMessageItem.item;\n    /**\n     * Once the button is clicked, render the panel content and update the message history to remember the panel being.\n     */\n    const onClickHandler = useCallback(async () => {\n        serviceManager.store.dispatch(actions.setResponsePanelIsOpen(true));\n        serviceManager.store.dispatch(actions.setResponsePanelContent(localMessageItem, isMessageForInput));\n    }, [localMessageItem, isMessageForInput, serviceManager]);\n    return (React.createElement(BaseButtonItemComponent, { className: \"BaseButtonItemComponent__ShowPanel\", imageURL: image_url, altText: alt_text, label: label, kind: kind, renderIcon: (image_url && ArrowRight) || undefined, onClick: onClickHandler }));\n}\n\nexport { ButtonItemShowPanelComponent };\n","import Launch from '@carbon/icons-react/es/Launch.js';\nimport { Link } from '@carbon/react';\nimport React from 'react';\nimport { ButtonItemKind } from '../../../../../types/messaging/Messages.js';\nimport { BaseButtonItemComponent } from './BaseButtonItemComponent.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is for a button response type where the button_type is \"url\". Clicking this button will take the\n * user to the provided url. A target location can also be provided.\n */\nfunction ButtonItemURLComponent({ localMessageItem, }) {\n    const { image_url, alt_text, url, target, label, kind } = localMessageItem.item;\n    // If no image url is provided and should is a normal link, then render a carbon link.\n    if (!image_url && kind === ButtonItemKind.LINK) {\n        return (React.createElement(\"div\", { className: \"WAC__received--textContent WACButtonItem\" },\n            React.createElement(Link, { className: \"WACWidget__breakWord\", href: url, target: target, rel: \"noopener noreferrer\", renderIcon: Launch }, label || url)));\n    }\n    return (React.createElement(BaseButtonItemComponent, { imageURL: image_url, altText: alt_text, label: label, kind: kind, url: url, target: target, renderIcon: Launch }));\n}\n\nexport { ButtonItemURLComponent };\n","import React from 'react';\nimport { ButtonItemCustomEventComponent } from './ButtonItemCustomEventComponent.js';\nimport { ButtonItemPostBackComponent } from './ButtonItemPostBackComponent.js';\nimport { ButtonItemShowPanelComponent } from './ButtonItemShowPanelComponent.js';\nimport { ButtonItemURLComponent } from './ButtonItemURLComponent.js';\nimport { ButtonItemType } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component determines the button response type to render.\n */\nfunction ButtonItemComponent(props) {\n    switch (props.localMessageItem.item.button_type) {\n        case ButtonItemType.URL:\n            return (React.createElement(ButtonItemURLComponent, { localMessageItem: props.localMessageItem }));\n        case ButtonItemType.SHOW_PANEL:\n            return (React.createElement(ButtonItemShowPanelComponent, { localMessageItem: props.localMessageItem, isMessageForInput: props.isMessageForInput }));\n        case ButtonItemType.CUSTOM_EVENT:\n            return (React.createElement(ButtonItemCustomEventComponent, { localMessageItem: props.localMessageItem, fullMessage: props.fullMessage }));\n        default:\n            return (React.createElement(ButtonItemPostBackComponent, { localMessageItem: props.localMessageItem, requestFocus: props.requestFocus, isMessageForInput: props.isMessageForInput }));\n    }\n}\n\nexport { ButtonItemComponent };\n","import { Tile } from '@carbon/react';\nimport cx from 'classnames';\nimport React from 'react';\nimport { BodyWithFooterComponent } from '../../BodyWithFooterComponent.js';\nimport { WidthOptions } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component renders the card response type. A card can be used to author a custom card containing existing\n * response types.\n */\nfunction CardItemComponent(props) {\n    const { ignoreMaxWidth } = props;\n    const item = props.localMessageItem.item;\n    return (React.createElement(Tile, { className: cx(\"WACCardMessageComponent\", {\n            WACMaxWidthSmall: !ignoreMaxWidth && item.max_width === WidthOptions.SMALL,\n            WACMaxWidthMedium: !ignoreMaxWidth && item.max_width === WidthOptions.MEDIUM,\n            WACMaxWidthLarge: !ignoreMaxWidth && item.max_width === WidthOptions.LARGE,\n        }) },\n        React.createElement(BodyWithFooterComponent, { ...props })));\n}\nconst CardComponentExport = React.memo(CardItemComponent);\n\nexport { CardComponentExport as CardItemComponent };\n","import React, { Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { SkeletonPlaceholder } from '../../SkeletonPicker.js';\nimport { CardItemComponent as CardComponentExport } from '../card/CardItemComponent.js';\nimport { lazyCarousel } from '../../../../dynamic-imports/dynamic-imports.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst Carousel = lazyCarousel();\nfunction CarouselItemComponent(props) {\n    const { localMessageItem, fullMessage, isMessageForInput, requestFocus } = props;\n    const allMessageItemsByID = useSelector((state) => state.allMessageItemsByID);\n    const { itemsLocalMessageItemIDs } = localMessageItem.ui_state;\n    return (React.createElement(Suspense, { fallback: React.createElement(SkeletonPlaceholder, null) },\n        React.createElement(Carousel, null, itemsLocalMessageItemIDs.map((nestedLocalMessageItemID) => {\n            const localMessageItem = allMessageItemsByID[nestedLocalMessageItemID];\n            return (React.createElement(CardComponentExport, { key: nestedLocalMessageItemID, localMessageItem: localMessageItem, fullMessage: fullMessage, isMessageForInput: isMessageForInput, ignoreMaxWidth: true, requestFocus: requestFocus }));\n        }))));\n}\n\nexport { CarouselItemComponent };\n","import debounce from 'lodash-es/debounce.js';\nimport { useMemo } from 'react';\nimport { usePrevious } from './usePrevious.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This hooks will observe the given value and will call the given function when the chunks have changed.\n */\nfunction useCallbackOnChange(value, callback) {\n    const doDebounced = useMemo(() => {\n        return callback && debounce(callback, 100, { maxWait: 100, leading: true });\n    }, [callback]);\n    if (usePrevious(value) !== value && callback) {\n        setTimeout(doDebounced);\n    }\n}\n\nexport { useCallbackOnChange };\n","import Link from '@carbon/icons-react/es/Link.js';\nimport Maximize from '@carbon/icons-react/es/Maximize.js';\nimport React, { useRef, useLayoutEffect } from 'react';\nimport { useLanguagePack } from '../../../../hooks/useLanguagePack.js';\nimport { useWindowSize } from '../../../../hooks/useWindowSize.js';\nimport { SearchResultBody as SearchResultBodyExport } from '../SearchResultBody.js';\nimport { CitationType } from './CitationCard.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction CitationCardContent({ citation, type, setIsExpandable, isExpandable, }) {\n    const languagePack = useLanguagePack();\n    const { width } = useWindowSize();\n    const { conversationalSearch_viewSourceDocument } = languagePack;\n    const ref = useRef(null);\n    // If citation has a \"text\" property, we know its from conversational search. If not, its legacy search and needs to\n    // be processed differently.\n    const textContent = \"text\" in citation && citation.text;\n    const content = textContent || React.createElement(SearchResultBodyExport, { searchResult: citation });\n    // Checks if there is any need to allow expanding on the title. Watching window size changes as a clunky attempt to\n    // deal with re-sizes, but that isn't really perfect.\n    useLayoutEffect(() => {\n        // If the tile is not currently expandable then check if there's enough content for the tile to expand.\n        if (ref.current && !isExpandable && setIsExpandable) {\n            if (ref.current.clientHeight && ref.current.scrollHeight) {\n                setIsExpandable(ref.current.clientHeight < ref.current.scrollHeight);\n            }\n        }\n    }, [textContent, isExpandable, setIsExpandable, width]);\n    let label;\n    let icon;\n    if (type === CitationType.URL && citation.url) {\n        label = new URL(citation.url).hostname;\n        icon = React.createElement(Link, { size: 16 });\n    }\n    else if (isExpandable) {\n        icon = React.createElement(Maximize, { size: 16 });\n        label = conversationalSearch_viewSourceDocument;\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"WACCitationCard_Header\" },\n            React.createElement(\"div\", { className: \"WACCitationCard_Title WACWidget__textEllipsis\" }, citation.title),\n            React.createElement(\"div\", { ref: ref, className: \"WACCitationCard_Text\" }, content)),\n        React.createElement(\"div\", { className: \"WACCitationCard_Footer\" }, (label || icon) && (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"WACCitationCard_Label WACWidget__textEllipsis\" }, label),\n            React.createElement(\"div\", { className: \"WACCitationCard_Icon\" }, icon))))));\n}\n\nexport { CitationCardContent };\n","import { useContext } from 'react';\nimport { WindowSizeContext } from '../contexts/WindowSizeContext.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This is a React hook that will provided access to the current window size and is updated as the window size changes.\n */\nfunction useWindowSize() {\n    return useContext(WindowSizeContext);\n}\n\nexport { useWindowSize };\n","import React from 'react';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction CitationClickableCard({ title, onClick, onSelectCitation, children, className, }) {\n    return (React.createElement(\"button\", { type: \"button\", className: `${className} WACCitationCard--clickable`, \"aria-label\": title, onClick: () => {\n            onClick();\n            onSelectCitation?.();\n        }, onFocus: onSelectCitation }, children));\n}\n\nexport { CitationClickableCard };\n","import { Tile } from '@carbon/react';\nimport cx from 'classnames';\nimport React from 'react';\nimport { CitationCardContent } from './CitationCardContent.js';\nimport { ExpandToPanelCard } from './ExpandToPanelCard.js';\nimport { getSearchResultMetaData } from '../../../../utils/searchUtils.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component takes a ConversationalSearchItemCitation OR a SearchResult and decides which kind of tile to display\n * it in.\n */\nvar CitationType;\n(function (CitationType) {\n    /**\n     * If the citation has a url.\n     */\n    CitationType[\"URL\"] = \"url\";\n    /**\n     * If the citation has no url, if its full contents don't fit in the card, you can click on it to see a panel with the results.\n     */\n    CitationType[\"EXPAND_IF_NEEDED\"] = \"expand\";\n})(CitationType || (CitationType = {}));\nfunction CitationCard({ citation, isSelected, onSelectCitation, relatedSearchResult, }) {\n    const { url, urlIsValid } = getSearchResultMetaData(citation);\n    function getType() {\n        if (url && urlIsValid) {\n            return CitationType.URL;\n        }\n        return CitationType.EXPAND_IF_NEEDED;\n    }\n    const type = getType();\n    const className = cx(\"WACCitationCard\", {\n        \"WACCitationCard--selected\": isSelected,\n        \"WACCitationCard--clickable\": type === CitationType.URL,\n        \"WACCitationCard--url\": type === CitationType.URL,\n        \"WACCitationCard--no-url\": type !== CitationType.URL,\n    }, \"WACWidget__textEllipsis\");\n    if (type === CitationType.URL) {\n        return (\n        // eslint-disable-next-line jsx-a11y/control-has-associated-label\n        React.createElement(\"a\", { className: className, href: url, target: \"_blank\", rel: \"noopener noreferrer\", onClick: onSelectCitation, onFocus: onSelectCitation },\n            React.createElement(Tile, null,\n                React.createElement(CitationCardContent, { citation: citation, type: type }))));\n    }\n    return (React.createElement(ExpandToPanelCard, { citation: citation, className: className, onSelectCitation: onSelectCitation, relatedSearchResult: relatedSearchResult }));\n}\nconst CitationCardExport = React.memo(CitationCard);\n\nexport { CitationCardExport as CitationCard, CitationType };\n","import { isValidURL } from './htmlUtils.js';\nimport { convertToEmptyStringIfStringifiedNull } from './lang/stringUtils.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction getSearchResultURLMetaData(searchResult) {\n    let { url } = searchResult;\n    url = url ? convertPossibleStringifiedArrayToFirstString(url) : undefined;\n    const urlIsValid = url && isValidURL(url);\n    return {\n        url,\n        urlIsValid,\n    };\n}\nfunction getSearchResultMetaData(searchResult) {\n    // First we check the searchResults.highlight.title which should be an array. If that is not set, we fall back to\n    // searchResult.title which is either a string OR a stringified array. If it is the latter, we only want the first\n    // item in the stringified array. https://github.ibm.com/watson-engagement-advisor/wea-backlog/issues/31262 has an\n    // explanation.\n    let title = searchResult.highlight?.title?.[0]\n        ? stripHighlightsFromString(convertToEmptyStringIfStringifiedNull(searchResult.highlight.title[0]))\n        : convertPossibleStringifiedArrayToFirstString(convertToEmptyStringIfStringifiedNull(searchResult.title));\n    const { url, urlIsValid } = getSearchResultURLMetaData(searchResult);\n    // If title is null and url is valid, use the URL in place of title see bug\n    // https://github.ibm.com/Watson-Discovery/customer-care/issues/297.\n    let titleIsURL = false;\n    if (!title && urlIsValid) {\n        title = url;\n        titleIsURL = true;\n    }\n    let answer;\n    // If answers param is present, use it on header and render searchResult.highlight.body as a body.\n    if (searchResult.answers?.length > 0) {\n        answer = searchResult.answers?.[0].text;\n    }\n    return { title, titleIsURL, url, urlIsValid, answer };\n}\n/**\n * Under the covers before it gets to us, a title/body may have been a stringified array. We need to remove the [\"\"]\n * if that is the case.\n *\n * @param str A string for the title or body of the search card.\n */\nfunction convertPossibleStringifiedArrayToFirstString(str) {\n    if (typeof str === \"string\" && str.startsWith('[\"') && str.endsWith('\"]')) {\n        try {\n            [str] = JSON.parse(str);\n        }\n        catch (error) {\n            // Not an array of strings, so do nothing.\n        }\n    }\n    return str;\n}\n/**\n * Removes the highlights from the string in this case mostly from title field as it does not add any value in\n * the single line ellipses title.\n *\n * @param str A string for the title of the search card.\n */\nfunction stripHighlightsFromString(str) {\n    return str ? str.replace(new RegExp(\"<em>|</em>\", \"g\"), \"\") : null;\n}\n\nexport { getSearchResultMetaData };\n","import { Tile } from '@carbon/react';\nimport React, { useState } from 'react';\nimport { useServiceManager } from '../../../../hooks/useServiceManager.js';\nimport actions from '../../../../store/actions.js';\nimport { CitationType } from './CitationCard.js';\nimport { CitationCardContent } from './CitationCardContent.js';\nimport { CitationClickableCard } from './CitationClickableCard.js';\nimport { getSearchResultMetaData } from '../../../../utils/searchUtils.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction ExpandToPanelCard({ className, citation, onSelectCitation, relatedSearchResult, }) {\n    const serviceManager = useServiceManager();\n    const { title } = getSearchResultMetaData(citation);\n    // If there's a searchResult that isn't empty than the card is expandable. Otherwise The CitationCardContent component\n    // will measure itself with the citation text as its content and will let this component know if it can fit the\n    // contents in the tile. If it can't fit the contents then it needs to be a clickable tile that can expand into a\n    // panel.\n    const [isExpandable, setIsExpandable] = useState(Boolean(relatedSearchResult?.body));\n    function onViewSourcePanelButtonClick() {\n        // If a search result is provided we want to show that in the panel with the citation text highlighted, otherwise\n        // just show the citation.\n        serviceManager.store.dispatch(actions.setViewSourcePanelIsOpen(true, citation, relatedSearchResult));\n    }\n    function renderTile(className) {\n        return (React.createElement(Tile, { className: className },\n            React.createElement(CitationCardContent, { citation: citation, type: CitationType.EXPAND_IF_NEEDED, setIsExpandable: setIsExpandable, isExpandable: isExpandable })));\n    }\n    if (isExpandable) {\n        return (React.createElement(CitationClickableCard, { className: className, title: title, onClick: onViewSourcePanelButtonClick, onSelectCitation: onSelectCitation }, renderTile()));\n    }\n    return renderTile(className);\n}\n\nexport { ExpandToPanelCard };\n","import ReactDOM from 'react-dom';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Just a simple component that mounts to a host element.\n */\nfunction PortalComponent({ hostElement, children, }) {\n    return hostElement ? ReactDOM.createPortal(children, hostElement) : null;\n}\n\nexport { PortalComponent };\n","import ChevronDown from '@carbon/icons-react/es/ChevronDown.js';\nimport ChevronUp from '@carbon/icons-react/es/ChevronUp.js';\nimport { OperationalTag } from '@carbon/react';\nimport React, { useState, useRef, useEffect, useImperativeHandle, useLayoutEffect } from 'react';\nimport { useCounter } from '../../../hooks/useCounter.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { useServiceManager } from '../../../hooks/useServiceManager.js';\nimport { sanitizeHTML } from '../../../utils/htmlUtils.js';\nimport { consoleError } from '../../../utils/miscUtils.js';\nimport { PortalComponent } from '../../PortalComponent.js';\nimport { MaybeDangerouslySetInnerHTML as MaybeDangerouslySetInnerHTMLExport } from '../../util/MaybeDangerouslySetInnerHTML.js';\nimport { processMarkdown } from '../../../../web-components/components/markdownText/markdown/markdownToHTML.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst TOGGLE_CONTAINER_CLASSNAME = \"WACConversationalSearchText__CitationsToggleContainer\";\nfunction ConversationalSearchText(props, ref) {\n    const { highlightCitation, onToggleCitations, citationsOpen, searchItem, showCitationsToggle, } = props;\n    const languagePack = useLanguagePack();\n    const serviceManager = useServiceManager();\n    const { streamingState } = searchItem.ui_state;\n    const toggleID = `WACConversationalSearchText-${useCounter()}${serviceManager.namespace.suffix}`;\n    const [toggleContainer, setToggleContainer] = useState();\n    const rootRef = useRef();\n    const [html, setHtml] = useState(\"\");\n    let text;\n    if (streamingState && !streamingState.isDone) {\n        text = streamingState.chunks.map((chunk) => chunk.text).join(\"\");\n    }\n    else {\n        text = searchItem.item.text;\n    }\n    useEffect(() => {\n        async function getHtml() {\n            const newHtml = await createHTMLWithHighlights(text, highlightCitation, showCitationsToggle);\n            setHtml(newHtml);\n        }\n        getHtml();\n    }, [text, highlightCitation, showCitationsToggle]);\n    useImperativeHandle(ref, () => ({\n        /**\n         * Use the root element to query the citations toggle button because the OperationalTag does not use forwardRef so\n         * we have to rely on fetching the element manually.\n         */\n        getToggleCitationsElement: () => rootRef.current?.querySelector(\".cds--tag--operational\"),\n    }));\n    useLayoutEffect(() => {\n        const container = rootRef.current?.querySelector(`.${TOGGLE_CONTAINER_CLASSNAME}`);\n        setToggleContainer(container);\n    }, [html]);\n    return (React.createElement(\"div\", { className: \"WACConversationalSearchText\", ref: rootRef },\n        React.createElement(MaybeDangerouslySetInnerHTMLExport, { html: html, overrideSanitize: false /* The html is sanitized already in createHTMLWithHighlights. */ }),\n        toggleContainer && (\n        // Use a portal to attach the toggle button to its container element in the search result.\n        React.createElement(PortalComponent, { hostElement: toggleContainer },\n            React.createElement(React.Fragment, null,\n                React.createElement(\"span\", { className: \"WACConversationalSearchText__CitationsToggle\" },\n                    React.createElement(OperationalTag, { id: toggleID, onClick: onToggleCitations, \"aria-expanded\": citationsOpen, text: languagePack.conversationalSearch_citationsLabel, renderIcon: citationsOpen ? ChevronUp : ChevronDown, \"aria-label\": languagePack.conversationalSearch_toggleCitations })),\n                React.createElement(\"span\", null, \"\\u00A0\"))))));\n}\nconst HIGHLIGHT_TOKEN_START = \"@@:wc-source:@@\";\nconst HIGHLIGHT_TOKEN_END = \"@@/:wc-source:@@\";\nconst HIGHLIGHT_TOKEN_REGEXP = /@@\\/?:wc-source:@@/g;\n/**\n * Takes the given text as markdown and converts it to html with the given citation highlighted in the html. This\n * will insert span elements into the html that represent the text ranges present in the citation.\n *\n * @param text The text to convert to html and highlight.\n * @param highlightCitation The citation that indicates what should be highlighted.\n * @param showCitationsToggle Indicates if the citations toggle should be displayed. If so, this code will examine\n * the html content to determine where it should be shown and will insert an element at that location that can be\n * found later.\n */\nasync function createHTMLWithHighlights(text, highlightCitation, showCitationsToggle) {\n    // Highlighting a citation is a bit messy. The back-end provides us with text ranges in the original search result\n    // but those ranges don't pay attention to the structure of the content and thus it's possible for a range to\n    // cross boundaries of structures in the rich text. For example, it's possible for a range to start half-way\n    // through a paragraph and extend down to the middle point of a list item in a list below (although something so\n    // crazy is probably not actually going to happen). To address this, we need to process all the rich content into the\n    // entire tree of DOM nodes and then highlight every individual text (leaf) node that comes between the start of the\n    // range and the end of the range.\n    //\n    // When highlighting a citation, this code will first inject tokens into the markdown at the start and end of each\n    // highlight range. Then the markdown is converted into html and the tokens should survive the process. This will\n    // allow us to keep track of where the highlighting starts and ends. After that, the html is dropped into a DOM\n    // element so the browser will parser it into a tree. Then we walk the element tree looking for text nodes that\n    // contain the highlight tokens. We will then insert span elements as appropriate where each of those text nodes\n    // appear in order to achieve highlight and remove the tokens. The spans are inserted inside of every node that is\n    // highlighted which allows us to highlight a range that crosses block boundaries.\n    const ranges = highlightCitation?.ranges;\n    if (ranges?.length) {\n        // Inject tokens into the text at the boundaries of the text highlight.\n        const pieces = [];\n        let startIndex = 0;\n        ranges.forEach((range) => {\n            const beforeHighlight = text.substring(startIndex, range.start);\n            const highlight = text.substring(range.start, range.end);\n            pieces.push(beforeHighlight);\n            pieces.push(HIGHLIGHT_TOKEN_START);\n            pieces.push(highlight);\n            pieces.push(HIGHLIGHT_TOKEN_END);\n            startIndex = range.end;\n        });\n        const lastPiece = text.substring(startIndex, text.length);\n        pieces.push(lastPiece);\n        text = pieces.join(\"\");\n    }\n    const md = await processMarkdown(text);\n    const afterMarkdownHTML = sanitizeHTML(md);\n    if (ranges || showCitationsToggle) {\n        try {\n            // Now stuff the html into an element so we can walk through it looking for the tokens.\n            const rootElement = document.createElement(\"div\");\n            rootElement.innerHTML = afterMarkdownHTML;\n            if (ranges) {\n                // Look for the highlight tokens and add highlights as necessary.\n                insertHighlights(rootElement, false);\n            }\n            if (showCitationsToggle) {\n                // Insert the container element for the citation toggle.\n                const toggleContainer = document.createElement(\"span\");\n                toggleContainer.className = TOGGLE_CONTAINER_CLASSNAME;\n                // Figure out what the last element is.\n                const lastElement = rootElement.lastElementChild;\n                const lastTag = lastElement?.tagName;\n                if (lastTag === \"P\") {\n                    // Put the toggle inside the last paragraph so it'll be inline with that content.\n                    lastElement.appendChild(document.createTextNode(\" \"));\n                    lastElement.appendChild(toggleContainer);\n                }\n                else {\n                    // Make it a sibling of the last content. This will cause the toggle to appear below as a block element.\n                    rootElement.appendChild(toggleContainer);\n                    toggleContainer.className += ` ${TOGGLE_CONTAINER_CLASSNAME}--block`;\n                }\n            }\n            return rootElement.innerHTML;\n        }\n        catch (error) {\n            consoleError(\"An error occurred processing source highlights.\", text, highlightCitation, error);\n        }\n    }\n    return afterMarkdownHTML;\n}\n/**\n * Inserts highlights into the given Node by looking for the highlight tokens in any text nodes located inside.\n *\n * @param parent The node is insert highlights into.\n * @param isInHighlight Indicates if a \"begin highlight\" token has already been seen previously and the content of this\n * Node start off highlighted.\n */\nfunction insertHighlights(parent, isInHighlight) {\n    const childNodes = Array.from(parent.childNodes);\n    childNodes.forEach((child) => {\n        if (child instanceof Text) {\n            const text = child.textContent;\n            const tokenMatches = Array.from(text.matchAll(HIGHLIGHT_TOKEN_REGEXP));\n            if (!tokenMatches.length && !isInHighlight) ;\n            else {\n                // We need to add some highlighting, so this child needs to be replaced by nodes that have highlighting. The\n                // child may have multiple tokens so it may result in multiple nodes being added.\n                let startIndex = 0;\n                tokenMatches.forEach((match) => {\n                    // If we get an end token then all the text before is inside a highlight.\n                    const isInHighlightHere = match[0] === HIGHLIGHT_TOKEN_END;\n                    const textContent = text.substring(startIndex, match.index);\n                    startIndex = match.index + match[0].length;\n                    // Add the text for before this token.\n                    addTextSegment(textContent, isInHighlightHere, parent, child);\n                    // Highlighting will flip to the opposite value after this node until the next highlight token appears.\n                    isInHighlight = !isInHighlightHere;\n                });\n                // If there is any text after the last token, we need to include that too.\n                const lastText = text.substring(startIndex, text.length);\n                addTextSegment(lastText, isInHighlight, parent, child);\n                // Remove the child now that it was replaced.\n                child.remove();\n            }\n        }\n        else if (child instanceof Element) {\n            // If our tokens somehow found their way into an attribute, remove them.\n            child.getAttributeNames().forEach((name) => {\n                const value = child.getAttribute(name);\n                if (value) {\n                    child.setAttribute(name, value.replaceAll(HIGHLIGHT_TOKEN_REGEXP, \"\"));\n                }\n            });\n        }\n        // Recurse through the tree.\n        isInHighlight = insertHighlights(child, isInHighlight);\n    });\n    return isInHighlight;\n}\n/**\n * Adds the given text as a child node of the given parent.\n *\n * @param text The text to add.\n * @param highlighted Indicates if the text should be highlighted.\n * @param parent The parent to add the text to.\n * @param beforeChild The existing child of the parent to insert the text before.\n */\nfunction addTextSegment(text, highlighted, parent, beforeChild) {\n    if (text) {\n        const textNode = document.createTextNode(text);\n        // Don't highlight empty node. This avoids us inserting spans where they're not allowed just because there was a\n        // newline inserted into the document. This may occasionally cause the highlight to miss intended whitespace but\n        // that should be rare and not important.\n        if (highlighted && text.trim()) {\n            // We need to insert a highlighted span containing this text.\n            const highlightNode = document.createElement(\"span\");\n            highlightNode.className = `WACConversationalSearchText--hasCitation`;\n            highlightNode.appendChild(textNode);\n            parent.insertBefore(highlightNode, beforeChild);\n        }\n        else {\n            parent.insertBefore(textNode, beforeChild);\n        }\n    }\n}\nconst ConversationalSearchTextExport = React.memo(React.forwardRef(ConversationalSearchText));\n\nexport { ConversationalSearchTextExport as ConversationalSearchText };\n","import { render, html } from 'lit';\nimport { renderTokenTree } from './utils/renderTokenTree.js';\nimport { getMarkdownWorker } from './workers/workerManager.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction templateToString(result) {\n    // 1) Create a throw-away <div> (never attached to the real DOM)\n    const container = document.createElement(\"div\");\n    // 2) Let Lit fully render.\n    render(result, container);\n    // 3) Grab the HTML it produced..,\n    const htmlString = container.innerHTML;\n    // 4) (Optional) clean up: clear out the container so we don’t leak memory\n    render(html ``, container);\n    return htmlString;\n}\n/**\n * Formats the given text content into an HTML string for display in the UI. The provided content may be plain\n * text, it may already contain HTML or it may contain Markdown. Any things that \"look like\" links will be converted\n * to anchor tags to make links using the auto-linker feature of the markdown library. Existing anchor tags are left\n * unchanged.\n */\nasync function processMarkdown(value, sanitzeHTML = false) {\n    const tokenTree = await getMarkdownWorker(value, undefined);\n    const html = templateToString(renderTokenTree(tokenTree, sanitzeHTML));\n    return html;\n}\n\nexport { processMarkdown };\n","import React, { useState, useRef, useMemo, Suspense } from 'react';\nimport { useCallbackOnChange } from '../../../hooks/useCallbackOnChange.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { SkeletonPlaceholder } from '../../SkeletonPicker.js';\nimport { InlineError } from '../error/InlineError.js';\nimport { CitationCard as CitationCardExport } from '../util/citations/CitationCard.js';\nimport { ConversationalSearchText as ConversationalSearchTextExport } from './ConversationalSearchText.js';\nimport { lazyCarousel } from '../../../../dynamic-imports/dynamic-imports.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst Carousel = lazyCarousel();\nfunction ConversationalSearch({ localMessageItem, scrollElementIntoView, isStreamingError, doAutoScroll, }) {\n    const [selectedCitationIndex, setSelectedCitationIndex] = useState(0);\n    const [citationsOpen, setCitationsOpen] = useState(false);\n    const scrollIntoViewArea = useRef();\n    const swiperRef = useRef();\n    const languagePack = useLanguagePack();\n    const conversationalSearchTextFunctionsRef = useRef();\n    const messageItem = localMessageItem.item;\n    const sortedCitations = useMemo(() => sortCitations(messageItem.citations), [messageItem.citations]);\n    function scrollCitations() {\n        // The large bottom padding is to push the citations panel above the suggestions button (if it happens to be\n        // present). The larger top padding also ensures the toggle button (which is just above the carousel) is also\n        // still in view.\n        setTimeout(() => scrollElementIntoView(scrollIntoViewArea.current, 32, 64));\n    }\n    function focusToggleButton() {\n        setTimeout(() => conversationalSearchTextFunctionsRef.current\n            .getToggleCitationsElement()\n            ?.focus());\n    }\n    // If the chunks change, kick off an auto-scroll.\n    useCallbackOnChange(localMessageItem.ui_state.streamingState?.chunks, doAutoScroll);\n    // Note: the AI button below has a specific component in the latest Carbon library we could swap in after we\n    // upgrade our Carbon version.\n    function onSelectCitation(index) {\n        setCitationsOpen(true);\n        setSelectedCitationIndex(index);\n        setTimeout(() => swiperRef.current?.swiper.slideTo(index));\n        scrollCitations();\n    }\n    function onToggleCitations() {\n        setCitationsOpen(!citationsOpen);\n        if (!citationsOpen) {\n            scrollCitations();\n            focusToggleButton();\n        }\n    }\n    function renderCitations() {\n        const tiles = sortedCitations?.map((citation, index) => (React.createElement(CitationCardExport\n        // eslint-disable-next-line react/no-array-index-key\n        , { \n            // eslint-disable-next-line react/no-array-index-key\n            key: index, citation: citation, isSelected: index === selectedCitationIndex, onSelectCitation: () => onSelectCitation(index) })));\n        return (React.createElement(\"div\", { className: \"WACConversationalSearch_Citations\" },\n            React.createElement(Suspense, { fallback: React.createElement(SkeletonPlaceholder, null) },\n                React.createElement(Carousel, { swiperRef: swiperRef, initialSlide: selectedCitationIndex, onSlideChange: setSelectedCitationIndex }, tiles))));\n    }\n    return (React.createElement(\"div\", { className: \"WACConversationalSearch\" },\n        React.createElement(ConversationalSearchTextExport, { ref: conversationalSearchTextFunctionsRef, searchItem: localMessageItem, showCitationsToggle: Boolean(sortedCitations?.length), highlightCitation: citationsOpen ? sortedCitations?.[selectedCitationIndex] : null, onToggleCitations: onToggleCitations, citationsOpen: citationsOpen }),\n        isStreamingError && (React.createElement(InlineError, { text: languagePack.conversationalSearch_streamingIncomplete })),\n        React.createElement(\"div\", { ref: scrollIntoViewArea }, citationsOpen && renderCitations())));\n}\n/**\n * Sorts the given array of citations. This will move any citation without any highlight ranges to the end of the array.\n */\nfunction sortCitations(citations) {\n    if (!citations) {\n        return null;\n    }\n    const withRanges = citations.filter((citation) => citation.ranges?.length);\n    const withoutRanges = citations.filter((citation) => !citation.ranges?.length);\n    return withRanges.concat(withoutRanges);\n}\n\nexport { ConversationalSearch };\n","import React from 'react';\nimport { useCallbackOnChange } from '../../../hooks/useCallbackOnChange.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { InlineError } from '../error/InlineError.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component is used to render a user defined message response. When a user defined response is initially\n * received a host element was created and a {@link BusEventType.USER_DEFINED_RESPONSE} was fired. Any custom code was\n * then able to attach any custom rendering to the provided host element. The host elements are stored in the\n * service manager. This component attaches that host element in to the React tree.\n */\nfunction UserDefinedResponse(props) {\n    const { doAutoScroll, isStreamingError, streamingState, serviceManager } = props;\n    const languagePack = useLanguagePack();\n    // The element that was previously created that we'll attach to this React component. The custom code should\n    // already have attached its own element to this element that contains the custom rendering for the message.\n    const userDefinedRegistryItem = serviceManager.actions.getOrCreateUserDefinedElement(props.localMessageID);\n    useCallbackOnChange(streamingState?.chunks, doAutoScroll);\n    return (React.createElement(\"div\", { className: \"WAC__message-userDefinedResponse\", \"data-floating-menu-container\": true },\n        React.createElement(\"slot\", { name: userDefinedRegistryItem.slotName }),\n        isStreamingError && (React.createElement(InlineError, { text: languagePack.conversationalSearch_streamingIncomplete }))));\n}\nvar UserDefinedResponse$1 = React.memo(UserDefinedResponse);\n\nexport { UserDefinedResponse$1 as default };\n","import { RIGHT_TO_LEFT_MARK } from './constants.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n// A regex object that checks for white space/right-left-mark characters in a string and a period at the end of a\n// string.\nconst UNWANTED_CHARACTERS_REGEX = new RegExp(`[ ${RIGHT_TO_LEFT_MARK}]|\\\\.$`, \"g\");\n/**\n * Returns the date format data that tells us the character separating the date values. The provided value can either\n * be a date format like \"mm/dd/yyyy\" or an actual date like \"01/01/1997\".\n *\n * @param value The value to use to get format data.\n */\nfunction sanitizeDateFormat(value) {\n    let format = value.replace(UNWANTED_CHARACTERS_REGEX, \"\");\n    // If there is no mm token, this means the month if represented with just one m.\n    if (!format.includes(\"mm\")) {\n        format = format.replace(\"m\", \"mm\");\n    }\n    // If there is no dd token, this means the month if represented with just one d.\n    if (!format.includes(\"dd\")) {\n        format = format.replace(\"d\", \"dd\");\n    }\n    return format;\n}\n/**\n * Returns a date string from the provided date format using a date object. This function assumes the format tokens\n * include mm, dd, and yyyy.\n *\n * @param date A Date object.\n * @param format The date format to reference.\n */\nfunction toUserDateFormat(date, format) {\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const year = String(date.getFullYear());\n    return format.replace(\"dd\", day).replace(\"mm\", month).replace(\"yyyy\", year);\n}\n/**\n * Returns a date string that is formatted in the manner that the assistant expects. This format is yyyy-mm-dd to\n * help avoid ambiguity with the meaning of the date.\n */\nfunction toAssistantDateFormat(date) {\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const year = String(date.getFullYear());\n    return `${year}-${month}-${day}`;\n}\n\nexport { sanitizeDateFormat, toAssistantDateFormat, toUserDateFormat };\n","import Checkmark from '@carbon/icons-react/es/Checkmark.js';\nimport { Layer, DatePicker, DatePickerInput, Button } from '@carbon/react';\nimport dayjs from 'dayjs';\nimport React, { useRef, useState, useCallback } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useOnMount } from '../../../hooks/useOnMount.js';\nimport { useServiceManager } from '../../../hooks/useServiceManager.js';\nimport { ENGLISH_US_DATE_FORMAT } from '../../../utils/constants.js';\nimport { toAssistantDateFormat, toUserDateFormat, sanitizeDateFormat } from '../../../utils/dateUtils.js';\nimport { uuid } from '../../../utils/lang/uuid.js';\nimport { loadDayjsLocale } from '../../../utils/languages.js';\nimport { createMessageRequestForDate } from '../../../utils/messageUtils.js';\nimport { consoleError } from '../../../utils/miscUtils.js';\nimport { MessageSendSource } from '../../../../../types/events/eventBusTypes.js';\nimport { UUIDType } from '../../../utils/lang/UUIDType.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component handles rendering a carbon date picker for the date response type. It handles sending the selected\n * date value as the standard ISO date format and ensuring the message request displays the user's input selection.\n */\nfunction DatePickerComponent(props) {\n    const { localMessage, disabled, scrollElementIntoView } = props;\n    const serviceManager = useServiceManager();\n    const intl = useIntl();\n    const webChatLocale = useSelector((state) => state.locale);\n    const originalMessage = useSelector((state) => state.allMessagesByID[localMessage.fullMessageID]);\n    const uuidRef = useRef(uuid(UUIDType.MISCELLANEOUS));\n    const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n    const [userDisplayValue, setUserDisplayValue] = useState();\n    const [flatpickrFormat, setFlatpickrFormat] = useState();\n    const [userDisplayFormat, setUserDisplayFormat] = useState();\n    const [flatpickrLocale, setFlatpickrLocale] = useState();\n    const [dayjsLocale, setDayjsLocale] = useState();\n    const [datePickerHostElement, setDatePickerHostElement] = useState();\n    const valueForAssistantRef = useRef();\n    // This ref is to track when the user uses the date picker input through some pointer that's not a keyboard\n    // (e.g. mouse, touch, etc.) to open the date picker. If the date picker is opened and the user's pointer is not\n    // over the date picker input, such as when the date picker is scrolled into view, the date picker will close.\n    // This is intentional behavior from the DatePicker component, so a way around this will be to scroll the calendar\n    // into view after the user has lifted their pointer from the input and not when the calendar is opened.\n    const isInputPointerDownEventFiredRef = useRef(false);\n    const inputLabel = intl.formatMessage({ id: \"datePicker_chooseDate\" }, { format: userDisplayFormat });\n    const confirmButtonLabel = intl.formatMessage({\n        id: \"datePicker_confirmDate\",\n    });\n    const isDateInfoReady = Boolean(flatpickrFormat && userDisplayFormat && flatpickrLocale && dayjsLocale);\n    /**\n     * Handles setting the necessary date info that will handle formatting the user's selected date value using the\n     * provided locale.\n     */\n    function setDateInfoForLocale(locale) {\n        // Get the date format for the given locale from dayjs, or default to the mm/dd/yyyy.\n        const format = dayjs.Ls[locale]?.formats?.L?.toLocaleLowerCase() ||\n            ENGLISH_US_DATE_FORMAT;\n        const dateFormat = sanitizeDateFormat(format);\n        setDayjsLocale(locale);\n        setFlatpickrLocale(calcFlatpickrLocale(locale));\n        setUserDisplayFormat(dateFormat);\n        setFlatpickrFormat(getFlatpickrDateFormat(dateFormat));\n    }\n    /**\n     * When the user confirms their date selection we should send that date info to the assistant.\n     */\n    const handlerSendDate = useCallback(() => {\n        const { ui_state, fullMessageID: responseID } = localMessage;\n        const localMessageID = ui_state.id;\n        const request = createMessageRequestForDate(valueForAssistantRef.current, userDisplayValue, responseID);\n        serviceManager.actions.sendWithCatch(request, MessageSendSource.DATE_PICKER, {\n            setValueSelectedForMessageID: localMessageID,\n        });\n    }, [localMessage, serviceManager, userDisplayValue]);\n    /**\n     * Scrolls the date picker host element into view.\n     */\n    const doScrollElementIntoView = useCallback(() => {\n        scrollElementIntoView(datePickerHostElement, 0, 24);\n    }, [datePickerHostElement, scrollElementIntoView]);\n    useOnMount(() => {\n        const localeFromMessage = webChatLocale;\n        const { originalUserText } = localMessage.ui_state;\n        const fromHistory = originalMessage.history.from_history;\n        // If this message is from history and a user has made a previous selection, set the value in the input.\n        if (fromHistory && originalUserText) {\n            setUserDisplayValue(originalUserText);\n        }\n        try {\n            // Load the date formats for the given locale if it was previously loaded.\n            if (dayjs.Ls[localeFromMessage]) {\n                setDateInfoForLocale(localeFromMessage);\n            }\n            else {\n                loadDayjsLocale(localeFromMessage).then((locale) => {\n                    setDateInfoForLocale(locale);\n                });\n            }\n        }\n        catch {\n            consoleError(`Locale ${dayjsLocale} is not recognized by Carbon AI chat. Defaulting to English(US).`);\n            setDateInfoForLocale(\"en\");\n        }\n    });\n    return (React.createElement(\"div\", { className: \"WACDatePicker\" },\n        isDateInfoReady && datePickerHostElement && (React.createElement(Layer, null,\n            React.createElement(DatePicker, { className: \"WACDatePicker__Calendar\", datePickerType: \"single\", allowInput: false, locale: flatpickrLocale, appendTo: datePickerHostElement, onChange: (dates) => {\n                    if (dates.length) {\n                        const date = dates[0];\n                        // The assistant should receive the date value in ISO format.\n                        valueForAssistantRef.current = toAssistantDateFormat(date);\n                        // Use the date object to get a date string in the expected format.\n                        setUserDisplayValue(toUserDateFormat(date, userDisplayFormat));\n                    }\n                }, dateFormat: flatpickrFormat, onOpen: () => {\n                    setIsCalendarOpen(true);\n                    // The carbon date picker uses a \"handleClickOutside\" functionality to detect when the user has clicked\n                    // outside of the component so that it will auto-close the calendar popup. There is a bug that occurs\n                    // when the component scrolls at the same time the popup opens. If the user clicks on the picker input\n                    // field, the mouse down part causes the field to get focus which causes the popup to open. We had code\n                    // below that would then cause the chat to scroll which moved the input field so it was no longer under\n                    // the mouse cursor. Unless the user does this very fast, the mouse up half of the click will not occur\n                    // on the input field (because it moved) and the component detects this as a \"click outside\" and closes\n                    // the popup. The popup can open either because the user clicks on the input field or when the field gets\n                    // focus from keyboard input. With keyboard input, we want continue to scroll when the popup opens.\n                    // However, if the user clicks on the input, we want to delay the scroll until the click is fully\n                    // processed (this will ensure the cursor stays on the input field until the mouse up occurs).\n                    if (isInputPointerDownEventFiredRef.current) {\n                        isInputPointerDownEventFiredRef.current = false;\n                    }\n                    else {\n                        doScrollElementIntoView();\n                    }\n                }, onClose: () => setIsCalendarOpen(false) },\n                React.createElement(DatePickerInput, { id: uuidRef.current, labelText: inputLabel, placeholder: userDisplayFormat, disabled: disabled, \n                    // Set this prop value to an empty string. The component will set a default text telling the user to match\n                    // the requests date format, which is useless since we don't allow the user to type a date.\n                    title: \"\", \n                    // This event listener is fired before the DatePicker component's onOpen listener so we'll set the flag\n                    // to prevent the onOpen listener from moving the input away from the user's pointer and close the\n                    // calendar as result.\n                    onPointerDown: () => {\n                        isInputPointerDownEventFiredRef.current = true;\n                    }, \n                    // This event listener gets fired once the user's pointer is lifted from the input which is when we\n                    // scroll the calendar into view.\n                    onClick: () => doScrollElementIntoView() })))),\n        React.createElement(\"div\", { className: \"WACDatePicker__CalendarContainer\", ref: setDatePickerHostElement }),\n        !disabled && !isCalendarOpen && userDisplayValue && (React.createElement(Button, { className: \"WACDatePicker__ConfirmButton\", onClick: handlerSendDate, renderIcon: (props) => React.createElement(Checkmark, { size: 32, ...props }) }, confirmButtonLabel))));\n}\n/**\n * Returns an object of locales that are accepted as locale values for flatpickr library used in the carbon date picker\n * component and dayjs library.\n */\nfunction calcFlatpickrLocale(localeValue) {\n    // flatpickr does support the locale zh-tw, but it won't recognize it unless it has an underscore instead of a dash.\n    if (localeValue === \"zh-tw\") {\n        return \"zh_tw\";\n    }\n    // For the flatpickr library, if the value provided contains a region in the locale, only the language will be\n    // returned since the library seems to mostly support locales without the region.\n    //\n    // flatpickr - https://github.com/flatpickr/flatpickr/tree/master/src/l10n\n    return (localeValue.includes(\"-\") ? localeValue.split(\"-\")[0] : localeValue);\n}\n/**\n * Returns a date format that would be valid for the flatpickr library used in the carbon date picker component.\n */\nfunction getFlatpickrDateFormat(format) {\n    const dash = format.includes(\"-\") ? \"-\" : \"/\";\n    const firstChar = format.toLocaleLowerCase().trim()[0];\n    if (firstChar === \"m\") {\n        return `m${dash}d${dash}Y`;\n    }\n    if (firstChar === \"d\") {\n        return `d${dash}m${dash}Y`;\n    }\n    if (firstChar === \"y\") {\n        return `Y${dash}m${dash}d`;\n    }\n    throw Error(`The provided format ${format} is invalid.`);\n}\nconst DatePickerComponentExport = React.memo(DatePickerComponent);\n\nexport { DatePickerComponentExport as DatePickerComponent };\n","import cx from 'classnames';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { MessageTypeComponent } from '../../../containers/MessageTypeComponent.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { useServiceManager } from '../../../hooks/useServiceManager.js';\nimport { selectInputState } from '../../../store/selectors.js';\nimport { THROW_ERROR } from '../../../utils/constants.js';\nimport { WidthOptions } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n// This regex is for validating a number (1) or pixel value (10px) which are the only valid width values for a column.\nconst VALID_COLUMN_WIDTH_REGEX = /^[0-9]*(px)?$/;\nconst DEFAULT_COLUMN_WIDTH = \"1\";\n/**\n * This component renders the grid response type. It will handle creating the rows/columns and renders the response\n * types within them.\n */\nfunction GridItemComponent({ localMessageItem, originalMessage, }) {\n    const serviceManager = useServiceManager();\n    const languagePack = useLanguagePack();\n    const appConfig = useSelector((state) => state.config);\n    const inputState = useSelector(selectInputState);\n    const allMessageItemsByID = useSelector((state) => state.allMessageItemsByID);\n    const { columns, horizontal_alignment, vertical_alignment, max_width } = localMessageItem.item;\n    const gridTemplateColumns = columns?.map((column) => column.width).join(\" \") || DEFAULT_COLUMN_WIDTH;\n    return (React.createElement(\"div\", { className: cx(\"WACGrid\", {\n            WACMaxWidthSmall: max_width === WidthOptions.SMALL,\n            WACMaxWidthMedium: max_width === WidthOptions.MEDIUM,\n            WACMaxWidthLarge: max_width === WidthOptions.LARGE,\n        }), \n        // eslint-disable-next-line react/forbid-dom-props\n        style: { gridTemplateColumns } }, localMessageItem.ui_state.gridLocalMessageItemIDs.map((row, rowIndex) => (\n    // eslint-disable-next-line react/no-array-index-key\n    React.createElement(\"div\", { key: `row-${rowIndex}`, className: \"WACGrid__Row\" }, row.map((cell, columnIndex) => {\n        const cellData = localMessageItem.item.rows[rowIndex]?.cells[columnIndex];\n        let columnWidthString = columns?.[columnIndex]?.width || DEFAULT_COLUMN_WIDTH;\n        let isPixelValue;\n        if (columnWidthString.match(VALID_COLUMN_WIDTH_REGEX)) {\n            isPixelValue = columnWidthString.endsWith(\"px\");\n        }\n        else {\n            columnWidthString = DEFAULT_COLUMN_WIDTH;\n            isPixelValue = false;\n        }\n        return (React.createElement(\"div\", { className: \"WACGrid__Cell\", \n            // eslint-disable-next-line react/forbid-dom-props\n            style: {\n                width: isPixelValue ? columnWidthString : undefined,\n                flex: isPixelValue ? undefined : Number(columnWidthString),\n                alignItems: getFlexAlignment(cellData?.horizontal_alignment || horizontal_alignment),\n                justifyContent: getFlexAlignment(cellData?.vertical_alignment || vertical_alignment),\n            }, \n            // eslint-disable-next-line react/no-array-index-key\n            key: `cell-${rowIndex}-${columnIndex}` }, cell.map((localMessageItemID, itemIndex) => {\n            const message = allMessageItemsByID[localMessageItemID];\n            return (React.createElement(MessageTypeComponent\n            // eslint-disable-next-line react/no-array-index-key\n            , { \n                // eslint-disable-next-line react/no-array-index-key\n                key: `item-${rowIndex}-${columnIndex}-${itemIndex}`, message: message, originalMessage: originalMessage, languagePack: languagePack, requestInputFocus: THROW_ERROR, disableUserInputs: inputState.isReadonly, config: appConfig, isMessageForInput: false, scrollElementIntoView: THROW_ERROR, serviceManager: serviceManager, isNestedMessageItem: true, hideFeedback: true, allowNewFeedback: false }));\n        })));\n    }))))));\n}\n/**\n * Returns the CSS flex alignment for the given horizontal/vertical alignment value;\n */\nfunction getFlexAlignment(value) {\n    switch (value) {\n        case \"bottom\":\n        case \"right\":\n            return \"flex-end\";\n        case \"center\":\n            return \"center\";\n        case \"top\":\n        case \"left\":\n        default:\n            return \"flex-start\";\n    }\n}\nconst GridItemComponentExport = React.memo(GridItemComponent);\n\nexport { GridItemComponentExport as GridItemComponent };\n","import ArrowRight from '@carbon/icons-react/es/ArrowRight.js';\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { useServiceManager } from '../../../hooks/useServiceManager.js';\nimport actions from '../../../store/actions.js';\nimport { getURLHostName } from '../../../utils/browserUtils.js';\nimport VisuallyHidden from '../../util/VisuallyHidden.js';\nimport { ClickableImage } from '../util/ClickableImage.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * The iframe preview card for the page source. This is a button that can be clicked in order to open the frame panel.\n */\nfunction IFramePreviewCardComponent({ messageItem, doAutoScroll, }) {\n    const { source, image_url, title, description } = messageItem;\n    const useAITheme = useSelector((state) => state.theme.useAITheme);\n    const urlHostName = getURLHostName(source);\n    const { store } = useServiceManager();\n    const { iframe_ariaImageAltText } = useLanguagePack();\n    const intl = useIntl();\n    const iframeAriaClickPreviewCardMessage = intl.formatMessage({ id: \"iframe_ariaClickPreviewCard\" }, { source: urlHostName });\n    /**\n     * Set iframe content to be loaded in the iframe panel.\n     */\n    function handleCardClick() {\n        // If tanya has authored an iframe response type and has provided no page source, we don't want the preview card to\n        // open the iframe panel.\n        if (source) {\n            store.dispatch(actions.setIFrameContent(messageItem));\n        }\n    }\n    /**\n     * Handles making the image element visible by updating the image loading flag and triggering an auto scroll.\n     */\n    function handleImageLoaded() {\n        // Call doAutoScroll to account for the image container height change after the image has loaded.\n        doAutoScroll?.();\n    }\n    return (React.createElement(\"div\", null,\n        React.createElement(ClickableImage, { title: title, description: description, source: image_url, displayURL: source, altText: iframe_ariaImageAltText, onImageLoad: handleImageLoaded, renderIcon: ArrowRight, onClick: handleCardClick, preventInlineError: true, useAITheme: useAITheme }),\n        React.createElement(VisuallyHidden, null, iframeAriaClickPreviewCardMessage)));\n}\nconst IFramePreviewCardExport = React.memo(IFramePreviewCardComponent);\n\nexport { IFramePreviewCardExport as IFramePreviewCard };\n","import React, { useState, useCallback } from 'react';\nimport { useAriaAnnouncer } from '../../../hooks/useAriaAnnouncer.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { getMediaDimensions } from '../../../utils/messageUtils.js';\nimport { getResponsiveElementPaddingValue } from '../../../utils/miscUtils.js';\nimport { InlineError } from '../error/InlineError.js';\nimport { IFrameComponent } from './IFrameComponent.js';\nimport { useDynamicCSSProperties } from '../../../hooks/useCSSCustomProperties.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component renders an inline iframe for iframe response types using the chat display \"inline\" option.\n */\nfunction InlineIFrame({ messageItem, doAutoScroll }) {\n    const ariaAnnouncer = useAriaAnnouncer();\n    const { errors_iframeSource } = useLanguagePack();\n    const [isError, setIsError] = useState(false);\n    const { source, title } = messageItem;\n    const baseHeight = getMediaDimensions(messageItem)?.base_height;\n    const paddingTop = getResponsiveElementPaddingValue(baseHeight);\n    const inlineStyles = useDynamicCSSProperties({ paddingTop });\n    const iframeTitle = title || source;\n    /**\n     * Render an error message and announce it when the iframe component times out.\n     */\n    const onTimeoutOverride = useCallback(() => {\n        setIsError(true);\n        ariaAnnouncer(errors_iframeSource);\n    }, [ariaAnnouncer, errors_iframeSource]);\n    if (isError) {\n        return React.createElement(InlineError, { text: errors_iframeSource });\n    }\n    return (\n    // eslint-disable-next-line react/forbid-dom-props\n    React.createElement(\"div\", { className: \"WACInlineIFrame\", style: inlineStyles },\n        React.createElement(IFrameComponent, { source: source, title: iframeTitle, onTimeoutOverride: onTimeoutOverride, onLoad: () => doAutoScroll?.() })));\n}\n\nexport { InlineIFrame };\n","import React from 'react';\nimport { IFramePreviewCard as IFramePreviewCardExport } from './IFramePreviewCard.js';\nimport { InlineIFrame } from './InlineIFrame.js';\nimport { IFrameItemDisplayOption } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction IFrameMessage({ doAutoScroll, localMessage, displayOverride, }) {\n    const { item } = localMessage;\n    const itemDisplay = item.display;\n    // Render an inline iframe if it was configured to do so or it's being rendered in a card.\n    if (itemDisplay === IFrameItemDisplayOption.INLINE ||\n        displayOverride === IFrameItemDisplayOption.INLINE) {\n        // The key prop is important since it causes the IFrame to re-mount when the source changes.\n        return (React.createElement(InlineIFrame, { key: item.source, doAutoScroll: doAutoScroll, messageItem: item }));\n    }\n    return React.createElement(IFramePreviewCardExport, { doAutoScroll: doAutoScroll, messageItem: item });\n}\n\nexport { IFrameMessage };\n","import React from 'react';\nimport { RichText as RichTextExport } from './RichText.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction Description({ className, text, shouldRemoveHTMLBeforeMarkdownConversion = false, }) {\n    return (React.createElement(\"div\", { className: `WAC__description ${className}` },\n        React.createElement(RichTextExport, { text: text, shouldRemoveHTMLBeforeMarkdownConversion: shouldRemoveHTMLBeforeMarkdownConversion })));\n}\n\nexport { Description as default };\n","import React from 'react';\nimport Description from './Description.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction Metablock({ title = null, description = null, id = null, shouldRemoveHTMLBeforeMarkdownConversion = false, }) {\n    return title || description ? (React.createElement(\"div\", { className: \"WAC__received--metablock\", id: id },\n        title && (React.createElement(Description, { className: \"WAC__received--metablock-content WACMetablock__Title\", text: title, shouldRemoveHTMLBeforeMarkdownConversion: shouldRemoveHTMLBeforeMarkdownConversion })),\n        description && (React.createElement(Description, { className: \"WAC__received--metablock-content WACMetablock__Description\", text: description, shouldRemoveHTMLBeforeMarkdownConversion: shouldRemoveHTMLBeforeMarkdownConversion })))) : null;\n}\n\nexport { Metablock as default };\n","import { Layer, Dropdown } from '@carbon/react';\nimport cx from 'classnames';\nimport React, { useState, useRef } from 'react';\nimport { useCounter } from '../../../hooks/useCounter.js';\nimport { doScrollElementIntoView } from '../../../utils/domUtils.js';\nimport Metablock from '../util/Metablock.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Downshift doesn't play well with shadow dom OOTB, so we need to feed it a custom environment.\n */\nfunction createProxyEnvironment(shadowRoot) {\n    const properties = {\n        document: shadowRoot.ownerDocument,\n        addEventListener: shadowRoot.ownerDocument.addEventListener.bind(shadowRoot),\n        removeEventListener: shadowRoot.ownerDocument.removeEventListener.bind(shadowRoot),\n        Node,\n    };\n    return new Proxy(shadowRoot, {\n        get: (_, prop) => properties[prop],\n    });\n}\nfunction SelectComponent(props) {\n    const { title, description, options, onChange, languagePack, disableUserInputs, serviceManager, shouldRemoveHTMLBeforeMarkdownConversion, } = props;\n    const [isBeingOpened, setIsBeingOpened] = useState(false);\n    const rootRef = useRef();\n    // Generate a unique ID that we can use for each instance of our dropdowns.\n    const counter = useCounter();\n    const id = `${counter}${serviceManager.namespace.suffix}`;\n    const environment = rootRef.current?.getRootNode\n        ? createProxyEnvironment(rootRef.current.getRootNode())\n        : undefined;\n    function findOptionForValue() {\n        const { value, options } = props;\n        const selectedItem = options.find((item) => {\n            return item.value === value;\n        });\n        return selectedItem;\n    }\n    function onIsOpenChange(changes) {\n        /**\n         * This is called when a state change occurs on the downshift component. We use this to take action when the dropdown\n         * is opened.\n         */\n        if (changes.isOpen && rootRef.current) {\n            // When the dropdown is opened, make sure it gets scrolled into view. To give a little extra padding to the\n            // scrollable area, we'll temporarily add some bottom padding to the item, let the scroll calculations run and\n            // then we'll remove it.\n            setTimeout(() => {\n                if (rootRef?.current) {\n                    setIsBeingOpened(true);\n                    doScrollElementIntoView(rootRef.current, true);\n                    setIsBeingOpened(false);\n                }\n            }, 70 * 2);\n            // Carbon animates the menu opening, so we sadly need to provide a value here (fast01 token === 70) using the\n            // value from @carbon/motion (which is not exported to JS).\n        }\n    }\n    return (React.createElement(\"div\", { ref: rootRef },\n        React.createElement(Metablock, { title: title, description: description, id: `WAC__selectUUID_${id}-label`, shouldRemoveHTMLBeforeMarkdownConversion: shouldRemoveHTMLBeforeMarkdownConversion }),\n        React.createElement(\"div\", { className: cx(\"WAC__selectHolder\", {\n                WAC__customSelectTemporaryPadding: isBeingOpened,\n            }) },\n            React.createElement(Layer, null,\n                React.createElement(Dropdown, { id: `WAC__selectUUID_${id}`, items: options, label: languagePack.options_select, titleText: languagePack.options_select, hideLabel: true, \"aria-label\": disableUserInputs\n                        ? languagePack.options_ariaOptionsDisabled\n                        : title, disabled: disableUserInputs, onChange: onChange, selectedItem: findOptionForValue(), downshiftProps: {\n                        environment,\n                        onIsOpenChange,\n                        id: `WACSelectComponent__Downshift-${id}`,\n                    } })))));\n}\n\nexport { SelectComponent as default };\n","import { unstable__ChatButton } from '@carbon/react';\nimport React, { Component } from 'react';\nimport { createMessageRequestForChoice, getOptionType } from '../../../utils/messageUtils.js';\nimport Metablock from '../util/Metablock.js';\nimport SelectComponent from './SelectComponent.js';\nimport { MessageSendSource } from '../../../../../types/events/eventBusTypes.js';\nimport { ButtonSizeEnum, ButtonKindEnum } from '../../../../../types/utilities/carbonTypes.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nclass OptionComponent extends Component {\n    constructor() {\n        super(...arguments);\n        /**\n         * This function is called when the user has selected one of the available options.\n         *\n         * @param selectedOption The option that was selected.\n         * @param type The specific type of the option response type ('button' vs 'dropdown').\n         */\n        this.onOptionSelected = (selectedOption, type) => {\n            const { localMessage, serviceManager, originalMessage } = this.props;\n            const { id: responseID } = originalMessage;\n            const messageRequest = createMessageRequestForChoice(selectedOption, responseID);\n            const localMessageID = localMessage.ui_state.id;\n            // Track when user gives a response through a button or dropdown option.\n            const source = type === \"button\"\n                ? MessageSendSource.OPTION_BUTTON\n                : MessageSendSource.OPTION_DROP_DOWN;\n            serviceManager.actions.sendWithCatch(messageRequest, source, {\n                setValueSelectedForMessageID: localMessageID,\n            });\n            // Move focus back to the input field\n            this.props.requestInputFocus();\n        };\n        /**\n         * This is called when the option displays a list of buttons and one of the buttons is clicked.\n         * It also sets the responseType to 'button'.\n         */\n        this.onButtonClick = (event, item) => {\n            this.onOptionSelected(item, \"button\");\n        };\n        /**\n         * This is called when the option displays a dropdown component of options and one options is clicked.\n         * It also sets the responseType to 'dropdown'.\n         */\n        this.onSelectChange = (data) => {\n            this.onOptionSelected(data.selectedItem, \"dropdown\");\n        };\n    }\n    render() {\n        const { localMessage, languagePack, disableUserInputs, serviceManager, shouldRemoveHTMLBeforeMarkdownConversion, } = this.props;\n        const { options, title, description, preference } = localMessage.item;\n        const { optionSelected } = localMessage.ui_state;\n        const type = getOptionType(preference, options.length);\n        return type === \"button\" ? (React.createElement(React.Fragment, null,\n            React.createElement(Metablock, { title: title, description: description, shouldRemoveHTMLBeforeMarkdownConversion: shouldRemoveHTMLBeforeMarkdownConversion }),\n            React.createElement(\"div\", { className: \"WAC__button-holder\" },\n                React.createElement(\"ul\", null, options.map((item, index) => {\n                    const isSelected = optionSelected\n                        ? item.value.input.text === optionSelected.input.text\n                        : false;\n                    return (React.createElement(\"li\", { key: item.label },\n                        React.createElement(unstable__ChatButton, { kind: ButtonKindEnum.TERTIARY, isQuickAction: true, size: ButtonSizeEnum.SMALL, className: `WAC__button-${index}`, disabled: disableUserInputs, isSelected: isSelected, onClick: (event) => {\n                                this.onButtonClick(event, item);\n                            } }, item.label)));\n                }))))) : (React.createElement(SelectComponent, { serviceManager: serviceManager, languagePack: languagePack, title: title, description: description, options: options, disableUserInputs: disableUserInputs, onChange: this.onSelectChange, value: optionSelected, shouldRemoveHTMLBeforeMarkdownConversion: shouldRemoveHTMLBeforeMarkdownConversion }));\n    }\n}\n\nexport { OptionComponent };\n","import '@carbon/web-components/es-custom/components/data-table/index.js';\nimport '@carbon/web-components/es-custom/components/checkbox/index.js';\nimport '@carbon/web-components/es-custom/components/button/index.js';\nimport { toString } from '@carbon/icon-helpers';\nimport Download16 from '@carbon/icons/es/download/16.js';\nimport { html } from 'lit';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\nimport { repeat } from 'lit-html/directives/repeat.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst Download16svg = toString({\n    ...Download16,\n    attrs: {\n        ...Download16.attrs,\n        slot: \"icon\",\n    },\n});\n/**\n * Table view logic.\n */\nfunction tableTemplate(tableElement) {\n    const { tableTitle, tableDescription, headers, containerWidth, filterPlaceholderText, locale, _handleDownload: handleDownload, _rowsWithIDs: tableRowsWithIDs, _allowFiltering: allowTableFiltering, _handleFilterEvent: handleFilterEvent, } = tableElement;\n    function toolbarElement() {\n        return html `<cds-custom-table-toolbar slot=\"toolbar\">\n      <cds-custom-table-toolbar-content>\n        ${allowTableFiltering\n            ? html `<cds-custom-table-toolbar-search\n              persistent\n              placeholder=${filterPlaceholderText}\n            ></cds-custom-table-toolbar-search>`\n            : \"\"}\n        <cds-custom-button @click=${handleDownload}\n          >${unsafeSVG(Download16svg)}</cds-custom-button\n        >\n      </cds-custom-table-toolbar-content>\n    </cds-custom-table-toolbar>`;\n    }\n    function headersElement() {\n        return html `<cds-custom-table-head>\n      <cds-custom-table-header-row>\n        ${headers.map((header) => html `<cds-custom-table-header-cell\n              >${header}</cds-custom-table-header-cell\n            >`)}\n      </cds-custom-table-header-row>\n    </cds-custom-table-head>`;\n    }\n    function rowsElement() {\n        return html `<cds-custom-table-body>\n      ${repeat(tableRowsWithIDs, (row) => row.id, (row) => \n        // TODO TABLE: The Carbon table is suppose to support mixing expandable and non-expandable rows by using the\n        // \"expandable\" prop on a row that should expand (as described towards the bottom of this section\n        // https://web-components.carbondesignsystem.com/?path=/docs/components-datatable-basic--overview#expansion).\n        // However, that functionality is currently broken. When this issue\n        // (https://github.com/carbon-design-system/carbon/issues/17612) is resolved, then we can implement dynamic\n        // expansion.\n        html `<cds-custom-table-row id=${row.id}\n            >${row.cells.map((cell) => html `<cds-custom-table-cell>${cell}</cds-custom-table-cell>`)}</cds-custom-table-row\n          >`\n        // <cds-custom-table-expanded-row\n        //   >${row.expandable_section?.map(item => html`<div>${item.response_type}</div>`)}</cds-custom-table-expanded-row\n        // >`,\n        )}\n    </cds-custom-table-body>`;\n    }\n    // TODO TABLE: Do not enable expansion for now since we can't mix expandable and non-expandable rows (and support for\n    // styling of user defined sections is not ready at this time). When we do decide to support expansion we will need to\n    // render something like <MessageTypeComponent /> within the React container, pass it down to the TableElement\n    // component, render the contents in a React portal, and have the root of the portal fill the slot of the appropriate\n    // expandable section.\n    // TODO TABLE: There is a bug with size=\"sm\" and is-sortable that prevents the header row from being the same size as\n    // the rest of the rows https://github.com/carbon-design-system/carbon/issues/17680. For now keep size=\"md\" until that\n    // bug is fixed.\n    // Enable sorting if filtering is enabled.\n    return html `<cds-custom-table\n    style=\"--cds-chat-table-width:${containerWidth}px\"\n    size=\"md\"\n    locale=${locale}\n    .isSortable=${allowTableFiltering}\n    .useZebraStyles=${true}\n    @cds-custom-table-filtered=${handleFilterEvent}\n  >\n    ${tableTitle &&\n        html `<cds-custom-table-header-title slot=\"title\"\n      >${tableTitle}</cds-custom-table-header-title\n    >`}\n    ${tableDescription &&\n        html `<cds-custom-table-header-description slot=\"description\"\n      >${tableDescription}</cds-custom-table-header-description\n    >`}\n    ${toolbarElement()} ${headersElement()} ${rowsElement()}\n  </cds-custom-table>`;\n}\n\nexport { tableTemplate };\n","import { __decorate } from 'tslib';\nimport { bind } from 'bind-decorator';\nimport { stringify } from 'csv-stringify/browser/esm/sync';\nimport { LitElement, html, unsafeCSS, css } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { carbonElement } from '../../decorators/customElement.js';\nimport css_248z from './src/table.scss.js';\nimport { tableTemplate } from './src/table.template.js';\nimport { tablePaginationTemplate } from './src/tablePagination.template.js';\nimport { tableSkeletonTemplate } from './src/tableSkeleton.template.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst DEFAULT_TABLE_PAGE_SIZE = 5;\nconst DEFAULT_TABLE_PAGE_SIZE_TALL_CHAT = 10;\n// The supported possible page sizes are 5, 10, 15, 20, 50, and all rows.\nconst POSSIBLE_PAGE_SIZES = [\n    DEFAULT_TABLE_PAGE_SIZE,\n    DEFAULT_TABLE_PAGE_SIZE_TALL_CHAT,\n    15,\n    20,\n    50,\n];\nconst TALL_CHAT_HEIGHT = 850;\n// We will have to give this component a unique ID on the name when we register it to avoid conflicts in a world where\n// multiple versions of the Carbon AI chat can be on the same page.\nconst TABLE_COMPONENT_TAG_NAME = \"cds-aichat-table\";\n/**\n * Class functionality for the Table custom element.\n */\nlet TableElement = class TableElement extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * If the table is valid or not.\n         */\n        this._isValid = true;\n        /**\n         * The current page of the table we're on.\n         */\n        this._currentPageNumber = 1;\n        /**\n         * Whether or not the number of rows per page was changed with the pagination component. If the user used the\n         * pagination controls to show all rows, the pagination component would normally hide itself because the number of is\n         * no longer greater than the page size. However the pagination component needs to persist in this case, since the\n         * user may want to change the page size again. This is used to keep track of whether the pagination controls were\n         * used to change page size, and if they have, it forces pagination component to persist.\n         */\n        this._rowsPerPageChanged = false;\n        /**\n         * All of the rows for the table with IDs.\n         */\n        this._rowsWithIDs = [];\n    }\n    /**\n     * Depending on the properties that changed validate the table or change the number of rows displayed in the table.\n     * There is also a [firstUpdated](https://lit.dev/docs/components/lifecycle/#firstupdated) function from lit that only\n     * fires after the components DOM has been updated the first time. That could potentially be used in these scenarios /\n     * similar scenarios as it seems similar to the old componentDidMount. For now use this broader function to make sure\n     * we see the prop updates we're expecting.\n     */\n    updated(changedProperties) {\n        // If the headers or rows has recently updated and both are defined than we should validate the table\n        // data. This will likely only happen on the web components first render cycle when the props go from undefined to\n        // defined.\n        if ((changedProperties.has(\"headers\") || changedProperties.has(\"rows\")) &&\n            this.headers !== undefined &&\n            this.rows !== undefined) {\n            this._calcIsTableValid();\n        }\n        // If the value of tableRows updated then initialize the internal rows arrays.\n        if (changedProperties.has(\"rows\") && this.rows !== undefined) {\n            this._initializeRowsArrays();\n        }\n        // If the page size is not currently defined, and the chatHeight has been set, then this is the first render and we\n        // need to choose the starting page size based off the chatHeight.\n        if (this._currentPageSize === undefined &&\n            changedProperties.has(\"chatHeight\") &&\n            this.chatHeight !== changedProperties.get(\"chatHeight\")) {\n            this._initializePageSize();\n        }\n    }\n    /**\n     * Check if the table content is valid. A table is valid if the number of cells in each row is the same as the number\n     * of cells in the header.\n     */\n    _calcIsTableValid() {\n        const columnCount = this.headers.length;\n        // If one of the rows has a different number of cells than the number of columns in the header then set our internal\n        // valid state to false.\n        this._isValid = !this.rows.some((row) => row.cells.length !== columnCount);\n        // In the future, once we have an inlineError web component to use, we can render that when our table is not valid\n        // (as well as throwing the below error). Until then our React container is rendering the error component and\n        // throwing the error.\n        // throw new Error(\n        //   `${WA_CONSOLE_PREFIX} Number of cells in the table header does not match the number of cells in one or more of the table rows. In order to render a table there needs to be the same number of columns in the table header and all of the table rows.`,\n        // );\n    }\n    /**\n     * Create a new array of rows that includes ids for each row. Also build an array of those same ids representing the\n     * rows that have not been filtered out.\n     */\n    _initializeRowsArrays() {\n        // Reset both arrays.\n        this._rowsWithIDs = [];\n        this._filterVisibleRowIDs = new Set();\n        this.rows.forEach((row, index) => {\n            const id = index.toString();\n            this._rowsWithIDs.push({ ...row, id });\n            this._filterVisibleRowIDs.add(id);\n        });\n    }\n    /**\n     * If the chat container is over a certain height then show more rows per page.\n     */\n    _initializePageSize() {\n        // If the chat container is above a certain height then show more rows per page.\n        if (this.chatHeight > TALL_CHAT_HEIGHT) {\n            this._currentPageSize = DEFAULT_TABLE_PAGE_SIZE_TALL_CHAT;\n        }\n        else {\n            this._currentPageSize = DEFAULT_TABLE_PAGE_SIZE;\n        }\n        // If there are more rows than the page size then enable filtering.\n        this._allowFiltering = this.rows.length > this._currentPageSize;\n        // Update the visible rows in case the page size has changed or this is the first time this web component has\n        // rendered.\n        this._updateVisibleRows();\n    }\n    /**\n     * When the page change event is fired by the pagination component, change which rows are visible. For some reason\n     * only this event is firing twice. However the page size and number is the same both times so the functionality of\n     * the pagination component works as expected. Ignore this double firing for now since it appears to be a bug on\n     * Carbon's end that will likely be fixed in a future release.\n     */\n    _handlePageChangeEvent(event) {\n        this._updateVisibleRows(event.detail?.page, event.detail?.pageSize);\n        event.stopPropagation();\n    }\n    /**\n     * When the number of rows per page is changed, update the current page size and change which rows are visible.\n     */\n    _handlePageSizeChangeEvent(event) {\n        this._rowsPerPageChanged = true;\n        this._currentPageSize = event.detail?.pageSize;\n        this._updateVisibleRows();\n        event.stopPropagation();\n    }\n    /**\n     * When the filter event is fired, record which rows have not been filtered out, and update which rows are visible.\n     * This event is fired when the columns are sorted using the header cells AND when the table is filtered using the\n     * search bar.\n     */\n    _handleFilterEvent(event) {\n        // Record the new set of unfiltered row ids.\n        this._filterVisibleRowIDs = new Set(event?.detail?.unfilteredRows.map((row) => row.id));\n        // Go back to the first page.\n        this._currentPageNumber = 1;\n        // Update which rows are visible.\n        this._updateVisibleRows();\n        event.stopPropagation();\n    }\n    /**\n     * Given the current page number, page size, and array of rows that have not been filtered out, determine which rows\n     * to show and hide using css.\n     */\n    _updateVisibleRows(page = this._currentPageNumber, pageSize = this._currentPageSize) {\n        // Set the current page number and only show the rows for that page.\n        this._currentPageNumber = page;\n        // Grab all the rows that have been rendered. It's necessary to grab them from the page because the cds-custom-table puts\n        // the rows in a specific order when sorting and we want to preserve that order.\n        const rows = Array.from(this.renderRoot.querySelectorAll(\"cds-custom-table-row\"));\n        // This is similar to the carbon example here https://stackblitz.com/edit/github-kbd9xw-s3y3s6?file=index.html. I\n        // originally tried creating and passing an array of the specific rows the template should render for the current\n        // page. Unfortunately doing that doesn't work with the combination of the is-sortable prop for the table and\n        // page-size prop for pagination. What would happen is old rows would persist if you were on the last page and there\n        // weren't enough rows to fill the page (even though the old rows weren't included in the new rows provided to the\n        // template). Using Carbon's example of hiding the rows with styling works so I'm extending that concept here even\n        // though, ideally, render controls the view and reacts to the state that would be determined here.\n        // Hide all the rows to start.\n        rows.forEach((row) => row.style.setProperty(\"display\", \"none\"));\n        // Now filter the rows down to what is visible according to the filter.\n        const filterVisibleRows = rows.filter((row) => this._filterVisibleRowIDs.has(row.id));\n        // Now show all the rows that are within the current page.\n        const pageStart = (page - 1) * pageSize;\n        const pageEnd = page * pageSize - 1;\n        for (let index = pageStart; index <= pageEnd; index++) {\n            // If there is a row at that index then show it. If there aren't enough rows to fill the page then there won't be\n            // a row at that index.\n            filterVisibleRows[index]?.removeAttribute(\"style\");\n        }\n    }\n    /**\n     * Carbon's data table component by default only downloads rows that have been selected, and only downloads json. We\n     * don't want to implement selection at this time and we want our download to be csv so we need to implement own\n     * download function.\n     */\n    _handleDownload() {\n        // Don't save content from the expandable rows at this time. This could be added in the future but it's unclear how\n        // this would look in the download.\n        const tableArray = [\n            this.headers,\n            ...this.rows.map((row) => row.cells),\n        ];\n        // stringify docs here: https://csv.js.org/stringify/api/sync/\n        const stringifiedTable = stringify(tableArray);\n        const blob = new Blob([stringifiedTable], {\n            type: \"text/csv;charset=utf-8;\",\n        });\n        // It appears the only way to control the file name of a downloaded file is through an anchor element with a\n        // download attribute. So create such an element and add our data to be downloaded.\n        const link = document.createElement(\"a\");\n        const url = URL.createObjectURL(blob);\n        link.setAttribute(\"href\", url);\n        link.setAttribute(\"download\", \"table-data.csv\");\n        link.style.visibility = \"hidden\";\n        document.body.appendChild(link);\n        // Click on the link we've created to download the blob with our stringified table data.\n        link.click();\n        document.body.removeChild(link);\n    }\n    /**\n     * Renders either the table skeleton or the table. If the table is larger than the page size then also render the\n     * pagination component to change pages.\n     */\n    render() {\n        // TODO TABLE: Once we have a web component version of the inline error state we could render that here if\n        // !this._isValid.\n        // This could be used while we wait for a md stream containing a table to complete.\n        if (this.loading) {\n            return tableSkeletonTemplate();\n        }\n        // If there are more rows than the page size then we need to add the pagination component. If the rows per page has\n        // been changed by the pagination component then we need to keep the pagination component around so the user can\n        // change the page size again, even if the current page size is the same as the number of table rows.\n        if (this.rows.length > this._currentPageSize || this._rowsPerPageChanged) {\n            return html `${tableTemplate(this)} ${tablePaginationTemplate(this)}`;\n        }\n        // Otherwise, just render the table.\n        return html `${tableTemplate(this)}`;\n    }\n};\nTableElement.styles = css `\n    ${unsafeCSS(css_248z)}\n  `;\n__decorate([\n    property({ type: String, attribute: \"table-title\" })\n], TableElement.prototype, \"tableTitle\", void 0);\n__decorate([\n    property({ type: String, attribute: \"table-description\" })\n], TableElement.prototype, \"tableDescription\", void 0);\n__decorate([\n    property({ type: Array })\n], TableElement.prototype, \"headers\", void 0);\n__decorate([\n    property({ type: Array })\n], TableElement.prototype, \"rows\", void 0);\n__decorate([\n    property({ type: Number, attribute: \"container-width\" })\n], TableElement.prototype, \"containerWidth\", void 0);\n__decorate([\n    property({ type: Number, attribute: \"chat-height\" })\n], TableElement.prototype, \"chatHeight\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: \"loading\" })\n], TableElement.prototype, \"loading\", void 0);\n__decorate([\n    property({ type: String, attribute: \"filter-placeholder-text\" })\n], TableElement.prototype, \"filterPlaceholderText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"previous-page-text\" })\n], TableElement.prototype, \"previousPageText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"next-page-text\" })\n], TableElement.prototype, \"nextPageText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"items-per-page-text\" })\n], TableElement.prototype, \"itemsPerPageText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"locale\" })\n], TableElement.prototype, \"locale\", void 0);\n__decorate([\n    property({ type: Function, attribute: false })\n], TableElement.prototype, \"getPaginationSupplementalText\", void 0);\n__decorate([\n    property({ type: Function, attribute: false })\n], TableElement.prototype, \"getPaginationStatusText\", void 0);\n__decorate([\n    state()\n], TableElement.prototype, \"_isValid\", void 0);\n__decorate([\n    state()\n], TableElement.prototype, \"_currentPageNumber\", void 0);\n__decorate([\n    state()\n], TableElement.prototype, \"_currentPageSize\", void 0);\n__decorate([\n    state()\n], TableElement.prototype, \"_rowsPerPageChanged\", void 0);\n__decorate([\n    state()\n], TableElement.prototype, \"_filterVisibleRowIDs\", void 0);\n__decorate([\n    state()\n], TableElement.prototype, \"_rowsWithIDs\", void 0);\n__decorate([\n    state()\n], TableElement.prototype, \"_allowFiltering\", void 0);\n__decorate([\n    bind\n], TableElement.prototype, \"_handlePageChangeEvent\", null);\n__decorate([\n    bind\n], TableElement.prototype, \"_handlePageSizeChangeEvent\", null);\n__decorate([\n    bind\n], TableElement.prototype, \"_handleFilterEvent\", null);\nTableElement = __decorate([\n    carbonElement(TABLE_COMPONENT_TAG_NAME)\n], TableElement);\n\nexport { POSSIBLE_PAGE_SIZES, TABLE_COMPONENT_TAG_NAME, TableElement };\n","import '@carbon/web-components/es-custom/components/data-table/table-skeleton.js';\nimport { html } from 'lit';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Table skeleton view logic.\n */\nfunction tableSkeletonTemplate() {\n    // Can add header names to the skeleton if we want to\n    // https://web-components.carbondesignsystem.com/?path=/docs/components-datatable-skeleton--overview#custom-headers.\n    return html `<cds-custom-table-skeleton row-count=\"3\" column-count=\"2\">\n  </cds-custom-table-skeleton>`;\n}\n\nexport { tableSkeletonTemplate };\n","import '@carbon/web-components/es-custom/components/pagination/index.js';\nimport '@carbon/web-components/es-custom/components/select/index.js';\nimport { html } from 'lit';\nimport { POSSIBLE_PAGE_SIZES } from '../cds-aichat-table.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Table pagination view logic.\n */\nfunction tablePaginationTemplate(tableElement) {\n    const { _currentPageSize: currentPageSize, _currentPageNumber: currentPageNumber, _filterVisibleRowIDs: filterVisibleRowIDs, rows, previousPageText, nextPageText, itemsPerPageText, getPaginationSupplementalText, getPaginationStatusText, _handlePageChangeEvent: handlePageChangeEvent, _handlePageSizeChangeEvent: handlePageSizeChangeEvent, } = tableElement;\n    const totalVisibleRows = filterVisibleRowIDs.size;\n    const totalRows = rows.length;\n    // Page sizes will only be included if the page size is less than the total number of rows.\n    const supportedPageSizes = POSSIBLE_PAGE_SIZES.filter((pageSize) => pageSize < totalRows);\n    // TODO TABLE: This component is quite wide. Because of the shadow dom we can't select it's contents to hide items\n    // with css, nor can we extend this class to manipulate it's styles because of Carbon's use of :host(cds-custom-pagination)\n    // within their styles. There is however a smaller variation of this component\n    // (https://carbondesignsystem.com/components/pagination/usage/#responsive-behavior) but it's only used at a specific\n    // breakpoint, when the viewport is narrow (i.e. a mobile device). A Carbon enhancement request has been made to\n    // expose a prop that can be used to enable this smaller variation\n    // (https://github.com/carbon-design-system/carbon/issues/17564). When that enhancement is done, and we can\n    // dynamically enable a narrow form factor of this pagination component, then we could use the same css trick we used\n    // for the header to make the pagination component sticky (if the carbon component doesn't already do it for us).\n    return html `<cds-custom-pagination\n    page-size=${currentPageSize}\n    page=${currentPageNumber}\n    total-items=${totalVisibleRows}\n    totalPages=${Math.ceil(totalVisibleRows / currentPageSize)}\n    backward-text=${previousPageText}\n    forward-text=${nextPageText}\n    items-per-page-text=${itemsPerPageText}\n    .formatSupplementalText=${getPaginationSupplementalText}\n    .formatStatusWithDeterminateTotal=${getPaginationStatusText}\n    @cds-custom-pagination-changed-current=${handlePageChangeEvent}\n    @cds-custom-page-sizes-select-changed=${handlePageSizeChangeEvent}\n  >\n    ${supportedPageSizes.map((pageSize) => html `<cds-custom-select-item value=\"${pageSize}\"\n          >${pageSize}</cds-custom-select-item\n        >`)}\n    <cds-custom-select-item value=\"${totalRows}\"\n      >${totalRows}</cds-custom-select-item\n    >\n  </cds-custom-pagination>`;\n}\n\nexport { tablePaginationTemplate };\n","var css_248z = \"cds-custom-table-header-title,\\ncds-custom-table-header-description,\\ncds-custom-table-toolbar{\\n  position:sticky;\\n  inline-size:var(--cds-chat-table-width, auto);\\n  inset-inline-start:0;\\n}\\n\\n:dir(rtl) cds-custom-table-header-title,\\n:dir(rtl) cds-custom-table-header-description,\\n:dir(rtl) cds-custom-table-toolbar{\\n  right:0;\\n  left:unset;\\n}\\n\\ncds-custom-table-header-title,\\ncds-custom-table-header-description{\\n  padding:0 1rem;\\n  inline-size:calc(var(--cds-chat-table-width, auto) - 1rem - 1rem);\\n  margin-inline:-1rem;\\n}\\n\\ncds-custom-table-header-description{\\n  margin-block-end:-0.5rem;\\n}\\n\\ncds-custom-pagination{\\n  inline-size:100%;\\n}\";\n\nexport { css_248z as default };\n","import { createComponent } from '@lit/react';\nimport React from 'react';\nimport { TableElement, TABLE_COMPONENT_TAG_NAME } from '../../../web-components/components/table/cds-aichat-table.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This file creates React bindings for the Table web component and registers the web component in the DOM.\n */\nconst Table = createComponent({\n    tagName: TABLE_COMPONENT_TAG_NAME,\n    elementClass: TableElement,\n    react: React,\n});\n\nexport { Table };\n","import { Theme } from '@carbon/react';\nimport React, { useRef, useState, useLayoutEffect, useMemo, Suspense } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Table } from '../../../../react/components/table/Table.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { LIGHT_THEMES } from '../../../utils/constants.js';\nimport { consoleError } from '../../../utils/miscUtils.js';\nimport { InlineError } from '../error/InlineError.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Renders a table response type. The table has a header, rows, and optionally a title and description.\n */\nfunction TableContainer(props) {\n    const { tableItem } = props;\n    const { title, description, headers, rows } = tableItem;\n    const carbonTheme = useSelector((state) => state.theme.carbonTheme);\n    const chatHeight = useSelector((state) => state.chatHeight);\n    const locale = useSelector((state) => state.locale);\n    const languagePack = useLanguagePack();\n    const intl = useIntl();\n    const tableContainerRef = useRef(null);\n    const [tableContainerWidth, setTableContainerWidth] = useState();\n    function onResize() {\n        setTableContainerWidth(tableContainerRef.current?.clientWidth);\n    }\n    useLayoutEffect(() => {\n        const tableResizeObserver = new ResizeObserver(onResize);\n        tableResizeObserver.observe(tableContainerRef.current);\n    });\n    const isValidTable = useMemo(() => {\n        const columnCount = headers.length;\n        // If the the number of cells in one of the rows is different than the number of cells in the header, then the table\n        // is not valid.\n        const isValid = !rows.some((row) => row.cells.length !== columnCount);\n        if (!isValid) {\n            consoleError(`Number of cells in the table header does not match the number of cells in one or more of the table rows. In order to render a table there needs to be the same number of columns in the table header and all of the table rows.`);\n        }\n        return isValid;\n    }, [rows, headers]);\n    function getTablePaginationSupplementalText({ count }) {\n        return intl.formatMessage({ id: \"table_paginationSupplementalText\" }, { pagesCount: count });\n    }\n    function getTablePaginationStatusText({ start, end, count, }) {\n        return intl.formatMessage({ id: \"table_paginationStatus\" }, { start, end, count });\n    }\n    if (isValidTable) {\n        // TODO TABLE: When table md is streaming from an LLM use loading prop to render skeleton state.\n        // Because of issues with our layering variables from carbon we need to force the table to be either in white or g90\n        // theme. In the other themes the table background blends into the chat background causing the table to look like\n        // it's floating.\n        return (React.createElement(Theme, { theme: LIGHT_THEMES.includes(carbonTheme) ? \"white\" : \"g90\" },\n            React.createElement(\"div\", { className: \"WACTableContainer\", ref: tableContainerRef },\n                React.createElement(Suspense, { fallback: null },\n                    React.createElement(Table, { tableTitle: title, tableDescription: description, headers: headers, rows: rows, containerWidth: tableContainerWidth, chatHeight: chatHeight, filterPlaceholderText: languagePack.table_filterPlaceholder, previousPageText: languagePack.table_previousPage, nextPageText: languagePack.table_nextPage, itemsPerPageText: languagePack.table_itemsPerPage, getPaginationSupplementalText: getTablePaginationSupplementalText, getPaginationStatusText: getTablePaginationStatusText, locale: locale })))));\n    }\n    return (\n    // Use inlineError.tsx here if the table is not valid. In the future when we have a web component version of the\n    // inlineError component the table web component can render that instead of the React container doing it here.\n    React.createElement(InlineError, null));\n}\nconst TableContainerExport = React.memo(TableContainer);\n\nexport { TableContainerExport as default };\n","import ArrowRight from '@carbon/icons-react/es/ArrowRight.js';\nimport Restart from '@carbon/icons-react/es/Restart.js';\nimport { Tile, Button } from '@carbon/react';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport '../../../../../types/state/AppState.js';\nimport { TourStartReason, MainWindowCloseReason } from '../../../../../types/events/eventBusTypes.js';\nimport { ViewType } from '../../../../../types/instance/apiTypes.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * When a message is received that has info for a tour then a tour card is shown to allow the user to start the tour. Once\n * the tour is started the tour card then changes to have a resume and restart button instead of a start button.\n */\nfunction TourCard({ message, serviceManager }) {\n    const { tour_resumeButton, tour_restartButton, tour_startButton } = useLanguagePack();\n    const { activeTourID } = useSelector((state) => state.persistedToBrowserStorage.chatState.persistedTourState);\n    // If the id of the original message that generated this card matches the active tour ID then we should show a resume\n    // and restart button instead of a start button.\n    const isCurrentTour = message.fullMessageID === activeTourID;\n    // Use the provided title and description if there is one. If there isn't one fall back to the defaults.\n    // TODO TOUR: I18N: These default values are being kept around for tours in beta. When we switch to our GA solution of\n    // using a real tour card response type the defaults will either come from tooling or will need to be moved to our\n    // en.json file in Carbon AI chat and translated.\n    const tourTitle = message.item.user_defined?.card_title ||\n        \"Guided journey\";\n    const tourDescription = message.item.user_defined?.card_description ||\n        \"Follow along as the assistant guides you to where you want to be.\";\n    /**\n     * When resume is clicked switch to the tour view.\n     */\n    async function onResumeClick() {\n        // Try to open the tour.\n        await serviceManager.actions.changeView(ViewType.TOUR, {\n            mainWindowCloseReason: MainWindowCloseReason.TOUR_CARD_RESUMED_TOUR,\n        });\n    }\n    /**\n     * When restart is clicked switch to the tour view and then change to the first step in the tour.\n     */\n    async function onRestartClick() {\n        // Try to open the tour.\n        const newViewState = await serviceManager.actions.changeView(ViewType.TOUR, {\n            mainWindowCloseReason: MainWindowCloseReason.TOUR_CARD_RESTARTED_TOUR,\n        });\n        if (newViewState.tour) {\n            // If the tour is now visible then change to the first step in the tour.\n            serviceManager.actions.changeStepInTour({ newStepIndex: 0 });\n        }\n    }\n    return (React.createElement(Tile, { className: \"WACTourCard\" },\n        React.createElement(\"div\", { className: \"WACTourCard__Title\" }, tourTitle),\n        React.createElement(\"div\", { className: \"WACTourCard__Description\" }, tourDescription),\n        isCurrentTour && (React.createElement(\"div\", null,\n            React.createElement(Button, { className: \"WACTourCard__ResumeButton\", renderIcon: ArrowRight, onClick: onResumeClick }, tour_resumeButton),\n            React.createElement(Button, { className: \"WACTourCard__RestartButton\", kind: \"ghost\", renderIcon: Restart, onClick: onRestartClick }, tour_restartButton))),\n        !isCurrentTour && (React.createElement(Button, { className: \"WACTourCard__StartButton\", renderIcon: ArrowRight, onClick: () => serviceManager.actions.startTour(message, TourStartReason.START_TOUR_CLICKED, {\n                mainWindowCloseReason: MainWindowCloseReason.TOUR_CARD_STARTED_TOUR,\n            }) }, tour_startButton))));\n}\nconst TourCardExport = React.memo(TourCard);\n\nexport { TourCardExport as TourCard };\n","import React from 'react';\nimport { useCallbackOnChange } from '../../../hooks/useCallbackOnChange.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { InlineError } from '../error/InlineError.js';\nimport { RichText as RichTextExport } from './RichText.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This item renders some text that may contain rich content. This component also supports the display of text as it\n * is streaming in chunks (currently only TextItem chunks are supported).\n */\nfunction StreamingRichText(props) {\n    const { text, streamingState, removeHTML, isStreamingError, doAutoScroll } = props;\n    const languagePack = useLanguagePack();\n    // If the chunks change, kick off an auto-scroll.\n    useCallbackOnChange(streamingState?.chunks, doAutoScroll);\n    let textToUse;\n    if (streamingState && !streamingState.isDone) {\n        // If we're streaming, then concatenate all the chunks together.\n        textToUse = streamingState.chunks.map((chunk) => chunk.text).join(\"\");\n    }\n    else {\n        textToUse = text;\n    }\n    return (React.createElement(\"div\", { className: \"WACStreamingRichText\" },\n        React.createElement(RichTextExport, { text: textToUse, shouldRemoveHTMLBeforeMarkdownConversion: removeHTML }),\n        isStreamingError && (React.createElement(InlineError, { text: languagePack.conversationalSearch_streamingIncomplete }))));\n}\n\nexport { StreamingRichText };\n","import { __decorate } from 'tslib';\nimport { LitElement, unsafeCSS, css } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { uuid } from '../../../../shared/utils/lang/uuid.js';\nimport { CSS_CLASS_PREFIX } from '../../../settings.js';\nimport css_248z from './chainOfThoughtElement.scss.js';\nimport { createEnglishFormat } from '../../../../shared/utils/languages.js';\nimport '../../../../../types/instance/apiTypes.js';\nimport enLanguagePack from '../../../../languages/en.json.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst stepTitleFormatter = createEnglishFormat(\"chainOfThought_stepTitle\");\nclass ChainOfThoughtElement extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Indicates if the details panel for the chain of thought is open.\n         */\n        this.open = false;\n        /**\n         * Formatting for label of each step item.\n         */\n        this.formatStepLabelText = ({ stepNumber, stepTitle }) => stepTitleFormatter.format({\n            stepNumber,\n            stepTitle: stepTitle || \"\",\n        });\n        /**\n         * Text string used to label step input.\n         */\n        this.inputLabelText = enLanguagePack.chainOfThought_inputLabel;\n        /**\n         * Text string used to label step output.\n         */\n        this.outputLabelText = enLanguagePack.chainOfThought_outputLabel;\n        /**\n         * Text string used to label the tool.\n         */\n        this.toolLabelText = enLanguagePack.chainOfThought_toolLabel;\n        /**\n         * Text string used to label the button to open the chain of thought panel.\n         */\n        this.explainabilityText = enLanguagePack.chainOfThought_explainabilityLabel;\n        /**\n         * Text string used to label the succeeded status icon.\n         */\n        this.statusSucceededLabelText = enLanguagePack.chainOfThought_statusSucceededLabel;\n        /**\n         * Text string used to label the failed status icon.\n         */\n        this.statusFailedLabelText = enLanguagePack.chainOfThought_statusFailedLabel;\n        /**\n         * Text string used to label the processing status icon.\n         */\n        this.statusProcessingLabelText = enLanguagePack.chainOfThought_statusProcessingLabel;\n        /**\n         * ID we use for a11y.\n         */\n        this._chainOfThoughtPanelID = `${CSS_CLASS_PREFIX}-chain-of-thought-panel-id-${uuid()}`;\n    }\n    firstUpdated(_changedProperties) {\n        // Update the steps saying they are all closed.\n        this._steps = this.steps.map((item) => ({ ...item, open: false }));\n    }\n}\nChainOfThoughtElement.styles = css `\n    ${unsafeCSS(css_248z)}\n  `;\n__decorate([\n    property({ type: Boolean, attribute: \"open\", reflect: true })\n], ChainOfThoughtElement.prototype, \"open\", void 0);\n__decorate([\n    property({ type: Array, attribute: \"steps\", reflect: true })\n], ChainOfThoughtElement.prototype, \"steps\", void 0);\n__decorate([\n    property({ type: Function, attribute: false })\n], ChainOfThoughtElement.prototype, \"formatStepLabelText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"input-label-text\", reflect: true })\n], ChainOfThoughtElement.prototype, \"inputLabelText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"output-label-text\", reflect: true })\n], ChainOfThoughtElement.prototype, \"outputLabelText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"tool-label-text\", reflect: true })\n], ChainOfThoughtElement.prototype, \"toolLabelText\", void 0);\n__decorate([\n    property({ type: String, attribute: \"explainability-text\", reflect: true })\n], ChainOfThoughtElement.prototype, \"explainabilityText\", void 0);\n__decorate([\n    property({ type: Function, attribute: false })\n], ChainOfThoughtElement.prototype, \"onToggle\", void 0);\n__decorate([\n    property({ type: Function, attribute: false })\n], ChainOfThoughtElement.prototype, \"onStepToggle\", void 0);\n__decorate([\n    property({\n        type: String,\n        attribute: \"status-succeeded-label-text\",\n        reflect: true,\n    })\n], ChainOfThoughtElement.prototype, \"statusSucceededLabelText\", void 0);\n__decorate([\n    property({\n        type: String,\n        attribute: \"status-failed-label-text\",\n        reflect: true,\n    })\n], ChainOfThoughtElement.prototype, \"statusFailedLabelText\", void 0);\n__decorate([\n    property({\n        type: String,\n        attribute: \"status-processing-label-text\",\n        reflect: true,\n    })\n], ChainOfThoughtElement.prototype, \"statusProcessingLabelText\", void 0);\n__decorate([\n    state()\n], ChainOfThoughtElement.prototype, \"_steps\", void 0);\n__decorate([\n    state()\n], ChainOfThoughtElement.prototype, \"_chainOfThoughtPanelID\", void 0);\n\nexport { ChainOfThoughtElement };\n","var css_248z = \":host{\\n  display:block;\\n  margin-block-start:1rem;\\n}\\n\\n:host([open]) .cds--aichat-chain-of-thought-content{\\n  display:block;\\n  overflow:visible;\\n  max-block-size:-moz-fit-content;\\n  max-block-size:fit-content;\\n  opacity:1;\\n}\\n:host([open]) .cds--aichat-chain-of-thought-button-chevron svg{\\n  transform:rotate(-90deg);\\n}\\n\\n.cds--aichat-chain-of-thought-button-chevron{\\n  display:flex;\\n  flex-basis:1.5rem;\\n}\\n@media screen and (prefers-reduced-motion: reduce){\\n  .cds--aichat-chain-of-thought-button-chevron svg{\\n    transform:rotate(-270deg);\\n    transition:none;\\n  }\\n}\\n.cds--aichat-chain-of-thought-button-chevron svg{\\n  transform:rotate(-270deg);\\n  transition:all 110ms cubic-bezier(0.2, 0, 0.38, 0.9);\\n}\\n\\n.cds--aichat-chain-of-thought-content{\\n  display:none;\\n  overflow:hidden;\\n  max-block-size:0;\\n  opacity:0;\\n  transition:all 110ms cubic-bezier(0, 0, 0.38, 0.9) allow-discrete;\\n}\\n\\n.cds--aichat-chain-of-thought-inner-content{\\n  border:1px solid var(--cds-border-subtle-01, #c6c6c6);\\n  background-color:var(--cds-layer-01, #f4f4f4);\\n  margin-block-start:0.5rem;\\n}\\n\\n.cds--aichat-chain-of-thought-item:not(:last-child){\\n  padding-block-end:0.75rem;\\n}\\n\\n.cds--aichat-chain-of-thought-item cds-aichat-markdown-text:not(:first-child){\\n  padding-block-start:0.5rem;\\n}\\n\\n.cds--aichat-chain-of-thought-item-label{\\n  font-size:var(--cds-heading-01-font-size, 0.875rem);\\n  font-weight:var(--cds-heading-01-font-weight, 600);\\n  line-height:var(--cds-heading-01-line-height, 1.42857);\\n  letter-spacing:var(--cds-heading-01-letter-spacing, 0.16px);\\n}\\n\\nbutton.cds--aichat-chain-of-thought-button{\\n  box-sizing:border-box;\\n  padding:0;\\n  border:0;\\n  margin:0;\\n  font-family:inherit;\\n  font-size:100%;\\n  vertical-align:baseline;\\n  display:inline-block;\\n  padding:0;\\n  border:0;\\n  -webkit-appearance:none;\\n     -moz-appearance:none;\\n          appearance:none;\\n  background:none;\\n  cursor:pointer;\\n  text-align:start;\\n  inline-size:100%;\\n  font-size:var(--cds-heading-01-font-size, 0.875rem);\\n  font-weight:var(--cds-heading-01-font-weight, 600);\\n  line-height:var(--cds-heading-01-line-height, 1.42857);\\n  letter-spacing:var(--cds-heading-01-letter-spacing, 0.16px);\\n  display:flex;\\n  align-items:center;\\n  color:var(--cds-text-primary, #161616);\\n}\\nbutton.cds--aichat-chain-of-thought-button *,\\nbutton.cds--aichat-chain-of-thought-button *::before,\\nbutton.cds--aichat-chain-of-thought-button *::after{\\n  box-sizing:inherit;\\n}\\nbutton.cds--aichat-chain-of-thought-button::-moz-focus-inner{\\n  border:0;\\n}\\n\\nbutton.cds--aichat-chain-of-thought-button:focus,\\nbutton.cds--aichat-chain-of-thought-button:focus-visible{\\n  outline:2px solid var(--cds-focus);\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-content{\\n  display:block;\\n  overflow:visible;\\n  background:var(--cds-layer-01, #f4f4f4);\\n  color:var(--cds-text-primary, #161616);\\n  max-block-size:-moz-fit-content;\\n  max-block-size:fit-content;\\n  opacity:1;\\n  transition:all 110ms cubic-bezier(0, 0, 0.38, 0.9) allow-discrete;\\n}\\n\\n.cds--aichat-chain-of-thought-item{\\n  padding-block:1rem;\\n  padding-inline:2rem 1rem;\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-content[hidden]{\\n  display:none;\\n  overflow:hidden;\\n  max-block-size:0;\\n  opacity:0;\\n  padding-block:0;\\n  padding-inline:0;\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-header-chevron{\\n  display:flex;\\n  flex:0 1 2rem;\\n  justify-content:center;\\n  color:var(--cds-text-primary, #161616);\\n}\\n@media screen and (prefers-reduced-motion: reduce){\\n  .cds--aichat-chain-of-thought-accordion-item-header-chevron svg{\\n    fill:var(--cds-text-primary, #161616);\\n    transform:rotate(-270deg);\\n    transition:none;\\n  }\\n}\\n.cds--aichat-chain-of-thought-accordion-item-header-chevron svg{\\n  fill:var(--cds-text-primary, #161616);\\n  transform:rotate(-270deg);\\n  transition:all 110ms cubic-bezier(0.2, 0, 0.38, 0.9);\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-header-chevron[data-open] svg{\\n  transform:rotate(-90deg);\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item button.cds--aichat-chain-of-thought-accordion-item-header{\\n  box-sizing:border-box;\\n  padding:0;\\n  border:0;\\n  margin:0;\\n  font-family:inherit;\\n  font-size:100%;\\n  vertical-align:baseline;\\n  display:inline-block;\\n  padding:0;\\n  border:0;\\n  -webkit-appearance:none;\\n     -moz-appearance:none;\\n          appearance:none;\\n  background:none;\\n  cursor:pointer;\\n  text-align:start;\\n  inline-size:100%;\\n  font-size:var(--cds-body-01-font-size, 0.875rem);\\n  font-weight:var(--cds-body-01-font-weight, 400);\\n  line-height:var(--cds-body-01-line-height, 1.42857);\\n  letter-spacing:var(--cds-body-01-letter-spacing, 0.16px);\\n  display:flex;\\n  align-items:center;\\n  padding:0.5rem 0;\\n  background:var(--cds-layer-accent-02, #e0e0e0);\\n  block-size:2rem;\\n}\\n.cds--aichat-chain-of-thought-accordion-item button.cds--aichat-chain-of-thought-accordion-item-header *,\\n.cds--aichat-chain-of-thought-accordion-item button.cds--aichat-chain-of-thought-accordion-item-header *::before,\\n.cds--aichat-chain-of-thought-accordion-item button.cds--aichat-chain-of-thought-accordion-item-header *::after{\\n  box-sizing:inherit;\\n}\\n.cds--aichat-chain-of-thought-accordion-item button.cds--aichat-chain-of-thought-accordion-item-header::-moz-focus-inner{\\n  border:0;\\n}\\n.cds--aichat-chain-of-thought-accordion-item button.cds--aichat-chain-of-thought-accordion-item-header:focus,\\n.cds--aichat-chain-of-thought-accordion-item button.cds--aichat-chain-of-thought-accordion-item-header:focus-visible{\\n  position:relative;\\n  z-index:2;\\n  box-shadow:0 -1px 0 0 var(--cds-focus, #0f62fe), inset 0 1px 0 0 var(--cds-focus, #0f62fe), inset 2px 0 0 0 var(--cds-focus, #0f62fe), 0 1px 0 0 var(--cds-focus, #0f62fe), inset 0 -1px 0 0 var(--cds-focus, #0f62fe), inset -2px 0 0 0 var(--cds-focus, #0f62fe);\\n  outline:none;\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item:nth-child(odd) button.cds--aichat-chain-of-thought-accordion-item-header{\\n  background:var(--cds-layer-02, #ffffff);\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-header-title{\\n  overflow:hidden;\\n  flex:1 1;\\n  color:var(--cds-text-primary, #161616);\\n  margin-inline-end:0.5rem;\\n  text-overflow:ellipsis;\\n  white-space:nowrap;\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-header-status{\\n  display:flex;\\n  flex:0 0 1.5rem;\\n  align-items:center;\\n  justify-content:center;\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-header-status--failure{\\n  display:flex;\\n  align-items:center;\\n  justify-content:center;\\n  margin-inline-end:0.5rem;\\n}\\n.cds--aichat-chain-of-thought-accordion-item-header-status--failure svg{\\n  fill:var(--cds-support-error, #da1e28);\\n}\\n\\n.cds--aichat-chain-of-thought-accordion-item-header-status--success{\\n  display:flex;\\n  align-items:center;\\n  justify-content:center;\\n  margin-inline-end:0.5rem;\\n}\\n.cds--aichat-chain-of-thought-accordion-item-header-status--success svg{\\n  fill:var(--cds-support-success, #24a148);\\n}\";\n\nexport { css_248z as default };\n","import '../../markdownText/cds-aichat-markdown-text.js';\nimport '@carbon/web-components/es-custom/components/inline-loading/index.js';\nimport { toString } from '@carbon/icon-helpers';\nimport CheckmarkFilled16 from '@carbon/icons/es/checkmark--filled/16.js';\nimport ChevronRight16 from '@carbon/icons/es/chevron--right/16.js';\nimport ErrorFilled16 from '@carbon/icons/es/error--filled/16.js';\nimport { html } from 'lit';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\nimport { parseUnknownDataToMarkdown } from '../../../../shared/utils/lang/stringUtils.js';\nimport { CSS_CLASS_PREFIX } from '../../../settings.js';\nimport { ChainOfThoughtStepStatus } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst CSS_CLASS_ITEM_PREFIX = `${CSS_CLASS_PREFIX}-chain-of-thought-item`;\nconst CSS_CLASS_STATUS_PREFIX = `${CSS_CLASS_PREFIX}-chain-of-thought-accordion-item-header-status`;\nconst ChevronRight16svg = toString(ChevronRight16);\nconst CheckmarkFilled16svg = toString(CheckmarkFilled16);\nconst ErrorFilled16svg = toString(ErrorFilled16);\n/**\n * Returns the correct icon given the status of the step. If there is no status, we assume it is successful.\n */\nfunction stepStatus(status, statusSucceededLabelText, statusFailedLabelText, statusProcessingLabelText) {\n    switch (status) {\n        case ChainOfThoughtStepStatus.PROCESSING:\n            return html `<cds-custom-inline-loading\n        status=\"active\"\n        aria-label=\"${statusProcessingLabelText}\"\n      ></cds-custom-inline-loading>`;\n        case ChainOfThoughtStepStatus.FAILURE:\n            return html `<span\n        class=\"${CSS_CLASS_STATUS_PREFIX}--${ChainOfThoughtStepStatus.FAILURE}\"\n        aria-label=\"${statusFailedLabelText}\"\n        >${unsafeSVG(ErrorFilled16svg)}</span\n      >`;\n        default:\n            return html `<span\n        class=\"${CSS_CLASS_STATUS_PREFIX}--${ChainOfThoughtStepStatus.SUCCESS}\"\n        aria-label=\"${statusSucceededLabelText}\"\n        >${unsafeSVG(CheckmarkFilled16svg)}</span\n      >`;\n    }\n}\n/**\n * Takes the input/output data that is unknown and then renders it in the correct format or returns nothing.\n */\nfunction renderToolData(data, label, classPostfix) {\n    // Once we have a Code component instead of just a markdown component, we will need to loop back here.\n    const content = parseUnknownDataToMarkdown(data);\n    if (content) {\n        return renderToolDataAsMarkdown(content, label, classPostfix);\n    }\n    return html ``;\n}\nfunction renderToolDataAsMarkdown(content, label, classPostfix) {\n    return html `<div\n    class=\"${CSS_CLASS_ITEM_PREFIX} ${CSS_CLASS_ITEM_PREFIX}-${classPostfix}\"\n  >\n    <div class=\"${CSS_CLASS_ITEM_PREFIX}-label\">${label}</div>\n    <cds-aichat-markdown-text\n      sanitize-html\n      markdown=${content}\n    ></cds-aichat-markdown-text>\n  </div>`;\n}\nfunction accordionItemContent(customElementClass, item) {\n    const { inputLabelText, outputLabelText, toolLabelText } = customElementClass;\n    if (item.open) {\n        return html ` ${item.description\n            ? html `<div\n          class=\"${CSS_CLASS_ITEM_PREFIX} ${CSS_CLASS_ITEM_PREFIX}-description\"\n        >\n          <cds-aichat-markdown-text\n            sanitize-html\n            markdown=${item.description}\n          ></cds-aichat-markdown-text>\n        </div>`\n            : null}\n    ${item.tool_name\n            ? html `<div\n          class=\"${CSS_CLASS_ITEM_PREFIX} ${CSS_CLASS_ITEM_PREFIX}-toolName\"\n        >\n          <div class=\"${CSS_CLASS_ITEM_PREFIX}-label\">${toolLabelText}</div>\n          ${item.tool_name}\n        </div>`\n            : null}\n    ${renderToolData(item.request?.args, inputLabelText, \"input\")}\n    ${renderToolData(item.response?.content, outputLabelText, \"output\")}`;\n    }\n    return html ``;\n}\nfunction accordionContent(customElementClass) {\n    const { _steps, open, _chainOfThoughtPanelID, onStepToggle, formatStepLabelText, statusSucceededLabelText, statusFailedLabelText, statusProcessingLabelText, } = customElementClass;\n    if (open) {\n        return html `${_steps.map((item, index) => {\n            const stepNumber = index + 1;\n            const content_id = `${_chainOfThoughtPanelID}-step-${stepNumber}-content`;\n            return html `<div\n        class=\"${CSS_CLASS_PREFIX}-chain-of-thought-accordion-item\"\n      >\n        <button\n          class=\"${CSS_CLASS_PREFIX}-chain-of-thought-accordion-item-header\"\n          @click=${() => {\n                item.open = !item.open;\n                customElementClass.requestUpdate();\n                // This was an unfortunate discovery after refactoring.\n                // I need to move the accordionItemContent back out into its own component for two reasons:\n                // 1. The next line and not being able to create a ref here.\n                // 2. We really should allow someone to pass in a custom template for this.\n                const element = customElementClass.shadowRoot.querySelector(`#${content_id}`);\n                onStepToggle?.(item.open, element);\n            }}\n          aria-expanded=${item.open}\n          aria-controls=${content_id}\n        >\n          <span\n            class=\"${CSS_CLASS_PREFIX}-chain-of-thought-accordion-item-header-chevron\"\n            ?data-open=${item.open}\n            >${unsafeSVG(ChevronRight16svg)}</span\n          >\n          <span\n            class=\"${CSS_CLASS_PREFIX}-chain-of-thought-accordion-item-header-title\"\n            >${formatStepLabelText({ stepNumber, stepTitle: item.title })}</span\n          >\n          <span class=\"${CSS_CLASS_STATUS_PREFIX}\"\n            >${stepStatus(item.status, statusSucceededLabelText, statusFailedLabelText, statusProcessingLabelText)}</span\n          >\n        </button>\n        <div\n          class=\"${CSS_CLASS_PREFIX}-chain-of-thought-accordion-item-content\"\n          id=${content_id}\n          ?hidden=${!item.open}\n        >\n          ${accordionItemContent(customElementClass, item)}\n        </div>\n      </div>`;\n        })}`;\n    }\n    return html ``;\n}\nfunction chainOfThoughtElementTemplate(customElementClass) {\n    const { _chainOfThoughtPanelID, explainabilityText, open } = customElementClass;\n    /**\n     * Function called when someone clicks on the button to toggle if chain of thought is open or closed.\n     */\n    function toggle() {\n        customElementClass.open = !customElementClass.open;\n        customElementClass.onToggle?.(customElementClass.open, customElementClass);\n    }\n    return html `<div class=\"${CSS_CLASS_PREFIX}-chain-of-thought\">\n    <button\n      class=\"${CSS_CLASS_PREFIX}-chain-of-thought-button\"\n      @click=${toggle}\n      aria-expanded=${open}\n      aria-controls=${_chainOfThoughtPanelID}\n    >\n      <span class=\"${CSS_CLASS_PREFIX}-chain-of-thought-button-chevron\"\n        >${unsafeSVG(ChevronRight16svg)}</span\n      >\n      ${explainabilityText}\n    </button>\n    <div\n      id=${_chainOfThoughtPanelID}\n      class=\"${CSS_CLASS_PREFIX}-chain-of-thought-content\"\n      ?hidden=${!open}\n    >\n      <div class=\"${CSS_CLASS_PREFIX}-chain-of-thought-inner-content\">\n        ${accordionContent(customElementClass)}\n      </div>\n    </div>\n  </div>`;\n}\n\nexport { chainOfThoughtElementTemplate };\n","import { __decorate } from 'tslib';\nimport { carbonElement } from '../../decorators/customElement.js';\nimport { ChainOfThoughtElement } from './src/ChainOfThoughtElement.js';\nimport { chainOfThoughtElementTemplate } from './src/chainOfThoughtElement.template.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst CHAIN_OF_THOUGHT_COMPONENT_TAG_NAME = `cds-aichat-chain-of-thought`;\n/**\n * This class is used to display two feedback buttons (thumbs up and thumbs down).\n */\nlet CDSChatChainOfThoughtElement = class CDSChatChainOfThoughtElement extends ChainOfThoughtElement {\n    /**\n     * Renders the template while passing in class functionality.\n     */\n    render() {\n        return chainOfThoughtElementTemplate(this);\n    }\n};\nCDSChatChainOfThoughtElement = __decorate([\n    carbonElement(CHAIN_OF_THOUGHT_COMPONENT_TAG_NAME)\n], CDSChatChainOfThoughtElement);\n\nexport { CHAIN_OF_THOUGHT_COMPONENT_TAG_NAME, CDSChatChainOfThoughtElement as default };\n","import { createComponent } from '@lit/react';\nimport React from 'react';\nimport CDSChatChainOfThoughtElement, { CHAIN_OF_THOUGHT_COMPONENT_TAG_NAME } from '../../../web-components/components/chainOfThought/cds-aichat-chain-of-thought.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nconst ChainOfThought = createComponent({\n    tagName: CHAIN_OF_THOUGHT_COMPONENT_TAG_NAME,\n    elementClass: CDSChatChainOfThoughtElement,\n    react: React,\n});\n\nexport { ChainOfThought };\n","import Attachment from '@carbon/icons-react/es/Attachment.js';\nimport React, { useRef, useMemo, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { FeedbackInteractionType, BusEventType } from '../../../types/events/eventBusTypes.js';\nimport { FeedbackButtonsComponent } from '../../react/components/feedback/FeedbackButtonsComponent.js';\nimport { FeedbackComponent } from '../../react/components/feedback/FeedbackComponent.js';\nimport { CSS_CLASS_PREFIX } from '../../web-components/settings.js';\nimport { ResponseStopped } from '../components/ResponseStopped.js';\nimport { ConnectToAgent } from '../components/responseTypes/agent/ConnectToAgent.js';\nimport { AudioComponent as AudioComponentExport } from '../components/responseTypes/audio/AudioComponent.js';\nimport { ButtonItemComponent } from '../components/responseTypes/buttonItem/ButtonItemComponent.js';\nimport { CardItemComponent as CardComponentExport } from '../components/responseTypes/card/CardItemComponent.js';\nimport { CarouselItemComponent } from '../components/responseTypes/carousel/CarouselItemComponent.js';\nimport { ConversationalSearch } from '../components/responseTypes/conversationalSearch/ConversationalSearch.js';\nimport UserDefinedResponse from '../components/responseTypes/custom/UserDefinedResponse.js';\nimport { DatePickerComponent as DatePickerComponentExport } from '../components/responseTypes/datePicker/DatePickerComponent.js';\nimport { InlineError } from '../components/responseTypes/error/InlineError.js';\nimport { GridItemComponent as GridItemComponentExport } from '../components/responseTypes/grid/GridItemComponent.js';\nimport { IFrameMessage } from '../components/responseTypes/iframe/IFrameMessage.js';\nimport { Image as ImageExport } from '../components/responseTypes/image/Image.js';\nimport { OptionComponent } from '../components/responseTypes/options/OptionComponent.js';\nimport TableContainerExport from '../components/responseTypes/table/TableContainer.js';\nimport { TourCard as TourCardExport } from '../components/responseTypes/tour/TourCard.js';\nimport { StreamingRichText } from '../components/responseTypes/util/StreamingRichText.js';\nimport { VideoComponent as VideoComponentExport } from '../components/responseTypes/video/VideoComponent.js';\nimport { useLanguagePack } from '../hooks/useLanguagePack.js';\nimport { useUUID } from '../hooks/useUUID.js';\nimport actions from '../store/actions.js';\nimport { selectAgentDisplayState } from '../store/selectors.js';\nimport { isRequest, isResponse, isTextItem, renderAsTour, renderAsUserDefinedMessage, getMediaDimensions } from '../utils/messageUtils.js';\nimport { ChainOfThought } from '../../react/components/chainOfThought/ChainOfThought.js';\nimport { InternalMessageRequestType, MessageResponseTypes, IFrameItemDisplayOption } from '../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/* eslint-disable react/no-array-index-key */\n/**\n * This component renders a specific message component based on a message's type.\n */\nfunction MessageTypeComponent(props) {\n    const { allowNewFeedback, hideFeedback, serviceManager, originalMessage, message, } = props;\n    const intl = useIntl();\n    const languagePack = useLanguagePack();\n    const feedbackDetailsRef = useRef();\n    const agentDisplayState = useSelector(selectAgentDisplayState, shallowEqual);\n    const agentState = useSelector((state) => state.agentState);\n    const persistedAgentState = useSelector((state) => state.persistedToBrowserStorage.chatState.agentState);\n    const feedbackID = message.item.message_options?.feedback?.id;\n    const feedbackPanelID = useUUID();\n    const feedbackHistory = originalMessage.history?.feedback?.[feedbackID];\n    const feedbackInitialValues = useMemo(() => {\n        if (!feedbackHistory) {\n            return null;\n        }\n        return {\n            text: feedbackHistory.text,\n            selectedCategories: feedbackHistory.categories,\n        };\n    }, [feedbackHistory]);\n    // Indicates if the one of the feedback details are open.\n    const [isFeedbackOpen, setIsFeedbackOpen] = useState(false);\n    // Indicates if the negative or positive feedback buttons are marked as selected.\n    const [isPositiveFeedbackSelected, setIsPositiveFeedbackSelected] = useState(feedbackHistory && feedbackHistory.is_positive);\n    const [isNegativeFeedbackSelected, setIsNegativeFeedbackSelected] = useState(feedbackHistory && !feedbackHistory.is_positive);\n    // Indicates if details have been submitted.\n    const [isFeedbackSubmitted, setIsFeedbackSubmitted] = useState(Boolean(feedbackHistory));\n    /**\n     * Returns the appropriate component to render the given message.\n     */\n    function renderSpecificMessage(localMessageItem, message) {\n        if (isRequest(message)) {\n            return renderRequest(localMessageItem, message);\n        }\n        if (isResponse(message)) {\n            const response = renderResponse(localMessageItem, message);\n            const isResponseStopped = localMessageItem.item.streaming_metadata?.stream_stopped;\n            return (React.createElement(React.Fragment, null,\n                response,\n                isResponseStopped && React.createElement(ResponseStopped, null),\n                renderChainOfThought(localMessageItem),\n                renderFeedback(localMessageItem, message)));\n        }\n        return false;\n    }\n    /**\n     * Returns the appropriate component to render the given message.\n     */\n    function renderRequest(localMessageItem, originalMessage) {\n        const messageItem = localMessageItem.item;\n        if (isTextItem(messageItem)) {\n            const text = originalMessage.history?.label || messageItem.text;\n            // If this was user entered text, show the user's original text before showing the text that was actually sent to\n            // the assistant.\n            const userText = localMessageItem.ui_state.originalUserText || text;\n            return (React.createElement(\"div\", { className: \"WAC__sent--text\" },\n                originalMessage.input.message_type ===\n                    InternalMessageRequestType.FILE && (React.createElement(Attachment, { className: \"WAC__sent-fileIcon\", \"aria-label\": props.languagePack.fileSharing_fileIcon })),\n                React.createElement(\"span\", { role: \"heading\", \"aria-level\": 2 }, userText)));\n        }\n        return null;\n    }\n    /**\n     * Returns the appropriate component to render the given message.\n     */\n    function renderResponse(localMessageItem, message) {\n        if (renderAsTour(localMessageItem.item)) {\n            // Render an invalid component who's user_defined_type is specifically for the tour beta feature, as a tour.\n            return renderTour(localMessageItem);\n        }\n        if (renderAsUserDefinedMessage(localMessageItem.item)) {\n            // Render all invalid components as a user defined response\n            return renderUserDefinedResponse(localMessageItem, message);\n        }\n        const responseType = localMessageItem.item.response_type;\n        const withHumanAgent = Boolean(localMessageItem.item.agent_message_type);\n        switch (responseType) {\n            case MessageResponseTypes.TEXT:\n                return renderText(localMessageItem, message, withHumanAgent);\n            case MessageResponseTypes.IMAGE:\n                return renderImage(localMessageItem);\n            case MessageResponseTypes.OPTION:\n                return renderOption(localMessageItem, message);\n            case MessageResponseTypes.CONNECT_TO_AGENT:\n                return renderConnectToAgent(localMessageItem, message);\n            case MessageResponseTypes.INLINE_ERROR:\n                return renderInlineError(localMessageItem);\n            case MessageResponseTypes.IFRAME:\n                return renderIFrameMessage(localMessageItem);\n            case MessageResponseTypes.VIDEO:\n                return renderVideoMessage(localMessageItem);\n            case MessageResponseTypes.AUDIO:\n                return renderAudioMessage(localMessageItem);\n            case MessageResponseTypes.DATE:\n                return renderDateMessage(localMessageItem);\n            case MessageResponseTypes.CONVERSATIONAL_SEARCH:\n                return renderConversationalSearchMessage(localMessageItem, message);\n            case MessageResponseTypes.TABLE:\n                return renderTable(localMessageItem);\n            case MessageResponseTypes.CARD:\n                return renderCard(localMessageItem, message);\n            case MessageResponseTypes.CAROUSEL:\n                return renderCarouselMessage(localMessageItem, message);\n            case MessageResponseTypes.BUTTON:\n                return renderButtonItem(localMessageItem, message);\n            case MessageResponseTypes.GRID:\n                return renderGrid(localMessageItem, message);\n            default:\n                return renderUserDefinedResponse(localMessageItem, message);\n        }\n    }\n    function renderText(message, originalMessage, removeHTML) {\n        if (props.isNestedMessageItem) {\n            return renderRichText(message, removeHTML, originalMessage);\n        }\n        // For text provided by the assistant, pass it through some HTML formatting before displaying it.\n        return (React.createElement(\"div\", { className: \"WAC__received--textContent\" }, renderRichText(message, removeHTML, originalMessage)));\n    }\n    function renderRichText(localMessageItem, removeHTML, originalMessage) {\n        return (React.createElement(StreamingRichText, { text: localMessageItem.item.text, streamingState: localMessageItem.ui_state.streamingState, isStreamingError: originalMessage?.history?.is_streaming_error, removeHTML: removeHTML, doAutoScroll: props.doAutoScroll }));\n    }\n    function renderOption(message, originalMessage) {\n        const { languagePack, requestInputFocus, serviceManager, disableUserInputs, isMessageForInput, } = props;\n        const withHumanAgent = Boolean(message.item.agent_message_type);\n        return (React.createElement(OptionComponent, { localMessage: message, originalMessage: originalMessage, languagePack: languagePack, disableUserInputs: disableUserInputs || !isMessageForInput, requestInputFocus: requestInputFocus, serviceManager: serviceManager, shouldRemoveHTMLBeforeMarkdownConversion: withHumanAgent }));\n    }\n    function renderImage(message) {\n        const { languagePack, serviceManager } = props;\n        const { useAITheme } = serviceManager.store.getState().theme;\n        return (React.createElement(ImageExport, { imageError: languagePack.errors_imageSource, source: message.item.source, title: message.item.title, description: message.item.description, altText: message.item.alt_text, needsAnnouncement: message.ui_state.needsAnnouncement, useAITheme: useAITheme }));\n    }\n    function renderInlineError(message) {\n        return React.createElement(InlineError, { text: message.item.text });\n    }\n    function renderIFrameMessage(message) {\n        const { doAutoScroll, isNestedMessageItem } = props;\n        const display = isNestedMessageItem\n            ? IFrameItemDisplayOption.INLINE\n            : undefined;\n        return (React.createElement(IFrameMessage, { localMessage: message, doAutoScroll: doAutoScroll, displayOverride: display }));\n    }\n    function renderVideoMessage(message) {\n        const { doAutoScroll } = props;\n        const { item } = message;\n        const { source, title, description, alt_text } = item;\n        return (React.createElement(VideoComponentExport, { source: source, title: title, description: description, baseHeight: getMediaDimensions(item)?.base_height, ariaLabel: alt_text, doAutoScroll: doAutoScroll, needsAnnouncement: message.ui_state.needsAnnouncement }));\n    }\n    function renderAudioMessage(message) {\n        const { doAutoScroll } = props;\n        const { source, title, description, alt_text } = message.item;\n        return (React.createElement(AudioComponentExport, { source: source, title: title, description: description, ariaLabel: alt_text, doAutoScroll: doAutoScroll, needsAnnouncement: message.ui_state.needsAnnouncement }));\n    }\n    function renderDateMessage(message) {\n        return (React.createElement(DatePickerComponentExport, { localMessage: message, disabled: !props.isMessageForInput, scrollElementIntoView: props.scrollElementIntoView }));\n    }\n    function renderUserDefinedResponse(message, originalMessage) {\n        const { serviceManager } = props;\n        return (React.createElement(UserDefinedResponse, { streamingState: message.ui_state.streamingState, isStreamingError: originalMessage?.history?.is_streaming_error, doAutoScroll: props.doAutoScroll, localMessageID: message.ui_state.id, serviceManager: serviceManager }));\n    }\n    function renderTour(message) {\n        const { serviceManager } = props;\n        return React.createElement(TourCardExport, { message: message, serviceManager: serviceManager });\n    }\n    function renderConnectToAgent(message, originalMessage) {\n        const { languagePack, config, serviceManager, disableUserInputs, isMessageForInput, } = props;\n        return (React.createElement(ConnectToAgent, { localMessage: message, originalMessage: originalMessage, languagePack: languagePack, config: config, serviceManager: serviceManager, agentState: agentState, agentDisplayState: agentDisplayState, persistedAgentState: persistedAgentState, disableUserInputs: disableUserInputs || !isMessageForInput, requestFocus: props.requestInputFocus }));\n    }\n    function renderCard(message, originalMessage) {\n        const { isMessageForInput, requestInputFocus } = props;\n        return (React.createElement(CardComponentExport, { localMessageItem: message, fullMessage: originalMessage, isMessageForInput: isMessageForInput, requestFocus: requestInputFocus }));\n    }\n    function renderConversationalSearchMessage(localMessageItem, fullMessage) {\n        const { scrollElementIntoView, doAutoScroll } = props;\n        return (React.createElement(ConversationalSearch, { localMessageItem: localMessageItem, scrollElementIntoView: scrollElementIntoView, isStreamingError: fullMessage.history?.is_streaming_error, doAutoScroll: doAutoScroll }));\n    }\n    function renderButtonItem(message, originalMessage) {\n        const { isMessageForInput, requestInputFocus } = props;\n        return (React.createElement(ButtonItemComponent, { localMessageItem: message, fullMessage: originalMessage, isMessageForInput: isMessageForInput, requestFocus: requestInputFocus }));\n    }\n    function renderCarouselMessage(message, originalMessage) {\n        const { isMessageForInput, requestInputFocus } = props;\n        return (React.createElement(CarouselItemComponent, { localMessageItem: message, fullMessage: originalMessage, isMessageForInput: isMessageForInput, requestFocus: requestInputFocus }));\n    }\n    function renderGrid(message, originalMessage) {\n        return (React.createElement(GridItemComponentExport, { localMessageItem: message, originalMessage: originalMessage }));\n    }\n    function renderTable(message) {\n        return React.createElement(TableContainerExport, { tableItem: message.item });\n    }\n    function scrollChainOfThought(open, element) {\n        if (open) {\n            setTimeout(() => {\n                props.scrollElementIntoView(element, 64, 64);\n            });\n        }\n    }\n    function formatStepLabelText({ stepNumber, stepTitle, }) {\n        return intl.formatMessage({ id: \"chainOfThought_stepTitle\" }, { stepNumber, stepTitle });\n    }\n    /**\n     * Renders chain of thought component for the given message item if appropriate.\n     */\n    function renderChainOfThought(localMessageItem) {\n        const chainOfThought = localMessageItem.item.message_options?.chain_of_thought;\n        if (!chainOfThought || props.isNestedMessageItem) {\n            return false;\n        }\n        return (React.createElement(ChainOfThought, { steps: chainOfThought, onToggle: scrollChainOfThought, onStepToggle: scrollChainOfThought, formatStepLabelText: formatStepLabelText, explainabilityText: languagePack.chainOfThought_explainabilityLabel, inputLabelText: languagePack.chainOfThought_inputLabel, outputLabelText: languagePack.chainOfThought_outputLabel, toolLabelText: languagePack.chainOfThought_toolLabel }));\n    }\n    /**\n     * Renders the feedback options for the given message item if appropriate.\n     */\n    function renderFeedback(localMessageItem, message) {\n        const feedbackOptions = localMessageItem.item.message_options?.feedback || {};\n        const { id: feedbackID, is_on, show_positive_details = true, show_negative_details = true, show_text_area = true, show_prompt = true, title, prompt, categories, placeholder, disclaimer, } = feedbackOptions;\n        if (props.isNestedMessageItem ||\n            hideFeedback ||\n            (!allowNewFeedback && !feedbackHistory) ||\n            !is_on) {\n            return false;\n        }\n        /**\n         * Updates the message history with the feedback data provided.\n         */\n        function updateHistory(data) {\n            if (feedbackID) {\n                const history = {\n                    feedback: {\n                        [feedbackID]: data,\n                    },\n                };\n                serviceManager.store.dispatch(actions.mergeMessageHistory(localMessageItem.fullMessageID, history));\n            }\n        }\n        /**\n         * Handles when one of the feedback buttons is clicked. We also treat clicking the cancel button the same way as\n         * clicking the feedback button.\n         */\n        function onFeedbackClicked(isPositive) {\n            const toggleToSelected = isPositive\n                ? !isPositiveFeedbackSelected\n                : !isNegativeFeedbackSelected;\n            const openDetails = (isPositive ? show_positive_details : show_negative_details) &&\n                toggleToSelected;\n            if (toggleToSelected && !openDetails) {\n                // If the button has been toggled to selected but we're not showing details, that means the option is considered\n                // immediately submitted.\n                updateHistory({ is_positive: isPositive });\n                setIsFeedbackSubmitted(true);\n                serviceManager.fire({\n                    type: BusEventType.FEEDBACK,\n                    messageItem: localMessageItem.item,\n                    message,\n                    interactionType: FeedbackInteractionType.SUBMITTED,\n                    isPositive,\n                });\n            }\n            else {\n                setIsFeedbackOpen(openDetails);\n                if (openDetails) {\n                    setTimeout(() => {\n                        props.scrollElementIntoView(feedbackDetailsRef.current, 48, 56);\n                    });\n                }\n                serviceManager.fire({\n                    type: BusEventType.FEEDBACK,\n                    messageItem: localMessageItem.item,\n                    message,\n                    interactionType: openDetails\n                        ? FeedbackInteractionType.DETAILS_OPENED\n                        : FeedbackInteractionType.DETAILS_CLOSED,\n                    isPositive,\n                });\n            }\n            setIsPositiveFeedbackSelected(isPositive ? toggleToSelected : false);\n            setIsNegativeFeedbackSelected(isPositive ? false : toggleToSelected);\n        }\n        /**\n         * Handles when the feedback submit button is clicked.\n         */\n        function onSubmit(isPositive, details) {\n            setIsFeedbackSubmitted(true);\n            setIsFeedbackOpen(false);\n            const event = {\n                type: BusEventType.FEEDBACK,\n                messageItem: localMessageItem.item,\n                message,\n                interactionType: FeedbackInteractionType.SUBMITTED,\n                isPositive,\n                text: details.text,\n                categories: details.selectedCategories,\n            };\n            serviceManager.fire(event);\n            // Submit this update to be recorded in history.\n            updateHistory({\n                is_positive: event.isPositive,\n                text: event.text,\n                categories: event.categories,\n            });\n        }\n        /**\n         * Render the feedback popup for either positive or negative feedback.\n         */\n        function renderFeedbackPopup(isPositive) {\n            // Only one popup can be open and which one is opened depends on which feedback is selected.\n            const isOpen = isFeedbackOpen &&\n                (isPositive ? isPositiveFeedbackSelected : isNegativeFeedbackSelected);\n            return (React.createElement(FeedbackComponent, { class: `${CSS_CLASS_PREFIX}-feedbackDetails-${isPositive ? \"positive\" : \"negative\"}`, id: `${feedbackPanelID}-feedback-${isPositive ? \"positive\" : \"negative\"}`, isOpen: isOpen, isReadonly: isFeedbackSubmitted, onClose: () => onFeedbackClicked(isPositive), onSubmit: (details) => onSubmit(isPositive, details), initialValues: feedbackHistory && feedbackHistory?.is_positive === isPositive\n                    ? feedbackInitialValues\n                    : null, showTextArea: show_text_area, showPrompt: show_prompt, title: title || languagePack.feedback_defaultTitle, prompt: prompt || languagePack.feedback_defaultPrompt, categories: categories, placeholder: placeholder || languagePack.feedback_defaultPlaceholder, disclaimer: disclaimer, submitLabel: languagePack.feedback_submitLabel, cancelLabel: languagePack.feedback_cancelLabel }));\n        }\n        return (React.createElement(\"div\", { className: \"WAC__received--feedback\" },\n            React.createElement(FeedbackButtonsComponent, { isPositiveOpen: isFeedbackOpen && isPositiveFeedbackSelected, isNegativeOpen: isFeedbackOpen && isNegativeFeedbackSelected, isPositiveSelected: isPositiveFeedbackSelected, isNegativeSelected: isNegativeFeedbackSelected, hasPositiveDetails: show_positive_details, hasNegativeDetails: show_negative_details, isPositiveDisabled: isNegativeFeedbackSelected || isFeedbackSubmitted, isNegativeDisabled: isPositiveFeedbackSelected || isFeedbackSubmitted, positiveLabel: languagePack.feedback_positiveLabel, negativeLabel: languagePack.feedback_negativeLabel, panelID: feedbackPanelID, onClick: onFeedbackClicked }),\n            React.createElement(\"div\", { ref: feedbackDetailsRef },\n                renderFeedbackPopup(true),\n                renderFeedbackPopup(false))));\n    }\n    return renderSpecificMessage(props.message, props.originalMessage);\n}\n\nexport { MessageTypeComponent };\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { isNil } from '../../utils/lang/langUtils.js';\nimport { addHTMLSupport } from '../../utils/languages.js';\nimport { RichText as RichTextExport } from '../responseTypes/util/RichText.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Returns the details necessary for building the message to display the current agent availability.\n */\nfunction AvailabilityMessage({ availability, fallbackText, }) {\n    let availabilityKey;\n    let availabilityValues;\n    let availabilityText;\n    if (!isNil(availability?.estimated_wait_time)) {\n        availabilityKey = \"agent_connectingMinutes\";\n        availabilityValues = { time: availability.estimated_wait_time };\n    }\n    else if (!isNil(availability?.position_in_queue)) {\n        availabilityKey = \"agent_connectingQueue\";\n        availabilityValues = { position: availability.position_in_queue };\n    }\n    else if (availability?.message) {\n        availabilityText = availability.message;\n    }\n    else {\n        availabilityText = fallbackText;\n    }\n    if (availabilityText) {\n        return React.createElement(RichTextExport, { overrideSanitize: true, text: availabilityText });\n    }\n    return (React.createElement(FormattedMessage, { id: availabilityKey, values: addHTMLSupport(availabilityValues) }));\n}\n\nexport { AvailabilityMessage };\n","import ErrorFilled from '@carbon/icons-react/es/ErrorFilled.js';\nimport cx from 'classnames';\nimport React from 'react';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction ErrorIcon(props) {\n    return React.createElement(ErrorFilled, { className: cx(\"WACErrorIcon\", props.className) });\n}\n\nexport { ErrorIcon };\n","import React from 'react';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { ErrorIcon } from '../../ErrorIcon.js';\nimport { RichText as RichTextExport } from '../util/RichText.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction InlineError({ text }) {\n    const languagePack = useLanguagePack();\n    return (React.createElement(\"div\", { className: \"WAC__inlineError\" },\n        React.createElement(\"div\", { className: \"WAC__inlineError--iconHolder\" },\n            React.createElement(ErrorIcon, { className: \"WAC__inlineError--icon\" })),\n        React.createElement(\"div\", { className: \"WAC__inlineError--text\" },\n            React.createElement(RichTextExport, { shouldRemoveHTMLBeforeMarkdownConversion: true, text: text || languagePack.errors_generalContent }))));\n}\n\nexport { InlineError, InlineError as default };\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLanguagePack } from '../../hooks/useLanguagePack.js';\nimport { useServiceManager } from '../../hooks/useServiceManager.js';\nimport { ConfirmModal } from './ConfirmModal.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Displays a modal asking if the user wants to end a chat with an agent. This also covers the case where the user\n * cancels a request for an agent before an agent has joined.\n */\nfunction EndAgentChatModal(props) {\n    const { onConfirm, onCancel, title, message } = props;\n    const languagePack = useLanguagePack();\n    const serviceManager = useServiceManager();\n    const { isConnected, isSuspended } = useSelector((state) => state.persistedToBrowserStorage.chatState.agentState);\n    const useTitle = title ||\n        (isConnected\n            ? languagePack.agent_endChat\n            : languagePack.agent_confirmCancelRequestTitle);\n    const useMessage = message ||\n        (isConnected\n            ? languagePack.agent_confirmEndChat\n            : languagePack.agent_confirmCancelRequestMessage);\n    const cancelButtonLabel = languagePack.agent_confirmEndChatNo;\n    let confirmButtonLabel;\n    if (isSuspended) {\n        confirmButtonLabel = languagePack.agent_confirmEndSuspendedYes;\n    }\n    else if (isConnected) {\n        confirmButtonLabel = languagePack.agent_confirmEndChatYes;\n    }\n    else {\n        confirmButtonLabel = languagePack.agent_confirmCancelRequestYes;\n    }\n    return (React.createElement(ConfirmModal, { title: useTitle, message: useMessage, onConfirm: onConfirm, onCancel: onCancel, cancelButtonLabel: cancelButtonLabel, confirmButtonLabel: confirmButtonLabel, modalAnnounceMessage: useMessage, serviceManager: serviceManager }));\n}\n\nexport { EndAgentChatModal };\n","import { Tile, unstable__AiSkeletonPlaceholder, SkeletonPlaceholder } from '@carbon/react';\nimport cx from 'classnames';\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useAriaAnnouncer } from '../../../hooks/useAriaAnnouncer.js';\nimport { getURLHostName } from '../../../utils/browserUtils.js';\nimport { RESPONSE_TYPE_TIMEOUT_MS } from '../../../utils/constants.js';\nimport { InlineError } from '../error/InlineError.js';\nimport { TextHolderTile } from '../util/TextHolderTile.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction Image(props) {\n    const { imageError, title, description, displayURL, hideIconAndTitle, needsAnnouncement, renderIcon, inline, } = props;\n    const ariaAnnouncer = useAriaAnnouncer();\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const rootRef = useRef();\n    // This ref is for merely saving the initial value of shouldAnnounce prop.\n    const needsAnnouncementRef = useRef(needsAnnouncement);\n    const hasText = Boolean(title || description || displayURL);\n    const Icon = renderIcon;\n    // This effect announces the contents of this response type once the image has loaded.\n    useEffect(() => {\n        if (isLoaded && needsAnnouncementRef.current) {\n            ariaAnnouncer(rootRef.current);\n        }\n    }, [ariaAnnouncer, isLoaded]);\n    if (isError) {\n        return React.createElement(InlineError, { text: imageError });\n    }\n    if (inline) {\n        return (React.createElement(ImageOnly, { ...props, setIsError: setIsError, setIsLoaded: setIsLoaded, isError: isError, isLoaded: isLoaded }));\n    }\n    return (React.createElement(Tile, { ref: rootRef, className: cx(\"WACImage\", {\n            WACImage__TextAndIcon: hasText && Boolean(renderIcon),\n            WACImage__IconOnly: !hideIconAndTitle && !title && !description && Boolean(renderIcon),\n        }) },\n        React.createElement(\"div\", { className: \"WACImage__ImageWrapper\" },\n            React.createElement(ImageOnly, { ...props, setIsError: setIsError, setIsLoaded: setIsLoaded, isError: isError, isLoaded: isLoaded })),\n        hasText && (React.createElement(TextHolderTile, { title: title, description: description, displayURL: displayURL, urlHostName: displayURL && getURLHostName(displayURL), hideTitle: hideIconAndTitle })),\n        Boolean(Icon) && (React.createElement(Icon, { className: cx(\"WACImage__Icon\", \"WACDirectionHasReversibleSVG\", {\n                \"WACImage__Icon--link\": displayURL,\n            }) }))));\n}\nfunction ImageOnly({ source, title, description, altText, displayURL, preventInlineError, onImageLoad, useAITheme, isLoaded, isError, setIsLoaded, setIsError, className, inline, }) {\n    const [isImageHidden, setIsImageHidden] = useState(false);\n    const imageAlt = altText || title || description || \"\";\n    const hasText = Boolean(title || description || displayURL);\n    /**\n     * Upon an error, update the error loading flag in order to render an inline error.\n     */\n    const handleError = useCallback(() => {\n        if (preventInlineError && hasText) {\n            setIsImageHidden(true);\n        }\n        else {\n            setIsError(true);\n        }\n    }, [preventInlineError, hasText, setIsError]);\n    // This effect sets a timeout that auto error handles after 10 seconds of waiting for the image to load. Once the\n    // image has loaded, the skeleton will be hidden, and we can clear the timeout.\n    useEffect(() => {\n        let errorTimeout = null;\n        if (!isLoaded) {\n            errorTimeout = setTimeout(handleError, RESPONSE_TYPE_TIMEOUT_MS);\n        }\n        return () => {\n            clearTimeout(errorTimeout);\n        };\n    }, [isLoaded, handleError]);\n    return (React.createElement(React.Fragment, null,\n        !isLoaded &&\n            !isImageHidden &&\n            !inline &&\n            source &&\n            (useAITheme ? (React.createElement(unstable__AiSkeletonPlaceholder, { className: \"WACImage__Skeleton\" })) : (React.createElement(SkeletonPlaceholder, { className: \"WACImage__Skeleton\" }))),\n        !isError && !isImageHidden && source && (React.createElement(\"img\", { className: cx(\"WACImage__Image\", {\n                [className]: className,\n                \"WACImage__Image--loaded\": isLoaded,\n            }), src: source, alt: imageAlt, onLoad: () => {\n                onImageLoad?.();\n                setIsLoaded(true);\n            }, onError: handleError }))));\n}\nconst ImageExport = React.memo(Image);\n\nexport { ImageExport as Image };\n","import React from 'react';\nimport { isOdd } from '../../../utils/lang/langUtils.js';\nimport { convertPossibleStringifiedArrayToFirstString, convertToEmptyStringIfStringifiedNull } from '../../../utils/lang/stringUtils.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Returns a {@link ReactNode} that represents the given text with `<em>` tags in the string replaced with actual\n * JSX elements to form highlighted portions.\n */\nfunction formatHighlightFields(str) {\n    const strArray = str.split(new RegExp(\"<em>|</em>\", \"g\"));\n    // If there is an odd number of '<em>' separators, then just return the whole string, minus the '<em>' elements.\n    if (isOdd(strArray.length)) {\n        return [strArray.join(\"\")];\n    }\n    return strArray.map((strSegment, index) => {\n        if (isOdd(index)) {\n            return strSegment;\n        }\n        return (\n        // eslint-disable-next-line react/no-array-index-key\n        React.createElement(\"em\", { key: index, className: \"WAC__highlight\" }, strSegment));\n    });\n}\n/**\n * Determine which element to render as the body and the amount of text that will be displayed in it.\n * Always use highlight.body, Use body as a fallback based on certain conditions\n * This was driven by https://github.ibm.com/Watson-Discovery/customer-care/issues/660\n * We check the searchResults.highlight.body which should be an array. If that is not set, we fall back to\n * searchResult.body which is either a string OR a stringified array. If it is the latter, we only want the first\n * item in the stringified array. https://github.ibm.com/watson-engagement-advisor/wea-backlog/issues/31262 has an\n * explanation.\n */\nfunction SearchResultBody({ searchResult }) {\n    if (searchResult && \"highlight\" in searchResult) {\n        if (searchResult.highlight?.body?.[0]) {\n            return formatHighlightFields(convertToEmptyStringIfStringifiedNull(searchResult.highlight.body[0]));\n        }\n    }\n    if (searchResult && \"body\" in searchResult && searchResult.body) {\n        return convertPossibleStringifiedArrayToFirstString(convertToEmptyStringIfStringifiedNull(searchResult.body));\n    }\n    return null;\n}\nconst SearchResultBodyExport = React.memo(SearchResultBody);\n/**\n * In conversational search citation panels we show the search result body instead of the citation text or highlight\n * body because it will contain the most context for the user. This will only be used if there is no url or\n * pdf attached to the source, so the assumption is that the data will be nicely formatted from document ingestion\n * instead of a web crawler. We also make sure to highlight the citation text within the search result body to help the\n * user find the citation.\n */\nfunction SearchResultBodyWithCitationHighlighted({ relatedSearchResult, citationItem, }) {\n    const elementsArray = [];\n    let searchString;\n    let citationString;\n    if (relatedSearchResult?.body) {\n        const searchStringFromBody = convertPossibleStringifiedArrayToFirstString(convertToEmptyStringIfStringifiedNull(relatedSearchResult.body));\n        // Search result body's can contain <em> and </em> tags which need to be removed. After remove the em tags, it\n        // should be safe to assume that the citation text is a direct substring of either the search_result body or title.\n        searchString = searchStringFromBody\n            .replace(\"<em>\", \"\")\n            .replace(\"</em>\", \"\");\n    }\n    if (citationItem?.text) {\n        citationString = convertPossibleStringifiedArrayToFirstString(convertToEmptyStringIfStringifiedNull(citationItem.text));\n    }\n    if (searchString && citationString) {\n        const startOfCitation = searchString.indexOf(citationString);\n        // If the citation string is not within the search string from the search_result body than the citation was from the\n        // search_result title which doesn't get this highlight treatment.\n        if (startOfCitation !== -1) {\n            // Add the text prior to the citation to the array.\n            elementsArray.push(React.createElement(\"span\", { key: 1 }, searchString.substring(0, startOfCitation)));\n            // Add the highlighted citation text to the array.\n            elementsArray.push(React.createElement(\"em\", { key: 2, className: \"WAC__highlight\" }, searchString.substring(startOfCitation, startOfCitation + citationString.length)));\n            // Add the text after the citation to the array.\n            elementsArray.push(React.createElement(\"span\", { key: 3 }, searchString.substring(startOfCitation + citationString.length)));\n        }\n    }\n    if (elementsArray.length) {\n        // If we had a search string and a citation string then we were able to form a highlighted search body which should\n        // be used.\n        return elementsArray;\n    }\n    if (searchString.length) {\n        // If we couldn't form a highlighted search body then just use the search string. This could happen if the citation\n        // string was in the title of the search_result instead of in the body.\n        return [React.createElement(\"span\", { key: \"search-string\" }, searchString)];\n    }\n    // If for some reason we couldn't create a search string then use the citation string.\n    return [React.createElement(\"span\", { key: \"citation-string\" }, citationString)];\n}\nconst SearchResultBodyWithCitationHighlightedExport = React.memo(SearchResultBodyWithCitationHighlighted);\n\nexport { SearchResultBodyExport as SearchResultBody, SearchResultBodyWithCitationHighlightedExport as SearchResultBodyWithCitationHighlighted };\n","import Music from '@carbon/icons-react/es/Music.js';\nimport { Tile } from '@carbon/react';\nimport cx from 'classnames';\nimport React, { useState, useRef, useCallback, useEffect, Suspense } from 'react';\nimport { useAriaAnnouncer } from '../../../hooks/useAriaAnnouncer.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { usePrevious } from '../../../hooks/usePrevious.js';\nimport { RESPONSE_TYPE_TIMEOUT_MS } from '../../../utils/constants.js';\nimport { getResponsiveElementPaddingValue } from '../../../utils/miscUtils.js';\nimport { SkeletonPlaceholder, SkeletonText } from '../../SkeletonPicker.js';\nimport { InlineError } from '../error/InlineError.js';\nimport { TextHolderTile } from './TextHolderTile.js';\nimport { MessageResponseTypes } from '../../../../../types/messaging/Messages.js';\nimport { lazyMediaPlayer } from '../../../../dynamic-imports/dynamic-imports.js';\nimport { useDynamicCSSProperties } from '../../../hooks/useCSSCustomProperties.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n// https://reactjs.org/docs/code-splitting.html#reactlazy\nconst ReactPlayerComponent = lazyMediaPlayer();\n/**\n * This component uses the React player library to handle rendering video/audio files, as well as handling third-party\n * embeddable video/audio services. Learn more: https://github.com/cookpete/react-player\n *\n * Note: We force media files to render using a video element for accessibility purposes since the audio element doesn't\n * support WebVTT for captioning/transcripts, but the video element does.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio#accessibility_concerns\n */\nfunction MediaPlayerComponent({ type, source, title, description, ariaLabel, isMixcloud, baseHeight, doAutoScroll, playing, onPlay, onPause, hideIconAndTitle, needsAnnouncement, }) {\n    const [skeletonHidden, setSkeletonHidden] = useState(false);\n    const [errorLoading, setErrorLoading] = useState(false);\n    const { errors_audioSource, errors_videoSource } = useLanguagePack();\n    const ariaAnnouncer = useAriaAnnouncer();\n    const rootElementRef = useRef();\n    const paddingTop = isMixcloud\n        ? \"120px\"\n        : getResponsiveElementPaddingValue(baseHeight);\n    const inlineStyles = useDynamicCSSProperties({ paddingTop });\n    const isAudio = type === MessageResponseTypes.AUDIO;\n    const errorMessage = isAudio ? errors_audioSource : errors_videoSource;\n    const prevSource = usePrevious(source);\n    // This ref is for merely saving the initial value of shouldAnnounce prop.\n    const shouldAnnounceRef = useRef(needsAnnouncement);\n    /**\n     * Upon an error, update the error loading flag in order to render an inline error.\n     */\n    const handleError = useCallback(() => {\n        setErrorLoading(true);\n        setSkeletonHidden(true);\n    }, []);\n    useEffect(() => {\n        if (source !== prevSource && skeletonHidden) {\n            setSkeletonHidden(false);\n        }\n    }, [prevSource, skeletonHidden, source]);\n    // This effect sets a timeout that auto error handles after 10 seconds of waiting for the React player to ready.\n    // Once the player has loaded, the skeleton will be hidden, and we can clear the timeout.\n    useEffect(() => {\n        let errorTimeout = null;\n        if (!skeletonHidden) {\n            errorTimeout = setTimeout(handleError, RESPONSE_TYPE_TIMEOUT_MS);\n        }\n        return () => {\n            clearTimeout(errorTimeout);\n        };\n    }, [skeletonHidden, handleError]);\n    useEffect(() => {\n        if (skeletonHidden && shouldAnnounceRef.current) {\n            ariaAnnouncer(rootElementRef.current);\n        }\n    }, [ariaAnnouncer, skeletonHidden]);\n    /**\n     * Once the video player is finished loading, remove the skeleton.\n     */\n    const handleReady = useCallback(() => {\n        if (!skeletonHidden) {\n            setSkeletonHidden(true);\n            doAutoScroll?.();\n        }\n    }, [doAutoScroll, skeletonHidden]);\n    /**\n     * Renders a media player skeleton. This is rendered until the react-player has loaded the provided url.\n     */\n    function renderMediaPlayerSkeleton() {\n        return (React.createElement(Tile, { className: \"WACMediaPlayer__Skeleton\" },\n            React.createElement(\"div\", { className: \"WACMediaPlayer__SkeletonContainer\", \n                // eslint-disable-next-line react/forbid-dom-props\n                style: inlineStyles },\n                React.createElement(SkeletonPlaceholder, { className: \"WACMediaPlayer__SkeletonPlayer\" })),\n            (title || description) && (React.createElement(\"div\", { className: \"WACMediaPlayer__SkeletonTextContainer\" },\n                React.createElement(SkeletonText, { paragraph: true, lineCount: 2 })))));\n    }\n    /**\n     * Render a media player background that adds letterboxes to urls utilizing iframes that may not have them included\n     * already. If an audio file is being played, we should display a music icon in the center since audio files will be\n     * loaded using a video element and a 16:9 blank video element with controls playing audio would look weird.\n     */\n    function renderMediaPlayerBackground() {\n        return (React.createElement(\"div\", { className: cx(\"WACMediaPlayer__Background\", {\n                \"WACMediaPlayer__Background--audio\": isAudio,\n            }) }, isAudio && React.createElement(Music, { size: 32, className: \"WACMediaPlayer__MusicIcon\" })));\n    }\n    /**\n     * If the dynamically imported react-player component is in suspense, we don't need to display some loading indicator\n     * since the media player skeleton handles that for us and the media player is hidden with `display: none` until the\n     * react-player has loaded the url.\n     */\n    function renderSuspenseFallback() {\n        return React.createElement(\"div\", null);\n    }\n    return (React.createElement(React.Fragment, null,\n        !skeletonHidden && renderMediaPlayerSkeleton(),\n        React.createElement(\"div\", { className: \"WACMediaPlayer__Root\", ref: rootElementRef },\n            errorLoading && React.createElement(InlineError, { text: errorMessage }),\n            !errorLoading && (React.createElement(Tile, { className: cx(\"WACMediaPlayer\", { WAC__hidden: !skeletonHidden }) },\n                React.createElement(\"div\", { className: \"WACMediaPlayer__Wrapper\", style: inlineStyles },\n                    renderMediaPlayerBackground(),\n                    React.createElement(Suspense, { fallback: renderSuspenseFallback() },\n                        React.createElement(ReactPlayerComponent, { className: \"WACMediaPlayer__Player\", url: source, controls: true, width: \"100%\", height: \"100%\", config: {\n                                file: {\n                                    forceVideo: true,\n                                    attributes: {\n                                        controlsList: \"nodownload\",\n                                        \"aria-label\": ariaLabel || description || title,\n                                    },\n                                },\n                            }, playsinline: true, playing: playing, onPlay: onPlay, onPause: onPause, onReady: handleReady, onError: handleError, pip: true }))),\n                (title || description) && (React.createElement(TextHolderTile, { title: title, description: description, hideTitle: hideIconAndTitle })))))));\n}\nconst MediaPlayerExport = React.memo(MediaPlayerComponent);\n\nexport { MediaPlayerExport as MediaPlayer };\n","import cx from 'classnames';\nimport React from 'react';\nimport VisuallyHidden from '../../util/VisuallyHidden.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component renders the Textual part of the cards - more specifically Title, description, favicon URL\n * or default fallback icon. In the case of Iframes, this also renders the URL part. Also renders a launch icon in\n * the case of text-only cards\n */\nfunction TextHolderTile({ title, description, displayURL, urlHostName, hideTitle, }) {\n    return (React.createElement(\"div\", { className: \"WACTextHolderTile\" },\n        React.createElement(\"div\", { className: cx(\"WACTextHolderTile__Wrapper\", \"WACWidget__textEllipsis\", {\n                WACTextHolderTile__IconMargin: !displayURL,\n            }) },\n            !hideTitle && title && (React.createElement(\"div\", { className: \"WACTextHolderTile__Title\" }, title)),\n            description && (React.createElement(\"div\", { className: cx(\"WACTextHolderTile__Description\", {\n                    WACTextHolderTile__DescriptionMargin: title,\n                }) }, description)),\n            displayURL && (React.createElement(React.Fragment, null,\n                React.createElement(VisuallyHidden, null, urlHostName),\n                React.createElement(\"div\", { className: cx(\"WACTextHolderTile__Url\", \"WACWidget__textEllipsis\", {\n                        WACTextHolderTile__UrlMargin: title || description,\n                    }), \"aria-hidden\": true }, displayURL))))));\n}\n\nexport { TextHolderTile };\n","import cx from 'classnames';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { MessageTypeComponent } from '../../../containers/MessageTypeComponent.js';\nimport { MessageResponseTypes } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component handles rendering nested messages for response types that have a \"body\" property.\n */\nfunction BodyMessageComponents(props) {\n    const { bodyLocalMessageItemIDs } = props.message.ui_state;\n    const allMessageItemsByID = useSelector((state) => state.allMessageItemsByID);\n    // Loop through the list of supported local message ids and return a message component for each.\n    const messageComponents = bodyLocalMessageItemIDs?.map((nestedMessageID, index) => {\n        const nestedLocalMessage = allMessageItemsByID[nestedMessageID];\n        const isFullWidthMessage = isFullWidthResponseType(nestedLocalMessage.item.response_type);\n        // Determine if the next message is a full width message, or not. Messages next to each other that aren't full\n        // width should have small bottom padding separating them.\n        const nextLocalMessageID = bodyLocalMessageItemIDs[index + 1];\n        const nextLocalMessage = allMessageItemsByID[nextLocalMessageID];\n        const isNextMessageFullWidth = isFullWidthResponseType(nextLocalMessage?.item.response_type);\n        const isLastElement = index === bodyLocalMessageItemIDs.length - 1;\n        const withShortBottomPadding = !isLastElement && !isFullWidthMessage && !isNextMessageFullWidth;\n        return (React.createElement(\"div\", { key: nestedMessageID, className: cx(\"WACBodyMessageComponents__MessageWrapper\", {\n                \"WACBodyMessageComponents__MessageWrapper--fullWidth\": isFullWidthMessage,\n                \"WACBodyMessageComponents__MessageWrapper--shortBottomPadding\": withShortBottomPadding,\n            }) },\n            React.createElement(MessageTypeComponent, { ...props, message: nestedLocalMessage, isNestedMessageItem: true })));\n    });\n    if (!messageComponents?.length) {\n        return null;\n    }\n    return React.createElement(\"div\", { className: \"WACBodyMessageComponents\" }, messageComponents);\n}\n/**\n * Determines if the given response type should be rendered in full width.\n */\nfunction isFullWidthResponseType(responseType) {\n    switch (responseType) {\n        case MessageResponseTypes.IMAGE:\n        case MessageResponseTypes.IFRAME:\n        case MessageResponseTypes.VIDEO:\n        case MessageResponseTypes.AUDIO:\n        case MessageResponseTypes.USER_DEFINED:\n            return true;\n        default:\n            return false;\n    }\n}\nconst BodyMessageTypeComponentsExport = React.memo(BodyMessageComponents);\n\nexport { BodyMessageTypeComponentsExport as BodyMessageComponents };\n","import cx from 'classnames';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { MessageTypeComponent } from '../../../containers/MessageTypeComponent.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component handles rendering button response types in the footer of a container, under \"body\" content. See\n * {@link #BodyMessageComponents}.\n */\nfunction FooterButtonComponents(props) {\n    const allMessageItemsByID = useSelector((state) => state.allMessageItemsByID);\n    const buttonComponents = props.message.ui_state.footerLocalMessageItemIDs?.map((nestedMessageID) => {\n        const nestedLocalMessage = allMessageItemsByID[nestedMessageID];\n        return (React.createElement(MessageTypeComponent, { key: nestedMessageID, ...props, message: nestedLocalMessage, isNestedMessageItem: true }));\n    });\n    const totalButtons = buttonComponents?.length ?? 0;\n    const isColumnList = totalButtons > 2;\n    return totalButtons ? (React.createElement(\"div\", { className: cx(\"WACFooterButtonComponents\", {\n            \"WACFooterButtonComponents--column\": isColumnList,\n        }) }, buttonComponents)) : null;\n}\n\nexport { FooterButtonComponents };\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLanguagePack } from '../hooks/useLanguagePack.js';\nimport { useServiceManager } from '../hooks/useServiceManager.js';\nimport { selectInputState } from '../store/selectors.js';\nimport { THROW_ERROR } from '../utils/constants.js';\nimport { BodyMessageComponents as BodyMessageTypeComponentsExport } from './responseTypes/util/BodyMessageComponents.js';\nimport { FooterButtonComponents } from './responseTypes/util/FooterButtonComponents.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component handles rendering nested message items for response types with \"body\" and \"footer\" support.\n */\nfunction BodyWithFooterComponent({ localMessageItem, fullMessage, isMessageForInput, requestFocus, }) {\n    const serviceManager = useServiceManager();\n    const languagePack = useLanguagePack();\n    const appConfig = useSelector((state) => state.config);\n    const inputState = useSelector(selectInputState);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(BodyMessageTypeComponentsExport, { message: localMessageItem, originalMessage: fullMessage, languagePack: languagePack, requestInputFocus: requestFocus, disableUserInputs: inputState.isReadonly, config: appConfig, isMessageForInput: isMessageForInput, scrollElementIntoView: THROW_ERROR, serviceManager: serviceManager, hideFeedback: true, allowNewFeedback: false }),\n        React.createElement(FooterButtonComponents, { message: localMessageItem, originalMessage: fullMessage, languagePack: languagePack, requestInputFocus: requestFocus, disableUserInputs: inputState.isReadonly, config: appConfig, isMessageForInput: isMessageForInput, scrollElementIntoView: THROW_ERROR, serviceManager: serviceManager, hideFeedback: true, allowNewFeedback: false })));\n}\n\nexport { BodyWithFooterComponent };\n","import React from 'react';\nimport { MediaPlayer as MediaPlayerExport } from '../util/MediaPlayer.js';\nimport { MessageResponseTypes } from '../../../../../types/messaging/Messages.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction VideoComponent({ ...props }) {\n    return React.createElement(MediaPlayerExport, { type: MessageResponseTypes.VIDEO, ...props });\n}\nconst VideoComponentExport = React.memo(VideoComponent);\n\nexport { VideoComponentExport as VideoComponent };\n","import { useMemo } from 'react';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * Hook for generating CSS custom properties from any valid CSS properties object.\n * Converts camelCase React CSS properties to kebab-case CSS custom properties\n * that can be safely used across shadow DOM boundaries.\n *\n * @param styles - Object containing CSS properties with calculated values\n * @returns Object suitable for React's style prop containing CSS custom properties\n */\nconst useDynamicCSSProperties = (styles) => {\n    return useMemo(() => {\n        const customProperties = {};\n        Object.entries(styles).forEach(([key, value]) => {\n            if (value !== undefined && value !== null) {\n                // Convert camelCase to kebab-case for CSS custom properties\n                const kebabKey = key.replace(/[A-Z]/g, (letter) => `-${letter.toLowerCase()}`);\n                customProperties[`--${kebabKey}`] = value;\n            }\n        });\n        return customProperties;\n    }, [styles]);\n};\n\nexport { useDynamicCSSProperties };\n","import { AISkeletonPlaceholder, SkeletonPlaceholder as SkeletonPlaceholder$1, AISkeletonText, SkeletonText as SkeletonText$1 } from '@carbon/react';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nfunction SkeletonText(props) {\n    const useAITheme = useSelector((state) => state.theme.useAITheme);\n    return useAITheme ? (React.createElement(AISkeletonText, { ...props })) : (React.createElement(SkeletonText$1, { ...props }));\n}\nfunction SkeletonPlaceholder(props) {\n    const useAITheme = useSelector((state) => state.theme.useAITheme);\n    return useAITheme ? (React.createElement(AISkeletonPlaceholder, { ...props })) : (React.createElement(SkeletonPlaceholder$1, { ...props }));\n}\n\nexport { SkeletonPlaceholder, SkeletonText };\n","import { useRef } from 'react';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\nlet nextNumber = 1;\n/**\n * A hook that returns a counter that increases by one for each component it is used in.\n */\nfunction useCounter() {\n    const counterRef = useRef();\n    if (counterRef.current === undefined) {\n        counterRef.current = nextNumber++;\n    }\n    return counterRef.current;\n}\n\nexport { useCounter };\n","import React from 'react';\nimport { useShouldSanitizeHTML } from '../../hooks/useShouldSanitizeHTML.js';\nimport { sanitizeHTML } from '../../utils/htmlUtils.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component will render the given HTML using dangerouslySetInnerHTML, but it will sanitize the content first.\n *\n * This was added as an emergency fix to deal with the fact that the Carbon AI chat is susceptible to script injection\n * attacks from a tooling author. For the Carbon AI chat this is normally not a problem as we can trust a company's\n * employees to not attack themselves. However, in the case of the preview link which is hosted on ibm.com and\n * requires no authentication to access, all of ibm.com is vulnerable. So we need to avoid being dangerous for ibm.com.\n */\nfunction MaybeDangerouslySetInnerHTML({ html, overrideSanitize, className, id, asSpan, }) {\n    let doSanitize = useShouldSanitizeHTML();\n    if (overrideSanitize !== undefined) {\n        doSanitize = overrideSanitize;\n    }\n    if (doSanitize) {\n        html = sanitizeHTML(html);\n    }\n    if (asSpan) {\n        // eslint-disable-next-line react/no-danger\n        return (React.createElement(\"span\", { id: id, className: className, dangerouslySetInnerHTML: { __html: html } }));\n    }\n    // eslint-disable-next-line react/no-danger\n    return (React.createElement(\"div\", { id: id, className: className, dangerouslySetInnerHTML: { __html: html } }));\n}\nconst MaybeDangerouslySetInnerHTMLExport = React.memo(MaybeDangerouslySetInnerHTML);\n\nexport { MaybeDangerouslySetInnerHTMLExport as MaybeDangerouslySetInnerHTML };\n","import Loading from '../../../../react/carbon/Loading.js';\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useAriaAnnouncer } from '../../../hooks/useAriaAnnouncer.js';\nimport { useLanguagePack } from '../../../hooks/useLanguagePack.js';\nimport { RESPONSE_TYPE_TIMEOUT_MS } from '../../../utils/constants.js';\nimport { MountChildrenOnDelay } from '../../util/MountChildrenOnDelay.js';\nimport { InlineError } from '../error/InlineError.js';\n\n/*\n *  Copyright IBM Corp. 2025\n *\n *  This source code is licensed under the Apache-2.0 license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  @license\n */\n/**\n * This component renders an iframe element for the iframe response type with preconfigured sandbox permissions.\n *\n * Here is a list of attributes of iframe sandbox\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox\n *\n * allow-scripts: Lets the resource run scripts (but not create popup windows).\n * allow-download: Allows for downloads to occur with a gesture from the user.\n * allow-forms: Allows the resource to submit forms. If this keyword is not used, form submission is blocked.\n * allow-same-origin: Allows for the resource to access its own data storage/cookies and some JavaScript APIs\n *\n * Note: The iframe element will not fire the onerror event listener if it fails to load the source. It will still fire\n * onload, and so we aren't able to easily determine how to display an error message. We will have to rely on browsers\n * to display a native error message, which some browsers already do.\n */\nfunction IFrameComponent({ title, source, onTimeoutOverride, onLoad, }) {\n    const { errors_iframeSource, iframe_ariaSourceLoaded } = useLanguagePack();\n    const ariaAnnouncer = useAriaAnnouncer();\n    const [showSpinner, setShowSpinner] = useState(true);\n    const [showError, setShowError] = useState(false);\n    /**\n     * Hide the spinner amd show/announce the error message.\n     */\n    const handleIFrameTimeout = useCallback(() => {\n        setShowSpinner(false);\n        setShowError(true);\n        ariaAnnouncer(errors_iframeSource);\n    }, [ariaAnnouncer, errors_iframeSource]);\n    /**\n     * Hide the spinner and announce the iframe loaded once it's ready.\n     */\n    const handleIFrameLoaded = useCallback(() => {\n        setShowSpinner(false);\n        ariaAnnouncer(iframe_ariaSourceLoaded);\n        onLoad?.();\n    }, [ariaAnnouncer, iframe_ariaSourceLoaded, onLoad]);\n    // This effect sets a timeout that auto error handles after 10 seconds of waiting for the React player to ready.\n    // Once the player has loaded, the skeleton will be hidden, and we can clear the timeout.\n    useEffect(() => {\n        let errorTimeout = null;\n        if (showSpinner) {\n            const timeoutHandler = onTimeoutOverride || handleIFrameTimeout;\n            errorTimeout = setTimeout(timeoutHandler, RESPONSE_TYPE_TIMEOUT_MS);\n        }\n        return () => {\n            clearTimeout(errorTimeout);\n        };\n    }, [showSpinner, handleIFrameTimeout, onTimeoutOverride]);\n    return (React.createElement(\"div\", { className: \"WACIFrameComponent__Wrapper\" },\n        showError && renderErrorMessage(errors_iframeSource),\n        !showError && (React.createElement(\"iframe\", { className: \"WACIFrameComponent__IFrame\", title: title, src: source, sandbox: \"allow-scripts allow-downloads allow-forms allow-same-origin allow-popups\", referrerPolicy: \"origin\", onLoad: handleIFrameLoaded })),\n        showSpinner && renderLoadingSpinner()));\n}\nfunction renderLoadingSpinner() {\n    return (React.createElement(MountChildrenOnDelay, { delay: 1500 },\n        React.createElement(\"div\", { className: \"WACIFrameComponent__StatusContainer\" },\n            React.createElement(Loading, { active: true, overlay: false }))));\n}\nfunction renderErrorMessage(errorText) {\n    return (React.createElement(\"div\", { className: \"WACIFrameComponent__StatusContainer\" },\n        React.createElement(InlineError, { text: errorText })));\n}\n\nexport { IFrameComponent };\n"],"names":["isNil","value","isOdd","FeedbackButtonsElement","LitElement","styles","css","unsafeCSS","__decorate","property","type","Boolean","attribute","reflect","prototype","String","Object","ThumbsDown16svg","toString","ThumbsDown16","ThumbsDownFilled16svg","ThumbsDownFilled16","ThumbsUp16svg","ThumbsUp16","ThumbsUpFilled16svg","ThumbsUpFilled16","FEEDBACK_BUTTONS_COMPONENT_TAG_NAME","CDSChatFeedbackButtonsElement","render","customElementClass","isPositiveOpen","isNegativeOpen","isPositiveSelected","isNegativeSelected","hasPositiveDetails","hasNegativeDetails","isPositiveDisabled","isNegativeDisabled","positiveLabel","negativeLabel","panelID","onClick","html","CSS_CLASS_PREFIX","nothing","unsafeSVG","enLanguagePack","feedbackButtonsElementTemplate","this","carbonElement","FeedbackButtonsComponent","createComponent","tagName","elementClass","react","React","TagListElement","constructor","super","arguments","selectedTags","Set","updated","changedProperties","has","_setInitialValues","initialSelectedTags","values","_handleTagClick","event","tagValue","target","getAttribute","delete","add","onTagsChanged","Array","from","requestUpdate","state","TAG_LIST_TAG_NAME","WEB_COMPONENT_PREFIX","CDSTagListElement","tags","handleTagClick","map","tagListElementTemplate","ROUNDED_BUTTON_TAG_NAME","CDSRoundedButtonElement","CDSButton","FeedbackElement","showTextArea","showPrompt","initialValues","_textInput","text","_initialSelectedCategories","selectedCategories","_handleTextInput","currentTarget","_handleSubmit","onSubmit","_selectedCategories","_handleCancel","onClose","_handleCategoryChange","bind","FEEDBACK_COMPONENT_TAG_NAME","CDSChatFeedbackElement","handleCancel","handleSubmit","handleTextInput","initialSelectedCategories","textInput","handleCategoryChange","id","isReadonly","isOpen","title","prompt","placeholder","categories","disclaimer","submitLabel","cancelLabel","cx","length","feedbackElementTemplate","FeedbackComponent","ResponseStopped","messages_responseStopped","useLanguagePack","className","RealConnectToAgent","props","languagePack","localMessage","originalMessage","disableUserInputs","serviceManager","agentState","requestFocus","agentDisplayState","persistedAgentState","activeLocalMessageID","availability","isConnecting","isSuspended","showConfirmSuspended","setShowConfirmSuspended","useState","doStartChat","humanAgentService","startChat","setTimeout","history","agent_availability","AgentsOnlineStatus","OFFLINE","agentUnavailableMessage","item","agent_unavailable","message","default_agent_unavailableMessage","textFromMessage","agent_available","default_agent_availableMessage","buttonIcon","buttonText","showDisabled","isConnectingOrConnected","messageToUser","ui_state","Checkmark","agent_cardButtonChatRequested","AvailabilityMessage","fallbackText","agent_connectWaiting","Headset","agent_cardButtonConnected","agent_cardMessageConnected","wasAgentChatEnded","Logout","agent_cardButtonChatEnded","agent_cardMessageChatEnded","agent_startChat","HelpDesk","Tile","agent_chatTitle","Button","size","disabled","renderIcon","agent_suspendedWarning","EndAgentChatModal","agent_confirmSuspendedEndChatTitle","agent_confirmSuspendedEndChatMessage","onConfirm","onCancel","ConnectToAgent","config","childDisableUserInputs","hasServiceDesk","AudioComponent","source","isMixCloud","startsWith","MediaPlayerExport","MessageResponseTypes","AUDIO","isMixcloud","AudioComponentExport","ClickableImage","buttonAltText","isLink","imageProps","href","displayURL","rel","ImageExport","VisuallyHidden","BaseButtonItemComponent","label","kind","url","imageURL","altText","errors_imageSource","useAITheme","useSelector","theme","linkTarget","undefined","imageError","as","getButtonKind","style","ButtonItemKind","LINK","TERTIARY","DEFAULT","ButtonItemCustomEventComponent","localMessageItem","fullMessage","useServiceManager","messageItem","image_url","alt_text","isDisabled","optionSelected","onClickHandler","useCallback","async","fire","BusEventType","MESSAGE_ITEM_CUSTOM","TouchInteraction","ButtonItemPostBackComponent","isMessageForInput","fullMessageID","input","messageRequest","createMessageRequestForButtonItemOption","store","dispatch","actions","messageSetOptionSelected","sendWithCatch","MessageSendSource","POST_BACK_BUTTON","consoleError","WA_CONSOLE_PREFIX","Send","ButtonItemShowPanelComponent","setResponsePanelIsOpen","setResponsePanelContent","ArrowRight","ButtonItemURLComponent","Launch","Link","ButtonItemComponent","button_type","ButtonItemType","URL","SHOW_PANEL","CUSTOM_EVENT","CardItemComponent","ignoreMaxWidth","WACMaxWidthSmall","max_width","WidthOptions","SMALL","WACMaxWidthMedium","MEDIUM","WACMaxWidthLarge","LARGE","BodyWithFooterComponent","CardComponentExport","Carousel","lazyCarousel","CarouselItemComponent","allMessageItemsByID","itemsLocalMessageItemIDs","Suspense","fallback","SkeletonPlaceholder","nestedLocalMessageItemID","key","useCallbackOnChange","callback","doDebounced","useMemo","debounce","maxWait","leading","usePrevious","CitationCardContent","citation","setIsExpandable","isExpandable","width","useContext","WindowSizeContext","conversationalSearch_viewSourceDocument","ref","useRef","textContent","content","SearchResultBodyExport","searchResult","icon","useLayoutEffect","current","clientHeight","scrollHeight","CitationType","hostname","Maximize","CitationClickableCard","onSelectCitation","children","onFocus","getSearchResultMetaData","highlight","str","convertToEmptyStringIfStringifiedNull","replace","RegExp","convertPossibleStringifiedArrayToFirstString","urlIsValid","isValidURL","getSearchResultURLMetaData","answer","titleIsURL","answers","endsWith","JSON","parse","error","ExpandToPanelCard","relatedSearchResult","body","renderTile","EXPAND_IF_NEEDED","setViewSourcePanelIsOpen","CitationCard","isSelected","CitationCardExport","PortalComponent","hostElement","ReactDOM","TOGGLE_CONTAINER_CLASSNAME","ConversationalSearchText","highlightCitation","onToggleCitations","citationsOpen","searchItem","showCitationsToggle","streamingState","toggleID","useCounter","namespace","suffix","toggleContainer","setToggleContainer","rootRef","setHtml","isDone","chunks","chunk","join","useEffect","newHtml","ranges","pieces","startIndex","forEach","range","beforeHighlight","substring","start","end","push","HIGHLIGHT_TOKEN_START","HIGHLIGHT_TOKEN_END","lastPiece","md","sanitzeHTML","tokenTree","getMarkdownWorker","result","container","document","createElement","htmlString","innerHTML","templateToString","renderTokenTree","processMarkdown","afterMarkdownHTML","sanitizeHTML","rootElement","insertHighlights","lastElement","lastElementChild","lastTag","appendChild","createTextNode","createHTMLWithHighlights","getHtml","useImperativeHandle","getToggleCitationsElement","querySelector","MaybeDangerouslySetInnerHTMLExport","overrideSanitize","OperationalTag","conversationalSearch_citationsLabel","ChevronUp","ChevronDown","conversationalSearch_toggleCitations","HIGHLIGHT_TOKEN_REGEXP","parent","isInHighlight","childNodes","child","Text","tokenMatches","matchAll","match","isInHighlightHere","index","addTextSegment","remove","Element","getAttributeNames","name","setAttribute","replaceAll","highlighted","beforeChild","textNode","trim","highlightNode","insertBefore","ConversationalSearchTextExport","ConversationalSearch","scrollElementIntoView","isStreamingError","doAutoScroll","selectedCitationIndex","setSelectedCitationIndex","setCitationsOpen","scrollIntoViewArea","swiperRef","conversationalSearchTextFunctionsRef","sortedCitations","citations","withRanges","filter","withoutRanges","concat","sortCitations","scrollCitations","focus","InlineError","conversationalSearch_streamingIncomplete","tiles","swiper","slideTo","initialSlide","onSlideChange","renderCitations","UserDefinedResponse","userDefinedRegistryItem","getOrCreateUserDefinedElement","localMessageID","slotName","UserDefinedResponse$1","UNWANTED_CHARACTERS_REGEX","RIGHT_TO_LEFT_MARK","DatePickerComponent","intl","useIntl","webChatLocale","locale","allMessagesByID","uuidRef","uuid","UUIDType","MISCELLANEOUS","isCalendarOpen","setIsCalendarOpen","userDisplayValue","setUserDisplayValue","flatpickrFormat","setFlatpickrFormat","userDisplayFormat","setUserDisplayFormat","flatpickrLocale","setFlatpickrLocale","dayjsLocale","setDayjsLocale","datePickerHostElement","setDatePickerHostElement","valueForAssistantRef","isInputPointerDownEventFiredRef","inputLabel","formatMessage","format","confirmButtonLabel","isDateInfoReady","setDateInfoForLocale","dateFormat","includes","sanitizeDateFormat","dayjs","formats","L","toLocaleLowerCase","ENGLISH_US_DATE_FORMAT","localeValue","split","dash","firstChar","Error","getFlatpickrDateFormat","handlerSendDate","responseID","request","createMessageRequestForDate","DATE_PICKER","setValueSelectedForMessageID","doScrollElementIntoView","useOnMount","localeFromMessage","originalUserText","from_history","loadDayjsLocale","then","Layer","DatePicker","datePickerType","allowInput","appendTo","onChange","dates","date","day","getDate","padStart","month","getMonth","getFullYear","toAssistantDateFormat","year","toUserDateFormat","onOpen","DatePickerInput","labelText","onPointerDown","DatePickerComponentExport","VALID_COLUMN_WIDTH_REGEX","GridItemComponent","appConfig","inputState","selectInputState","columns","horizontal_alignment","vertical_alignment","gridTemplateColumns","column","gridLocalMessageItemIDs","row","rowIndex","cell","columnIndex","cellData","rows","cells","isPixelValue","columnWidthString","flex","Number","alignItems","getFlexAlignment","justifyContent","localMessageItemID","itemIndex","MessageTypeComponent","requestInputFocus","THROW_ERROR","isNestedMessageItem","hideFeedback","allowNewFeedback","GridItemComponentExport","IFramePreviewCardComponent","description","urlHostName","getURLHostName","iframe_ariaImageAltText","iframeAriaClickPreviewCardMessage","onImageLoad","setIFrameContent","preventInlineError","IFramePreviewCardExport","InlineIFrame","ariaAnnouncer","useAriaAnnouncer","errors_iframeSource","isError","setIsError","baseHeight","getMediaDimensions","base_height","paddingTop","getResponsiveElementPaddingValue","inlineStyles","useDynamicCSSProperties","iframeTitle","onTimeoutOverride","IFrameComponent","onLoad","IFrameMessage","displayOverride","display","IFrameItemDisplayOption","INLINE","Description","shouldRemoveHTMLBeforeMarkdownConversion","RichTextExport","Metablock","SelectComponent","options","isBeingOpened","setIsBeingOpened","environment","getRootNode","shadowRoot","properties","ownerDocument","addEventListener","removeEventListener","Node","Proxy","get","_","prop","createProxyEnvironment","WAC__customSelectTemporaryPadding","Dropdown","items","options_select","titleText","hideLabel","options_ariaOptionsDisabled","selectedItem","find","findOptionForValue","downshiftProps","onIsOpenChange","changes","OptionComponent","Component","onOptionSelected","selectedOption","createMessageRequestForChoice","OPTION_BUTTON","OPTION_DROP_DOWN","onButtonClick","onSelectChange","data","preference","getOptionType","unstable__ChatButton","ButtonKindEnum","isQuickAction","ButtonSizeEnum","Download16svg","Download16","attrs","slot","tableTemplate","tableElement","tableTitle","tableDescription","headers","containerWidth","filterPlaceholderText","_handleDownload","handleDownload","_rowsWithIDs","tableRowsWithIDs","_allowFiltering","allowTableFiltering","_handleFilterEvent","handleFilterEvent","header","repeat","POSSIBLE_PAGE_SIZES","TABLE_COMPONENT_TAG_NAME","TableElement","_isValid","_currentPageNumber","_rowsPerPageChanged","_calcIsTableValid","_initializeRowsArrays","_currentPageSize","chatHeight","_initializePageSize","columnCount","some","_filterVisibleRowIDs","_updateVisibleRows","_handlePageChangeEvent","detail","page","pageSize","stopPropagation","_handlePageSizeChangeEvent","unfilteredRows","renderRoot","querySelectorAll","setProperty","filterVisibleRows","pageEnd","removeAttribute","tableArray","stringifiedTable","stringify","blob","Blob","link","createObjectURL","visibility","click","removeChild","loading","currentPageSize","currentPageNumber","filterVisibleRowIDs","previousPageText","nextPageText","itemsPerPageText","getPaginationSupplementalText","getPaginationStatusText","handlePageChangeEvent","handlePageSizeChangeEvent","totalVisibleRows","totalRows","supportedPageSizes","Math","ceil","tablePaginationTemplate","Function","Table","TableContainer","tableItem","carbonTheme","tableContainerRef","tableContainerWidth","setTableContainerWidth","onResize","clientWidth","ResizeObserver","observe","isValid","Theme","LIGHT_THEMES","table_filterPlaceholder","table_previousPage","table_nextPage","table_itemsPerPage","count","pagesCount","TableContainerExport","TourCard","tour_resumeButton","tour_restartButton","tour_startButton","activeTourID","persistedToBrowserStorage","chatState","persistedTourState","isCurrentTour","tourTitle","user_defined","card_title","tourDescription","card_description","changeView","ViewType","TOUR","mainWindowCloseReason","MainWindowCloseReason","TOUR_CARD_RESUMED_TOUR","Restart","TOUR_CARD_RESTARTED_TOUR","tour","changeStepInTour","newStepIndex","startTour","TourStartReason","START_TOUR_CLICKED","TOUR_CARD_STARTED_TOUR","TourCardExport","StreamingRichText","removeHTML","textToUse","stepTitleFormatter","createEnglishFormat","ChainOfThoughtElement","open","formatStepLabelText","stepNumber","stepTitle","inputLabelText","outputLabelText","toolLabelText","explainabilityText","statusSucceededLabelText","statusFailedLabelText","statusProcessingLabelText","_chainOfThoughtPanelID","firstUpdated","_changedProperties","_steps","steps","CSS_CLASS_ITEM_PREFIX","CSS_CLASS_STATUS_PREFIX","ChevronRight16svg","ChevronRight16","CheckmarkFilled16svg","CheckmarkFilled16","ErrorFilled16svg","ErrorFilled16","renderToolData","classPostfix","parseUnknownDataToMarkdown","renderToolDataAsMarkdown","CHAIN_OF_THOUGHT_COMPONENT_TAG_NAME","CDSChatChainOfThoughtElement","onToggle","onStepToggle","content_id","element","status","ChainOfThoughtStepStatus","PROCESSING","FAILURE","SUCCESS","stepStatus","tool_name","args","response","accordionItemContent","accordionContent","chainOfThoughtElementTemplate","ChainOfThought","feedbackDetailsRef","selectAgentDisplayState","shallowEqual","feedbackID","message_options","feedback","feedbackPanelID","useUUID","feedbackHistory","feedbackInitialValues","isFeedbackOpen","setIsFeedbackOpen","isPositiveFeedbackSelected","setIsPositiveFeedbackSelected","is_positive","isNegativeFeedbackSelected","setIsNegativeFeedbackSelected","isFeedbackSubmitted","setIsFeedbackSubmitted","renderRichText","is_streaming_error","renderUserDefinedResponse","scrollChainOfThought","isRequest","isTextItem","userText","message_type","InternalMessageRequestType","FILE","Attachment","fileSharing_fileIcon","role","renderRequest","isResponse","renderAsTour","renderTour","renderAsUserDefinedMessage","responseType","response_type","withHumanAgent","agent_message_type","TEXT","renderText","IMAGE","getState","needsAnnouncement","renderImage","OPTION","renderOption","CONNECT_TO_AGENT","renderConnectToAgent","INLINE_ERROR","renderInlineError","IFRAME","renderIFrameMessage","VIDEO","VideoComponentExport","ariaLabel","renderVideoMessage","renderAudioMessage","DATE","renderDateMessage","CONVERSATIONAL_SEARCH","renderConversationalSearchMessage","TABLE","renderTable","CARD","renderCard","CAROUSEL","renderCarouselMessage","BUTTON","renderButtonItem","GRID","renderGrid","renderResponse","isResponseStopped","streaming_metadata","stream_stopped","chainOfThought","chain_of_thought","chainOfThought_explainabilityLabel","chainOfThought_inputLabel","chainOfThought_outputLabel","chainOfThought_toolLabel","renderChainOfThought","feedbackOptions","is_on","show_positive_details","show_negative_details","show_text_area","show_prompt","updateHistory","mergeMessageHistory","onFeedbackClicked","isPositive","toggleToSelected","openDetails","FEEDBACK","interactionType","FeedbackInteractionType","SUBMITTED","DETAILS_OPENED","DETAILS_CLOSED","renderFeedbackPopup","class","details","feedback_defaultTitle","feedback_defaultPrompt","feedback_defaultPlaceholder","feedback_submitLabel","feedback_cancelLabel","feedback_positiveLabel","feedback_negativeLabel","renderFeedback","renderSpecificMessage","availabilityKey","availabilityValues","availabilityText","estimated_wait_time","position_in_queue","position","time","FormattedMessage","addHTMLSupport","ErrorIcon","ErrorFilled","errors_generalContent","isConnected","useTitle","agent_endChat","agent_confirmCancelRequestTitle","useMessage","agent_confirmEndChat","agent_confirmCancelRequestMessage","cancelButtonLabel","agent_confirmEndChatNo","agent_confirmEndSuspendedYes","agent_confirmEndChatYes","agent_confirmCancelRequestYes","ConfirmModal","modalAnnounceMessage","Image","hideIconAndTitle","inline","isLoaded","setIsLoaded","needsAnnouncementRef","hasText","Icon","ImageOnly","WACImage__TextAndIcon","WACImage__IconOnly","TextHolderTile","hideTitle","isImageHidden","setIsImageHidden","imageAlt","handleError","errorTimeout","RESPONSE_TYPE_TIMEOUT_MS","clearTimeout","unstable__AiSkeletonPlaceholder","src","alt","onError","SearchResultBody","strArray","strSegment","formatHighlightFields","SearchResultBodyWithCitationHighlighted","citationItem","elementsArray","searchString","citationString","startOfCitation","indexOf","SearchResultBodyWithCitationHighlightedExport","ReactPlayerComponent","lazyMediaPlayer","MediaPlayerComponent","playing","onPlay","onPause","skeletonHidden","setSkeletonHidden","errorLoading","setErrorLoading","errors_audioSource","errors_videoSource","rootElementRef","isAudio","errorMessage","prevSource","shouldAnnounceRef","handleReady","SkeletonText","paragraph","lineCount","WAC__hidden","Music","controls","height","file","forceVideo","attributes","controlsList","playsinline","onReady","pip","WACTextHolderTile__IconMargin","WACTextHolderTile__DescriptionMargin","WACTextHolderTile__UrlMargin","BodyMessageComponents","bodyLocalMessageItemIDs","messageComponents","nestedMessageID","nestedLocalMessage","isFullWidthMessage","isFullWidthResponseType","nextLocalMessageID","nextLocalMessage","isNextMessageFullWidth","withShortBottomPadding","USER_DEFINED","BodyMessageTypeComponentsExport","FooterButtonComponents","buttonComponents","footerLocalMessageItemIDs","totalButtons","isColumnList","VideoComponent","customProperties","entries","kebabKey","letter","toLowerCase","AISkeletonText","SkeletonText$1","AISkeletonPlaceholder","SkeletonPlaceholder$1","nextNumber","counterRef","MaybeDangerouslySetInnerHTML","asSpan","doSanitize","useShouldSanitizeHTML","dangerouslySetInnerHTML","__html","iframe_ariaSourceLoaded","showSpinner","setShowSpinner","showError","setShowError","handleIFrameTimeout","handleIFrameLoaded","errorText","sandbox","referrerPolicy","MountChildrenOnDelay","delay","Loading","active","overlay"],"sourceRoot":""}