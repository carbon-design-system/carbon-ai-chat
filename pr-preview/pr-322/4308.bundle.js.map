{"version":3,"file":"4308.bundle.js","mappings":"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","sources":["webpack://@carbon/ai-chat-examples-demo/../node_modules/color-convert/route.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/color-name/index.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/color/index.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/color-string/index.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/simple-swizzle/index.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/color-convert/conversions.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/simple-swizzle/node_modules/is-arrayish/index.js","webpack://@carbon/ai-chat-examples-demo/../node_modules/color-convert/index.js"],"sourcesContent":["const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n"],"names":["conversions","link","from","to","args","wrapConversion","toModel","graph","path","parent","fn","cur","unshift","conversion","module","exports","fromModel","models","Object","keys","len","length","i","distance","buildGraph","queue","current","pop","adjacents","adjacent","node","deriveBFS","colorString","convert","skippedModels","hashedModelKeys","model","labels","sort","join","limiters","Color","object","this","Error","channels","color","valpha","result","get","value","slice","newArray","Array","prototype","call","zeroArray","splice","indexOf","alpha","hashedKeys","JSON","stringify","push","limit","Math","max","min","freeze","toString","string","toJSON","places","self","rgb","round","percentString","percent","array","unitArray","unitObject","r","g","b","map","roundToPlace","undefined","red","getset","maxfn","green","blue","hue","saturationl","lightness","saturationv","chroma","gray","white","wblack","cyan","magenta","yellow","black","x","y","z","l","a","keyword","hex","hexa","rgbArray","alphaHex","toUpperCase","rgbNumber","luminosity","lum","element","entries","chan","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","ratio","hsl","darken","saturate","desaturate","whiten","hwb","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","p","w","w1","w2","includes","raw","isArray","number","Number","toFixed","roundTo","channel","modifier","m","v","colorNames","swizzle","hasOwnProperty","reverseNames","create","name","cs","clamp","num","hexDouble","str","val","substring","toLowerCase","match","hexAlpha","i2","parseInt","parseFloat","isNaN","rgba","arguments","hsla","hwba","isArrayish","concat","results","arg","wrap","cssKeywords","reverseKeywords","key","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","defineProperty","comparativeDistance","delta","h","s","rdif","gdif","bdif","diff","diffc","c","k","reversed","currentClosestKeyword","currentClosestDistance","Infinity","t2","t3","t1","smin","lmin","hi","floor","f","q","t","vmin","sl","wh","bl","n","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","saturation","ansi","mult","rem","split","char","integer","pure","mg","obj","Function","getOwnPropertyDescriptor","constructor","route","forEach","routes","wrappedFn","arg0","wrapRounded","wrapRaw"],"sourceRoot":""}