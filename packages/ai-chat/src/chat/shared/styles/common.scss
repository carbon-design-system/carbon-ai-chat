/* 
 *  Copyright IBM Corp. 2025
 *  
 *  This source code is licensed under the Apache-2.0 license found in the
 *  LICENSE file in the root directory of this source tree.
 */

/*
 * This file contains styles that don't have any other home and can be used throughout the application without being
 * associated with any specific component.
 */

@use "sass:meta";
@use "@carbon/layout";
@use "@carbon/styles/scss/theme";
@use "../../styles/chatTheme";

.cds--white,
.cds--g10,
.cds--g90,
.cds--g100 {
  background-color: unset;
  font-family: var(--cds-chat-BASE-font-family);
  font-feature-settings: normal;
  font-size: 100%;
  font-style: normal;
  font-variant: normal;
  font-weight: 400;
  letter-spacing: normal;
  line-height: var(--cds-chat-BASE-line-height-med);
  text-decoration: none;
}

// TODO: These can be removed when conversational search is a web component AND we have hit 9.0 and made text response a web component
.cds--white,
.cds--g10 {
  @include meta.load-css("highlight.js/scss/a11y-light");
}

.cds--g90,
.cds--g100 {
  @include meta.load-css("highlight.js/scss/a11y-dark");

  /* BUT we would want to keep this. */
  scrollbar-color: var(--cds-layer-03) var(--cds-layer-01);
}

/* TODO, we just need a custom version of the tile component. */
.cds--tile {
  border: solid 1px theme.$chat-bubble-border;
  border-radius: chatTheme.$CARD-border-radius;
  /* The carbon tiles currently use the layer-01 token for the background color of the tiles. These layer tokens don't
  work with chat because they produce different colors between white and g10, as well as between g90 and g100. For
  now create a token whose color that will be consistent for both light themes (based off the g10 color), and also
  consistent for both dark themes (based off the g100 color). In the future carbon should create and use a new token
  for this background, that works with chat, and we can remove this override. */
  background-color: var(--cds-chat-TILE-background);
}

.WACWidget__breakWord {
  overflow-wrap: break-word;
  word-break: break-word;
  word-wrap: break-word;
}

.WACWidget__textEllipsis {
  overflow: hidden;
  overflow-wrap: break-word;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: break-word;
}

.WAC__hidden {
  display: none;
}

.WAC__highlight {
  background-color: var(--cds-highlight, #d0e2ff);
  font-style: normal;
  font-weight: bold;
}

.HideWebChat {
  display: none;
}

button.WAC__button--link {
  padding: 0;
  border: 0;
  border-radius: 0;
  background: none;
  box-shadow: none;
  color: theme.$link-primary;
  font-size: inherit;
  line-height: inherit;
  text-align: start;
}

.WACContainer--render[dir="rtl"] button.WAC__button--link {
  text-align: end;
}

button.WAC__button--link:enabled,
button.WAC__button--link:enabled * {
  cursor: pointer;
}

button.WAC__button--link:disabled,
button.WAC__button--link:disabled * {
  cursor: not-allowed;
}

button.WAC__button--link:hover span {
  text-decoration: underline;
}

button.WAC__button--link:focus span {
  text-decoration: underline;
}

button.WAC__button--link::-moz-focus-inner {
  padding: 0;
  border: 0;
}
