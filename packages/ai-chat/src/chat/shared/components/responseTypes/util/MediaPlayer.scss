/*
 *  Copyright IBM Corp. 2025
 *
 *  This source code is licensed under the Apache-2.0 license found in the
 *  LICENSE file in the root directory of this source tree.
 */

@use "@carbon/layout";
@use "@carbon/styles/scss/theme";

.WACMediaPlayer,
.WACMediaPlayer__Skeleton {
  overflow: hidden;
  padding: 0;
}

.WACMediaPlayer__Wrapper {
  overflow: hidden;
}

.WACMediaPlayer__SkeletonContainer,
.WACMediaPlayer__Wrapper {
  position: relative;
  padding-block-start: 0;
}

.WACMediaPlayer__Background {
  background-color: #393939;
}

.WACMediaPlayer__Background--audio {
  display: flex;
  align-items: center;
  justify-content: center;
}

.WACMediaPlayer__Player iframe {
  block-size: 100%;
  inline-size: 100%;
  max-block-size: 100%;

  // The react-player library manually calculates and applies width and height to display the iframe when loading the
  // facebook video player. It seems to do it in real-time since even manually setting the iframe width and height to
  // 0 will just set the width and height to the correct values to display in the wrapper. Applying a max width and
  // height fixes this problem.
  max-inline-size: 100%;
}

.WACMediaPlayer__MusicIcon {
  fill: #ffffff;
}

.WACMediaPlayer__ErrorIcon {
  display: block;
  margin: auto auto 2px;
  fill: theme.$support-error;
}

.WACMediaPlayer__SkeletonPlayer,
.WACMediaPlayer__Background,
.WACMediaPlayer__Player {
  position: absolute;
  inset-block-start: 0;
  inset-inline-start: 0;
}

.WACMediaPlayer__SkeletonPlayer,
.WACMediaPlayer__Background {
  block-size: 100%;
  inline-size: 100%;
}

.WACMediaPlayer__Root {
  inline-size: 100%;
}

.WACMediaPlayer__SkeletonTextContainer {
  padding: layout.$spacing-05;
}
