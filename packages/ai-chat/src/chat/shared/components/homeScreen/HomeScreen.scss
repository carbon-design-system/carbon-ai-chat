/* 
 *  Copyright IBM Corp. 2025
 *  
 *  This source code is licensed under the Apache-2.0 license found in the
 *  LICENSE file in the root directory of this source tree.
 */

@use "@carbon/layout";
@use "@carbon/styles/scss/motion";
@use "@carbon/styles/scss/theme";
@use "../../../styles/chatTheme";

.WACHomeScreen {
  display: flex;
  flex-direction: column;
  background-color: theme.$chat-shell-background;
  block-size: 100%;
}

.WACHomeScreen--backgroundAITheme {
  background-color: theme.$chat-shell-background;
  background-image: chatTheme.$AI-background-image;
  box-shadow: chatTheme.$AI-box-shadow-inner, chatTheme.$AI-box-shadow-outer;
}

.WACHomeScreen__HomeScreenBottomElement {
  /* Needed by the home screen so the opacity layer from the gradient backgrounds does not overlay the header element in full
   screen mode. */
  position: relative;
  margin: auto;
  inline-size: 100%;
  max-inline-size: chatTheme.$CONTAINER-max-width;
}

/* Used to hide some of the AI theme box shadow that tries to overlay the header. The chat window does the same thing. */
.WACHomeScreen__content {
  display: flex;
  overflow: hidden;
  flex: 1;
  flex-direction: column;
}

/* On the first render fade in all of the home screen content. This covers the home screen input field as well. On
 subsequent renders we rely on the overlay panels fade in animation. */
@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen--firstRender .WACHomeScreen__content {
    animation: none;
  }
}

.WACHomeScreen--firstRender .WACHomeScreen__content {
  animation: motion.$duration-slow-01 motion.motion(entrance, expressive)
    WACFadeIn 0.07s both;
}

.WACHomeScreen__bodyWrapper {
  position: relative;
  display: flex;
  overflow: auto;
  flex: 1;
  flex-direction: column;
}

.WACHomeScreen__body {
  display: flex;
  flex-direction: column;
  /* In case the content is smaller than the div, center it. */
  justify-content: center;
  padding: 0 layout.$spacing-05 layout.$spacing-07;
}

/* When there's custom content keep the home screen body content from shrinking below 90% of the bodyWrapper. This could
 happen, for example, if the home screen avatar was excluded. */

.WACHomeScreen__body--customContent {
  /* In a scenario where the body content combined with the custom content doesn't overflow their wrapper, this
   flex-grow is used to push deb content to the bottom of the wrapper, allowing the body content to center itself in
   the remaining space. */
  flex-grow: 1;
  /* Because of the min-height setting flex box thinks we have a preference for this div being that height when there are
   two divs in the container (body content and custom content in this case). So it tries to shrink this div to the min
   height specified and we need to prevent that by specifying no shrinking. */
  flex-shrink: 0;
  min-block-size: 90%;

  > * {
    /* Prevent the children from shrinking as well. */
    flex-shrink: 0;
  }
}

/* When there's no custom content make sure the body fills the full height and doesn't have bottom padding. Instead of
 padding bottom the starters will add their own margin-bottom to prevent them from touching the bottom of the div.
 This enables the body content to better center itself in the wrapper since the top and bottom elements within the
 wrapper should have the same margin. */

.WACHomeScreen__body--noCustomContent {
  flex: 1;
  padding-block-end: 0;
}

.WACHomeScreen__avatarHolder {
  block-size: 96px;
  inline-size: 96px;
  margin-block-start: layout.$spacing-09;
  /* Required to cause this context to stack on top of the ::before layer that adds opacity above. */
  transform: translateY(0);
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete .WACHomeScreen__avatarHolder {
    animation: none;
  }
}

.WACHomeScreen.WACHomeScreen--hydrationComplete .WACHomeScreen__avatarHolder {
  animation: motion.$duration-slow-01 motion.motion(entrance, expressive)
    WACFadeIn 0.07s both;
}

.WACHomeScreen__avatarHolder img {
  border-radius: 48px;
}

.WACHomeScreen__botAvatar {
  block-size: 100%;
  /* TODO HS: Is this fill still right with the new tokens? */
  fill: theme.$text-primary;
  inline-size: 100%;
}

.WACHomeScreen__greeting {
  color: theme.$text-primary;
  font-family: var(--cds-chat-HOME_SCREEN-greeting-font-family);
  font-size: var(--cds-heading-04-font-size);
  font-weight: var(--cds-heading-04-font-weight);
  letter-spacing: var(--cds-heading-04-letter-spacing);
  line-height: var(--cds-heading-04-line-height);
  margin-block-start: layout.$spacing-07;
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete .WACHomeScreen__greeting {
    animation: none;
  }
}

.WACHomeScreen.WACHomeScreen--hydrationComplete .WACHomeScreen__greeting {
  animation: motion.$duration-slow-01 motion.motion(entrance, expressive)
    WACFadeInUp 0.07s both;
}

.WACHomeScreen__starters {
  margin-block-start: layout.$spacing-07;
}

/* When there's no custom content set a margin under the starters that matches the greeting. This is done to center
the content within the body and give the starters space at the bottom of the div if the content is overflowing or
close to overflowing. */

.WACHomeScreen__body--noCustomContent .WACHomeScreen__starters {
  margin-block-end: layout.$spacing-07;
}

/* If its only custom content (no greeting, no avatar, etc), getting rid of all padding/spacing and let them have at it. */
.WACHomeScreen__body--customContentOnly {
  flex-grow: unset;
  flex-shrink: unset;
  padding: 0;
  margin: 0;
  min-block-size: unset;
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    button.WACHomeScreen__starter {
    display: block;
    animation: none;
    margin-block-end: layout.$spacing-04;
    max-inline-size: 100%;
    word-break: break-word;

    &:last-child {
      margin-block-end: 0;
    }
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    button.WACHomeScreen__starter {
    display: block;
    animation: none;
    margin-block-end: layout.$spacing-04;
    max-inline-size: 100%;
    word-break: break-word;

    &:last-child {
      margin-block-end: 0;
    }
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    button.WACHomeScreen__starter {
    display: block;
    animation: none;
    margin-block-end: layout.$spacing-04;
    max-inline-size: 100%;
    word-break: break-word;

    &:last-child {
      margin-block-end: 0;
    }
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    button.WACHomeScreen__starter {
    display: block;
    animation: none;
    margin-block-end: layout.$spacing-04;
    max-inline-size: 100%;
    word-break: break-word;

    &:last-child {
      margin-block-end: 0;
    }
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    button.WACHomeScreen__starter {
    display: block;
    animation: none;
    margin-block-end: layout.$spacing-04;
    max-inline-size: 100%;
    word-break: break-word;

    &:last-child {
      margin-block-end: 0;
    }
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    button.WACHomeScreen__starter {
    display: block;
    animation: none;
    margin-block-end: layout.$spacing-04;
    max-inline-size: 100%;
    word-break: break-word;

    &:last-child {
      margin-block-end: 0;
    }
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    button.WACHomeScreen__starter {
    display: block;
    animation: none;
    margin-block-end: layout.$spacing-04;
    max-inline-size: 100%;
    word-break: break-word;

    &:last-child {
      margin-block-end: 0;
    }
  }
}

.WACHomeScreen.WACHomeScreen--hydrationComplete button.WACHomeScreen__starter {
  display: block;
  animation: motion.$duration-slow-01 motion.motion(entrance, expressive)
    WACFadeInUp calc(var(--cds-chat-HomeScreenStarter-index) * 0.12s) both;
  margin-block-end: layout.$spacing-04;
  max-inline-size: 100%;
  word-break: break-word;

  &:last-child {
    margin-block-end: 0;
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    .WACHomeScreen__starters--animateGroup
    button.WACHomeScreen__starter {
    animation: none;
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    .WACHomeScreen__starters--animateGroup
    button.WACHomeScreen__starter {
    animation: none;
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    .WACHomeScreen__starters--animateGroup
    button.WACHomeScreen__starter {
    animation: none;
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    .WACHomeScreen__starters--animateGroup
    button.WACHomeScreen__starter {
    animation: none;
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    .WACHomeScreen__starters--animateGroup
    button.WACHomeScreen__starter {
    animation: none;
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    .WACHomeScreen__starters--animateGroup
    button.WACHomeScreen__starter {
    animation: none;
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    .WACHomeScreen__starters--animateGroup
    button.WACHomeScreen__starter {
    animation: none;
  }
}

.WACHomeScreen.WACHomeScreen--hydrationComplete
  .WACHomeScreen__starters--animateGroup
  button.WACHomeScreen__starter {
  animation: motion.$duration-slow-01 motion.motion(entrance, expressive)
    WACFadeInUp 0.12s both;
}

button.WACHomeScreen__starter:nth-child(1) {
  --cds-chat-HomeScreenStarter-index: 1;
}

button.WACHomeScreen__starter:nth-child(2) {
  --cds-chat-HomeScreenStarter-index: 2;
}

button.WACHomeScreen__starter:nth-child(3) {
  --cds-chat-HomeScreenStarter-index: 3;
}

button.WACHomeScreen__starter:nth-child(4) {
  --cds-chat-HomeScreenStarter-index: 4;
}

button.WACHomeScreen__starter:nth-child(5) {
  --cds-chat-HomeScreenStarter-index: 5;
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    .WACHomeScreen__customContent--animation {
    animation: none;
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    .WACHomeScreen__customContent--animation {
    animation: none;
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    .WACHomeScreen__customContent--animation {
    animation: none;
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    .WACHomeScreen__customContent--animation {
    animation: none;
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    .WACHomeScreen__customContent--animation {
    animation: none;
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    .WACHomeScreen__customContent--animation {
    animation: none;
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete
    .WACHomeScreen__customContent--animation {
    animation: none;
  }
}

.WACHomeScreen.WACHomeScreen--hydrationComplete
  .WACHomeScreen__customContent--animation {
  animation: motion.$duration-slow-01 motion.motion(entrance, expressive)
    WACFadeInUp 0.33s both;
}

.WACHomeScreen__backButton {
  position: absolute;
  inset-inline-start: 50%;
  /* The above left: 50% makes a gap 50% of the container width wide on the left of the button so it needs to be shifted
   back 50% of the buttons width to the left in order to center it. We also need to move the button above the input
   field. That is what the second value is for, to move the button up it's height plus 16px. */
  transform: translate(-50%, calc(-100% - #{layout.$spacing-05}));

  .WACHomeScreen__backButtonContent {
    display: flex;

    .WACHomeScreen__backButtonContentText {
      margin-inline-end: layout.$spacing-03;
      white-space: nowrap;
    }
  }
}

.WACContainer--render[dir="rtl"]
  .WACHomeScreen__backButton
  .WACHomeScreen__backButtonContent
  .WACHomeScreen__backButtonContentText {
  margin-inline: layout.$spacing-03 unset;
}

@keyframes WACFadeInUpBackButton {
  0% {
    opacity: 0;
    /* Building on the same transform above, except we want the button to start 32px lower. */
    transform: translate(
      -50%,
      calc(-100% - #{layout.$spacing-05} + #{layout.$spacing-07})
    );
  }

  15% {
    opacity: 0;
  }

  50% {
    transform: translate(-50%, calc(-100% - #{layout.$spacing-05}));
  }

  100% {
    opacity: 1;
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--hydrationComplete .WACHomeScreen__backButton {
    animation: none;
  }
}

.WACHomeScreen.WACHomeScreen--hydrationComplete .WACHomeScreen__backButton {
  animation: motion.$duration-slow-01 motion.motion(entrance, expressive)
    WACFadeInUpBackButton 0.35s both;
}

.WACHomeScreen__inputContainerWrapper,
.WACHomeScreen__inputContainer {
  display: flex;
  inline-size: 100%;
  /* Required to cause this context to stack on top of the ::before layer that adds opacity above. */
  transform: translateY(0);
}

.WACHomeScreen__inputContainerWrapper {
  flex-direction: column;
}

/* Only animate the input container in on the first render of home screen. */
@media screen and (prefers-reduced-motion: reduce) {
  .WACHomeScreen.WACHomeScreen--firstRender .WACInputContainer {
    animation: none;
  }
}

.WACHomeScreen.WACHomeScreen--firstRender .WACInputContainer {
  animation: motion.$duration-slow-01 motion.motion(entrance, expressive)
    WACFadeInUp 0.37s both;
}

/**********************************************************************************************************************
 Home Screen solid styles */

.WACHomeScreen--backgroundSolid {
  /* Set the background to the accent color so the gutters will be the accent color in fullscreen. */
  background-color: var(--cds-chat-ACCENT-color);

  .WACHeader {
    border-block-end: none;
  }

  .WACHomeScreen__content {
    /* Set the content wrapper background to the shell background so that the custom content will have this background
     by default. */
    background-color: theme.$chat-shell-background;
  }

  .WACHomeScreen__body {
    /* Set the background color on this layer so that the non custom content is the accent color. */
    background-color: var(--cds-chat-ACCENT-color);
    color: var(--cds-chat-ACCENT-color-text);

    .WACHomeScreen__greeting {
      color: currentcolor;
    }

    button.WACHomeScreen__starter {
      border: 1px solid var(--cds-chat-ACCENT-color-text);
      color: var(--cds-chat-ACCENT-color-text);
    }

    button.WACHomeScreen__starter:hover {
      background-color: var(--cds-chat-ACCENT-color-hover);
      color: currentcolor;
    }

    button.WACHomeScreen__starter:active {
      background-color: var(--cds-chat-ACCENT-color-active);
    }
  }

  .WACHomeScreen__customContent--customContentOnly {
    background-color: var(--cds-chat-ACCENT-color);
    color: var(--cds-chat-ACCENT-color-text);
  }

  .WACHomeScreen__inputContainer {
    background-color: var(--cds-chat-ACCENT-color);
  }
}
